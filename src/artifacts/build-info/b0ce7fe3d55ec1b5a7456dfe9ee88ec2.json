{"id":"b0ce7fe3d55ec1b5a7456dfe9ee88ec2","_format":"hh-sol-build-info-1","solcVersion":"0.8.7","solcLongVersion":"0.8.7+commit.e28d00a7","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"contracts/Exchange.sol":{"content":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./PriceChecker.sol\";\r\nimport \"./TradingFees.sol\";\r\n\r\n/// @notice Library SafeMath used to prevent overflows and underflows\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract Exchange is Ownable {\r\n    using SafeMath for uint256; //for prevention of integer overflow\r\n    PriceChecker priceChecker;\r\n    TradingFees tradingFees;\r\n    Wallet wallet;\r\n\r\n    uint256 decimals = 10 ** 18;\r\n    address public ethToken = address(0);\r\n\r\n    //Token Address List available in DEX\r\n    _tokenInfo[] public tokenList;\r\n\r\n    //s_orderBook mappping: tokenA Address -> tokenB Address -> Side -> Order Array\r\n    mapping(address => mapping( address => mapping(uint256 => _Order[]))) public s_orderBook;\r\n\r\n    mapping(address => mapping(uint256 => _filledOrder[]))\r\n        public s_filledOrders;\r\n\r\n    uint256 public s_orderId = 0;\r\n    bool private s_isManual = true;\r\n\r\n    struct _tokenInfo {\r\n        address add;\r\n        uint256 decimals;\r\n    }\r\n\r\n    struct _fillOrderValues {\r\n        uint256 rate;\r\n        uint256 amount;\r\n    }\r\n\r\n    //Structs representing an order that has unique id, user and amounts to give and get between two tokens to exchange\r\n    struct _Order {\r\n        uint256 id;\r\n        Side side;\r\n        address user;\r\n        address tokenA;\r\n        uint256 amountA;\r\n        address tokenB;\r\n        uint256 amountB;\r\n        uint256 rate; // TokenB/TokenA = price in terms of TokenB\r\n        uint256 originalAmountA;\r\n        uint256 originalAmountB;\r\n        bool waiveFees;\r\n    }\r\n\r\n    //For any order that is filled even if it is partially filled or fully filled\r\n    struct _filledOrder {\r\n        uint256 id;\r\n        Side side;\r\n        address user;\r\n        address tokenA;\r\n        address tokenB;\r\n        uint256 amountFilled;\r\n        uint256 fillRate;\r\n        uint256 originalRate;\r\n        uint256 originalAmountA;\r\n        uint256 originalAmountB;\r\n        bool feesWaived;\r\n        uint256 feesPaid; //in terms of ETH\r\n    }\r\n\r\n    enum Side {\r\n        BUY,\r\n        SELL\r\n    }\r\n\r\n    //add events\r\n    /// @notice Event when an order is placed on an exchange\r\n    event Order(\r\n        uint256 id,\r\n        Side side,\r\n        address user,\r\n        address tokenA,\r\n        uint256 amountA,\r\n        address tokenB,\r\n        uint256 amountB,\r\n        uint256 rate,\r\n        uint256 originalAmountA,\r\n        uint256 originalAmountB,\r\n        bool waiveFees\r\n    );\r\n\r\n    /// @notice Event when an order is cancelled\r\n    event Cancel(\r\n        uint256 id,\r\n        Side side,\r\n        address user,\r\n        address tokenA,\r\n        uint256 amountA,\r\n        address tokenB,\r\n        uint256 amountB,\r\n        uint256 rate,\r\n        uint256 originalAmountA,\r\n        uint256 originalAmountB,\r\n        bool waiveFees\r\n    );\r\n\r\n    event fillBuyOrder(\r\n        _Order remainingOrder,\r\n        uint256 amountBought,\r\n        uint256 fillBuyRate,\r\n        bool feesWaived,\r\n        uint256 feesPaid\r\n    );\r\n\r\n    event fillSellOrder(\r\n        _Order remainingOrder,\r\n        uint256 amountSold,\r\n        uint256 fillSellRate,\r\n        bool feesWaived,\r\n        uint256 feesPaid\r\n    );\r\n\r\n    constructor(address _wallet, address _fees, address _priceChecker) {\r\n        wallet = Wallet(_wallet);\r\n        tradingFees = TradingFees(_fees);\r\n        priceChecker = PriceChecker(_priceChecker);\r\n    }\r\n\r\n    function createLimitBuyOrder(\r\n        // TokenA/TokenB\r\n        address _tokenA,\r\n        uint256 _amountA,\r\n        address _tokenB,\r\n        uint256 _amountB,\r\n        uint256 _rate,\r\n        bool _waiveFees\r\n    ) external validToken(_tokenA) validToken(_tokenB) {\r\n        //Amount user has deposited in the DEX must be >= value he wants to buy\r\n        require(\r\n            wallet.balanceOf(_tokenB, msg.sender).sub(\r\n                wallet.getlockedFunds(msg.sender, _tokenB)\r\n            ) >= _amountB,\r\n            \"Insufficient Funds\"\r\n        );\r\n\r\n        wallet.updateLockedFunds(msg.sender, _tokenB, _amountB, true);\r\n\r\n        s_orderBook[_tokenA][_tokenB][uint256(Side.BUY)].push(\r\n            _Order(\r\n                s_orderId,\r\n                Side.BUY,\r\n                msg.sender,\r\n                _tokenA,\r\n                _amountA,\r\n                _tokenB,\r\n                _amountB,\r\n                _rate,\r\n                _amountA,\r\n                _amountB,\r\n                _waiveFees\r\n            )\r\n        );\r\n\r\n        emit Order(\r\n            s_orderId,\r\n            Side.BUY,\r\n            msg.sender,\r\n            _tokenA,\r\n            _amountA,\r\n            _tokenB,\r\n            _amountB,\r\n            _rate,\r\n            _amountA,\r\n            _amountB,\r\n            _waiveFees\r\n        );\r\n\r\n        s_orderId = s_orderId.add(1);\r\n    }\r\n\r\n    function createLimitSellOrder(\r\n        address _tokenA,\r\n        uint256 _amountA,\r\n        address _tokenB,\r\n        uint256 _amountB,\r\n        uint256 _rate,\r\n        bool _waiveFees\r\n    ) external validToken(_tokenA) validToken(_tokenB) {\r\n        //Amount of tokens user deposit in DEX must be >= the amount of tokens they want to sell\r\n        require(\r\n            wallet.balanceOf(_tokenA, msg.sender).sub(\r\n                wallet.getlockedFunds(msg.sender, _tokenA)\r\n            ) >= _amountA,\r\n            \"Insufficient Funds\"\r\n        );\r\n\r\n        //Lock the funds (tokens) in the wallet\r\n        wallet.updateLockedFunds(msg.sender, _tokenA, _amountA, true);\r\n\r\n        s_orderBook[_tokenA][_tokenB][uint256(Side.SELL)].push(\r\n            _Order(\r\n                s_orderId,\r\n                Side.SELL,\r\n                msg.sender,\r\n                _tokenA,\r\n                _amountA,\r\n                _tokenB,\r\n                _amountB,\r\n                _rate,\r\n                _amountA,\r\n                _amountB,\r\n                _waiveFees\r\n            )\r\n        );\r\n\r\n        emit Order(\r\n            s_orderId,\r\n            Side.SELL,\r\n            msg.sender,\r\n            _tokenA,\r\n            _amountA,\r\n            _tokenB,\r\n            _amountB,\r\n            _rate,\r\n            _amountA,\r\n            _amountB,\r\n            _waiveFees\r\n        );\r\n\r\n        s_orderId = s_orderId.add(1);\r\n    }\r\n\r\n    function cancelOrder(\r\n        Side side,\r\n        uint256 _id,\r\n        address _tokenA,\r\n        address _tokenB\r\n    ) public validOrder(_id, side, _tokenA, _tokenB) validToken(_tokenA) validToken(_tokenB) {\r\n        uint256 _side = uint256(side);\r\n        _Order[] storage _order = s_orderBook[_tokenA][_tokenB][_side];\r\n        uint256 size = _order.length;\r\n        _Order memory order;\r\n\r\n        uint256 index;\r\n        for (uint256 i = 0; i < size; i++) {\r\n            if (_order[i].id == _id) {\r\n                index = i;\r\n                order = _order[i];\r\n                break;\r\n            }\r\n        }\r\n\r\n        //Manual cancellation of orders\r\n        if (s_isManual) {\r\n            require(msg.sender == order.user, \"Not Owner\");\r\n\r\n            //Unlock funds\r\n            if (side == Side.BUY) {\r\n                wallet.updateLockedFunds(\r\n                    msg.sender,\r\n                    order.tokenB,\r\n                    order.amountB,\r\n                    false\r\n                );\r\n            } else if (side == Side.SELL) {\r\n                wallet.updateLockedFunds(\r\n                    msg.sender,\r\n                    order.tokenA,\r\n                    order.amountA,\r\n                    false\r\n                );\r\n            }\r\n        }\r\n\r\n        for (uint256 j = index; j < size - 1; j++) {\r\n            _order[j] = _order[j.add(1)];\r\n        }\r\n        delete _order[size.sub(1)];\r\n        _order.pop();\r\n\r\n        s_orderBook[_tokenA][_tokenB][_side] = _order;\r\n\r\n        emit Cancel(\r\n            _id,\r\n            order.side,\r\n            order.user,\r\n            order.tokenA,\r\n            order.amountA,\r\n            order.tokenB,\r\n            order.amountB,\r\n            order.rate,\r\n            order.originalAmountA,\r\n            order.originalAmountB,\r\n            order.waiveFees\r\n        );\r\n    }\r\n\r\n    function fillOrder(\r\n        Side side,\r\n        uint256 _id,\r\n        address _tokenA,\r\n        address _tokenB,\r\n        _fillOrderValues memory a\r\n    ) internal validOrder(_id, side, _tokenA, _tokenB) validToken(_tokenA) validToken(_tokenB) {\r\n        uint256 _side = uint256(side);\r\n        (_Order memory order, uint256 index) = getOrderFromArray(\r\n            _tokenA,\r\n            _tokenB,\r\n            _side,\r\n            _id\r\n        );\r\n\r\n        require(order.amountA >= a.amount, \"Invalid Order Amount to fill\");\r\n\r\n        order.amountA = order.amountA.sub(a.amount);\r\n        order.amountB = order.amountB.sub(\r\n            order.rate.mul(a.amount).div(decimals)\r\n        );\r\n        s_orderBook[_tokenA][_tokenB][_side][index].amountA = order.amountA;\r\n        s_orderBook[_tokenA][_tokenB][_side][index].amountB = order.amountB;\r\n\r\n        uint256 fees = tradingFees.calculateFees(\r\n            a.amount,\r\n            a.rate,\r\n            order.tokenB\r\n        ); \r\n        bool feesWaived = order.waiveFees &&\r\n            tradingFees.checkSufficientaDAI(fees, order.user);\r\n\r\n        if (side == Side.BUY) {\r\n            fillBuyOrders(order, a.amount, a.rate, feesWaived, fees);\r\n            emit fillBuyOrder(order, a.amount, a.rate, feesWaived, fees);\r\n        } else if (side == Side.SELL) {\r\n            fillSellOrders(order, a.amount, a.rate, feesWaived, fees);\r\n            emit fillSellOrder(order, a.amount, a.rate, feesWaived, fees);\r\n        }\r\n\r\n        if (order.amountA == 0) {\r\n            s_isManual = false;\r\n            cancelOrder(side, order.id, order.tokenA, order.tokenB); //remove filled orders \r\n            s_isManual = true;\r\n        }\r\n    }\r\n\r\n    function fillBuyOrders(\r\n        _Order memory order,\r\n        uint256 _amount,\r\n        uint256 _rate,\r\n        bool feesWaived,\r\n        uint256 fees\r\n    ) internal {\r\n        if (feesWaived) {\r\n            //Deduct aDAI\r\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\r\n            wallet.updateBalance(\r\n                tradingFees.aDAI(),\r\n                order.user,\r\n                aDAIToDeduct,\r\n                false\r\n            );\r\n            //Credit Bought tokens\r\n            wallet.updateBalance(order.tokenA, order.user, _amount, true);\r\n        } else {\r\n            uint256 amountTokenToDeduct = tradingFees.amountTokensToDeduct(\r\n                order.tokenA,\r\n                fees\r\n            );\r\n            //Credit Bought tokens after minusing fees\r\n            wallet.updateBalance(\r\n                order.tokenA,\r\n                order.user,\r\n                _amount.sub(amountTokenToDeduct),\r\n                true\r\n            );\r\n        }\r\n\r\n        //Original Locked Funds unlocked\r\n        wallet.updateLockedFunds(\r\n            order.user,\r\n            order.tokenB,\r\n            (order.rate.mul(_amount)).div(decimals),\r\n            false\r\n        );\r\n\r\n        //buyer update\r\n        //Buyer balance deducted from what he paid\r\n        wallet.updateBalance(\r\n            order.tokenB,\r\n            order.user,\r\n            (_rate.mul(_amount)).div(decimals),\r\n            false\r\n        );\r\n        \r\n        s_filledOrders[order.user][0].push(\r\n            _filledOrder(\r\n                order.id,\r\n                order.side,\r\n                order.user,\r\n                order.tokenA,\r\n                order.tokenB,\r\n                _amount,\r\n                _rate,\r\n                order.rate,\r\n                order.originalAmountA,\r\n                order.originalAmountB,\r\n                feesWaived,\r\n                fees\r\n            )\r\n        );\r\n    }\r\n\r\n    function fillSellOrders(\r\n        _Order memory order,\r\n        uint256 _amount,\r\n        uint256 _rate,\r\n        bool feesWaived,\r\n        uint256 fees\r\n    ) internal {\r\n        if (feesWaived) {\r\n            //Deduct aDAI\r\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\r\n            wallet.updateBalance(tradingFees.aDAI(), order.user, aDAIToDeduct, false);\r\n            //Credit Earned tokens\r\n            wallet.updateBalance(\r\n                order.tokenB,\r\n                order.user,\r\n                (_rate.mul(_amount)).div(decimals),\r\n                true\r\n            );\r\n        } else {\r\n            uint256 amountTokensToDeduct = tradingFees.amountTokensToDeduct(\r\n                order.tokenB,\r\n                fees\r\n            );\r\n            //Credit Earned tokens after minusing fees\r\n            wallet.updateBalance(\r\n                order.tokenB,\r\n                order.user,\r\n                (_rate.mul(_amount)).div(decimals).sub(amountTokensToDeduct),\r\n                true\r\n            );\r\n        }\r\n\r\n        wallet.updateLockedFunds(order.user, order.tokenA, _amount, false);\r\n        //seller update\r\n        wallet.updateBalance(order.tokenA, order.user, _amount, false);\r\n\r\n         s_filledOrders[order.user][1].push(\r\n            _filledOrder(\r\n                order.id,\r\n                order.side,\r\n                order.user,\r\n                order.tokenA,\r\n                order.tokenB,\r\n                _amount,\r\n                _rate,\r\n                order.rate,\r\n                order.originalAmountA,\r\n                order.originalAmountB,\r\n                feesWaived,\r\n                fees\r\n            )\r\n        );\r\n    }\r\n\r\n    function matchOrders(\r\n        address _tokenA,\r\n        address _tokenB,\r\n        uint256 _id,\r\n        Side side\r\n    ) internal validOrder(_id, side, _tokenA, _tokenB) validToken(_tokenA) validToken(_tokenB){\r\n        uint256 saleTokenAmt;\r\n\r\n        if (side == Side.BUY) {\r\n            //Retrieve sell order to match\r\n            _Order[] memory _sellOrder = s_orderBook[_tokenA][_tokenB][1];\r\n            for (uint256 i = 0; i < _sellOrder.length; i++) {\r\n                //Retrieve buy order to be filled\r\n                (_Order memory buyOrderToFill, ) = getOrderFromArray(\r\n                    _tokenA,\r\n                    _tokenB,\r\n                    uint8(side),\r\n                    _id\r\n                );\r\n                //sell order hit buyer's limit price & tokenB matches\r\n                if (\r\n                    _sellOrder[i].rate <= buyOrderToFill.rate &&\r\n                    buyOrderToFill.user != _sellOrder[i].user\r\n                    \r\n                ) {\r\n                    _Order memory sellOrder = _sellOrder[i];\r\n                    //if buyer's amount to buy > seller's amount to sell\r\n                    if (buyOrderToFill.amountA > sellOrder.amountA) {\r\n                        saleTokenAmt = sellOrder.amountA;\r\n                    }\r\n                    //if seller's amount to sell >= buyer's amount to buy\r\n                    else if (buyOrderToFill.amountA <= sellOrder.amountA) {\r\n                        saleTokenAmt = buyOrderToFill.amountA;\r\n                    }\r\n\r\n                    //Verify current balance\r\n                    require(\r\n                        wallet.balanceOf(\r\n                            buyOrderToFill.tokenB,\r\n                            buyOrderToFill.user\r\n                        ) >= (saleTokenAmt.mul(sellOrder.rate)).div(decimals),\r\n                        \"Insufficient Buyer Token Balance\"\r\n                    );\r\n                    require(\r\n                        wallet.balanceOf(_tokenA, sellOrder.user) >=\r\n                            saleTokenAmt,\r\n                        \"Insufficient Seller Token Balance\"\r\n                    );\r\n\r\n                    //update orders\r\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\r\n                        sellOrder.rate,\r\n                        saleTokenAmt\r\n                    );\r\n                    fillOrder(Side.BUY, _id, _tokenA, _tokenB, fillOrderValues);\r\n                    fillOrder(Side.SELL, sellOrder.id, _tokenA, _tokenB, fillOrderValues);\r\n                }\r\n\r\n                bool orderExist = orderExists(_id, side, _tokenA, _tokenB);\r\n                if (!orderExist) break;\r\n            }\r\n        } else if (side == Side.SELL) {\r\n            //Retrieve buy order to match\r\n            _Order[] memory _buyOrder = s_orderBook[_tokenA][_tokenB][0];\r\n            for (uint256 i = 0; i < _buyOrder.length; i++) {\r\n                //Retrieve sell order to be filled\r\n                (_Order memory sellOrderToFill, ) = getOrderFromArray(\r\n                    _tokenA,\r\n                    _tokenB,\r\n                    1,\r\n                    _id\r\n                );\r\n                //sell order hit buyer's limit price\r\n                if (\r\n                    _buyOrder[i].rate >= sellOrderToFill.rate &&\r\n                    _buyOrder[i].user != sellOrderToFill.user\r\n                ) {\r\n                    _Order memory order = _buyOrder[i];\r\n\r\n                    //if seller's amount to sell > buyer's amount to buy\r\n                    if (sellOrderToFill.amountA > order.amountA) {\r\n                        saleTokenAmt = order.amountA;\r\n                    }\r\n                    //if buyer's amount to buy > seller's amount to sell\r\n                    else if (sellOrderToFill.amountA <= order.amountA) {\r\n                        saleTokenAmt = sellOrderToFill.amountA;\r\n                    }\r\n                    //Verify current balance\r\n                    require(\r\n                        wallet.balanceOf(_tokenA, sellOrderToFill.user) >=\r\n                            saleTokenAmt,\r\n                        \"Insufficient Seller Token Balance\"\r\n                    );\r\n                    require(\r\n                        wallet.balanceOf(order.tokenB, order.user) >=\r\n                            (saleTokenAmt.mul(order.rate)).div(decimals),\r\n                        \"Insufficient Buyer Token Balance\"\r\n                    );\r\n\r\n                    //update orders\r\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\r\n                        order.rate,\r\n                        saleTokenAmt\r\n                    );\r\n                    fillOrder(Side.SELL, _id, _tokenA, _tokenB, fillOrderValues);\r\n                    fillOrder(Side.BUY, order.id, _tokenA, _tokenB, fillOrderValues);\r\n                }\r\n                bool orderExist = orderExists(_id, side, _tokenA, _tokenB);\r\n                if (!orderExist) break;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getOrderLength(\r\n        Side side,\r\n        address _tokenA,\r\n        address _tokenB\r\n    ) public view returns (uint256) {\r\n        return s_orderBook[_tokenA][_tokenB][uint256(side)].length;\r\n    }\r\n\r\n    function getOrder(\r\n        address _tokenA,\r\n        address _tokenB,\r\n        uint256 index,\r\n        Side side\r\n    )\r\n        public\r\n        view\r\n        returns (\r\n            _Order memory\r\n        )\r\n    {\r\n        _Order memory order = s_orderBook[_tokenA][_tokenB][uint256(side)][index];\r\n        return (\r\n            order\r\n        );\r\n    }\r\n\r\n    function getFilledOrderLength(\r\n        address _user,\r\n        Side side\r\n    ) public view returns (uint256) {\r\n        return s_filledOrders[_user][uint256(side)].length;\r\n    }\r\n\r\n    function getFilledOrder(\r\n        address _user,\r\n        Side side,\r\n        uint256 index\r\n    )\r\n        public\r\n        view\r\n        returns (\r\n            _filledOrder memory\r\n        )\r\n    {\r\n        _filledOrder memory filledOrder = s_filledOrders[_user][uint256(side)][\r\n            index\r\n        ];\r\n        return (\r\n            filledOrder\r\n        );\r\n    }\r\n\r\n    function getOrderFromArray(\r\n        address _tokenA,\r\n        address _tokenB,\r\n        uint256 side,\r\n        uint256 _id\r\n    ) public view returns (_Order memory, uint256) {\r\n        uint256 i = 0;\r\n        _Order[] memory _order = s_orderBook[_tokenA][_tokenB][side];\r\n        _Order memory order;\r\n        for (i; i < _order.length; i++) {\r\n            if (_order[i].id == _id) {\r\n                order = _order[i];\r\n                break;\r\n            }\r\n        }\r\n        return (order, i);\r\n    }\r\n\r\n    function orderExists(\r\n        uint256 _id,\r\n        Side side,\r\n        address _tokenA,\r\n        address _tokenB\r\n    ) public view returns (bool) {\r\n        _Order[] memory orders = s_orderBook[_tokenA][_tokenB][uint256(side)];\r\n\r\n        for (uint256 i = 0; i < orders.length; i++) {\r\n            if (orders[i].id == _id) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function addToken(address _token, uint256 _decimals) public onlyOwner {\r\n        require(!isVerifiedToken(_token), \"Token already verified\");\r\n        tokenList.push(_tokenInfo(_token, _decimals));\r\n    }\r\n\r\n    function isVerifiedToken(address _token) public view returns (bool) {\r\n        //uint256 size = tokenList.length;\r\n\r\n        for (uint256 i = 0; i < tokenList.length; i++) {\r\n            if (tokenList[i].add == _token) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function getTokenInfo(address _token) public view returns (uint256) {\r\n        for (uint256 i = 0; i < tokenList.length; i++) {\r\n            if (tokenList[i].add == _token) {\r\n                return tokenList[i].decimals;\r\n            }\r\n        }\r\n    }\r\n\r\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\r\n        wallet = Wallet(_Walletaddress);\r\n    }\r\n\r\n    function setPriceCheckerAddress(\r\n        address _PriceCheckeraddress\r\n    ) public onlyOwner {\r\n        priceChecker = PriceChecker(_PriceCheckeraddress);\r\n    }\r\n\r\n    function setTradingFees(address _tradingFees) public onlyOwner {\r\n        tradingFees = TradingFees(_tradingFees);\r\n    }\r\n\r\n    modifier validOrder(\r\n        uint256 _id,\r\n        Side side,\r\n        address _tokenA,\r\n        address _tokenB\r\n    ) {\r\n        require(orderExists(_id, side, _tokenA, _tokenB), \"Invalid Order ID\");\r\n        _;\r\n    }\r\n\r\n    modifier validToken(address _token) {\r\n        require(isVerifiedToken(_token), \"Token unavailable in DEX\");\r\n        _;\r\n    }\r\n}\r\n"},"contracts/interface/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    function allowance(\r\n        address owner,\r\n        address spender\r\n    ) external view returns (uint256 remaining);\r\n\r\n    function approve(\r\n        address spender,\r\n        uint256 value\r\n    ) external returns (bool success);\r\n\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    function decimals() external view returns (uint8 decimalPlaces);\r\n\r\n    function decreaseApproval(\r\n        address spender,\r\n        uint256 subtractedValue\r\n    ) external returns (bool success);\r\n\r\n    function increaseApproval(\r\n        address spender,\r\n        uint256 addedValue\r\n    ) external returns (bool success);\r\n\r\n    function name() external view returns (string memory tokenName);\r\n\r\n    function symbol() external view returns (string memory tokenSymbol);\r\n\r\n    function totalSupply() external view returns (uint256 totalTokensIssued);\r\n\r\n    function transfer(\r\n        address to,\r\n        uint256 value\r\n    ) external returns (bool success);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) external returns (bool success);\r\n}\r\n"},"contracts/PriceChecker.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract PriceChecker is Ownable {\r\n    _priceFeed[] public priceFeeds;\r\n\r\n    struct _priceFeed {\r\n        string name;\r\n        address token;\r\n        AggregatorV3Interface priceFeed;\r\n    }\r\n\r\n    //only using PriceFeeds pegged to USD\r\n    function addPriceFeed(\r\n        string memory _name,\r\n        address _token,\r\n        address _address\r\n    ) external onlyOwner {\r\n        _priceFeed[] memory pricefeed = priceFeeds;\r\n        bool isAdded = false;\r\n        for (uint256 i = 0; i < pricefeed.length; i++) {\r\n            if (\r\n                keccak256(abi.encodePacked(_name)) ==\r\n                keccak256(abi.encodePacked(pricefeed[i].name))\r\n            ) {\r\n                isAdded = true;\r\n                break;\r\n            }\r\n        }\r\n        require(!isAdded, \"Price Feed already added\");\r\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(_address);\r\n        priceFeeds.push(_priceFeed(_name, _token, priceFeed));\r\n    }\r\n\r\n    function getPriceFeed(\r\n        address _token\r\n    ) internal view returns (AggregatorV3Interface priceFeed) {\r\n        _priceFeed[] memory pricefeed = priceFeeds;\r\n\r\n        for (uint256 i = 0; i < pricefeed.length; i++) {\r\n            if (_token == pricefeed[i].token) {\r\n                return pricefeed[i].priceFeed;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getPrice(address _address) external view returns (uint256) {\r\n        AggregatorV3Interface priceFeed = getPriceFeed(_address);\r\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\r\n        return uint256(answer);\r\n    }\r\n}\r\n"},"contracts/TradingFees.sol":{"content":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./PriceChecker.sol\";\r\nimport \"./Wallet.sol\";\r\n\r\n/// @notice Library SafeMath used to prevent overflows and underflows\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract TradingFees is Ownable {\r\n    //When trading, have an option toggle to waive trading fees or not using deposited aETH\r\n    //Users have to first deposit aETH tokens into the Exchange contract to waive, aETH tokens are not for trading\r\n    //When a trade order goes through, trading fees of the trade fulfilled  = trade amount x trade price x 0.01,\r\n    //contract checks how much aETH is deposited and what is the value of aETH, if sufficient to waive fees fully, deduct balance in deposit\r\n    //and waive trading fees\r\n\r\n    using SafeMath for uint256; //for prevention of integer overflow\r\n\r\n    uint256 decimals = 10 ** 18;\r\n    address public daiToken =\r\n        address(0xBa8DCeD3512925e52FE67b1b5329187589072A55); //based on Aave contract\r\n    address public aDAI = address(0xADD98B0342e4094Ec32f3b67Ccfd3242C876ff7a); //based on Aave contract\r\n    PriceChecker priceFeed;\r\n    Wallet wallet;\r\n\r\n    constructor(address _priceCheckerAddress) {\r\n        priceFeed = PriceChecker(_priceCheckerAddress);\r\n    }\r\n\r\n    function calculateFees(\r\n        uint256 _amount,\r\n        uint256 _rate,\r\n        address _refToken\r\n    ) public view returns (uint256) {\r\n        //Calculated based on TokenB price, require actual price in 18dp\r\n        //trading fees is 0.1% of trade = 0.001\r\n        //moving up 18dp is 0.001 x 10**18 = 10**14\r\n        //have to fetch tokenPrice from PriceFeed\r\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8dp originally\r\n        uint256 value = (\r\n            ((_amount.mul(_rate)).div(decimals)).mul(priceOfToken.mul(10 ** 10))\r\n        ).div(decimals);\r\n        uint256 fees = value.div(10 ** 4);\r\n\r\n        return fees; //based on USD value\r\n    }\r\n\r\n    //Amount of DAI to deduct from fees\r\n    function amountaDAIToDeduct(uint256 _fees) public view returns (uint256) {\r\n        uint256 aDAI_Price = priceFeed.getPrice(daiToken); // in 8 decimals initially\r\n        uint256 amt = _fees.mul(decimals).div(aDAI_Price.mul(10 ** 10));\r\n        return uint256(amt);\r\n    }\r\n\r\n    //Amount of Tokens to deduct from fees\r\n    function amountTokensToDeduct(\r\n        address _refToken,\r\n        uint256 _fees\r\n    ) public view returns (uint256) {\r\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8decimals\r\n        uint256 amt = _fees.mul(decimals).div(priceOfToken.mul(10 ** 10));\r\n        return uint256(amt);\r\n    }\r\n\r\n    function checkSufficientaDAI(\r\n        uint256 _fees,\r\n        address _user\r\n    ) public view returns (bool) {\r\n        uint256 amtDAI = amountaDAIToDeduct(_fees);\r\n        uint256 balance = wallet.s_tokens(aDAI, _user);\r\n\r\n        return balance >= amtDAI;\r\n    }\r\n\r\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\r\n        wallet = Wallet(_Walletaddress);\r\n    }\r\n\r\n    function setPriceCheckerAddress(\r\n        address _PriceCheckeraddress\r\n    ) public onlyOwner {\r\n        priceFeed = PriceChecker(_PriceCheckeraddress);\r\n    }\r\n}\r\n"},"contracts/Wallet.sol":{"content":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./interface/IERC20.sol\";\r\nimport \"./Exchange.sol\";\r\n\r\n/// @notice Library SafeMath used to prevent overflows and underflows\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract Wallet is Ownable {\r\n    using SafeMath for uint256; //for prevention of integer overflow\r\n\r\n    address public immutable Owner;\r\n\r\n    //For prevention of reentrancy\r\n    bool private locked;\r\n\r\n    address public ethToken = address(0);\r\n\r\n    mapping(address => mapping(address => uint256)) public s_tokens; //tokenAdress -> msg.sender -> tokenAmt\r\n    mapping(address => mapping(address => uint256)) public lockedFunds;\r\n\r\n    Exchange exchange;\r\n    IERC20 token;\r\n\r\n    event Deposit(address token, address user, uint256 amount, uint256 balance);\r\n\r\n    /// @notice Event when amount withdrawn exchange\r\n    event Withdraw(\r\n        address token,\r\n        address user,\r\n        uint256 amount,\r\n        uint256 balance\r\n    );\r\n\r\n    constructor() {\r\n        Owner = msg.sender;\r\n    }\r\n\r\n    function depositETH() external payable {\r\n        updateBalance(ethToken, msg.sender, msg.value, true);\r\n\r\n        emit Deposit(\r\n            ethToken,\r\n            msg.sender,\r\n            msg.value,\r\n            balanceOf(ethToken, msg.sender)\r\n        );\r\n    }\r\n\r\n    function withdrawETH(uint256 _amount) external {\r\n        require(\r\n            balanceOf(ethToken, msg.sender).sub(\r\n                getlockedFunds(msg.sender, ethToken)\r\n            ) >= _amount,\r\n            \"Insufficient balance ETH to withdraw\"\r\n        );\r\n        require(!locked, \"Reentrant call detected!\");\r\n        locked = true;\r\n        updateBalance(ethToken, msg.sender, _amount, false);\r\n        locked = false;\r\n        (bool success, ) = msg.sender.call{value: _amount}(\"\");\r\n        require(success, \"failed to send amount\");\r\n\r\n        emit Withdraw(\r\n            ethToken,\r\n            msg.sender,\r\n            _amount,\r\n            balanceOf(ethToken, msg.sender)\r\n        );\r\n    }\r\n\r\n    //from and transferFrom is from ERC20 contract\r\n    //_token should be an ERC20 token\r\n    function depositToken(\r\n        address _token,\r\n        uint256 _amount,\r\n        uint256 _decimals\r\n    ) external {\r\n        require(_token != ethToken);\r\n        require(\r\n            exchange.isVerifiedToken(_token),\r\n            \"Token not verified on Exchange\"\r\n        );\r\n        //need to add a check to prove that it is an ERC20 token\r\n        token = IERC20(_token);\r\n\r\n        //Requires approval first\r\n        require(\r\n            token.transferFrom(msg.sender, address(this), _amount),\r\n            \"No Approval yet\"\r\n        );\r\n        uint256 decimals = 18;\r\n        if (_decimals == 18) {\r\n            updateBalance(_token, msg.sender, _amount, true);\r\n        } else\r\n            updateBalance(\r\n                _token,\r\n                msg.sender,\r\n                _amount.mul(10 ** decimals.sub(_decimals)),\r\n                true\r\n            );\r\n\r\n        emit Deposit(\r\n            _token,\r\n            msg.sender,\r\n            _amount,\r\n            balanceOf(_token, msg.sender)\r\n        );\r\n    }\r\n\r\n    function withdrawToken(\r\n        address _token,\r\n        uint256 _amount,\r\n        uint256 _decimals\r\n    ) external {\r\n        require(_token != ethToken);\r\n        require(\r\n            exchange.isVerifiedToken(_token),\r\n            \"Token not verified on Exchange\"\r\n        );\r\n\r\n        require(\r\n            balanceOf(_token, msg.sender).sub(\r\n                getlockedFunds(msg.sender, _token)\r\n            ) >= _amount,\r\n            \"Insufficient Tokens to withdraw\"\r\n        );\r\n        require(!locked, \"Reentrant call detected!\");\r\n        locked = true;\r\n\r\n        token = IERC20(_token);\r\n        uint256 decimals = 18;\r\n        if (_decimals == 18) {\r\n            updateBalance(_token, msg.sender, _amount, false);\r\n            require(token.transfer(msg.sender, _amount));\r\n        } else {\r\n            updateBalance(\r\n                _token,\r\n                msg.sender,\r\n                _amount.mul(10 ** decimals.sub(_decimals)),\r\n                false\r\n            );\r\n            require(\r\n                token.transfer(\r\n                    msg.sender,\r\n                    _amount.div(10 ** decimals.sub(_decimals))\r\n                )\r\n            );\r\n        }\r\n\r\n        locked = false;\r\n        emit Withdraw(\r\n            _token,\r\n            msg.sender,\r\n            _amount,\r\n            balanceOf(_token, msg.sender)\r\n        );\r\n    }\r\n\r\n    function getlockedFunds(\r\n        address _user,\r\n        address _token\r\n    ) public view returns (uint256) {\r\n        return lockedFunds[_user][_token];\r\n    }\r\n\r\n    function updateLockedFunds(\r\n        address _user,\r\n        address _token,\r\n        uint256 _amount,\r\n        bool isAdd\r\n    ) public isAuthorised {\r\n        if (isAdd) {\r\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].add(\r\n                _amount\r\n            );\r\n        } else if (!isAdd) {\r\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].sub(\r\n                _amount\r\n            );\r\n        }\r\n    }\r\n\r\n    //balance of specific tokens in the dex owned by specific user\r\n    function balanceOf(\r\n        address _token,\r\n        address _user\r\n    ) public view returns (uint256) {\r\n        return s_tokens[_token][_user];\r\n    }\r\n\r\n    function updateBalance(\r\n        address _token,\r\n        address _user,\r\n        uint256 _amount,\r\n        bool isAdd\r\n    ) public isAuthorised {\r\n        if (isAdd) {\r\n            s_tokens[_token][_user] = s_tokens[_token][_user].add(_amount);\r\n        } else if (!isAdd) {\r\n            s_tokens[_token][_user] = s_tokens[_token][_user].sub(_amount);\r\n        }\r\n    }\r\n\r\n    function updateExchangeAddress(address _exchangeAddress) public onlyOwner {\r\n        exchange = Exchange(_exchangeAddress);\r\n    }\r\n\r\n    modifier isAuthorised() {\r\n        require(\r\n            msg.sender == address(this) || msg.sender == address(exchange),\r\n            \"Unauthorised Function Call\"\r\n        );\r\n        _;\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"6321","formattedMessage":"Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> contracts/Exchange.sol:683:64:\n    |\n683 |     function getTokenInfo(address _token) public view returns (uint256) {\n    |                                                                ^^^^^^^\n\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":21215,"file":"contracts/Exchange.sol","start":21208},"type":"Warning"}],"sources":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","exportedSymbols":{"AggregatorV3Interface":[45]},"id":46,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":45,"linearizedBaseContracts":[45],"name":"AggregatorV3Interface","nameLocation":"67:21:0","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":6,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"102:8:0","nodeType":"FunctionDefinition","parameters":{"id":2,"nodeType":"ParameterList","parameters":[],"src":"110:2:0"},"returnParameters":{"id":5,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6,"src":"136:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3,"name":"uint8","nodeType":"ElementaryTypeName","src":"136:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"135:7:0"},"scope":45,"src":"93:50:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7284e416","id":11,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"156:11:0","nodeType":"FunctionDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[],"src":"167:2:0"},"returnParameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11,"src":"193:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8,"name":"string","nodeType":"ElementaryTypeName","src":"193:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"192:15:0"},"scope":45,"src":"147:61:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":16,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"221:7:0","nodeType":"FunctionDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"228:2:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16,"src":"254:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"254:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"253:9:0"},"scope":45,"src":"212:51:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a6fc8f5","id":31,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"276:12:0","nodeType":"FunctionDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18,"mutability":"mutable","name":"_roundId","nameLocation":"296:8:0","nodeType":"VariableDeclaration","scope":31,"src":"289:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":17,"name":"uint80","nodeType":"ElementaryTypeName","src":"289:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"288:17:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"roundId","nameLocation":"355:7:0","nodeType":"VariableDeclaration","scope":31,"src":"348:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":20,"name":"uint80","nodeType":"ElementaryTypeName","src":"348:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":23,"mutability":"mutable","name":"answer","nameLocation":"377:6:0","nodeType":"VariableDeclaration","scope":31,"src":"370:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":22,"name":"int256","nodeType":"ElementaryTypeName","src":"370:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25,"mutability":"mutable","name":"startedAt","nameLocation":"399:9:0","nodeType":"VariableDeclaration","scope":31,"src":"391:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24,"name":"uint256","nodeType":"ElementaryTypeName","src":"391:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"updatedAt","nameLocation":"424:9:0","nodeType":"VariableDeclaration","scope":31,"src":"416:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26,"name":"uint256","nodeType":"ElementaryTypeName","src":"416:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29,"mutability":"mutable","name":"answeredInRound","nameLocation":"448:15:0","nodeType":"VariableDeclaration","scope":31,"src":"441:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":28,"name":"uint80","nodeType":"ElementaryTypeName","src":"441:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"340:129:0"},"scope":45,"src":"267:203:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":44,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"483:15:0","nodeType":"FunctionDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[],"src":"498:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"roundId","nameLocation":"550:7:0","nodeType":"VariableDeclaration","scope":44,"src":"543:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":33,"name":"uint80","nodeType":"ElementaryTypeName","src":"543:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":36,"mutability":"mutable","name":"answer","nameLocation":"572:6:0","nodeType":"VariableDeclaration","scope":44,"src":"565:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":35,"name":"int256","nodeType":"ElementaryTypeName","src":"565:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":38,"mutability":"mutable","name":"startedAt","nameLocation":"594:9:0","nodeType":"VariableDeclaration","scope":44,"src":"586:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37,"name":"uint256","nodeType":"ElementaryTypeName","src":"586:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":40,"mutability":"mutable","name":"updatedAt","nameLocation":"619:9:0","nodeType":"VariableDeclaration","scope":44,"src":"611:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39,"name":"uint256","nodeType":"ElementaryTypeName","src":"611:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42,"mutability":"mutable","name":"answeredInRound","nameLocation":"643:15:0","nodeType":"VariableDeclaration","scope":44,"src":"636:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":41,"name":"uint80","nodeType":"ElementaryTypeName","src":"636:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"535:129:0"},"scope":45,"src":"474:191:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":46,"src":"57:610:0","usedErrors":[]}],"src":"32:636:0"},"id":0},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[180],"Ownable":[158]},"id":159,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":47,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":48,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":159,"sourceUnit":181,"src":"127:30:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":50,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":180,"src":"683:7:1"},"id":51,"nodeType":"InheritanceSpecifier","src":"683:7:1"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":49,"nodeType":"StructuredDocumentation","src":"159:494:1","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":158,"linearizedBaseContracts":[158,180],"name":"Ownable","nameLocation":"672:7:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":53,"mutability":"mutable","name":"_owner","nameLocation":"713:6:1","nodeType":"VariableDeclaration","scope":158,"src":"697:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":52,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":59,"name":"OwnershipTransferred","nameLocation":"732:20:1","nodeType":"EventDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:1","nodeType":"VariableDeclaration","scope":59,"src":"753:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":54,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":57,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:1","nodeType":"VariableDeclaration","scope":59,"src":"784:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:1"},"src":"726:84:1"},{"body":{"id":68,"nodeType":"Block","src":"926:49:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":64,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"955:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":63,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"936:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":67,"nodeType":"ExpressionStatement","src":"936:32:1"}]},"documentation":{"id":60,"nodeType":"StructuredDocumentation","src":"816:91:1","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":69,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":61,"nodeType":"ParameterList","parameters":[],"src":"923:2:1"},"returnParameters":{"id":62,"nodeType":"ParameterList","parameters":[],"src":"926:0:1"},"scope":158,"src":"912:63:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":76,"nodeType":"Block","src":"1084:41:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":72,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"1094:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":73,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":74,"nodeType":"ExpressionStatement","src":"1094:13:1"},{"id":75,"nodeType":"PlaceholderStatement","src":"1117:1:1"}]},"documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"981:77:1","text":" @dev Throws if called by any account other than the owner."},"id":77,"name":"onlyOwner","nameLocation":"1072:9:1","nodeType":"ModifierDefinition","parameters":{"id":71,"nodeType":"ParameterList","parameters":[],"src":"1081:2:1"},"src":"1063:62:1","virtual":false,"visibility":"internal"},{"body":{"id":85,"nodeType":"Block","src":"1256:30:1","statements":[{"expression":{"id":83,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"1273:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":82,"id":84,"nodeType":"Return","src":"1266:13:1"}]},"documentation":{"id":78,"nodeType":"StructuredDocumentation","src":"1131:65:1","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":86,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:1","nodeType":"FunctionDefinition","parameters":{"id":79,"nodeType":"ParameterList","parameters":[],"src":"1215:2:1"},"returnParameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":86,"src":"1247:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":80,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:1"},"scope":158,"src":"1201:85:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":99,"nodeType":"Block","src":"1404:85:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":91,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"1422:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":92,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":93,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"1433:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":94,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":96,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":90,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":97,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":98,"nodeType":"ExpressionStatement","src":"1414:68:1"}]},"documentation":{"id":87,"nodeType":"StructuredDocumentation","src":"1292:62:1","text":" @dev Throws if the sender is not the owner."},"id":100,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:1","nodeType":"FunctionDefinition","parameters":{"id":88,"nodeType":"ParameterList","parameters":[],"src":"1379:2:1"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"1404:0:1"},"scope":158,"src":"1359:130:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":113,"nodeType":"Block","src":"1885:47:1","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:1","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":106,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"1895:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":112,"nodeType":"ExpressionStatement","src":"1895:30:1"}]},"documentation":{"id":101,"nodeType":"StructuredDocumentation","src":"1495:331:1","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":114,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"1875:9:1"},"nodeType":"ModifierInvocation","src":"1875:9:1"}],"name":"renounceOwnership","nameLocation":"1840:17:1","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[],"src":"1857:2:1"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"1885:0:1"},"scope":158,"src":"1831:101:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":136,"nodeType":"Block","src":"2151:128:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":123,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2169:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":124,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:1","typeDescriptions":{}}},"id":127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":122,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":131,"nodeType":"ExpressionStatement","src":"2161:73:1"},{"expression":{"arguments":[{"id":133,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2263:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":132,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2244:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":135,"nodeType":"ExpressionStatement","src":"2244:28:1"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"1938:138:1","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":137,"implemented":true,"kind":"function","modifiers":[{"id":120,"kind":"modifierInvocation","modifierName":{"id":119,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"2141:9:1"},"nodeType":"ModifierInvocation","src":"2141:9:1"}],"name":"transferOwnership","nameLocation":"2090:17:1","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:1","nodeType":"VariableDeclaration","scope":137,"src":"2108:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":116,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:1"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[],"src":"2151:0:1"},"scope":158,"src":"2081:198:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":156,"nodeType":"Block","src":"2496:124:1","statements":[{"assignments":[144],"declarations":[{"constant":false,"id":144,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:1","nodeType":"VariableDeclaration","scope":156,"src":"2506:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":146,"initialValue":{"id":145,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"2525:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:1"},{"expression":{"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":147,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"2541:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":148,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2550:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":150,"nodeType":"ExpressionStatement","src":"2541:17:1"},{"eventCall":{"arguments":[{"id":152,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"2594:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":153,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2604:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":151,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"2573:20:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":155,"nodeType":"EmitStatement","src":"2568:45:1"}]},"documentation":{"id":138,"nodeType":"StructuredDocumentation","src":"2285:143:1","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":157,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:1","nodeType":"FunctionDefinition","parameters":{"id":141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:1","nodeType":"VariableDeclaration","scope":157,"src":"2461:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":139,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:1"},"returnParameters":{"id":142,"nodeType":"ParameterList","parameters":[],"src":"2496:0:1"},"scope":158,"src":"2433:187:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":159,"src":"654:1968:1","usedErrors":[]}],"src":"102:2521:1"},"id":1},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[180]},"id":181,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":160,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:2"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":161,"nodeType":"StructuredDocumentation","src":"111:496:2","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":180,"linearizedBaseContracts":[180],"name":"Context","nameLocation":"626:7:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":169,"nodeType":"Block","src":"702:34:2","statements":[{"expression":{"expression":{"id":166,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":165,"id":168,"nodeType":"Return","src":"712:17:2"}]},"id":170,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:2","nodeType":"FunctionDefinition","parameters":{"id":162,"nodeType":"ParameterList","parameters":[],"src":"659:2:2"},"returnParameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":170,"src":"693:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:2"},"scope":180,"src":"640:96:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":178,"nodeType":"Block","src":"809:32:2","statements":[{"expression":{"expression":{"id":175,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":174,"id":177,"nodeType":"Return","src":"819:15:2"}]},"id":179,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:2","nodeType":"FunctionDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[],"src":"759:2:2"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":179,"src":"793:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":172,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:2"},"scope":180,"src":"742:99:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":181,"src":"608:235:2","usedErrors":[]}],"src":"86:758:2"},"id":2},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","exportedSymbols":{"SafeMath":[492]},"id":493,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":182,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:3"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"285:196:3","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":492,"linearizedBaseContracts":[492],"name":"SafeMath","nameLocation":"490:8:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":214,"nodeType":"Block","src":"717:140:3","statements":[{"id":213,"nodeType":"UncheckedBlock","src":"727:124:3","statements":[{"assignments":[196],"declarations":[{"constant":false,"id":196,"mutability":"mutable","name":"c","nameLocation":"759:1:3","nodeType":"VariableDeclaration","scope":213,"src":"751:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":195,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":200,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":197,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"763:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":198,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"767:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"763:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"751:17:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":201,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"786:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":202,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"790:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"786:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":208,"nodeType":"IfStatement","src":"782:28:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"801:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"808:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":206,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"800:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":194,"id":207,"nodeType":"Return","src":"793:17:3"}},{"expression":{"components":[{"hexValue":"74727565","id":209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"832:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":210,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"838:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":211,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"831:9:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":194,"id":212,"nodeType":"Return","src":"824:16:3"}]}]},"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"505:131:3","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":215,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"650:6:3","nodeType":"FunctionDefinition","parameters":{"id":189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"a","nameLocation":"665:1:3","nodeType":"VariableDeclaration","scope":215,"src":"657:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":185,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":188,"mutability":"mutable","name":"b","nameLocation":"676:1:3","nodeType":"VariableDeclaration","scope":215,"src":"668:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":187,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:22:3"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":215,"src":"702:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":190,"name":"bool","nodeType":"ElementaryTypeName","src":"702:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":215,"src":"708:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":192,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:15:3"},"scope":492,"src":"641:216:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":242,"nodeType":"Block","src":"1078:113:3","statements":[{"id":241,"nodeType":"UncheckedBlock","src":"1088:97:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":227,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"1116:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":228,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"1120:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1116:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":234,"nodeType":"IfStatement","src":"1112:28:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1131:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":232,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1130:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":226,"id":233,"nodeType":"Return","src":"1123:17:3"}},{"expression":{"components":[{"hexValue":"74727565","id":235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1162:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":236,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"1168:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":237,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"1172:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1168:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":239,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1161:13:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":226,"id":240,"nodeType":"Return","src":"1154:20:3"}]}]},"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"863:134:3","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":243,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"1011:6:3","nodeType":"FunctionDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"a","nameLocation":"1026:1:3","nodeType":"VariableDeclaration","scope":243,"src":"1018:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":217,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":220,"mutability":"mutable","name":"b","nameLocation":"1037:1:3","nodeType":"VariableDeclaration","scope":243,"src":"1029:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":219,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:22:3"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":243,"src":"1063:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":222,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":243,"src":"1069:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1062:15:3"},"scope":492,"src":"1002:189:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":284,"nodeType":"Block","src":"1415:417:3","statements":[{"id":283,"nodeType":"UncheckedBlock","src":"1425:401:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":255,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"1683:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1683:6:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":262,"nodeType":"IfStatement","src":"1679:28:3","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1699:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1705:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":260,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1698:9:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":254,"id":261,"nodeType":"Return","src":"1691:16:3"}},{"assignments":[264],"declarations":[{"constant":false,"id":264,"mutability":"mutable","name":"c","nameLocation":"1729:1:3","nodeType":"VariableDeclaration","scope":283,"src":"1721:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":263,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":268,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":265,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"1733:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":266,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"1737:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1733:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1721:17:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":269,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"1756:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":270,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"1760:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":272,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"1765:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":278,"nodeType":"IfStatement","src":"1752:33:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1776:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":276,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1775:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":254,"id":277,"nodeType":"Return","src":"1768:17:3"}},{"expression":{"components":[{"hexValue":"74727565","id":279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1807:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":280,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"1813:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":281,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1806:9:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":254,"id":282,"nodeType":"Return","src":"1799:16:3"}]}]},"documentation":{"id":244,"nodeType":"StructuredDocumentation","src":"1197:137:3","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":285,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1348:6:3","nodeType":"FunctionDefinition","parameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":246,"mutability":"mutable","name":"a","nameLocation":"1363:1:3","nodeType":"VariableDeclaration","scope":285,"src":"1355:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":245,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":248,"mutability":"mutable","name":"b","nameLocation":"1374:1:3","nodeType":"VariableDeclaration","scope":285,"src":"1366:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":247,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:22:3"},"returnParameters":{"id":254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":285,"src":"1400:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":250,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":285,"src":"1406:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":252,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:15:3"},"scope":492,"src":"1339:493:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":312,"nodeType":"Block","src":"2057:114:3","statements":[{"id":311,"nodeType":"UncheckedBlock","src":"2067:98:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":297,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"2095:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2095:6:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":304,"nodeType":"IfStatement","src":"2091:29:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2111:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":302,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2110:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":296,"id":303,"nodeType":"Return","src":"2103:17:3"}},{"expression":{"components":[{"hexValue":"74727565","id":305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2142:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":306,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"2148:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":307,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"2152:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2148:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":309,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2141:13:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":296,"id":310,"nodeType":"Return","src":"2134:20:3"}]}]},"documentation":{"id":286,"nodeType":"StructuredDocumentation","src":"1838:138:3","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":313,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1990:6:3","nodeType":"FunctionDefinition","parameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":288,"mutability":"mutable","name":"a","nameLocation":"2005:1:3","nodeType":"VariableDeclaration","scope":313,"src":"1997:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":287,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":290,"mutability":"mutable","name":"b","nameLocation":"2016:1:3","nodeType":"VariableDeclaration","scope":313,"src":"2008:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":289,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:22:3"},"returnParameters":{"id":296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":313,"src":"2042:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":292,"name":"bool","nodeType":"ElementaryTypeName","src":"2042:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":313,"src":"2048:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":294,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2041:15:3"},"scope":492,"src":"1981:190:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":340,"nodeType":"Block","src":"2406:114:3","statements":[{"id":339,"nodeType":"UncheckedBlock","src":"2416:98:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":325,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"2444:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2449:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2444:6:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":332,"nodeType":"IfStatement","src":"2440:29:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2460:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2467:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":330,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2459:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":324,"id":331,"nodeType":"Return","src":"2452:17:3"}},{"expression":{"components":[{"hexValue":"74727565","id":333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2491:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":334,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"2497:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":335,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"2501:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2497:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":337,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2490:13:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":324,"id":338,"nodeType":"Return","src":"2483:20:3"}]}]},"documentation":{"id":314,"nodeType":"StructuredDocumentation","src":"2177:148:3","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":341,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2339:6:3","nodeType":"FunctionDefinition","parameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":316,"mutability":"mutable","name":"a","nameLocation":"2354:1:3","nodeType":"VariableDeclaration","scope":341,"src":"2346:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":315,"name":"uint256","nodeType":"ElementaryTypeName","src":"2346:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":318,"mutability":"mutable","name":"b","nameLocation":"2365:1:3","nodeType":"VariableDeclaration","scope":341,"src":"2357:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":317,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2345:22:3"},"returnParameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":341,"src":"2391:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":320,"name":"bool","nodeType":"ElementaryTypeName","src":"2391:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":341,"src":"2397:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":322,"name":"uint256","nodeType":"ElementaryTypeName","src":"2397:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2390:15:3"},"scope":492,"src":"2330:190:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":355,"nodeType":"Block","src":"2822:29:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":351,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"2839:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":352,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"2843:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":350,"id":354,"nodeType":"Return","src":"2832:12:3"}]},"documentation":{"id":342,"nodeType":"StructuredDocumentation","src":"2526:224:3","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":356,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"2764:3:3","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"a","nameLocation":"2776:1:3","nodeType":"VariableDeclaration","scope":356,"src":"2768:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":343,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":346,"mutability":"mutable","name":"b","nameLocation":"2787:1:3","nodeType":"VariableDeclaration","scope":356,"src":"2779:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":345,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2767:22:3"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":356,"src":"2813:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":348,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2812:9:3"},"scope":492,"src":"2755:96:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":370,"nodeType":"Block","src":"3189:29:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":366,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"3206:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":367,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"3210:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3206:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":365,"id":369,"nodeType":"Return","src":"3199:12:3"}]},"documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"2857:260:3","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":371,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3131:3:3","nodeType":"FunctionDefinition","parameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"a","nameLocation":"3143:1:3","nodeType":"VariableDeclaration","scope":371,"src":"3135:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":358,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":361,"mutability":"mutable","name":"b","nameLocation":"3154:1:3","nodeType":"VariableDeclaration","scope":371,"src":"3146:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":360,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3134:22:3"},"returnParameters":{"id":365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":371,"src":"3180:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":363,"name":"uint256","nodeType":"ElementaryTypeName","src":"3180:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3179:9:3"},"scope":492,"src":"3122:96:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":385,"nodeType":"Block","src":"3532:29:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":381,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"3549:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":382,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"3553:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3549:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":380,"id":384,"nodeType":"Return","src":"3542:12:3"}]},"documentation":{"id":372,"nodeType":"StructuredDocumentation","src":"3224:236:3","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":386,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"3474:3:3","nodeType":"FunctionDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"a","nameLocation":"3486:1:3","nodeType":"VariableDeclaration","scope":386,"src":"3478:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":373,"name":"uint256","nodeType":"ElementaryTypeName","src":"3478:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"b","nameLocation":"3497:1:3","nodeType":"VariableDeclaration","scope":386,"src":"3489:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":375,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3477:22:3"},"returnParameters":{"id":380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":386,"src":"3523:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":378,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:3"},"scope":492,"src":"3465:96:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":400,"nodeType":"Block","src":"3917:29:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":396,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"3934:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":397,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"3938:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3934:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":395,"id":399,"nodeType":"Return","src":"3927:12:3"}]},"documentation":{"id":387,"nodeType":"StructuredDocumentation","src":"3567:278:3","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":401,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3859:3:3","nodeType":"FunctionDefinition","parameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":389,"mutability":"mutable","name":"a","nameLocation":"3871:1:3","nodeType":"VariableDeclaration","scope":401,"src":"3863:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":388,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":391,"mutability":"mutable","name":"b","nameLocation":"3882:1:3","nodeType":"VariableDeclaration","scope":401,"src":"3874:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":390,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3862:22:3"},"returnParameters":{"id":395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":401,"src":"3908:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":393,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:9:3"},"scope":492,"src":"3850:96:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"4466:29:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":411,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"4483:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":412,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"4487:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4483:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":410,"id":414,"nodeType":"Return","src":"4476:12:3"}]},"documentation":{"id":402,"nodeType":"StructuredDocumentation","src":"3952:442:3","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"4408:3:3","nodeType":"FunctionDefinition","parameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":404,"mutability":"mutable","name":"a","nameLocation":"4420:1:3","nodeType":"VariableDeclaration","scope":416,"src":"4412:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":403,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":406,"mutability":"mutable","name":"b","nameLocation":"4431:1:3","nodeType":"VariableDeclaration","scope":416,"src":"4423:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":405,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4411:22:3"},"returnParameters":{"id":410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":416,"src":"4457:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":408,"name":"uint256","nodeType":"ElementaryTypeName","src":"4457:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4456:9:3"},"scope":492,"src":"4399:96:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":440,"nodeType":"Block","src":"5084:106:3","statements":[{"id":439,"nodeType":"UncheckedBlock","src":"5094:90:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":429,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"5126:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":430,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"5131:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5126:6:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":432,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"5134:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":428,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5118:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5118:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":434,"nodeType":"ExpressionStatement","src":"5118:29:3"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":435,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"5168:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":436,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"5172:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5168:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":427,"id":438,"nodeType":"Return","src":"5161:12:3"}]}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"4501:453:3","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":441,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"4968:3:3","nodeType":"FunctionDefinition","parameters":{"id":424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":419,"mutability":"mutable","name":"a","nameLocation":"4989:1:3","nodeType":"VariableDeclaration","scope":441,"src":"4981:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":418,"name":"uint256","nodeType":"ElementaryTypeName","src":"4981:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":421,"mutability":"mutable","name":"b","nameLocation":"5008:1:3","nodeType":"VariableDeclaration","scope":441,"src":"5000:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":420,"name":"uint256","nodeType":"ElementaryTypeName","src":"5000:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":423,"mutability":"mutable","name":"errorMessage","nameLocation":"5033:12:3","nodeType":"VariableDeclaration","scope":441,"src":"5019:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":422,"name":"string","nodeType":"ElementaryTypeName","src":"5019:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4971:80:3"},"returnParameters":{"id":427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":441,"src":"5075:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":425,"name":"uint256","nodeType":"ElementaryTypeName","src":"5075:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5074:9:3"},"scope":492,"src":"4959:231:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":465,"nodeType":"Block","src":"5799:105:3","statements":[{"id":464,"nodeType":"UncheckedBlock","src":"5809:89:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":454,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"5841:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5845:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5841:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":457,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"5848:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":453,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5833:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5833:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":459,"nodeType":"ExpressionStatement","src":"5833:28:3"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":460,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"5882:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":461,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"5886:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5882:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":452,"id":463,"nodeType":"Return","src":"5875:12:3"}]}]},"documentation":{"id":442,"nodeType":"StructuredDocumentation","src":"5196:473:3","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":466,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5683:3:3","nodeType":"FunctionDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":444,"mutability":"mutable","name":"a","nameLocation":"5704:1:3","nodeType":"VariableDeclaration","scope":466,"src":"5696:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":443,"name":"uint256","nodeType":"ElementaryTypeName","src":"5696:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":446,"mutability":"mutable","name":"b","nameLocation":"5723:1:3","nodeType":"VariableDeclaration","scope":466,"src":"5715:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":445,"name":"uint256","nodeType":"ElementaryTypeName","src":"5715:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":448,"mutability":"mutable","name":"errorMessage","nameLocation":"5748:12:3","nodeType":"VariableDeclaration","scope":466,"src":"5734:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":447,"name":"string","nodeType":"ElementaryTypeName","src":"5734:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5686:80:3"},"returnParameters":{"id":452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":466,"src":"5790:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":450,"name":"uint256","nodeType":"ElementaryTypeName","src":"5790:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5789:9:3"},"scope":492,"src":"5674:230:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":490,"nodeType":"Block","src":"6675:105:3","statements":[{"id":489,"nodeType":"UncheckedBlock","src":"6685:89:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":479,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"6717:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6721:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6717:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":482,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"6724:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":478,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6709:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6709:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":484,"nodeType":"ExpressionStatement","src":"6709:28:3"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":485,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"6758:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":486,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"6762:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6758:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":477,"id":488,"nodeType":"Return","src":"6751:12:3"}]}]},"documentation":{"id":467,"nodeType":"StructuredDocumentation","src":"5910:635:3","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":491,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"6559:3:3","nodeType":"FunctionDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":469,"mutability":"mutable","name":"a","nameLocation":"6580:1:3","nodeType":"VariableDeclaration","scope":491,"src":"6572:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":468,"name":"uint256","nodeType":"ElementaryTypeName","src":"6572:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":471,"mutability":"mutable","name":"b","nameLocation":"6599:1:3","nodeType":"VariableDeclaration","scope":491,"src":"6591:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":470,"name":"uint256","nodeType":"ElementaryTypeName","src":"6591:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":473,"mutability":"mutable","name":"errorMessage","nameLocation":"6624:12:3","nodeType":"VariableDeclaration","scope":491,"src":"6610:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":472,"name":"string","nodeType":"ElementaryTypeName","src":"6610:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6562:80:3"},"returnParameters":{"id":477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":491,"src":"6666:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":475,"name":"uint256","nodeType":"ElementaryTypeName","src":"6666:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6665:9:3"},"scope":492,"src":"6550:230:3","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":493,"src":"482:6300:3","usedErrors":[]}],"src":"107:6676:3"},"id":3},"contracts/Exchange.sol":{"ast":{"absolutePath":"contracts/Exchange.sol","exportedSymbols":{"AggregatorV3Interface":[45],"Context":[180],"Exchange":[2396],"IERC20":[3445],"Ownable":[158],"PriceChecker":[2565],"SafeMath":[492],"TradingFees":[2795],"Wallet":[3359]},"id":2397,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":494,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"35:23:4"},{"absolutePath":"contracts/PriceChecker.sol","file":"./PriceChecker.sol","id":495,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2397,"sourceUnit":2566,"src":"62:28:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/TradingFees.sol","file":"./TradingFees.sol","id":496,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2397,"sourceUnit":2796,"src":"92:27:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":497,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2397,"sourceUnit":493,"src":"194:57:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":498,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2397,"sourceUnit":46,"src":"253:76:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":499,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2397,"sourceUnit":159,"src":"331:52:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":500,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":158,"src":"408:7:4"},"id":501,"nodeType":"InheritanceSpecifier","src":"408:7:4"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2396,"linearizedBaseContracts":[2396,158,180],"name":"Exchange","nameLocation":"396:8:4","nodeType":"ContractDefinition","nodes":[{"id":504,"libraryName":{"id":502,"name":"SafeMath","nodeType":"IdentifierPath","referencedDeclaration":492,"src":"429:8:4"},"nodeType":"UsingForDirective","src":"423:27:4","typeName":{"id":503,"name":"uint256","nodeType":"ElementaryTypeName","src":"442:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":507,"mutability":"mutable","name":"priceChecker","nameLocation":"506:12:4","nodeType":"VariableDeclaration","scope":2396,"src":"493:25:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2565","typeString":"contract PriceChecker"},"typeName":{"id":506,"nodeType":"UserDefinedTypeName","pathNode":{"id":505,"name":"PriceChecker","nodeType":"IdentifierPath","referencedDeclaration":2565,"src":"493:12:4"},"referencedDeclaration":2565,"src":"493:12:4","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2565","typeString":"contract PriceChecker"}},"visibility":"internal"},{"constant":false,"id":510,"mutability":"mutable","name":"tradingFees","nameLocation":"537:11:4","nodeType":"VariableDeclaration","scope":2396,"src":"525:23:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2795","typeString":"contract TradingFees"},"typeName":{"id":509,"nodeType":"UserDefinedTypeName","pathNode":{"id":508,"name":"TradingFees","nodeType":"IdentifierPath","referencedDeclaration":2795,"src":"525:11:4"},"referencedDeclaration":2795,"src":"525:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2795","typeString":"contract TradingFees"}},"visibility":"internal"},{"constant":false,"id":513,"mutability":"mutable","name":"wallet","nameLocation":"562:6:4","nodeType":"VariableDeclaration","scope":2396,"src":"555:13:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"},"typeName":{"id":512,"nodeType":"UserDefinedTypeName","pathNode":{"id":511,"name":"Wallet","nodeType":"IdentifierPath","referencedDeclaration":3359,"src":"555:6:4"},"referencedDeclaration":3359,"src":"555:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"visibility":"internal"},{"constant":false,"id":518,"mutability":"mutable","name":"decimals","nameLocation":"585:8:4","nodeType":"VariableDeclaration","scope":2396,"src":"577:27:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":514,"name":"uint256","nodeType":"ElementaryTypeName","src":"577:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"596:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"602:2:4","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"596:8:4","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"visibility":"internal"},{"constant":false,"functionSelector":"7bf1a627","id":524,"mutability":"mutable","name":"ethToken","nameLocation":"626:8:4","nodeType":"VariableDeclaration","scope":2396,"src":"611:36:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":519,"name":"address","nodeType":"ElementaryTypeName","src":"611:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"30","id":522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"645:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"637:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":520,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:4","typeDescriptions":{}}},"id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"637:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"9ead7222","id":528,"mutability":"mutable","name":"tokenList","nameLocation":"719:9:4","nodeType":"VariableDeclaration","scope":2396,"src":"699:29:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$557_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo[]"},"typeName":{"baseType":{"id":526,"nodeType":"UserDefinedTypeName","pathNode":{"id":525,"name":"_tokenInfo","nodeType":"IdentifierPath","referencedDeclaration":557,"src":"699:10:4"},"referencedDeclaration":557,"src":"699:10:4","typeDescriptions":{"typeIdentifier":"t_struct$__tokenInfo_$557_storage_ptr","typeString":"struct Exchange._tokenInfo"}},"id":527,"nodeType":"ArrayTypeName","src":"699:12:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$557_storage_$dyn_storage_ptr","typeString":"struct Exchange._tokenInfo[]"}},"visibility":"public"},{"constant":false,"functionSelector":"e4c3c7cd","id":538,"mutability":"mutable","name":"s_orderBook","nameLocation":"899:11:4","nodeType":"VariableDeclaration","scope":2396,"src":"822:88:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order[])))"},"typeName":{"id":537,"keyType":{"id":529,"name":"address","nodeType":"ElementaryTypeName","src":"830:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"822:69:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order[])))"},"valueType":{"id":536,"keyType":{"id":530,"name":"address","nodeType":"ElementaryTypeName","src":"850:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"841:49:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order[]))"},"valueType":{"id":535,"keyType":{"id":531,"name":"uint256","nodeType":"ElementaryTypeName","src":"869:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"861:28:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order[])"},"valueType":{"baseType":{"id":533,"nodeType":"UserDefinedTypeName","pathNode":{"id":532,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":586,"src":"880:6:4"},"referencedDeclaration":586,"src":"880:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_storage_ptr","typeString":"struct Exchange._Order"}},"id":534,"nodeType":"ArrayTypeName","src":"880:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"}}}}},"visibility":"public"},{"constant":false,"functionSelector":"bd8098ec","id":546,"mutability":"mutable","name":"s_filledOrders","nameLocation":"990:14:4","nodeType":"VariableDeclaration","scope":2396,"src":"919:85:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$612_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._filledOrder[]))"},"typeName":{"id":545,"keyType":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"927:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"919:54:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$612_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._filledOrder[]))"},"valueType":{"id":544,"keyType":{"id":540,"name":"uint256","nodeType":"ElementaryTypeName","src":"946:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"938:34:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$612_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._filledOrder[])"},"valueType":{"baseType":{"id":542,"nodeType":"UserDefinedTypeName","pathNode":{"id":541,"name":"_filledOrder","nodeType":"IdentifierPath","referencedDeclaration":612,"src":"957:12:4"},"referencedDeclaration":612,"src":"957:12:4","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$612_storage_ptr","typeString":"struct Exchange._filledOrder"}},"id":543,"nodeType":"ArrayTypeName","src":"957:14:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__filledOrder_$612_storage_$dyn_storage_ptr","typeString":"struct Exchange._filledOrder[]"}}}},"visibility":"public"},{"constant":false,"functionSelector":"9c07ce26","id":549,"mutability":"mutable","name":"s_orderId","nameLocation":"1028:9:4","nodeType":"VariableDeclaration","scope":2396,"src":"1013:28:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":547,"name":"uint256","nodeType":"ElementaryTypeName","src":"1013:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1040:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"id":552,"mutability":"mutable","name":"s_isManual","nameLocation":"1061:10:4","nodeType":"VariableDeclaration","scope":2396,"src":"1048:30:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":550,"name":"bool","nodeType":"ElementaryTypeName","src":"1048:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":{"hexValue":"74727565","id":551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1074:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"visibility":"private"},{"canonicalName":"Exchange._tokenInfo","id":557,"members":[{"constant":false,"id":554,"mutability":"mutable","name":"add","nameLocation":"1124:3:4","nodeType":"VariableDeclaration","scope":557,"src":"1116:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":553,"name":"address","nodeType":"ElementaryTypeName","src":"1116:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":556,"mutability":"mutable","name":"decimals","nameLocation":"1146:8:4","nodeType":"VariableDeclaration","scope":557,"src":"1138:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":555,"name":"uint256","nodeType":"ElementaryTypeName","src":"1138:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"_tokenInfo","nameLocation":"1094:10:4","nodeType":"StructDefinition","scope":2396,"src":"1087:75:4","visibility":"public"},{"canonicalName":"Exchange._fillOrderValues","id":562,"members":[{"constant":false,"id":559,"mutability":"mutable","name":"rate","nameLocation":"1213:4:4","nodeType":"VariableDeclaration","scope":562,"src":"1205:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":558,"name":"uint256","nodeType":"ElementaryTypeName","src":"1205:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":561,"mutability":"mutable","name":"amount","nameLocation":"1236:6:4","nodeType":"VariableDeclaration","scope":562,"src":"1228:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"1228:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"_fillOrderValues","nameLocation":"1177:16:4","nodeType":"StructDefinition","scope":2396,"src":"1170:80:4","visibility":"public"},{"canonicalName":"Exchange._Order","id":586,"members":[{"constant":false,"id":564,"mutability":"mutable","name":"id","nameLocation":"1412:2:4","nodeType":"VariableDeclaration","scope":586,"src":"1404:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":563,"name":"uint256","nodeType":"ElementaryTypeName","src":"1404:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":567,"mutability":"mutable","name":"side","nameLocation":"1430:4:4","nodeType":"VariableDeclaration","scope":586,"src":"1425:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},"typeName":{"id":566,"nodeType":"UserDefinedTypeName","pathNode":{"id":565,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":615,"src":"1425:4:4"},"referencedDeclaration":615,"src":"1425:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":569,"mutability":"mutable","name":"user","nameLocation":"1453:4:4","nodeType":"VariableDeclaration","scope":586,"src":"1445:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":568,"name":"address","nodeType":"ElementaryTypeName","src":"1445:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":571,"mutability":"mutable","name":"tokenA","nameLocation":"1476:6:4","nodeType":"VariableDeclaration","scope":586,"src":"1468:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":570,"name":"address","nodeType":"ElementaryTypeName","src":"1468:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":573,"mutability":"mutable","name":"amountA","nameLocation":"1501:7:4","nodeType":"VariableDeclaration","scope":586,"src":"1493:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":572,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":575,"mutability":"mutable","name":"tokenB","nameLocation":"1527:6:4","nodeType":"VariableDeclaration","scope":586,"src":"1519:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":574,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":577,"mutability":"mutable","name":"amountB","nameLocation":"1552:7:4","nodeType":"VariableDeclaration","scope":586,"src":"1544:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":576,"name":"uint256","nodeType":"ElementaryTypeName","src":"1544:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"rate","nameLocation":"1578:4:4","nodeType":"VariableDeclaration","scope":586,"src":"1570:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":578,"name":"uint256","nodeType":"ElementaryTypeName","src":"1570:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":581,"mutability":"mutable","name":"originalAmountA","nameLocation":"1645:15:4","nodeType":"VariableDeclaration","scope":586,"src":"1637:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":580,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":583,"mutability":"mutable","name":"originalAmountB","nameLocation":"1679:15:4","nodeType":"VariableDeclaration","scope":586,"src":"1671:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":582,"name":"uint256","nodeType":"ElementaryTypeName","src":"1671:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":585,"mutability":"mutable","name":"waiveFees","nameLocation":"1710:9:4","nodeType":"VariableDeclaration","scope":586,"src":"1705:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":584,"name":"bool","nodeType":"ElementaryTypeName","src":"1705:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"_Order","nameLocation":"1386:6:4","nodeType":"StructDefinition","scope":2396,"src":"1379:348:4","visibility":"public"},{"canonicalName":"Exchange._filledOrder","id":612,"members":[{"constant":false,"id":588,"mutability":"mutable","name":"id","nameLocation":"1857:2:4","nodeType":"VariableDeclaration","scope":612,"src":"1849:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":587,"name":"uint256","nodeType":"ElementaryTypeName","src":"1849:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":591,"mutability":"mutable","name":"side","nameLocation":"1875:4:4","nodeType":"VariableDeclaration","scope":612,"src":"1870:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},"typeName":{"id":590,"nodeType":"UserDefinedTypeName","pathNode":{"id":589,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":615,"src":"1870:4:4"},"referencedDeclaration":615,"src":"1870:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":593,"mutability":"mutable","name":"user","nameLocation":"1898:4:4","nodeType":"VariableDeclaration","scope":612,"src":"1890:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"1890:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":595,"mutability":"mutable","name":"tokenA","nameLocation":"1921:6:4","nodeType":"VariableDeclaration","scope":612,"src":"1913:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":594,"name":"address","nodeType":"ElementaryTypeName","src":"1913:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":597,"mutability":"mutable","name":"tokenB","nameLocation":"1946:6:4","nodeType":"VariableDeclaration","scope":612,"src":"1938:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":596,"name":"address","nodeType":"ElementaryTypeName","src":"1938:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":599,"mutability":"mutable","name":"amountFilled","nameLocation":"1971:12:4","nodeType":"VariableDeclaration","scope":612,"src":"1963:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":598,"name":"uint256","nodeType":"ElementaryTypeName","src":"1963:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":601,"mutability":"mutable","name":"fillRate","nameLocation":"2002:8:4","nodeType":"VariableDeclaration","scope":612,"src":"1994:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":600,"name":"uint256","nodeType":"ElementaryTypeName","src":"1994:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":603,"mutability":"mutable","name":"originalRate","nameLocation":"2029:12:4","nodeType":"VariableDeclaration","scope":612,"src":"2021:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":602,"name":"uint256","nodeType":"ElementaryTypeName","src":"2021:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":605,"mutability":"mutable","name":"originalAmountA","nameLocation":"2060:15:4","nodeType":"VariableDeclaration","scope":612,"src":"2052:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":604,"name":"uint256","nodeType":"ElementaryTypeName","src":"2052:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":607,"mutability":"mutable","name":"originalAmountB","nameLocation":"2094:15:4","nodeType":"VariableDeclaration","scope":612,"src":"2086:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":606,"name":"uint256","nodeType":"ElementaryTypeName","src":"2086:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"feesWaived","nameLocation":"2125:10:4","nodeType":"VariableDeclaration","scope":612,"src":"2120:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":608,"name":"bool","nodeType":"ElementaryTypeName","src":"2120:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":611,"mutability":"mutable","name":"feesPaid","nameLocation":"2154:8:4","nodeType":"VariableDeclaration","scope":612,"src":"2146:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":610,"name":"uint256","nodeType":"ElementaryTypeName","src":"2146:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"_filledOrder","nameLocation":"1825:12:4","nodeType":"StructDefinition","scope":2396,"src":"1818:370:4","visibility":"public"},{"canonicalName":"Exchange.Side","id":615,"members":[{"id":613,"name":"BUY","nameLocation":"2217:3:4","nodeType":"EnumValue","src":"2217:3:4"},{"id":614,"name":"SELL","nameLocation":"2231:4:4","nodeType":"EnumValue","src":"2231:4:4"}],"name":"Side","nameLocation":"2201:4:4","nodeType":"EnumDefinition","src":"2196:46:4"},{"anonymous":false,"documentation":{"id":616,"nodeType":"StructuredDocumentation","src":"2268:56:4","text":"@notice Event when an order is placed on an exchange"},"id":641,"name":"Order","nameLocation":"2336:5:4","nodeType":"EventDefinition","parameters":{"id":640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":618,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"2360:2:4","nodeType":"VariableDeclaration","scope":641,"src":"2352:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":617,"name":"uint256","nodeType":"ElementaryTypeName","src":"2352:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":621,"indexed":false,"mutability":"mutable","name":"side","nameLocation":"2378:4:4","nodeType":"VariableDeclaration","scope":641,"src":"2373:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},"typeName":{"id":620,"nodeType":"UserDefinedTypeName","pathNode":{"id":619,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":615,"src":"2373:4:4"},"referencedDeclaration":615,"src":"2373:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":623,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"2401:4:4","nodeType":"VariableDeclaration","scope":641,"src":"2393:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":622,"name":"address","nodeType":"ElementaryTypeName","src":"2393:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":625,"indexed":false,"mutability":"mutable","name":"tokenA","nameLocation":"2424:6:4","nodeType":"VariableDeclaration","scope":641,"src":"2416:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":624,"name":"address","nodeType":"ElementaryTypeName","src":"2416:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":627,"indexed":false,"mutability":"mutable","name":"amountA","nameLocation":"2449:7:4","nodeType":"VariableDeclaration","scope":641,"src":"2441:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":626,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":629,"indexed":false,"mutability":"mutable","name":"tokenB","nameLocation":"2475:6:4","nodeType":"VariableDeclaration","scope":641,"src":"2467:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":628,"name":"address","nodeType":"ElementaryTypeName","src":"2467:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":631,"indexed":false,"mutability":"mutable","name":"amountB","nameLocation":"2500:7:4","nodeType":"VariableDeclaration","scope":641,"src":"2492:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":630,"name":"uint256","nodeType":"ElementaryTypeName","src":"2492:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":633,"indexed":false,"mutability":"mutable","name":"rate","nameLocation":"2526:4:4","nodeType":"VariableDeclaration","scope":641,"src":"2518:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":632,"name":"uint256","nodeType":"ElementaryTypeName","src":"2518:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":635,"indexed":false,"mutability":"mutable","name":"originalAmountA","nameLocation":"2549:15:4","nodeType":"VariableDeclaration","scope":641,"src":"2541:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":634,"name":"uint256","nodeType":"ElementaryTypeName","src":"2541:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":637,"indexed":false,"mutability":"mutable","name":"originalAmountB","nameLocation":"2583:15:4","nodeType":"VariableDeclaration","scope":641,"src":"2575:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":636,"name":"uint256","nodeType":"ElementaryTypeName","src":"2575:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":639,"indexed":false,"mutability":"mutable","name":"waiveFees","nameLocation":"2614:9:4","nodeType":"VariableDeclaration","scope":641,"src":"2609:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":638,"name":"bool","nodeType":"ElementaryTypeName","src":"2609:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:289:4"},"src":"2330:301:4"},{"anonymous":false,"documentation":{"id":642,"nodeType":"StructuredDocumentation","src":"2639:44:4","text":"@notice Event when an order is cancelled"},"id":667,"name":"Cancel","nameLocation":"2695:6:4","nodeType":"EventDefinition","parameters":{"id":666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":644,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"2720:2:4","nodeType":"VariableDeclaration","scope":667,"src":"2712:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":643,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":647,"indexed":false,"mutability":"mutable","name":"side","nameLocation":"2738:4:4","nodeType":"VariableDeclaration","scope":667,"src":"2733:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},"typeName":{"id":646,"nodeType":"UserDefinedTypeName","pathNode":{"id":645,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":615,"src":"2733:4:4"},"referencedDeclaration":615,"src":"2733:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":649,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"2761:4:4","nodeType":"VariableDeclaration","scope":667,"src":"2753:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"2753:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":651,"indexed":false,"mutability":"mutable","name":"tokenA","nameLocation":"2784:6:4","nodeType":"VariableDeclaration","scope":667,"src":"2776:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":650,"name":"address","nodeType":"ElementaryTypeName","src":"2776:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":653,"indexed":false,"mutability":"mutable","name":"amountA","nameLocation":"2809:7:4","nodeType":"VariableDeclaration","scope":667,"src":"2801:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":652,"name":"uint256","nodeType":"ElementaryTypeName","src":"2801:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":655,"indexed":false,"mutability":"mutable","name":"tokenB","nameLocation":"2835:6:4","nodeType":"VariableDeclaration","scope":667,"src":"2827:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"2827:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":657,"indexed":false,"mutability":"mutable","name":"amountB","nameLocation":"2860:7:4","nodeType":"VariableDeclaration","scope":667,"src":"2852:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":656,"name":"uint256","nodeType":"ElementaryTypeName","src":"2852:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":659,"indexed":false,"mutability":"mutable","name":"rate","nameLocation":"2886:4:4","nodeType":"VariableDeclaration","scope":667,"src":"2878:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":658,"name":"uint256","nodeType":"ElementaryTypeName","src":"2878:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":661,"indexed":false,"mutability":"mutable","name":"originalAmountA","nameLocation":"2909:15:4","nodeType":"VariableDeclaration","scope":667,"src":"2901:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":663,"indexed":false,"mutability":"mutable","name":"originalAmountB","nameLocation":"2943:15:4","nodeType":"VariableDeclaration","scope":667,"src":"2935:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":662,"name":"uint256","nodeType":"ElementaryTypeName","src":"2935:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":665,"indexed":false,"mutability":"mutable","name":"waiveFees","nameLocation":"2974:9:4","nodeType":"VariableDeclaration","scope":667,"src":"2969:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":664,"name":"bool","nodeType":"ElementaryTypeName","src":"2969:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2701:289:4"},"src":"2689:302:4"},{"anonymous":false,"id":680,"name":"fillBuyOrder","nameLocation":"3005:12:4","nodeType":"EventDefinition","parameters":{"id":679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":670,"indexed":false,"mutability":"mutable","name":"remainingOrder","nameLocation":"3035:14:4","nodeType":"VariableDeclaration","scope":680,"src":"3028:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":669,"nodeType":"UserDefinedTypeName","pathNode":{"id":668,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":586,"src":"3028:6:4"},"referencedDeclaration":586,"src":"3028:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},{"constant":false,"id":672,"indexed":false,"mutability":"mutable","name":"amountBought","nameLocation":"3068:12:4","nodeType":"VariableDeclaration","scope":680,"src":"3060:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":671,"name":"uint256","nodeType":"ElementaryTypeName","src":"3060:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":674,"indexed":false,"mutability":"mutable","name":"fillBuyRate","nameLocation":"3099:11:4","nodeType":"VariableDeclaration","scope":680,"src":"3091:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":673,"name":"uint256","nodeType":"ElementaryTypeName","src":"3091:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":676,"indexed":false,"mutability":"mutable","name":"feesWaived","nameLocation":"3126:10:4","nodeType":"VariableDeclaration","scope":680,"src":"3121:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":675,"name":"bool","nodeType":"ElementaryTypeName","src":"3121:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":678,"indexed":false,"mutability":"mutable","name":"feesPaid","nameLocation":"3155:8:4","nodeType":"VariableDeclaration","scope":680,"src":"3147:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":677,"name":"uint256","nodeType":"ElementaryTypeName","src":"3147:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3017:153:4"},"src":"2999:172:4"},{"anonymous":false,"id":693,"name":"fillSellOrder","nameLocation":"3185:13:4","nodeType":"EventDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"indexed":false,"mutability":"mutable","name":"remainingOrder","nameLocation":"3216:14:4","nodeType":"VariableDeclaration","scope":693,"src":"3209:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":682,"nodeType":"UserDefinedTypeName","pathNode":{"id":681,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":586,"src":"3209:6:4"},"referencedDeclaration":586,"src":"3209:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},{"constant":false,"id":685,"indexed":false,"mutability":"mutable","name":"amountSold","nameLocation":"3249:10:4","nodeType":"VariableDeclaration","scope":693,"src":"3241:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":684,"name":"uint256","nodeType":"ElementaryTypeName","src":"3241:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":687,"indexed":false,"mutability":"mutable","name":"fillSellRate","nameLocation":"3278:12:4","nodeType":"VariableDeclaration","scope":693,"src":"3270:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":686,"name":"uint256","nodeType":"ElementaryTypeName","src":"3270:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":689,"indexed":false,"mutability":"mutable","name":"feesWaived","nameLocation":"3306:10:4","nodeType":"VariableDeclaration","scope":693,"src":"3301:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":688,"name":"bool","nodeType":"ElementaryTypeName","src":"3301:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":691,"indexed":false,"mutability":"mutable","name":"feesPaid","nameLocation":"3335:8:4","nodeType":"VariableDeclaration","scope":693,"src":"3327:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":690,"name":"uint256","nodeType":"ElementaryTypeName","src":"3327:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3198:152:4"},"src":"3179:172:4"},{"body":{"id":720,"nodeType":"Block","src":"3426:139:4","statements":[{"expression":{"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":702,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"3437:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":704,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"3453:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":703,"name":"Wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"3446:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Wallet_$3359_$","typeString":"type(contract Wallet)"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3446:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"src":"3437:24:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"id":707,"nodeType":"ExpressionStatement","src":"3437:24:4"},{"expression":{"id":712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":708,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3472:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2795","typeString":"contract TradingFees"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":710,"name":"_fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"3498:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":709,"name":"TradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"3486:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TradingFees_$2795_$","typeString":"type(contract TradingFees)"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3486:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2795","typeString":"contract TradingFees"}},"src":"3472:32:4","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2795","typeString":"contract TradingFees"}},"id":713,"nodeType":"ExpressionStatement","src":"3472:32:4"},{"expression":{"id":718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":714,"name":"priceChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"3515:12:4","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2565","typeString":"contract PriceChecker"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":716,"name":"_priceChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"3543:13:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":715,"name":"PriceChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"3530:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PriceChecker_$2565_$","typeString":"type(contract PriceChecker)"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3530:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2565","typeString":"contract PriceChecker"}},"src":"3515:42:4","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2565","typeString":"contract PriceChecker"}},"id":719,"nodeType":"ExpressionStatement","src":"3515:42:4"}]},"id":721,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":695,"mutability":"mutable","name":"_wallet","nameLocation":"3379:7:4","nodeType":"VariableDeclaration","scope":721,"src":"3371:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"3371:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"_fees","nameLocation":"3396:5:4","nodeType":"VariableDeclaration","scope":721,"src":"3388:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":696,"name":"address","nodeType":"ElementaryTypeName","src":"3388:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":699,"mutability":"mutable","name":"_priceChecker","nameLocation":"3411:13:4","nodeType":"VariableDeclaration","scope":721,"src":"3403:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"3403:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3370:55:4"},"returnParameters":{"id":701,"nodeType":"ParameterList","parameters":[],"src":"3426:0:4"},"scope":2396,"src":"3359:206:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":824,"nodeType":"Block","src":"3840:1109:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"id":752,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4036:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4036:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":754,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"4048:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":750,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"4014:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getlockedFunds","nodeType":"MemberAccess","referencedDeclaration":3203,"src":"4014:21:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4014:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":745,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"3971:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":746,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3980:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3980:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":743,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"3954:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3270,"src":"3954:16:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3954:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":371,"src":"3954:41:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3954:117:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":757,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"4075:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3954:129:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742046756e6473","id":759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4098:20:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092","typeString":"literal_string \"Insufficient Funds\""},"value":"Insufficient Funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092","typeString":"literal_string \"Insufficient Funds\""}],"id":742,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3932:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3932:197:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":761,"nodeType":"ExpressionStatement","src":"3932:197:4"},{"expression":{"arguments":[{"expression":{"id":765,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4167:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4167:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":767,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"4179:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":768,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"4188:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4198:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":762,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"4142:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateLockedFunds","nodeType":"MemberAccess","referencedDeclaration":3254,"src":"4142:24:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4142:61:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":771,"nodeType":"ExpressionStatement","src":"4142:61:4"},{"expression":{"arguments":[{"arguments":[{"id":785,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"4309:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":786,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"4337:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$615_$","typeString":"type(enum Exchange.Side)"}},"id":787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":613,"src":"4337:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},{"expression":{"id":788,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4364:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4364:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":790,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"4393:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":791,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"4419:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":792,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"4446:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":793,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"4472:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":794,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"4499:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":795,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"4523:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":796,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"4550:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":797,"name":"_waiveFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"4577:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":784,"name":"_Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"4284:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__Order_$586_storage_ptr_$","typeString":"type(struct Exchange._Order storage pointer)"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4284:318:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}],"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":772,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"4216:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":780,"indexExpression":{"id":773,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"4228:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4216:20:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":781,"indexExpression":{"id":774,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"4237:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4216:29:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":782,"indexExpression":{"arguments":[{"expression":{"id":777,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"4254:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$615_$","typeString":"type(enum Exchange.Side)"}},"id":778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":613,"src":"4254:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}],"id":776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4246:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":775,"name":"uint256","nodeType":"ElementaryTypeName","src":"4246:7:4","typeDescriptions":{}}},"id":779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4246:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4216:48:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"4216:53:4","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_ptr_$_t_struct$__Order_$586_storage_$returns$__$bound_to$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_ptr_$","typeString":"function (struct Exchange._Order storage ref[] storage pointer,struct Exchange._Order storage ref)"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4216:397:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":800,"nodeType":"ExpressionStatement","src":"4216:397:4"},{"eventCall":{"arguments":[{"id":802,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"4651:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":803,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"4675:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$615_$","typeString":"type(enum Exchange.Side)"}},"id":804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":613,"src":"4675:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},{"expression":{"id":805,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4698:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4698:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":807,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"4723:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":808,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"4745:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":809,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"4768:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":810,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"4790:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":811,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"4813:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":812,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"4833:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":813,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"4856:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":814,"name":"_waiveFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"4879:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":801,"name":"Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"4631:5:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_Side_$615_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,enum Exchange.Side,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4631:269:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":816,"nodeType":"EmitStatement","src":"4626:274:4"},{"expression":{"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":817,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"4913:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4939:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":818,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"4925:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":356,"src":"4925:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4925:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4913:28:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":823,"nodeType":"ExpressionStatement","src":"4913:28:4"}]},"functionSelector":"62c09cfa","id":825,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":736,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"3811:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":737,"kind":"modifierInvocation","modifierName":{"id":735,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":2395,"src":"3800:10:4"},"nodeType":"ModifierInvocation","src":"3800:19:4"},{"arguments":[{"id":739,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"3831:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":740,"kind":"modifierInvocation","modifierName":{"id":738,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":2395,"src":"3820:10:4"},"nodeType":"ModifierInvocation","src":"3820:19:4"}],"name":"createLimitBuyOrder","nameLocation":"3582:19:4","nodeType":"FunctionDefinition","parameters":{"id":734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":723,"mutability":"mutable","name":"_tokenA","nameLocation":"3646:7:4","nodeType":"VariableDeclaration","scope":825,"src":"3638:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":722,"name":"address","nodeType":"ElementaryTypeName","src":"3638:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":725,"mutability":"mutable","name":"_amountA","nameLocation":"3672:8:4","nodeType":"VariableDeclaration","scope":825,"src":"3664:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":724,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":727,"mutability":"mutable","name":"_tokenB","nameLocation":"3699:7:4","nodeType":"VariableDeclaration","scope":825,"src":"3691:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":726,"name":"address","nodeType":"ElementaryTypeName","src":"3691:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":729,"mutability":"mutable","name":"_amountB","nameLocation":"3725:8:4","nodeType":"VariableDeclaration","scope":825,"src":"3717:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":728,"name":"uint256","nodeType":"ElementaryTypeName","src":"3717:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":731,"mutability":"mutable","name":"_rate","nameLocation":"3752:5:4","nodeType":"VariableDeclaration","scope":825,"src":"3744:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":730,"name":"uint256","nodeType":"ElementaryTypeName","src":"3744:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":733,"mutability":"mutable","name":"_waiveFees","nameLocation":"3773:10:4","nodeType":"VariableDeclaration","scope":825,"src":"3768:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":732,"name":"bool","nodeType":"ElementaryTypeName","src":"3768:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3601:189:4"},"returnParameters":{"id":741,"nodeType":"ParameterList","parameters":[],"src":"3840:0:4"},"scope":2396,"src":"3573:1376:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":928,"nodeType":"Block","src":"5199:1178:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"id":856,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5412:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5412:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":858,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"5424:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":854,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"5390:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getlockedFunds","nodeType":"MemberAccess","referencedDeclaration":3203,"src":"5390:21:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5390:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":849,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"5347:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":850,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5356:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5356:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":847,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"5330:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3270,"src":"5330:16:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5330:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":371,"src":"5330:41:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5330:117:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":861,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"5451:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5330:129:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742046756e6473","id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5474:20:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092","typeString":"literal_string \"Insufficient Funds\""},"value":"Insufficient Funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092","typeString":"literal_string \"Insufficient Funds\""}],"id":846,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5308:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5308:197:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":865,"nodeType":"ExpressionStatement","src":"5308:197:4"},{"expression":{"arguments":[{"expression":{"id":869,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5592:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5592:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":871,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"5604:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":872,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"5613:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5623:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":866,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"5567:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateLockedFunds","nodeType":"MemberAccess","referencedDeclaration":3254,"src":"5567:24:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5567:61:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":875,"nodeType":"ExpressionStatement","src":"5567:61:4"},{"expression":{"arguments":[{"arguments":[{"id":889,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"5735:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":890,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"5763:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$615_$","typeString":"type(enum Exchange.Side)"}},"id":891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":614,"src":"5763:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},{"expression":{"id":892,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5791:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5791:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":894,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"5820:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":895,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"5846:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":896,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"5873:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":897,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"5899:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":898,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"5926:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":899,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"5950:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":900,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"5977:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":901,"name":"_waiveFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"6004:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":888,"name":"_Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"5710:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__Order_$586_storage_ptr_$","typeString":"type(struct Exchange._Order storage pointer)"}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5710:319:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}],"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":876,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"5641:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":884,"indexExpression":{"id":877,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"5653:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5641:20:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":885,"indexExpression":{"id":878,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"5662:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5641:29:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":886,"indexExpression":{"arguments":[{"expression":{"id":881,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"5679:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$615_$","typeString":"type(enum Exchange.Side)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":614,"src":"5679:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}],"id":880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5671:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":879,"name":"uint256","nodeType":"ElementaryTypeName","src":"5671:7:4","typeDescriptions":{}}},"id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5671:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5641:49:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"5641:54:4","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_ptr_$_t_struct$__Order_$586_storage_$returns$__$bound_to$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_ptr_$","typeString":"function (struct Exchange._Order storage ref[] storage pointer,struct Exchange._Order storage ref)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5641:399:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":904,"nodeType":"ExpressionStatement","src":"5641:399:4"},{"eventCall":{"arguments":[{"id":906,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"6078:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":907,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"6102:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$615_$","typeString":"type(enum Exchange.Side)"}},"id":908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":614,"src":"6102:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},{"expression":{"id":909,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6126:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6126:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":911,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"6151:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":912,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"6173:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":913,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"6196:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":914,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"6218:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":915,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"6241:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":916,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"6261:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":917,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"6284:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":918,"name":"_waiveFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"6307:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":905,"name":"Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"6058:5:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_Side_$615_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,enum Exchange.Side,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)"}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6058:270:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":920,"nodeType":"EmitStatement","src":"6053:275:4"},{"expression":{"id":926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":921,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"6341:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6367:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":922,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"6353:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":356,"src":"6353:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6353:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:28:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":927,"nodeType":"ExpressionStatement","src":"6341:28:4"}]},"functionSelector":"6f4e410b","id":929,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":840,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"5170:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":841,"kind":"modifierInvocation","modifierName":{"id":839,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":2395,"src":"5159:10:4"},"nodeType":"ModifierInvocation","src":"5159:19:4"},{"arguments":[{"id":843,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"5190:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":844,"kind":"modifierInvocation","modifierName":{"id":842,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":2395,"src":"5179:10:4"},"nodeType":"ModifierInvocation","src":"5179:19:4"}],"name":"createLimitSellOrder","nameLocation":"4966:20:4","nodeType":"FunctionDefinition","parameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":827,"mutability":"mutable","name":"_tokenA","nameLocation":"5005:7:4","nodeType":"VariableDeclaration","scope":929,"src":"4997:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":826,"name":"address","nodeType":"ElementaryTypeName","src":"4997:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":829,"mutability":"mutable","name":"_amountA","nameLocation":"5031:8:4","nodeType":"VariableDeclaration","scope":929,"src":"5023:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":828,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":831,"mutability":"mutable","name":"_tokenB","nameLocation":"5058:7:4","nodeType":"VariableDeclaration","scope":929,"src":"5050:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":830,"name":"address","nodeType":"ElementaryTypeName","src":"5050:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":833,"mutability":"mutable","name":"_amountB","nameLocation":"5084:8:4","nodeType":"VariableDeclaration","scope":929,"src":"5076:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":832,"name":"uint256","nodeType":"ElementaryTypeName","src":"5076:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":835,"mutability":"mutable","name":"_rate","nameLocation":"5111:5:4","nodeType":"VariableDeclaration","scope":929,"src":"5103:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":834,"name":"uint256","nodeType":"ElementaryTypeName","src":"5103:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":837,"mutability":"mutable","name":"_waiveFees","nameLocation":"5132:10:4","nodeType":"VariableDeclaration","scope":929,"src":"5127:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":836,"name":"bool","nodeType":"ElementaryTypeName","src":"5127:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4986:163:4"},"returnParameters":{"id":845,"nodeType":"ParameterList","parameters":[],"src":"5199:0:4"},"scope":2396,"src":"4957:1420:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1136,"nodeType":"Block","src":"6594:1641:4","statements":[{"assignments":[954],"declarations":[{"constant":false,"id":954,"mutability":"mutable","name":"_side","nameLocation":"6613:5:4","nodeType":"VariableDeclaration","scope":1136,"src":"6605:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":953,"name":"uint256","nodeType":"ElementaryTypeName","src":"6605:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":959,"initialValue":{"arguments":[{"id":957,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"6629:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}],"id":956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6621:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":955,"name":"uint256","nodeType":"ElementaryTypeName","src":"6621:7:4","typeDescriptions":{}}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6621:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6605:29:4"},{"assignments":[964],"declarations":[{"constant":false,"id":964,"mutability":"mutable","name":"_order","nameLocation":"6662:6:4","nodeType":"VariableDeclaration","scope":1136,"src":"6645:23:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"},"typeName":{"baseType":{"id":962,"nodeType":"UserDefinedTypeName","pathNode":{"id":961,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":586,"src":"6645:6:4"},"referencedDeclaration":586,"src":"6645:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_storage_ptr","typeString":"struct Exchange._Order"}},"id":963,"nodeType":"ArrayTypeName","src":"6645:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"}},"visibility":"internal"}],"id":972,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":965,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"6671:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":967,"indexExpression":{"id":966,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"6683:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6671:20:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":969,"indexExpression":{"id":968,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"6692:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6671:29:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":971,"indexExpression":{"id":970,"name":"_side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"6701:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6671:36:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6645:62:4"},{"assignments":[974],"declarations":[{"constant":false,"id":974,"mutability":"mutable","name":"size","nameLocation":"6726:4:4","nodeType":"VariableDeclaration","scope":1136,"src":"6718:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":973,"name":"uint256","nodeType":"ElementaryTypeName","src":"6718:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":977,"initialValue":{"expression":{"id":975,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"6733:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6733:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6718:28:4"},{"assignments":[980],"declarations":[{"constant":false,"id":980,"mutability":"mutable","name":"order","nameLocation":"6771:5:4","nodeType":"VariableDeclaration","scope":1136,"src":"6757:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":979,"nodeType":"UserDefinedTypeName","pathNode":{"id":978,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":586,"src":"6757:6:4"},"referencedDeclaration":586,"src":"6757:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"}],"id":981,"nodeType":"VariableDeclarationStatement","src":"6757:19:4"},{"assignments":[983],"declarations":[{"constant":false,"id":983,"mutability":"mutable","name":"index","nameLocation":"6797:5:4","nodeType":"VariableDeclaration","scope":1136,"src":"6789:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":982,"name":"uint256","nodeType":"ElementaryTypeName","src":"6789:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":984,"nodeType":"VariableDeclarationStatement","src":"6789:13:4"},{"body":{"id":1014,"nodeType":"Block","src":"6848:155:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":995,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"6867:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":997,"indexExpression":{"id":996,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"6874:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6867:9:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_storage","typeString":"struct Exchange._Order storage ref"}},"id":998,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":564,"src":"6867:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":999,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"6883:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6867:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1013,"nodeType":"IfStatement","src":"6863:129:4","trueBody":{"id":1012,"nodeType":"Block","src":"6888:104:4","statements":[{"expression":{"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1001,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"6907:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1002,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"6915:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6907:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1004,"nodeType":"ExpressionStatement","src":"6907:9:4"},{"expression":{"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1005,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"6935:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1006,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"6943:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":1008,"indexExpression":{"id":1007,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"6950:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6943:9:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_storage","typeString":"struct Exchange._Order storage ref"}},"src":"6935:17:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1010,"nodeType":"ExpressionStatement","src":"6935:17:4"},{"id":1011,"nodeType":"Break","src":"6971:5:4"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":989,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"6833:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":990,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"6837:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6833:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1015,"initializationExpression":{"assignments":[986],"declarations":[{"constant":false,"id":986,"mutability":"mutable","name":"i","nameLocation":"6826:1:4","nodeType":"VariableDeclaration","scope":1015,"src":"6818:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":985,"name":"uint256","nodeType":"ElementaryTypeName","src":"6818:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":988,"initialValue":{"hexValue":"30","id":987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6830:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6818:13:4"},"loopExpression":{"expression":{"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6843:3:4","subExpression":{"id":992,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"6843:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":994,"nodeType":"ExpressionStatement","src":"6843:3:4"},"nodeType":"ForStatement","src":"6813:190:4"},{"condition":{"id":1016,"name":"s_isManual","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"7060:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1063,"nodeType":"IfStatement","src":"7056:604:4","trueBody":{"id":1062,"nodeType":"Block","src":"7072:588:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1018,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7095:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7095:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1020,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"7109:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1021,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":569,"src":"7109:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7095:24:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74204f776e6572","id":1023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7121:11:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4","typeString":"literal_string \"Not Owner\""},"value":"Not Owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4","typeString":"literal_string \"Not Owner\""}],"id":1017,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7087:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7087:46:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1025,"nodeType":"ExpressionStatement","src":"7087:46:4"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1026,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"7182:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1027,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"7190:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$615_$","typeString":"type(enum Exchange.Side)"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":613,"src":"7190:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},"src":"7182:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1043,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"7420:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1044,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"7428:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$615_$","typeString":"type(enum Exchange.Side)"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":614,"src":"7428:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},"src":"7420:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1060,"nodeType":"IfStatement","src":"7416:233:4","trueBody":{"id":1059,"nodeType":"Block","src":"7439:210:4","statements":[{"expression":{"arguments":[{"expression":{"id":1050,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7505:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7505:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1052,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"7538:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1053,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":571,"src":"7538:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1054,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"7573:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1055,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":573,"src":"7573:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7609:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1047,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"7458:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateLockedFunds","nodeType":"MemberAccess","referencedDeclaration":3254,"src":"7458:24:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7458:175:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1058,"nodeType":"ExpressionStatement","src":"7458:175:4"}]}},"id":1061,"nodeType":"IfStatement","src":"7178:471:4","trueBody":{"id":1042,"nodeType":"Block","src":"7200:210:4","statements":[{"expression":{"arguments":[{"expression":{"id":1033,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7266:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7266:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1035,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"7299:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1036,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":575,"src":"7299:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1037,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"7334:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1038,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountB","nodeType":"MemberAccess","referencedDeclaration":577,"src":"7334:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7370:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1030,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"7219:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateLockedFunds","nodeType":"MemberAccess","referencedDeclaration":3254,"src":"7219:24:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7219:175:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1041,"nodeType":"ExpressionStatement","src":"7219:175:4"}]}}]}},{"body":{"id":1087,"nodeType":"Block","src":"7715:55:4","statements":[{"expression":{"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1076,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"7730:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":1078,"indexExpression":{"id":1077,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"7737:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7730:9:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_storage","typeString":"struct Exchange._Order storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1079,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"7742:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":1084,"indexExpression":{"arguments":[{"hexValue":"31","id":1082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7755:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":1080,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"7749:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":356,"src":"7749:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7749:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7742:16:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_storage","typeString":"struct Exchange._Order storage ref"}},"src":"7730:28:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_storage","typeString":"struct Exchange._Order storage ref"}},"id":1086,"nodeType":"ExpressionStatement","src":"7730:28:4"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1068,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"7696:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1069,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"7700:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7707:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7700:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7696:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1088,"initializationExpression":{"assignments":[1065],"declarations":[{"constant":false,"id":1065,"mutability":"mutable","name":"j","nameLocation":"7685:1:4","nodeType":"VariableDeclaration","scope":1088,"src":"7677:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1064,"name":"uint256","nodeType":"ElementaryTypeName","src":"7677:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1067,"initialValue":{"id":1066,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"7689:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7677:17:4"},"loopExpression":{"expression":{"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7710:3:4","subExpression":{"id":1073,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"7710:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1075,"nodeType":"ExpressionStatement","src":"7710:3:4"},"nodeType":"ForStatement","src":"7672:98:4"},{"expression":{"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"7780:26:4","subExpression":{"baseExpression":{"id":1089,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"7787:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":1094,"indexExpression":{"arguments":[{"hexValue":"31","id":1092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7803:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":1090,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"7794:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":371,"src":"7794:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7794:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7787:19:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_storage","typeString":"struct Exchange._Order storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1096,"nodeType":"ExpressionStatement","src":"7780:26:4"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1097,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"7817:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"7817:10:4","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_ptr_$","typeString":"function (struct Exchange._Order storage ref[] storage pointer)"}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7817:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1101,"nodeType":"ExpressionStatement","src":"7817:12:4"},{"expression":{"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1102,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"7842:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":1106,"indexExpression":{"id":1103,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"7854:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7842:20:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":1107,"indexExpression":{"id":1104,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"7863:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7842:29:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":1108,"indexExpression":{"id":1105,"name":"_side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"7872:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7842:36:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1109,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"7881:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"src":"7842:45:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":1111,"nodeType":"ExpressionStatement","src":"7842:45:4"},{"eventCall":{"arguments":[{"id":1113,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"7926:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1114,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"7944:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1115,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"side","nodeType":"MemberAccess","referencedDeclaration":567,"src":"7944:10:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},{"expression":{"id":1116,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"7969:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1117,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":569,"src":"7969:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1118,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"7994:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":571,"src":"7994:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1120,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"8021:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1121,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":573,"src":"8021:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1122,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"8049:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1123,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":575,"src":"8049:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1124,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"8076:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountB","nodeType":"MemberAccess","referencedDeclaration":577,"src":"8076:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1126,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"8104:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1127,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":579,"src":"8104:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1128,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"8129:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1129,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"originalAmountA","nodeType":"MemberAccess","referencedDeclaration":581,"src":"8129:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1130,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"8165:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1131,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"originalAmountB","nodeType":"MemberAccess","referencedDeclaration":583,"src":"8165:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1132,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"8201:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1133,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"waiveFees","nodeType":"MemberAccess","referencedDeclaration":585,"src":"8201:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1112,"name":"Cancel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"7905:6:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_Side_$615_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,enum Exchange.Side,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7905:322:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1135,"nodeType":"EmitStatement","src":"7900:327:4"}]},"functionSelector":"f90ef4f2","id":1137,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":941,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"6525:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":942,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"6530:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},{"id":943,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"6536:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":944,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"6545:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":945,"kind":"modifierInvocation","modifierName":{"id":940,"name":"validOrder","nodeType":"IdentifierPath","referencedDeclaration":2382,"src":"6514:10:4"},"nodeType":"ModifierInvocation","src":"6514:39:4"},{"arguments":[{"id":947,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"6565:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":948,"kind":"modifierInvocation","modifierName":{"id":946,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":2395,"src":"6554:10:4"},"nodeType":"ModifierInvocation","src":"6554:19:4"},{"arguments":[{"id":950,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"6585:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":951,"kind":"modifierInvocation","modifierName":{"id":949,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":2395,"src":"6574:10:4"},"nodeType":"ModifierInvocation","src":"6574:19:4"}],"name":"cancelOrder","nameLocation":"6394:11:4","nodeType":"FunctionDefinition","parameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":932,"mutability":"mutable","name":"side","nameLocation":"6421:4:4","nodeType":"VariableDeclaration","scope":1137,"src":"6416:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},"typeName":{"id":931,"nodeType":"UserDefinedTypeName","pathNode":{"id":930,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":615,"src":"6416:4:4"},"referencedDeclaration":615,"src":"6416:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":934,"mutability":"mutable","name":"_id","nameLocation":"6444:3:4","nodeType":"VariableDeclaration","scope":1137,"src":"6436:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":933,"name":"uint256","nodeType":"ElementaryTypeName","src":"6436:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":936,"mutability":"mutable","name":"_tokenA","nameLocation":"6466:7:4","nodeType":"VariableDeclaration","scope":1137,"src":"6458:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":935,"name":"address","nodeType":"ElementaryTypeName","src":"6458:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":938,"mutability":"mutable","name":"_tokenB","nameLocation":"6492:7:4","nodeType":"VariableDeclaration","scope":1137,"src":"6484:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"6484:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6405:101:4"},"returnParameters":{"id":952,"nodeType":"ParameterList","parameters":[],"src":"6594:0:4"},"scope":2396,"src":"6385:1850:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1349,"nodeType":"Block","src":"8488:1441:4","statements":[{"assignments":[1165],"declarations":[{"constant":false,"id":1165,"mutability":"mutable","name":"_side","nameLocation":"8507:5:4","nodeType":"VariableDeclaration","scope":1349,"src":"8499:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1164,"name":"uint256","nodeType":"ElementaryTypeName","src":"8499:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1170,"initialValue":{"arguments":[{"id":1168,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"8523:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}],"id":1167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8515:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"8515:7:4","typeDescriptions":{}}},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8515:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8499:29:4"},{"assignments":[1173,1175],"declarations":[{"constant":false,"id":1173,"mutability":"mutable","name":"order","nameLocation":"8554:5:4","nodeType":"VariableDeclaration","scope":1349,"src":"8540:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":1172,"nodeType":"UserDefinedTypeName","pathNode":{"id":1171,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":586,"src":"8540:6:4"},"referencedDeclaration":586,"src":"8540:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},{"constant":false,"id":1175,"mutability":"mutable","name":"index","nameLocation":"8569:5:4","nodeType":"VariableDeclaration","scope":1349,"src":"8561:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1174,"name":"uint256","nodeType":"ElementaryTypeName","src":"8561:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1182,"initialValue":{"arguments":[{"id":1177,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"8610:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1178,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"8632:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1179,"name":"_side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"8654:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1180,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"8674:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1176,"name":"getOrderFromArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"8578:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_struct$__Order_$586_memory_ptr_$_t_uint256_$","typeString":"function (address,address,uint256,uint256) view returns (struct Exchange._Order memory,uint256)"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8578:110:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$__Order_$586_memory_ptr_$_t_uint256_$","typeString":"tuple(struct Exchange._Order memory,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8539:149:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1184,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"8709:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":573,"src":"8709:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1186,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"8726:1:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$562_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1187,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":561,"src":"8726:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8709:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964204f7264657220416d6f756e7420746f2066696c6c","id":1189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8736:30:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_e2a2339c54d4fc0d37a5533ccef4bf9959c39857db4a97b2323d6fa200439a73","typeString":"literal_string \"Invalid Order Amount to fill\""},"value":"Invalid Order Amount to fill"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e2a2339c54d4fc0d37a5533ccef4bf9959c39857db4a97b2323d6fa200439a73","typeString":"literal_string \"Invalid Order Amount to fill\""}],"id":1183,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8701:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8701:66:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1191,"nodeType":"ExpressionStatement","src":"8701:66:4"},{"expression":{"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1192,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"8780:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1194,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":573,"src":"8780:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1198,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"8814:1:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$562_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1199,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":561,"src":"8814:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1195,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"8796:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1196,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":573,"src":"8796:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":371,"src":"8796:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8796:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8780:43:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1202,"nodeType":"ExpressionStatement","src":"8780:43:4"},{"expression":{"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1203,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"8834:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1205,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amountB","nodeType":"MemberAccess","referencedDeclaration":577,"src":"8834:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":1216,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"8911:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1212,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"8897:1:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$562_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":561,"src":"8897:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1209,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"8882:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1210,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":579,"src":"8882:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"8882:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8882:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":401,"src":"8882:28:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8882:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1206,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"8850:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountB","nodeType":"MemberAccess","referencedDeclaration":577,"src":"8850:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":371,"src":"8850:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8850:81:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8834:97:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1220,"nodeType":"ExpressionStatement","src":"8834:97:4"},{"expression":{"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1221,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"8942:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":1226,"indexExpression":{"id":1222,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"8954:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8942:20:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":1227,"indexExpression":{"id":1223,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"8963:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8942:29:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":1228,"indexExpression":{"id":1224,"name":"_side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"8972:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8942:36:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":1229,"indexExpression":{"id":1225,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"8979:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8942:43:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_storage","typeString":"struct Exchange._Order storage ref"}},"id":1230,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":573,"src":"8942:51:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1231,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"8996:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1232,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":573,"src":"8996:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8942:67:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1234,"nodeType":"ExpressionStatement","src":"8942:67:4"},{"expression":{"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1235,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"9020:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":1240,"indexExpression":{"id":1236,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"9032:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9020:20:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":1241,"indexExpression":{"id":1237,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"9041:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9020:29:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":1242,"indexExpression":{"id":1238,"name":"_side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"9050:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9020:36:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":1243,"indexExpression":{"id":1239,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"9057:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9020:43:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_storage","typeString":"struct Exchange._Order storage ref"}},"id":1244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amountB","nodeType":"MemberAccess","referencedDeclaration":577,"src":"9020:51:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1245,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"9074:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1246,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountB","nodeType":"MemberAccess","referencedDeclaration":577,"src":"9074:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9020:67:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1248,"nodeType":"ExpressionStatement","src":"9020:67:4"},{"assignments":[1250],"declarations":[{"constant":false,"id":1250,"mutability":"mutable","name":"fees","nameLocation":"9108:4:4","nodeType":"VariableDeclaration","scope":1349,"src":"9100:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"9100:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1260,"initialValue":{"arguments":[{"expression":{"id":1253,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"9155:1:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$562_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1254,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":561,"src":"9155:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1255,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"9178:1:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$562_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1256,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":559,"src":"9178:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1257,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"9199:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1258,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":575,"src":"9199:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1251,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"9115:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2795","typeString":"contract TradingFees"}},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"calculateFees","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"9115:25:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,uint256,address) view external returns (uint256)"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9115:107:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9100:122:4"},{"assignments":[1262],"declarations":[{"constant":false,"id":1262,"mutability":"mutable","name":"feesWaived","nameLocation":"9239:10:4","nodeType":"VariableDeclaration","scope":1349,"src":"9234:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1261,"name":"bool","nodeType":"ElementaryTypeName","src":"9234:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1272,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1263,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"9252:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1264,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"waiveFees","nodeType":"MemberAccess","referencedDeclaration":585,"src":"9252:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":1267,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"9316:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1268,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"9322:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1269,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":569,"src":"9322:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1265,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"9284:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2795","typeString":"contract TradingFees"}},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"checkSufficientaDAI","nodeType":"MemberAccess","referencedDeclaration":2766,"src":"9284:31:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,address) view external returns (bool)"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9284:49:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9252:81:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9234:99:4"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1273,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"9350:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1274,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"9358:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$615_$","typeString":"type(enum Exchange.Side)"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":613,"src":"9358:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},"src":"9350:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1298,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"9536:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1299,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"9544:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$615_$","typeString":"type(enum Exchange.Side)"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":614,"src":"9544:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},"src":"9536:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1323,"nodeType":"IfStatement","src":"9532:183:4","trueBody":{"id":1322,"nodeType":"Block","src":"9555:160:4","statements":[{"expression":{"arguments":[{"id":1303,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"9585:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},{"expression":{"id":1304,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"9592:1:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$562_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":561,"src":"9592:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1306,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"9602:1:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$562_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":559,"src":"9602:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1308,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"9610:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1309,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"9622:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1302,"name":"fillSellOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"9570:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$__Order_$586_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (struct Exchange._Order memory,uint256,uint256,bool,uint256)"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9570:57:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1311,"nodeType":"ExpressionStatement","src":"9570:57:4"},{"eventCall":{"arguments":[{"id":1313,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"9661:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},{"expression":{"id":1314,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"9668:1:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$562_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1315,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":561,"src":"9668:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1316,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"9678:1:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$562_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1317,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":559,"src":"9678:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1318,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"9686:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1319,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"9698:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1312,"name":"fillSellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"9647:13:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_struct$__Order_$586_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (struct Exchange._Order memory,uint256,uint256,bool,uint256)"}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9647:56:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1321,"nodeType":"EmitStatement","src":"9642:61:4"}]}},"id":1324,"nodeType":"IfStatement","src":"9346:369:4","trueBody":{"id":1297,"nodeType":"Block","src":"9368:158:4","statements":[{"expression":{"arguments":[{"id":1278,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"9397:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},{"expression":{"id":1279,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"9404:1:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$562_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1280,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":561,"src":"9404:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1281,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"9414:1:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$562_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1282,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":559,"src":"9414:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1283,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"9422:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1284,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"9434:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1277,"name":"fillBuyOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"9383:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$__Order_$586_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (struct Exchange._Order memory,uint256,uint256,bool,uint256)"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9383:56:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1286,"nodeType":"ExpressionStatement","src":"9383:56:4"},{"eventCall":{"arguments":[{"id":1288,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"9472:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},{"expression":{"id":1289,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"9479:1:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$562_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1290,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":561,"src":"9479:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1291,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"9489:1:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$562_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":559,"src":"9489:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1293,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"9497:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1294,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"9509:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1287,"name":"fillBuyOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"9459:12:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_struct$__Order_$586_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (struct Exchange._Order memory,uint256,uint256,bool,uint256)"}},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9459:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1296,"nodeType":"EmitStatement","src":"9454:60:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1325,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"9731:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1326,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":573,"src":"9731:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9748:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9731:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1348,"nodeType":"IfStatement","src":"9727:195:4","trueBody":{"id":1347,"nodeType":"Block","src":"9751:171:4","statements":[{"expression":{"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1329,"name":"s_isManual","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"9766:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9779:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"9766:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1332,"nodeType":"ExpressionStatement","src":"9766:18:4"},{"expression":{"arguments":[{"id":1334,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"9811:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},{"expression":{"id":1335,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"9817:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":564,"src":"9817:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1337,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"9827:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":571,"src":"9827:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1339,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"9841:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":575,"src":"9841:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1333,"name":"cancelOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"9799:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_Side_$615_$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (enum Exchange.Side,uint256,address,address)"}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9799:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1342,"nodeType":"ExpressionStatement","src":"9799:55:4"},{"expression":{"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1343,"name":"s_isManual","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"9893:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9906:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9893:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1346,"nodeType":"ExpressionStatement","src":"9893:17:4"}]}}]},"id":1350,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1152,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"8419:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1153,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"8424:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},{"id":1154,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"8430:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1155,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"8439:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1156,"kind":"modifierInvocation","modifierName":{"id":1151,"name":"validOrder","nodeType":"IdentifierPath","referencedDeclaration":2382,"src":"8408:10:4"},"nodeType":"ModifierInvocation","src":"8408:39:4"},{"arguments":[{"id":1158,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"8459:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1159,"kind":"modifierInvocation","modifierName":{"id":1157,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":2395,"src":"8448:10:4"},"nodeType":"ModifierInvocation","src":"8448:19:4"},{"arguments":[{"id":1161,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"8479:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1162,"kind":"modifierInvocation","modifierName":{"id":1160,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":2395,"src":"8468:10:4"},"nodeType":"ModifierInvocation","src":"8468:19:4"}],"name":"fillOrder","nameLocation":"8252:9:4","nodeType":"FunctionDefinition","parameters":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1140,"mutability":"mutable","name":"side","nameLocation":"8277:4:4","nodeType":"VariableDeclaration","scope":1350,"src":"8272:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},"typeName":{"id":1139,"nodeType":"UserDefinedTypeName","pathNode":{"id":1138,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":615,"src":"8272:4:4"},"referencedDeclaration":615,"src":"8272:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":1142,"mutability":"mutable","name":"_id","nameLocation":"8300:3:4","nodeType":"VariableDeclaration","scope":1350,"src":"8292:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1141,"name":"uint256","nodeType":"ElementaryTypeName","src":"8292:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1144,"mutability":"mutable","name":"_tokenA","nameLocation":"8322:7:4","nodeType":"VariableDeclaration","scope":1350,"src":"8314:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1143,"name":"address","nodeType":"ElementaryTypeName","src":"8314:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1146,"mutability":"mutable","name":"_tokenB","nameLocation":"8348:7:4","nodeType":"VariableDeclaration","scope":1350,"src":"8340:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1145,"name":"address","nodeType":"ElementaryTypeName","src":"8340:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"a","nameLocation":"8390:1:4","nodeType":"VariableDeclaration","scope":1350,"src":"8366:25:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$562_memory_ptr","typeString":"struct Exchange._fillOrderValues"},"typeName":{"id":1148,"nodeType":"UserDefinedTypeName","pathNode":{"id":1147,"name":"_fillOrderValues","nodeType":"IdentifierPath","referencedDeclaration":562,"src":"8366:16:4"},"referencedDeclaration":562,"src":"8366:16:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$562_storage_ptr","typeString":"struct Exchange._fillOrderValues"}},"visibility":"internal"}],"src":"8261:137:4"},"returnParameters":{"id":1163,"nodeType":"ParameterList","parameters":[],"src":"8488:0:4"},"scope":2396,"src":"8243:1686:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1489,"nodeType":"Block","src":"10105:1757:4","statements":[{"condition":{"id":1364,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"10120:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1419,"nodeType":"Block","src":"10534:398:4","statements":[{"assignments":[1397],"declarations":[{"constant":false,"id":1397,"mutability":"mutable","name":"amountTokenToDeduct","nameLocation":"10557:19:4","nodeType":"VariableDeclaration","scope":1419,"src":"10549:27:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1396,"name":"uint256","nodeType":"ElementaryTypeName","src":"10549:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1404,"initialValue":{"arguments":[{"expression":{"id":1400,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"10630:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1401,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":571,"src":"10630:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1402,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"10661:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1398,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"10579:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2795","typeString":"contract TradingFees"}},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"amountTokensToDeduct","nodeType":"MemberAccess","referencedDeclaration":2738,"src":"10579:32:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10579:101:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10549:131:4"},{"expression":{"arguments":[{"expression":{"id":1408,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"10790:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1409,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":571,"src":"10790:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1410,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"10821:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1411,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":569,"src":"10821:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1414,"name":"amountTokenToDeduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"10862:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1412,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"10850:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":371,"src":"10850:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10850:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10901:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1405,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"10751:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateBalance","nodeType":"MemberAccess","referencedDeclaration":3321,"src":"10751:20:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10751:169:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1418,"nodeType":"ExpressionStatement","src":"10751:169:4"}]},"id":1420,"nodeType":"IfStatement","src":"10116:816:4","trueBody":{"id":1395,"nodeType":"Block","src":"10132:396:4","statements":[{"assignments":[1366],"declarations":[{"constant":false,"id":1366,"mutability":"mutable","name":"aDAIToDeduct","nameLocation":"10182:12:4","nodeType":"VariableDeclaration","scope":1395,"src":"10174:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1365,"name":"uint256","nodeType":"ElementaryTypeName","src":"10174:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1371,"initialValue":{"arguments":[{"id":1369,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"10228:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1367,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"10197:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2795","typeString":"contract TradingFees"}},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"amountaDAIToDeduct","nodeType":"MemberAccess","referencedDeclaration":2701,"src":"10197:30:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10197:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10174:59:4"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1375,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"10287:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2795","typeString":"contract TradingFees"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"aDAI","nodeType":"MemberAccess","referencedDeclaration":2594,"src":"10287:16:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10287:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1378,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"10324:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1379,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":569,"src":"10324:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1380,"name":"aDAIToDeduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"10353:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10384:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1372,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"10248:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateBalance","nodeType":"MemberAccess","referencedDeclaration":3321,"src":"10248:20:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10248:156:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1383,"nodeType":"ExpressionStatement","src":"10248:156:4"},{"expression":{"arguments":[{"expression":{"id":1387,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"10476:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":571,"src":"10476:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1389,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"10490:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1390,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":569,"src":"10490:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1391,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"10502:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10511:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1384,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"10455:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateBalance","nodeType":"MemberAccess","referencedDeclaration":3321,"src":"10455:20:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10455:61:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1394,"nodeType":"ExpressionStatement","src":"10455:61:4"}]}},{"expression":{"arguments":[{"expression":{"id":1424,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"11025:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1425,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":569,"src":"11025:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1426,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"11050:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1427,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":575,"src":"11050:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1435,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"11107:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":1431,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"11093:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1428,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"11078:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1429,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":579,"src":"11078:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"11078:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11078:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1433,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11077:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":401,"src":"11077:29:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11077:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11131:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1421,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"10986:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateLockedFunds","nodeType":"MemberAccess","referencedDeclaration":3254,"src":"10986:24:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10986:161:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1439,"nodeType":"ExpressionStatement","src":"10986:161:4"},{"expression":{"arguments":[{"expression":{"id":1443,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"11271:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1444,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":575,"src":"11271:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1445,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"11298:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1446,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":569,"src":"11298:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1453,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"11348:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":1449,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"11334:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1447,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"11324:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"11324:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11324:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1451,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11323:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":401,"src":"11323:24:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11323:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11372:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1440,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"11236:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateBalance","nodeType":"MemberAccess","referencedDeclaration":3321,"src":"11236:20:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11236:152:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1457,"nodeType":"ExpressionStatement","src":"11236:152:4"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":1466,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"11489:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1467,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":564,"src":"11489:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1468,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"11516:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1469,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"side","nodeType":"MemberAccess","referencedDeclaration":567,"src":"11516:10:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},{"expression":{"id":1470,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"11545:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1471,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":569,"src":"11545:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1472,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"11574:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1473,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":571,"src":"11574:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1474,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"11605:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1475,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":575,"src":"11605:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1476,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"11636:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1477,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"11662:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1478,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"11686:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1479,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":579,"src":"11686:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1480,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"11715:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1481,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"originalAmountA","nodeType":"MemberAccess","referencedDeclaration":581,"src":"11715:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1482,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"11755:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"originalAmountB","nodeType":"MemberAccess","referencedDeclaration":583,"src":"11755:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1484,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"11795:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1485,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"11824:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1465,"name":"_filledOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"11458:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__filledOrder_$612_storage_ptr_$","typeString":"type(struct Exchange._filledOrder storage pointer)"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11458:385:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$612_memory_ptr","typeString":"struct Exchange._filledOrder memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__filledOrder_$612_memory_ptr","typeString":"struct Exchange._filledOrder memory"}],"expression":{"baseExpression":{"baseExpression":{"id":1458,"name":"s_filledOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"11409:14:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$612_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._filledOrder storage ref[] storage ref))"}},"id":1462,"indexExpression":{"expression":{"id":1459,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"11424:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1460,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":569,"src":"11424:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11409:26:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$612_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._filledOrder storage ref[] storage ref)"}},"id":1463,"indexExpression":{"hexValue":"30","id":1461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11436:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11409:29:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__filledOrder_$612_storage_$dyn_storage","typeString":"struct Exchange._filledOrder storage ref[] storage ref"}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"11409:34:4","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$__filledOrder_$612_storage_$dyn_storage_ptr_$_t_struct$__filledOrder_$612_storage_$returns$__$bound_to$_t_array$_t_struct$__filledOrder_$612_storage_$dyn_storage_ptr_$","typeString":"function (struct Exchange._filledOrder storage ref[] storage pointer,struct Exchange._filledOrder storage ref)"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11409:445:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1488,"nodeType":"ExpressionStatement","src":"11409:445:4"}]},"id":1490,"implemented":true,"kind":"function","modifiers":[],"name":"fillBuyOrders","nameLocation":"9946:13:4","nodeType":"FunctionDefinition","parameters":{"id":1362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1353,"mutability":"mutable","name":"order","nameLocation":"9984:5:4","nodeType":"VariableDeclaration","scope":1490,"src":"9970:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":1352,"nodeType":"UserDefinedTypeName","pathNode":{"id":1351,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":586,"src":"9970:6:4"},"referencedDeclaration":586,"src":"9970:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},{"constant":false,"id":1355,"mutability":"mutable","name":"_amount","nameLocation":"10008:7:4","nodeType":"VariableDeclaration","scope":1490,"src":"10000:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1354,"name":"uint256","nodeType":"ElementaryTypeName","src":"10000:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1357,"mutability":"mutable","name":"_rate","nameLocation":"10034:5:4","nodeType":"VariableDeclaration","scope":1490,"src":"10026:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1356,"name":"uint256","nodeType":"ElementaryTypeName","src":"10026:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1359,"mutability":"mutable","name":"feesWaived","nameLocation":"10055:10:4","nodeType":"VariableDeclaration","scope":1490,"src":"10050:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1358,"name":"bool","nodeType":"ElementaryTypeName","src":"10050:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1361,"mutability":"mutable","name":"fees","nameLocation":"10084:4:4","nodeType":"VariableDeclaration","scope":1490,"src":"10076:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1360,"name":"uint256","nodeType":"ElementaryTypeName","src":"10076:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9959:136:4"},"returnParameters":{"id":1363,"nodeType":"ParameterList","parameters":[],"src":"10105:0:4"},"scope":2396,"src":"9937:1925:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1628,"nodeType":"Block","src":"12039:1526:4","statements":[{"condition":{"id":1504,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"12054:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1573,"nodeType":"Block","src":"12495:427:4","statements":[{"assignments":[1544],"declarations":[{"constant":false,"id":1544,"mutability":"mutable","name":"amountTokensToDeduct","nameLocation":"12518:20:4","nodeType":"VariableDeclaration","scope":1573,"src":"12510:28:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1543,"name":"uint256","nodeType":"ElementaryTypeName","src":"12510:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1551,"initialValue":{"arguments":[{"expression":{"id":1547,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"12592:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1548,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":575,"src":"12592:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1549,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"12623:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1545,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"12541:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2795","typeString":"contract TradingFees"}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"amountTokensToDeduct","nodeType":"MemberAccess","referencedDeclaration":2738,"src":"12541:32:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12541:101:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12510:132:4"},{"expression":{"arguments":[{"expression":{"id":1555,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"12752:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1556,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":575,"src":"12752:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1557,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"12783:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1558,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":569,"src":"12783:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1568,"name":"amountTokensToDeduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"12851:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1565,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"12837:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":1561,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"12823:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1559,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"12813:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"12813:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12813:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1563,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12812:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":401,"src":"12812:24:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12812:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":371,"src":"12812:38:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12812:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12891:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1552,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"12713:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateBalance","nodeType":"MemberAccess","referencedDeclaration":3321,"src":"12713:20:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12713:197:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1572,"nodeType":"ExpressionStatement","src":"12713:197:4"}]},"id":1574,"nodeType":"IfStatement","src":"12050:872:4","trueBody":{"id":1542,"nodeType":"Block","src":"12066:423:4","statements":[{"assignments":[1506],"declarations":[{"constant":false,"id":1506,"mutability":"mutable","name":"aDAIToDeduct","nameLocation":"12116:12:4","nodeType":"VariableDeclaration","scope":1542,"src":"12108:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1505,"name":"uint256","nodeType":"ElementaryTypeName","src":"12108:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1511,"initialValue":{"arguments":[{"id":1509,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"12162:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1507,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"12131:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2795","typeString":"contract TradingFees"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"amountaDAIToDeduct","nodeType":"MemberAccess","referencedDeclaration":2701,"src":"12131:30:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12131:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12108:59:4"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1515,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"12203:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2795","typeString":"contract TradingFees"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"aDAI","nodeType":"MemberAccess","referencedDeclaration":2594,"src":"12203:16:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12203:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1518,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"12223:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1519,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":569,"src":"12223:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1520,"name":"aDAIToDeduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"12235:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12249:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1512,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"12182:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateBalance","nodeType":"MemberAccess","referencedDeclaration":3321,"src":"12182:20:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12182:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1523,"nodeType":"ExpressionStatement","src":"12182:73:4"},{"expression":{"arguments":[{"expression":{"id":1527,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"12345:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1528,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":575,"src":"12345:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1529,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"12376:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1530,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":569,"src":"12376:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1537,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"12430:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":1533,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"12416:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1531,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"12406:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"12406:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12406:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1535,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12405:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":401,"src":"12405:24:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12405:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12458:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1524,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"12306:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateBalance","nodeType":"MemberAccess","referencedDeclaration":3321,"src":"12306:20:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12306:171:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1541,"nodeType":"ExpressionStatement","src":"12306:171:4"}]}},{"expression":{"arguments":[{"expression":{"id":1578,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"12959:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1579,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":569,"src":"12959:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1580,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"12971:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1581,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":571,"src":"12971:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1582,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"12985:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12994:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1575,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"12934:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateLockedFunds","nodeType":"MemberAccess","referencedDeclaration":3254,"src":"12934:24:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12934:66:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1585,"nodeType":"ExpressionStatement","src":"12934:66:4"},{"expression":{"arguments":[{"expression":{"id":1589,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"13057:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1590,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":571,"src":"13057:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1591,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"13071:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":569,"src":"13071:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1593,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"13083:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13092:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1586,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"13036:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateBalance","nodeType":"MemberAccess","referencedDeclaration":3321,"src":"13036:20:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13036:62:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1596,"nodeType":"ExpressionStatement","src":"13036:62:4"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":1605,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"13192:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1606,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":564,"src":"13192:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1607,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"13219:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1608,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"side","nodeType":"MemberAccess","referencedDeclaration":567,"src":"13219:10:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},{"expression":{"id":1609,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"13248:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1610,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":569,"src":"13248:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1611,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"13277:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1612,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":571,"src":"13277:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1613,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"13308:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":575,"src":"13308:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1615,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"13339:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1616,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"13365:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1617,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"13389:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1618,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":579,"src":"13389:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1619,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"13418:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"originalAmountA","nodeType":"MemberAccess","referencedDeclaration":581,"src":"13418:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1621,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"13458:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1622,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"originalAmountB","nodeType":"MemberAccess","referencedDeclaration":583,"src":"13458:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1623,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"13498:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1624,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"13527:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1604,"name":"_filledOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"13161:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__filledOrder_$612_storage_ptr_$","typeString":"type(struct Exchange._filledOrder storage pointer)"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13161:385:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$612_memory_ptr","typeString":"struct Exchange._filledOrder memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__filledOrder_$612_memory_ptr","typeString":"struct Exchange._filledOrder memory"}],"expression":{"baseExpression":{"baseExpression":{"id":1597,"name":"s_filledOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"13112:14:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$612_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._filledOrder storage ref[] storage ref))"}},"id":1601,"indexExpression":{"expression":{"id":1598,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"13127:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1599,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":569,"src":"13127:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13112:26:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$612_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._filledOrder storage ref[] storage ref)"}},"id":1602,"indexExpression":{"hexValue":"31","id":1600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13139:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13112:29:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__filledOrder_$612_storage_$dyn_storage","typeString":"struct Exchange._filledOrder storage ref[] storage ref"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"13112:34:4","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$__filledOrder_$612_storage_$dyn_storage_ptr_$_t_struct$__filledOrder_$612_storage_$returns$__$bound_to$_t_array$_t_struct$__filledOrder_$612_storage_$dyn_storage_ptr_$","typeString":"function (struct Exchange._filledOrder storage ref[] storage pointer,struct Exchange._filledOrder storage ref)"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13112:445:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1627,"nodeType":"ExpressionStatement","src":"13112:445:4"}]},"id":1629,"implemented":true,"kind":"function","modifiers":[],"name":"fillSellOrders","nameLocation":"11879:14:4","nodeType":"FunctionDefinition","parameters":{"id":1502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"order","nameLocation":"11918:5:4","nodeType":"VariableDeclaration","scope":1629,"src":"11904:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":1492,"nodeType":"UserDefinedTypeName","pathNode":{"id":1491,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":586,"src":"11904:6:4"},"referencedDeclaration":586,"src":"11904:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},{"constant":false,"id":1495,"mutability":"mutable","name":"_amount","nameLocation":"11942:7:4","nodeType":"VariableDeclaration","scope":1629,"src":"11934:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1494,"name":"uint256","nodeType":"ElementaryTypeName","src":"11934:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1497,"mutability":"mutable","name":"_rate","nameLocation":"11968:5:4","nodeType":"VariableDeclaration","scope":1629,"src":"11960:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1496,"name":"uint256","nodeType":"ElementaryTypeName","src":"11960:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1499,"mutability":"mutable","name":"feesWaived","nameLocation":"11989:10:4","nodeType":"VariableDeclaration","scope":1629,"src":"11984:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1498,"name":"bool","nodeType":"ElementaryTypeName","src":"11984:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1501,"mutability":"mutable","name":"fees","nameLocation":"12018:4:4","nodeType":"VariableDeclaration","scope":1629,"src":"12010:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1500,"name":"uint256","nodeType":"ElementaryTypeName","src":"12010:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11893:136:4"},"returnParameters":{"id":1503,"nodeType":"ParameterList","parameters":[],"src":"12039:0:4"},"scope":2396,"src":"11870:1695:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1987,"nodeType":"Block","src":"13783:4783:4","statements":[{"assignments":[1654],"declarations":[{"constant":false,"id":1654,"mutability":"mutable","name":"saleTokenAmt","nameLocation":"13802:12:4","nodeType":"VariableDeclaration","scope":1987,"src":"13794:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1653,"name":"uint256","nodeType":"ElementaryTypeName","src":"13794:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1655,"nodeType":"VariableDeclarationStatement","src":"13794:20:4"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1656,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"13831:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1657,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"13839:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$615_$","typeString":"type(enum Exchange.Side)"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":613,"src":"13839:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},"src":"13831:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1822,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"16273:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1823,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"16281:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$615_$","typeString":"type(enum Exchange.Side)"}},"id":1824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":614,"src":"16281:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},"src":"16273:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1985,"nodeType":"IfStatement","src":"16269:2290:4","trueBody":{"id":1984,"nodeType":"Block","src":"16292:2267:4","statements":[{"assignments":[1830],"declarations":[{"constant":false,"id":1830,"mutability":"mutable","name":"_buyOrder","nameLocation":"16366:9:4","nodeType":"VariableDeclaration","scope":1984,"src":"16350:25:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order[]"},"typeName":{"baseType":{"id":1828,"nodeType":"UserDefinedTypeName","pathNode":{"id":1827,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":586,"src":"16350:6:4"},"referencedDeclaration":586,"src":"16350:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_storage_ptr","typeString":"struct Exchange._Order"}},"id":1829,"nodeType":"ArrayTypeName","src":"16350:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"}},"visibility":"internal"}],"id":1838,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1831,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"16378:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":1833,"indexExpression":{"id":1832,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"16390:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16378:20:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":1835,"indexExpression":{"id":1834,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"16399:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16378:29:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":1837,"indexExpression":{"hexValue":"30","id":1836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16408:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16378:32:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"16350:60:4"},{"body":{"id":1982,"nodeType":"Block","src":"16472:2076:4","statements":[{"assignments":[1852,null],"declarations":[{"constant":false,"id":1852,"mutability":"mutable","name":"sellOrderToFill","nameLocation":"16558:15:4","nodeType":"VariableDeclaration","scope":1982,"src":"16544:29:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":1851,"nodeType":"UserDefinedTypeName","pathNode":{"id":1850,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":586,"src":"16544:6:4"},"referencedDeclaration":586,"src":"16544:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},null],"id":1859,"initialValue":{"arguments":[{"id":1854,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"16619:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1855,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"16649:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31","id":1856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16679:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"id":1857,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"16703:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1853,"name":"getOrderFromArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"16579:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_struct$__Order_$586_memory_ptr_$_t_uint256_$","typeString":"function (address,address,uint256,uint256) view returns (struct Exchange._Order memory,uint256)"}},"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16579:146:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$__Order_$586_memory_ptr_$_t_uint256_$","typeString":"tuple(struct Exchange._Order memory,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16543:182:4"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1860,"name":"_buyOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"16824:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":1862,"indexExpression":{"id":1861,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"16834:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16824:12:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":579,"src":"16824:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1864,"name":"sellOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"16845:15:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1865,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":579,"src":"16845:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16824:41:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1867,"name":"_buyOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"16890:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":1869,"indexExpression":{"id":1868,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"16900:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16890:12:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1870,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":569,"src":"16890:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1871,"name":"sellOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"16911:15:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1872,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":569,"src":"16911:20:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16890:41:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16824:107:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1968,"nodeType":"IfStatement","src":"16798:1617:4","trueBody":{"id":1967,"nodeType":"Block","src":"16951:1464:4","statements":[{"assignments":[1877],"declarations":[{"constant":false,"id":1877,"mutability":"mutable","name":"order","nameLocation":"16988:5:4","nodeType":"VariableDeclaration","scope":1967,"src":"16974:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":1876,"nodeType":"UserDefinedTypeName","pathNode":{"id":1875,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":586,"src":"16974:6:4"},"referencedDeclaration":586,"src":"16974:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"}],"id":1881,"initialValue":{"baseExpression":{"id":1878,"name":"_buyOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"16996:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":1880,"indexExpression":{"id":1879,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"17006:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16996:12:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"nodeType":"VariableDeclarationStatement","src":"16974:34:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1882,"name":"sellOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"17111:15:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1883,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":573,"src":"17111:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1884,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"17137:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1885,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":573,"src":"17137:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17111:39:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1893,"name":"sellOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"17336:15:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1894,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":573,"src":"17336:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":1895,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"17363:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1896,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":573,"src":"17363:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17336:40:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1904,"nodeType":"IfStatement","src":"17332:135:4","trueBody":{"id":1903,"nodeType":"Block","src":"17378:89:4","statements":[{"expression":{"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1898,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"17405:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1899,"name":"sellOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"17420:15:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1900,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":573,"src":"17420:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17405:38:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1902,"nodeType":"ExpressionStatement","src":"17405:38:4"}]}},"id":1905,"nodeType":"IfStatement","src":"17107:360:4","trueBody":{"id":1892,"nodeType":"Block","src":"17152:79:4","statements":[{"expression":{"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1887,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"17179:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1888,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"17194:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1889,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":573,"src":"17194:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17179:28:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1891,"nodeType":"ExpressionStatement","src":"17179:28:4"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1909,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"17586:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1910,"name":"sellOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"17595:15:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1911,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":569,"src":"17595:20:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1907,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"17569:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3270,"src":"17569:16:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17569:47:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1913,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"17649:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17569:92:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742053656c6c657220546f6b656e2042616c616e6365","id":1915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17688:35:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_23606608e7b13fb3e79d5390038cbd9a3725c22bbf868c3351f539c1403aa51c","typeString":"literal_string \"Insufficient Seller Token Balance\""},"value":"Insufficient Seller Token Balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_23606608e7b13fb3e79d5390038cbd9a3725c22bbf868c3351f539c1403aa51c","typeString":"literal_string \"Insufficient Seller Token Balance\""}],"id":1906,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17535:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17535:211:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1917,"nodeType":"ExpressionStatement","src":"17535:211:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1921,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"17820:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1922,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":575,"src":"17820:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1923,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"17834:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1924,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":569,"src":"17834:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1919,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"17803:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3270,"src":"17803:16:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17803:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[{"id":1933,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"17913:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"expression":{"id":1928,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"17896:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1929,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":579,"src":"17896:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1926,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"17879:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"17879:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17879:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1931,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17878:30:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":401,"src":"17878:34:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17878:44:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17803:119:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420427579657220546f6b656e2042616c616e6365","id":1936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17949:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_b526016737f3f795ad9662415cdc5815356c7958b0a29dae27c6455ef786683d","typeString":"literal_string \"Insufficient Buyer Token Balance\""},"value":"Insufficient Buyer Token Balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b526016737f3f795ad9662415cdc5815356c7958b0a29dae27c6455ef786683d","typeString":"literal_string \"Insufficient Buyer Token Balance\""}],"id":1918,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17769:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17769:237:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1938,"nodeType":"ExpressionStatement","src":"17769:237:4"},{"assignments":[1941],"declarations":[{"constant":false,"id":1941,"mutability":"mutable","name":"fillOrderValues","nameLocation":"18092:15:4","nodeType":"VariableDeclaration","scope":1967,"src":"18068:39:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$562_memory_ptr","typeString":"struct Exchange._fillOrderValues"},"typeName":{"id":1940,"nodeType":"UserDefinedTypeName","pathNode":{"id":1939,"name":"_fillOrderValues","nodeType":"IdentifierPath","referencedDeclaration":562,"src":"18068:16:4"},"referencedDeclaration":562,"src":"18068:16:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$562_storage_ptr","typeString":"struct Exchange._fillOrderValues"}},"visibility":"internal"}],"id":1947,"initialValue":{"arguments":[{"expression":{"id":1943,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"18153:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1944,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":579,"src":"18153:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1945,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"18190:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1942,"name":"_fillOrderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"18110:16:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__fillOrderValues_$562_storage_ptr_$","typeString":"type(struct Exchange._fillOrderValues storage pointer)"}},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18110:115:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$562_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"nodeType":"VariableDeclarationStatement","src":"18068:157:4"},{"expression":{"arguments":[{"expression":{"id":1949,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"18258:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$615_$","typeString":"type(enum Exchange.Side)"}},"id":1950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":614,"src":"18258:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},{"id":1951,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"18269:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1952,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"18274:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1953,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"18283:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1954,"name":"fillOrderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"18292:15:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$562_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$__fillOrderValues_$562_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}],"id":1948,"name":"fillOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"18248:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_Side_$615_$_t_uint256_$_t_address_$_t_address_$_t_struct$__fillOrderValues_$562_memory_ptr_$returns$__$","typeString":"function (enum Exchange.Side,uint256,address,address,struct Exchange._fillOrderValues memory)"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18248:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1956,"nodeType":"ExpressionStatement","src":"18248:60:4"},{"expression":{"arguments":[{"expression":{"id":1958,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"18341:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$615_$","typeString":"type(enum Exchange.Side)"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":613,"src":"18341:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},{"expression":{"id":1960,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"18351:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1961,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":564,"src":"18351:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1962,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"18361:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1963,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"18370:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1964,"name":"fillOrderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"18379:15:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$562_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$__fillOrderValues_$562_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}],"id":1957,"name":"fillOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"18331:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_Side_$615_$_t_uint256_$_t_address_$_t_address_$_t_struct$__fillOrderValues_$562_memory_ptr_$returns$__$","typeString":"function (enum Exchange.Side,uint256,address,address,struct Exchange._fillOrderValues memory)"}},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18331:64:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1966,"nodeType":"ExpressionStatement","src":"18331:64:4"}]}},{"assignments":[1970],"declarations":[{"constant":false,"id":1970,"mutability":"mutable","name":"orderExist","nameLocation":"18438:10:4","nodeType":"VariableDeclaration","scope":1982,"src":"18433:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1969,"name":"bool","nodeType":"ElementaryTypeName","src":"18433:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1977,"initialValue":{"arguments":[{"id":1972,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"18463:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1973,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"18468:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},{"id":1974,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"18474:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1975,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"18483:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1971,"name":"orderExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"18451:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Side_$615_$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,enum Exchange.Side,address,address) view returns (bool)"}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18451:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"18433:58:4"},{"condition":{"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18514:11:4","subExpression":{"id":1978,"name":"orderExist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"18515:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1981,"nodeType":"IfStatement","src":"18510:22:4","trueBody":{"id":1980,"nodeType":"Break","src":"18527:5:4"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1843,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"16445:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1844,"name":"_buyOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"16449:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"16449:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16445:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1983,"initializationExpression":{"assignments":[1840],"declarations":[{"constant":false,"id":1840,"mutability":"mutable","name":"i","nameLocation":"16438:1:4","nodeType":"VariableDeclaration","scope":1983,"src":"16430:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1839,"name":"uint256","nodeType":"ElementaryTypeName","src":"16430:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1842,"initialValue":{"hexValue":"30","id":1841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16442:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16430:13:4"},"loopExpression":{"expression":{"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"16467:3:4","subExpression":{"id":1847,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"16467:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1849,"nodeType":"ExpressionStatement","src":"16467:3:4"},"nodeType":"ForStatement","src":"16425:2123:4"}]}},"id":1986,"nodeType":"IfStatement","src":"13827:4732:4","trueBody":{"id":1821,"nodeType":"Block","src":"13849:2414:4","statements":[{"assignments":[1664],"declarations":[{"constant":false,"id":1664,"mutability":"mutable","name":"_sellOrder","nameLocation":"13924:10:4","nodeType":"VariableDeclaration","scope":1821,"src":"13908:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order[]"},"typeName":{"baseType":{"id":1662,"nodeType":"UserDefinedTypeName","pathNode":{"id":1661,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":586,"src":"13908:6:4"},"referencedDeclaration":586,"src":"13908:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_storage_ptr","typeString":"struct Exchange._Order"}},"id":1663,"nodeType":"ArrayTypeName","src":"13908:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"}},"visibility":"internal"}],"id":1672,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1665,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"13937:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":1667,"indexExpression":{"id":1666,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"13949:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13937:20:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":1669,"indexExpression":{"id":1668,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"13958:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13937:29:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":1671,"indexExpression":{"hexValue":"31","id":1670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13937:32:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13908:61:4"},{"body":{"id":1819,"nodeType":"Block","src":"14032:2220:4","statements":[{"assignments":[1686,null],"declarations":[{"constant":false,"id":1686,"mutability":"mutable","name":"buyOrderToFill","nameLocation":"14117:14:4","nodeType":"VariableDeclaration","scope":1819,"src":"14103:28:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":1685,"nodeType":"UserDefinedTypeName","pathNode":{"id":1684,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":586,"src":"14103:6:4"},"referencedDeclaration":586,"src":"14103:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},null],"id":1696,"initialValue":{"arguments":[{"id":1688,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"14177:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1689,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"14207:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1692,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"14243:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}],"id":1691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14237:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1690,"name":"uint8","nodeType":"ElementaryTypeName","src":"14237:5:4","typeDescriptions":{}}},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14237:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1694,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"14271:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1687,"name":"getOrderFromArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"14137:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_struct$__Order_$586_memory_ptr_$_t_uint256_$","typeString":"function (address,address,uint256,uint256) view returns (struct Exchange._Order memory,uint256)"}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14137:156:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$__Order_$586_memory_ptr_$_t_uint256_$","typeString":"tuple(struct Exchange._Order memory,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"14102:191:4"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1697,"name":"_sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"14409:10:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":1699,"indexExpression":{"id":1698,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"14420:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14409:13:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":579,"src":"14409:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":1701,"name":"buyOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"14431:14:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1702,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":579,"src":"14431:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14409:41:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1704,"name":"buyOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"14475:14:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1705,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":569,"src":"14475:19:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"baseExpression":{"id":1706,"name":"_sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"14498:10:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":1708,"indexExpression":{"id":1707,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"14509:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14498:13:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1709,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":569,"src":"14498:18:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14475:41:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14409:107:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1805,"nodeType":"IfStatement","src":"14383:1734:4","trueBody":{"id":1804,"nodeType":"Block","src":"14558:1559:4","statements":[{"assignments":[1714],"declarations":[{"constant":false,"id":1714,"mutability":"mutable","name":"sellOrder","nameLocation":"14595:9:4","nodeType":"VariableDeclaration","scope":1804,"src":"14581:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":1713,"nodeType":"UserDefinedTypeName","pathNode":{"id":1712,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":586,"src":"14581:6:4"},"referencedDeclaration":586,"src":"14581:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"}],"id":1718,"initialValue":{"baseExpression":{"id":1715,"name":"_sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"14607:10:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":1717,"indexExpression":{"id":1716,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"14618:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14607:13:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"nodeType":"VariableDeclarationStatement","src":"14581:39:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1719,"name":"buyOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"14721:14:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1720,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":573,"src":"14721:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1721,"name":"sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"14746:9:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1722,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":573,"src":"14746:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14721:42:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1730,"name":"buyOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"14954:14:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1731,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":573,"src":"14954:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":1732,"name":"sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"14980:9:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1733,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":573,"src":"14980:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14954:43:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1741,"nodeType":"IfStatement","src":"14950:137:4","trueBody":{"id":1740,"nodeType":"Block","src":"14999:88:4","statements":[{"expression":{"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1735,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"15026:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1736,"name":"buyOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"15041:14:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1737,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":573,"src":"15041:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15026:37:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1739,"nodeType":"ExpressionStatement","src":"15026:37:4"}]}},"id":1742,"nodeType":"IfStatement","src":"14717:370:4","trueBody":{"id":1729,"nodeType":"Block","src":"14765:83:4","statements":[{"expression":{"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1724,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"14792:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1725,"name":"sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"14807:9:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1726,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":573,"src":"14807:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14792:32:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1728,"nodeType":"ExpressionStatement","src":"14792:32:4"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1746,"name":"buyOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"15238:14:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1747,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":575,"src":"15238:21:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1748,"name":"buyOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"15290:14:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1749,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":569,"src":"15290:19:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1744,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"15191:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3270,"src":"15191:16:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15191:145:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[{"id":1758,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"15379:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"expression":{"id":1753,"name":"sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"15358:9:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1754,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":579,"src":"15358:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1751,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"15341:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"15341:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15341:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1756,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15340:34:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":401,"src":"15340:38:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15340:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15191:197:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420427579657220546f6b656e2042616c616e6365","id":1761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15415:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_b526016737f3f795ad9662415cdc5815356c7958b0a29dae27c6455ef786683d","typeString":"literal_string \"Insufficient Buyer Token Balance\""},"value":"Insufficient Buyer Token Balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b526016737f3f795ad9662415cdc5815356c7958b0a29dae27c6455ef786683d","typeString":"literal_string \"Insufficient Buyer Token Balance\""}],"id":1743,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15157:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15157:315:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1763,"nodeType":"ExpressionStatement","src":"15157:315:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1767,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"15546:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1768,"name":"sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"15555:9:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1769,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":569,"src":"15555:14:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1765,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"15529:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3270,"src":"15529:16:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15529:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1771,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"15603:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15529:86:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742053656c6c657220546f6b656e2042616c616e6365","id":1773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15642:35:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_23606608e7b13fb3e79d5390038cbd9a3725c22bbf868c3351f539c1403aa51c","typeString":"literal_string \"Insufficient Seller Token Balance\""},"value":"Insufficient Seller Token Balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_23606608e7b13fb3e79d5390038cbd9a3725c22bbf868c3351f539c1403aa51c","typeString":"literal_string \"Insufficient Seller Token Balance\""}],"id":1764,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15495:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15495:205:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1775,"nodeType":"ExpressionStatement","src":"15495:205:4"},{"assignments":[1778],"declarations":[{"constant":false,"id":1778,"mutability":"mutable","name":"fillOrderValues","nameLocation":"15786:15:4","nodeType":"VariableDeclaration","scope":1804,"src":"15762:39:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$562_memory_ptr","typeString":"struct Exchange._fillOrderValues"},"typeName":{"id":1777,"nodeType":"UserDefinedTypeName","pathNode":{"id":1776,"name":"_fillOrderValues","nodeType":"IdentifierPath","referencedDeclaration":562,"src":"15762:16:4"},"referencedDeclaration":562,"src":"15762:16:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$562_storage_ptr","typeString":"struct Exchange._fillOrderValues"}},"visibility":"internal"}],"id":1784,"initialValue":{"arguments":[{"expression":{"id":1780,"name":"sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"15847:9:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1781,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":579,"src":"15847:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1782,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"15888:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1779,"name":"_fillOrderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"15804:16:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__fillOrderValues_$562_storage_ptr_$","typeString":"type(struct Exchange._fillOrderValues storage pointer)"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15804:119:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$562_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"nodeType":"VariableDeclarationStatement","src":"15762:161:4"},{"expression":{"arguments":[{"expression":{"id":1786,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"15956:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$615_$","typeString":"type(enum Exchange.Side)"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":613,"src":"15956:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},{"id":1788,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"15966:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1789,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"15971:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1790,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"15980:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1791,"name":"fillOrderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"15989:15:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$562_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$__fillOrderValues_$562_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}],"id":1785,"name":"fillOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"15946:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_Side_$615_$_t_uint256_$_t_address_$_t_address_$_t_struct$__fillOrderValues_$562_memory_ptr_$returns$__$","typeString":"function (enum Exchange.Side,uint256,address,address,struct Exchange._fillOrderValues memory)"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15946:59:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1793,"nodeType":"ExpressionStatement","src":"15946:59:4"},{"expression":{"arguments":[{"expression":{"id":1795,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"16038:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$615_$","typeString":"type(enum Exchange.Side)"}},"id":1796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":614,"src":"16038:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},{"expression":{"id":1797,"name":"sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"16049:9:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1798,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":564,"src":"16049:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1799,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"16063:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1800,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"16072:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1801,"name":"fillOrderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"16081:15:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$562_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$__fillOrderValues_$562_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}],"id":1794,"name":"fillOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"16028:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_Side_$615_$_t_uint256_$_t_address_$_t_address_$_t_struct$__fillOrderValues_$562_memory_ptr_$returns$__$","typeString":"function (enum Exchange.Side,uint256,address,address,struct Exchange._fillOrderValues memory)"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16028:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1803,"nodeType":"ExpressionStatement","src":"16028:69:4"}]}},{"assignments":[1807],"declarations":[{"constant":false,"id":1807,"mutability":"mutable","name":"orderExist","nameLocation":"16142:10:4","nodeType":"VariableDeclaration","scope":1819,"src":"16137:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1806,"name":"bool","nodeType":"ElementaryTypeName","src":"16137:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1814,"initialValue":{"arguments":[{"id":1809,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"16167:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1810,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"16172:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},{"id":1811,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"16178:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1812,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"16187:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1808,"name":"orderExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"16155:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Side_$615_$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,enum Exchange.Side,address,address) view returns (bool)"}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16155:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"16137:58:4"},{"condition":{"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16218:11:4","subExpression":{"id":1815,"name":"orderExist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"16219:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1818,"nodeType":"IfStatement","src":"16214:22:4","trueBody":{"id":1817,"nodeType":"Break","src":"16231:5:4"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1677,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"14004:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1678,"name":"_sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"14008:10:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14008:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14004:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1820,"initializationExpression":{"assignments":[1674],"declarations":[{"constant":false,"id":1674,"mutability":"mutable","name":"i","nameLocation":"13997:1:4","nodeType":"VariableDeclaration","scope":1820,"src":"13989:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1673,"name":"uint256","nodeType":"ElementaryTypeName","src":"13989:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1676,"initialValue":{"hexValue":"30","id":1675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14001:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13989:13:4"},"loopExpression":{"expression":{"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14027:3:4","subExpression":{"id":1681,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"14027:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1683,"nodeType":"ExpressionStatement","src":"14027:3:4"},"nodeType":"ForStatement","src":"13984:2268:4"}]}}]},"id":1988,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1641,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"13715:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1642,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"13720:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},{"id":1643,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"13726:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1644,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"13735:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1645,"kind":"modifierInvocation","modifierName":{"id":1640,"name":"validOrder","nodeType":"IdentifierPath","referencedDeclaration":2382,"src":"13704:10:4"},"nodeType":"ModifierInvocation","src":"13704:39:4"},{"arguments":[{"id":1647,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"13755:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1648,"kind":"modifierInvocation","modifierName":{"id":1646,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":2395,"src":"13744:10:4"},"nodeType":"ModifierInvocation","src":"13744:19:4"},{"arguments":[{"id":1650,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"13775:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1651,"kind":"modifierInvocation","modifierName":{"id":1649,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":2395,"src":"13764:10:4"},"nodeType":"ModifierInvocation","src":"13764:19:4"}],"name":"matchOrders","nameLocation":"13582:11:4","nodeType":"FunctionDefinition","parameters":{"id":1639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1631,"mutability":"mutable","name":"_tokenA","nameLocation":"13612:7:4","nodeType":"VariableDeclaration","scope":1988,"src":"13604:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1630,"name":"address","nodeType":"ElementaryTypeName","src":"13604:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1633,"mutability":"mutable","name":"_tokenB","nameLocation":"13638:7:4","nodeType":"VariableDeclaration","scope":1988,"src":"13630:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1632,"name":"address","nodeType":"ElementaryTypeName","src":"13630:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1635,"mutability":"mutable","name":"_id","nameLocation":"13664:3:4","nodeType":"VariableDeclaration","scope":1988,"src":"13656:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1634,"name":"uint256","nodeType":"ElementaryTypeName","src":"13656:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1638,"mutability":"mutable","name":"side","nameLocation":"13683:4:4","nodeType":"VariableDeclaration","scope":1988,"src":"13678:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},"typeName":{"id":1637,"nodeType":"UserDefinedTypeName","pathNode":{"id":1636,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":615,"src":"13678:4:4"},"referencedDeclaration":615,"src":"13678:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},"visibility":"internal"}],"src":"13593:101:4"},"returnParameters":{"id":1652,"nodeType":"ParameterList","parameters":[],"src":"13783:0:4"},"scope":2396,"src":"13573:4993:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2012,"nodeType":"Block","src":"18707:77:4","statements":[{"expression":{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2000,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"18725:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":2002,"indexExpression":{"id":2001,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"18737:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18725:20:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":2004,"indexExpression":{"id":2003,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"18746:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18725:29:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":2009,"indexExpression":{"arguments":[{"id":2007,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"18763:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}],"id":2006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18755:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2005,"name":"uint256","nodeType":"ElementaryTypeName","src":"18755:7:4","typeDescriptions":{}}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18755:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18725:44:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"18725:51:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1999,"id":2011,"nodeType":"Return","src":"18718:58:4"}]},"functionSelector":"14eca9dc","id":2013,"implemented":true,"kind":"function","modifiers":[],"name":"getOrderLength","nameLocation":"18583:14:4","nodeType":"FunctionDefinition","parameters":{"id":1996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"side","nameLocation":"18613:4:4","nodeType":"VariableDeclaration","scope":2013,"src":"18608:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},"typeName":{"id":1990,"nodeType":"UserDefinedTypeName","pathNode":{"id":1989,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":615,"src":"18608:4:4"},"referencedDeclaration":615,"src":"18608:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":1993,"mutability":"mutable","name":"_tokenA","nameLocation":"18636:7:4","nodeType":"VariableDeclaration","scope":2013,"src":"18628:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1992,"name":"address","nodeType":"ElementaryTypeName","src":"18628:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1995,"mutability":"mutable","name":"_tokenB","nameLocation":"18662:7:4","nodeType":"VariableDeclaration","scope":2013,"src":"18654:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1994,"name":"address","nodeType":"ElementaryTypeName","src":"18654:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18597:79:4"},"returnParameters":{"id":1999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1998,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2013,"src":"18698:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1997,"name":"uint256","nodeType":"ElementaryTypeName","src":"18698:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18697:9:4"},"scope":2396,"src":"18574:210:4","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2047,"nodeType":"Block","src":"19005:141:4","statements":[{"assignments":[2030],"declarations":[{"constant":false,"id":2030,"mutability":"mutable","name":"order","nameLocation":"19030:5:4","nodeType":"VariableDeclaration","scope":2047,"src":"19016:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":2029,"nodeType":"UserDefinedTypeName","pathNode":{"id":2028,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":586,"src":"19016:6:4"},"referencedDeclaration":586,"src":"19016:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"}],"id":2043,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2031,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"19038:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":2033,"indexExpression":{"id":2032,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"19050:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19038:20:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":2035,"indexExpression":{"id":2034,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"19059:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19038:29:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":2040,"indexExpression":{"arguments":[{"id":2038,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"19076:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}],"id":2037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19068:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2036,"name":"uint256","nodeType":"ElementaryTypeName","src":"19068:7:4","typeDescriptions":{}}},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19068:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19038:44:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":2042,"indexExpression":{"id":2041,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"19083:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19038:51:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_storage","typeString":"struct Exchange._Order storage ref"}},"nodeType":"VariableDeclarationStatement","src":"19016:73:4"},{"expression":{"components":[{"id":2044,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"19122:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}}],"id":2045,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19107:31:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"functionReturnParameters":2027,"id":2046,"nodeType":"Return","src":"19100:38:4"}]},"functionSelector":"ea42f349","id":2048,"implemented":true,"kind":"function","modifiers":[],"name":"getOrder","nameLocation":"18801:8:4","nodeType":"FunctionDefinition","parameters":{"id":2023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2015,"mutability":"mutable","name":"_tokenA","nameLocation":"18828:7:4","nodeType":"VariableDeclaration","scope":2048,"src":"18820:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2014,"name":"address","nodeType":"ElementaryTypeName","src":"18820:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2017,"mutability":"mutable","name":"_tokenB","nameLocation":"18854:7:4","nodeType":"VariableDeclaration","scope":2048,"src":"18846:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2016,"name":"address","nodeType":"ElementaryTypeName","src":"18846:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2019,"mutability":"mutable","name":"index","nameLocation":"18880:5:4","nodeType":"VariableDeclaration","scope":2048,"src":"18872:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2018,"name":"uint256","nodeType":"ElementaryTypeName","src":"18872:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2022,"mutability":"mutable","name":"side","nameLocation":"18901:4:4","nodeType":"VariableDeclaration","scope":2048,"src":"18896:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},"typeName":{"id":2021,"nodeType":"UserDefinedTypeName","pathNode":{"id":2020,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":615,"src":"18896:4:4"},"referencedDeclaration":615,"src":"18896:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},"visibility":"internal"}],"src":"18809:103:4"},"returnParameters":{"id":2027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2026,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2048,"src":"18975:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":2025,"nodeType":"UserDefinedTypeName","pathNode":{"id":2024,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":586,"src":"18975:6:4"},"referencedDeclaration":586,"src":"18975:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"}],"src":"18960:39:4"},"scope":2396,"src":"18792:354:4","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2068,"nodeType":"Block","src":"19265:69:4","statements":[{"expression":{"expression":{"baseExpression":{"baseExpression":{"id":2058,"name":"s_filledOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"19283:14:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$612_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._filledOrder storage ref[] storage ref))"}},"id":2060,"indexExpression":{"id":2059,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"19298:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19283:21:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$612_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._filledOrder storage ref[] storage ref)"}},"id":2065,"indexExpression":{"arguments":[{"id":2063,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"19313:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}],"id":2062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19305:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2061,"name":"uint256","nodeType":"ElementaryTypeName","src":"19305:7:4","typeDescriptions":{}}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19305:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19283:36:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__filledOrder_$612_storage_$dyn_storage","typeString":"struct Exchange._filledOrder storage ref[] storage ref"}},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"19283:43:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2057,"id":2067,"nodeType":"Return","src":"19276:50:4"}]},"functionSelector":"c3364be4","id":2069,"implemented":true,"kind":"function","modifiers":[],"name":"getFilledOrderLength","nameLocation":"19163:20:4","nodeType":"FunctionDefinition","parameters":{"id":2054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2050,"mutability":"mutable","name":"_user","nameLocation":"19202:5:4","nodeType":"VariableDeclaration","scope":2069,"src":"19194:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2049,"name":"address","nodeType":"ElementaryTypeName","src":"19194:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2053,"mutability":"mutable","name":"side","nameLocation":"19223:4:4","nodeType":"VariableDeclaration","scope":2069,"src":"19218:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},"typeName":{"id":2052,"nodeType":"UserDefinedTypeName","pathNode":{"id":2051,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":615,"src":"19218:4:4"},"referencedDeclaration":615,"src":"19218:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},"visibility":"internal"}],"src":"19183:51:4"},"returnParameters":{"id":2057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2069,"src":"19256:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2055,"name":"uint256","nodeType":"ElementaryTypeName","src":"19256:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19255:9:4"},"scope":2396,"src":"19154:180:4","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2099,"nodeType":"Block","src":"19539:175:4","statements":[{"assignments":[2084],"declarations":[{"constant":false,"id":2084,"mutability":"mutable","name":"filledOrder","nameLocation":"19570:11:4","nodeType":"VariableDeclaration","scope":2099,"src":"19550:31:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$612_memory_ptr","typeString":"struct Exchange._filledOrder"},"typeName":{"id":2083,"nodeType":"UserDefinedTypeName","pathNode":{"id":2082,"name":"_filledOrder","nodeType":"IdentifierPath","referencedDeclaration":612,"src":"19550:12:4"},"referencedDeclaration":612,"src":"19550:12:4","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$612_storage_ptr","typeString":"struct Exchange._filledOrder"}},"visibility":"internal"}],"id":2095,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2085,"name":"s_filledOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"19584:14:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$612_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._filledOrder storage ref[] storage ref))"}},"id":2087,"indexExpression":{"id":2086,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"19599:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19584:21:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$612_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._filledOrder storage ref[] storage ref)"}},"id":2092,"indexExpression":{"arguments":[{"id":2090,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"19614:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}],"id":2089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19606:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2088,"name":"uint256","nodeType":"ElementaryTypeName","src":"19606:7:4","typeDescriptions":{}}},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19606:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19584:36:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__filledOrder_$612_storage_$dyn_storage","typeString":"struct Exchange._filledOrder storage ref[] storage ref"}},"id":2094,"indexExpression":{"id":2093,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"19635:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19584:67:4","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$612_storage","typeString":"struct Exchange._filledOrder storage ref"}},"nodeType":"VariableDeclarationStatement","src":"19550:101:4"},{"expression":{"components":[{"id":2096,"name":"filledOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"19684:11:4","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$612_memory_ptr","typeString":"struct Exchange._filledOrder memory"}}],"id":2097,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19669:37:4","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$612_memory_ptr","typeString":"struct Exchange._filledOrder memory"}},"functionReturnParameters":2081,"id":2098,"nodeType":"Return","src":"19662:44:4"}]},"functionSelector":"8f101b0e","id":2100,"implemented":true,"kind":"function","modifiers":[],"name":"getFilledOrder","nameLocation":"19351:14:4","nodeType":"FunctionDefinition","parameters":{"id":2077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2071,"mutability":"mutable","name":"_user","nameLocation":"19384:5:4","nodeType":"VariableDeclaration","scope":2100,"src":"19376:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2070,"name":"address","nodeType":"ElementaryTypeName","src":"19376:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2074,"mutability":"mutable","name":"side","nameLocation":"19405:4:4","nodeType":"VariableDeclaration","scope":2100,"src":"19400:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},"typeName":{"id":2073,"nodeType":"UserDefinedTypeName","pathNode":{"id":2072,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":615,"src":"19400:4:4"},"referencedDeclaration":615,"src":"19400:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":2076,"mutability":"mutable","name":"index","nameLocation":"19428:5:4","nodeType":"VariableDeclaration","scope":2100,"src":"19420:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2075,"name":"uint256","nodeType":"ElementaryTypeName","src":"19420:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19365:75:4"},"returnParameters":{"id":2081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2100,"src":"19503:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$612_memory_ptr","typeString":"struct Exchange._filledOrder"},"typeName":{"id":2079,"nodeType":"UserDefinedTypeName","pathNode":{"id":2078,"name":"_filledOrder","nodeType":"IdentifierPath","referencedDeclaration":612,"src":"19503:12:4"},"referencedDeclaration":612,"src":"19503:12:4","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$612_storage_ptr","typeString":"struct Exchange._filledOrder"}},"visibility":"internal"}],"src":"19488:45:4"},"scope":2396,"src":"19342:372:4","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2167,"nodeType":"Block","src":"19898:330:4","statements":[{"assignments":[2117],"declarations":[{"constant":false,"id":2117,"mutability":"mutable","name":"i","nameLocation":"19917:1:4","nodeType":"VariableDeclaration","scope":2167,"src":"19909:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2116,"name":"uint256","nodeType":"ElementaryTypeName","src":"19909:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2119,"initialValue":{"hexValue":"30","id":2118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19921:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"19909:13:4"},{"assignments":[2124],"declarations":[{"constant":false,"id":2124,"mutability":"mutable","name":"_order","nameLocation":"19949:6:4","nodeType":"VariableDeclaration","scope":2167,"src":"19933:22:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order[]"},"typeName":{"baseType":{"id":2122,"nodeType":"UserDefinedTypeName","pathNode":{"id":2121,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":586,"src":"19933:6:4"},"referencedDeclaration":586,"src":"19933:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_storage_ptr","typeString":"struct Exchange._Order"}},"id":2123,"nodeType":"ArrayTypeName","src":"19933:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"}},"visibility":"internal"}],"id":2132,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2125,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"19958:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":2127,"indexExpression":{"id":2126,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"19970:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19958:20:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":2129,"indexExpression":{"id":2128,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"19979:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19958:29:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":2131,"indexExpression":{"id":2130,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"19988:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19958:35:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"19933:60:4"},{"assignments":[2135],"declarations":[{"constant":false,"id":2135,"mutability":"mutable","name":"order","nameLocation":"20018:5:4","nodeType":"VariableDeclaration","scope":2167,"src":"20004:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":2134,"nodeType":"UserDefinedTypeName","pathNode":{"id":2133,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":586,"src":"20004:6:4"},"referencedDeclaration":586,"src":"20004:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"}],"id":2136,"nodeType":"VariableDeclarationStatement","src":"20004:19:4"},{"body":{"id":2161,"nodeType":"Block","src":"20066:127:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2146,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"20085:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2148,"indexExpression":{"id":2147,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"20092:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20085:9:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2149,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":564,"src":"20085:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2150,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"20101:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20085:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2160,"nodeType":"IfStatement","src":"20081:101:4","trueBody":{"id":2159,"nodeType":"Block","src":"20106:76:4","statements":[{"expression":{"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2152,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"20125:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2153,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"20133:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2155,"indexExpression":{"id":2154,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"20140:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20133:9:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"src":"20125:17:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2157,"nodeType":"ExpressionStatement","src":"20125:17:4"},{"id":2158,"nodeType":"Break","src":"20161:5:4"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2139,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"20042:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2140,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"20046:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"20046:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20042:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2162,"initializationExpression":{"expression":{"id":2137,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"20039:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2138,"nodeType":"ExpressionStatement","src":"20039:1:4"},"loopExpression":{"expression":{"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"20061:3:4","subExpression":{"id":2143,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"20061:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2145,"nodeType":"ExpressionStatement","src":"20061:3:4"},"nodeType":"ForStatement","src":"20034:159:4"},{"expression":{"components":[{"id":2163,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"20211:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},{"id":2164,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"20218:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2165,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20210:10:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$__Order_$586_memory_ptr_$_t_uint256_$","typeString":"tuple(struct Exchange._Order memory,uint256)"}},"functionReturnParameters":2115,"id":2166,"nodeType":"Return","src":"20203:17:4"}]},"functionSelector":"92e43d3a","id":2168,"implemented":true,"kind":"function","modifiers":[],"name":"getOrderFromArray","nameLocation":"19731:17:4","nodeType":"FunctionDefinition","parameters":{"id":2109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2102,"mutability":"mutable","name":"_tokenA","nameLocation":"19767:7:4","nodeType":"VariableDeclaration","scope":2168,"src":"19759:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2101,"name":"address","nodeType":"ElementaryTypeName","src":"19759:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2104,"mutability":"mutable","name":"_tokenB","nameLocation":"19793:7:4","nodeType":"VariableDeclaration","scope":2168,"src":"19785:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2103,"name":"address","nodeType":"ElementaryTypeName","src":"19785:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2106,"mutability":"mutable","name":"side","nameLocation":"19819:4:4","nodeType":"VariableDeclaration","scope":2168,"src":"19811:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2105,"name":"uint256","nodeType":"ElementaryTypeName","src":"19811:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2108,"mutability":"mutable","name":"_id","nameLocation":"19842:3:4","nodeType":"VariableDeclaration","scope":2168,"src":"19834:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2107,"name":"uint256","nodeType":"ElementaryTypeName","src":"19834:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19748:104:4"},"returnParameters":{"id":2115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2168,"src":"19874:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":2111,"nodeType":"UserDefinedTypeName","pathNode":{"id":2110,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":586,"src":"19874:6:4"},"referencedDeclaration":586,"src":"19874:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},{"constant":false,"id":2114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2168,"src":"19889:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2113,"name":"uint256","nodeType":"ElementaryTypeName","src":"19889:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19873:24:4"},"scope":2396,"src":"19722:506:4","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2223,"nodeType":"Block","src":"20385:264:4","statements":[{"assignments":[2186],"declarations":[{"constant":false,"id":2186,"mutability":"mutable","name":"orders","nameLocation":"20412:6:4","nodeType":"VariableDeclaration","scope":2223,"src":"20396:22:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order[]"},"typeName":{"baseType":{"id":2184,"nodeType":"UserDefinedTypeName","pathNode":{"id":2183,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":586,"src":"20396:6:4"},"referencedDeclaration":586,"src":"20396:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_storage_ptr","typeString":"struct Exchange._Order"}},"id":2185,"nodeType":"ArrayTypeName","src":"20396:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"}},"visibility":"internal"}],"id":2197,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2187,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"20421:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":2189,"indexExpression":{"id":2188,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"20433:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20421:20:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":2191,"indexExpression":{"id":2190,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"20442:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20421:29:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$586_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":2196,"indexExpression":{"arguments":[{"id":2194,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"20459:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}],"id":2193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20451:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2192,"name":"uint256","nodeType":"ElementaryTypeName","src":"20451:7:4","typeDescriptions":{}}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20451:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20421:44:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"20396:69:4"},{"body":{"id":2219,"nodeType":"Block","src":"20522:97:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2209,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"20541:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2211,"indexExpression":{"id":2210,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"20548:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20541:9:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$586_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2212,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":564,"src":"20541:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2213,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"20557:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20541:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2218,"nodeType":"IfStatement","src":"20537:71:4","trueBody":{"id":2217,"nodeType":"Block","src":"20562:46:4","statements":[{"expression":{"hexValue":"74727565","id":2215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20588:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2181,"id":2216,"nodeType":"Return","src":"20581:11:4"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2202,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"20498:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2203,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"20502:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$586_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"20502:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20498:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2220,"initializationExpression":{"assignments":[2199],"declarations":[{"constant":false,"id":2199,"mutability":"mutable","name":"i","nameLocation":"20491:1:4","nodeType":"VariableDeclaration","scope":2220,"src":"20483:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2198,"name":"uint256","nodeType":"ElementaryTypeName","src":"20483:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2201,"initialValue":{"hexValue":"30","id":2200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20495:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20483:13:4"},"loopExpression":{"expression":{"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"20517:3:4","subExpression":{"id":2206,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"20517:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2208,"nodeType":"ExpressionStatement","src":"20517:3:4"},"nodeType":"ForStatement","src":"20478:141:4"},{"expression":{"hexValue":"66616c7365","id":2221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20636:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2181,"id":2222,"nodeType":"Return","src":"20629:12:4"}]},"functionSelector":"429d24b2","id":2224,"implemented":true,"kind":"function","modifiers":[],"name":"orderExists","nameLocation":"20245:11:4","nodeType":"FunctionDefinition","parameters":{"id":2178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2170,"mutability":"mutable","name":"_id","nameLocation":"20275:3:4","nodeType":"VariableDeclaration","scope":2224,"src":"20267:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2169,"name":"uint256","nodeType":"ElementaryTypeName","src":"20267:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2173,"mutability":"mutable","name":"side","nameLocation":"20294:4:4","nodeType":"VariableDeclaration","scope":2224,"src":"20289:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},"typeName":{"id":2172,"nodeType":"UserDefinedTypeName","pathNode":{"id":2171,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":615,"src":"20289:4:4"},"referencedDeclaration":615,"src":"20289:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":2175,"mutability":"mutable","name":"_tokenA","nameLocation":"20317:7:4","nodeType":"VariableDeclaration","scope":2224,"src":"20309:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2174,"name":"address","nodeType":"ElementaryTypeName","src":"20309:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2177,"mutability":"mutable","name":"_tokenB","nameLocation":"20343:7:4","nodeType":"VariableDeclaration","scope":2224,"src":"20335:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2176,"name":"address","nodeType":"ElementaryTypeName","src":"20335:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20256:101:4"},"returnParameters":{"id":2181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2224,"src":"20379:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2179,"name":"bool","nodeType":"ElementaryTypeName","src":"20379:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20378:6:4"},"scope":2396,"src":"20236:413:4","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2250,"nodeType":"Block","src":"20727:134:4","statements":[{"expression":{"arguments":[{"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"20746:24:4","subExpression":{"arguments":[{"id":2235,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"20763:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2234,"name":"isVerifiedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"20747:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20747:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20616c7265616479207665726966696564","id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20772:24:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430","typeString":"literal_string \"Token already verified\""},"value":"Token already verified"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430","typeString":"literal_string \"Token already verified\""}],"id":2233,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20738:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20738:59:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2240,"nodeType":"ExpressionStatement","src":"20738:59:4"},{"expression":{"arguments":[{"arguments":[{"id":2245,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"20834:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2246,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"20842:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2244,"name":"_tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"20823:10:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__tokenInfo_$557_storage_ptr_$","typeString":"type(struct Exchange._tokenInfo storage pointer)"}},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20823:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__tokenInfo_$557_memory_ptr","typeString":"struct Exchange._tokenInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__tokenInfo_$557_memory_ptr","typeString":"struct Exchange._tokenInfo memory"}],"expression":{"id":2241,"name":"tokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"20808:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$557_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo storage ref[] storage ref"}},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"20808:14:4","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$__tokenInfo_$557_storage_$dyn_storage_ptr_$_t_struct$__tokenInfo_$557_storage_$returns$__$bound_to$_t_array$_t_struct$__tokenInfo_$557_storage_$dyn_storage_ptr_$","typeString":"function (struct Exchange._tokenInfo storage ref[] storage pointer,struct Exchange._tokenInfo storage ref)"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20808:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2249,"nodeType":"ExpressionStatement","src":"20808:45:4"}]},"functionSelector":"af81c5b9","id":2251,"implemented":true,"kind":"function","modifiers":[{"id":2231,"kind":"modifierInvocation","modifierName":{"id":2230,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"20717:9:4"},"nodeType":"ModifierInvocation","src":"20717:9:4"}],"name":"addToken","nameLocation":"20666:8:4","nodeType":"FunctionDefinition","parameters":{"id":2229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2226,"mutability":"mutable","name":"_token","nameLocation":"20683:6:4","nodeType":"VariableDeclaration","scope":2251,"src":"20675:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2225,"name":"address","nodeType":"ElementaryTypeName","src":"20675:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2228,"mutability":"mutable","name":"_decimals","nameLocation":"20699:9:4","nodeType":"VariableDeclaration","scope":2251,"src":"20691:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2227,"name":"uint256","nodeType":"ElementaryTypeName","src":"20691:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20674:35:4"},"returnParameters":{"id":2232,"nodeType":"ParameterList","parameters":[],"src":"20727:0:4"},"scope":2396,"src":"20657:204:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2282,"nodeType":"Block","src":"20937:204:4","statements":[{"body":{"id":2278,"nodeType":"Block","src":"21041:70:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2269,"name":"tokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"21060:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$557_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo storage ref[] storage ref"}},"id":2271,"indexExpression":{"id":2270,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"21070:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21060:12:4","typeDescriptions":{"typeIdentifier":"t_struct$__tokenInfo_$557_storage","typeString":"struct Exchange._tokenInfo storage ref"}},"id":2272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":554,"src":"21060:16:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2273,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"21080:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21060:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2277,"nodeType":"IfStatement","src":"21056:43:4","trueBody":{"expression":{"hexValue":"74727565","id":2275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21095:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2257,"id":2276,"nodeType":"Return","src":"21088:11:4"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2262,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"21014:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2263,"name":"tokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"21018:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$557_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo storage ref[] storage ref"}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"21018:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21014:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2279,"initializationExpression":{"assignments":[2259],"declarations":[{"constant":false,"id":2259,"mutability":"mutable","name":"i","nameLocation":"21007:1:4","nodeType":"VariableDeclaration","scope":2279,"src":"20999:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2258,"name":"uint256","nodeType":"ElementaryTypeName","src":"20999:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2261,"initialValue":{"hexValue":"30","id":2260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21011:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20999:13:4"},"loopExpression":{"expression":{"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"21036:3:4","subExpression":{"id":2266,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"21036:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2268,"nodeType":"ExpressionStatement","src":"21036:3:4"},"nodeType":"ForStatement","src":"20994:117:4"},{"expression":{"hexValue":"66616c7365","id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21128:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2257,"id":2281,"nodeType":"Return","src":"21121:12:4"}]},"functionSelector":"1027b219","id":2283,"implemented":true,"kind":"function","modifiers":[],"name":"isVerifiedToken","nameLocation":"20878:15:4","nodeType":"FunctionDefinition","parameters":{"id":2254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2253,"mutability":"mutable","name":"_token","nameLocation":"20902:6:4","nodeType":"VariableDeclaration","scope":2283,"src":"20894:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2252,"name":"address","nodeType":"ElementaryTypeName","src":"20894:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20893:16:4"},"returnParameters":{"id":2257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2283,"src":"20931:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2255,"name":"bool","nodeType":"ElementaryTypeName","src":"20931:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20930:6:4"},"scope":2396,"src":"20869:272:4","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2316,"nodeType":"Block","src":"21217:186:4","statements":[{"body":{"id":2314,"nodeType":"Block","src":"21275:121:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2301,"name":"tokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"21294:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$557_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo storage ref[] storage ref"}},"id":2303,"indexExpression":{"id":2302,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"21304:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21294:12:4","typeDescriptions":{"typeIdentifier":"t_struct$__tokenInfo_$557_storage","typeString":"struct Exchange._tokenInfo storage ref"}},"id":2304,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":554,"src":"21294:16:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2305,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"21314:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21294:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2313,"nodeType":"IfStatement","src":"21290:95:4","trueBody":{"id":2312,"nodeType":"Block","src":"21322:63:4","statements":[{"expression":{"expression":{"baseExpression":{"id":2307,"name":"tokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"21348:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$557_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo storage ref[] storage ref"}},"id":2309,"indexExpression":{"id":2308,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"21358:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21348:12:4","typeDescriptions":{"typeIdentifier":"t_struct$__tokenInfo_$557_storage","typeString":"struct Exchange._tokenInfo storage ref"}},"id":2310,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":556,"src":"21348:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2289,"id":2311,"nodeType":"Return","src":"21341:28:4"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2294,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"21248:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2295,"name":"tokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"21252:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$557_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo storage ref[] storage ref"}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"21252:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21248:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2315,"initializationExpression":{"assignments":[2291],"declarations":[{"constant":false,"id":2291,"mutability":"mutable","name":"i","nameLocation":"21241:1:4","nodeType":"VariableDeclaration","scope":2315,"src":"21233:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2290,"name":"uint256","nodeType":"ElementaryTypeName","src":"21233:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2293,"initialValue":{"hexValue":"30","id":2292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21245:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"21233:13:4"},"loopExpression":{"expression":{"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"21270:3:4","subExpression":{"id":2298,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"21270:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2300,"nodeType":"ExpressionStatement","src":"21270:3:4"},"nodeType":"ForStatement","src":"21228:168:4"}]},"functionSelector":"1f69565f","id":2317,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenInfo","nameLocation":"21158:12:4","nodeType":"FunctionDefinition","parameters":{"id":2286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2285,"mutability":"mutable","name":"_token","nameLocation":"21179:6:4","nodeType":"VariableDeclaration","scope":2317,"src":"21171:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2284,"name":"address","nodeType":"ElementaryTypeName","src":"21171:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21170:16:4"},"returnParameters":{"id":2289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2317,"src":"21208:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2287,"name":"uint256","nodeType":"ElementaryTypeName","src":"21208:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21207:9:4"},"scope":2396,"src":"21149:254:4","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2330,"nodeType":"Block","src":"21478:50:4","statements":[{"expression":{"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2324,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"21489:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2326,"name":"_Walletaddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"21505:14:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2325,"name":"Wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"21498:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Wallet_$3359_$","typeString":"type(contract Wallet)"}},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21498:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"src":"21489:31:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"id":2329,"nodeType":"ExpressionStatement","src":"21489:31:4"}]},"functionSelector":"ac1a386a","id":2331,"implemented":true,"kind":"function","modifiers":[{"id":2322,"kind":"modifierInvocation","modifierName":{"id":2321,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"21468:9:4"},"nodeType":"ModifierInvocation","src":"21468:9:4"}],"name":"setWalletAddress","nameLocation":"21420:16:4","nodeType":"FunctionDefinition","parameters":{"id":2320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2319,"mutability":"mutable","name":"_Walletaddress","nameLocation":"21445:14:4","nodeType":"VariableDeclaration","scope":2331,"src":"21437:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2318,"name":"address","nodeType":"ElementaryTypeName","src":"21437:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21436:24:4"},"returnParameters":{"id":2323,"nodeType":"ParameterList","parameters":[],"src":"21478:0:4"},"scope":2396,"src":"21411:117:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2344,"nodeType":"Block","src":"21631:68:4","statements":[{"expression":{"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2338,"name":"priceChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"21642:12:4","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2565","typeString":"contract PriceChecker"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2340,"name":"_PriceCheckeraddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"21670:20:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2339,"name":"PriceChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"21657:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PriceChecker_$2565_$","typeString":"type(contract PriceChecker)"}},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21657:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2565","typeString":"contract PriceChecker"}},"src":"21642:49:4","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2565","typeString":"contract PriceChecker"}},"id":2343,"nodeType":"ExpressionStatement","src":"21642:49:4"}]},"functionSelector":"b136e39a","id":2345,"implemented":true,"kind":"function","modifiers":[{"id":2336,"kind":"modifierInvocation","modifierName":{"id":2335,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"21621:9:4"},"nodeType":"ModifierInvocation","src":"21621:9:4"}],"name":"setPriceCheckerAddress","nameLocation":"21545:22:4","nodeType":"FunctionDefinition","parameters":{"id":2334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2333,"mutability":"mutable","name":"_PriceCheckeraddress","nameLocation":"21586:20:4","nodeType":"VariableDeclaration","scope":2345,"src":"21578:28:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2332,"name":"address","nodeType":"ElementaryTypeName","src":"21578:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21567:46:4"},"returnParameters":{"id":2337,"nodeType":"ParameterList","parameters":[],"src":"21631:0:4"},"scope":2396,"src":"21536:163:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2358,"nodeType":"Block","src":"21770:58:4","statements":[{"expression":{"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2352,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"21781:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2795","typeString":"contract TradingFees"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2354,"name":"_tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"21807:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2353,"name":"TradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"21795:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TradingFees_$2795_$","typeString":"type(contract TradingFees)"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21795:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2795","typeString":"contract TradingFees"}},"src":"21781:39:4","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2795","typeString":"contract TradingFees"}},"id":2357,"nodeType":"ExpressionStatement","src":"21781:39:4"}]},"functionSelector":"dafbfe6a","id":2359,"implemented":true,"kind":"function","modifiers":[{"id":2350,"kind":"modifierInvocation","modifierName":{"id":2349,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"21760:9:4"},"nodeType":"ModifierInvocation","src":"21760:9:4"}],"name":"setTradingFees","nameLocation":"21716:14:4","nodeType":"FunctionDefinition","parameters":{"id":2348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2347,"mutability":"mutable","name":"_tradingFees","nameLocation":"21739:12:4","nodeType":"VariableDeclaration","scope":2359,"src":"21731:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2346,"name":"address","nodeType":"ElementaryTypeName","src":"21731:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21730:22:4"},"returnParameters":{"id":2351,"nodeType":"ParameterList","parameters":[],"src":"21770:0:4"},"scope":2396,"src":"21707:121:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2381,"nodeType":"Block","src":"21957:100:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":2372,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"21988:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2373,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"21993:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},{"id":2374,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"21999:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2375,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"22008:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2371,"name":"orderExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"21976:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Side_$615_$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,enum Exchange.Side,address,address) view returns (bool)"}},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21976:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964204f72646572204944","id":2377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22018:18:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2","typeString":"literal_string \"Invalid Order ID\""},"value":"Invalid Order ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2","typeString":"literal_string \"Invalid Order ID\""}],"id":2370,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21968:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21968:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2379,"nodeType":"ExpressionStatement","src":"21968:69:4"},{"id":2380,"nodeType":"PlaceholderStatement","src":"22048:1:4"}]},"id":2382,"name":"validOrder","nameLocation":"21845:10:4","nodeType":"ModifierDefinition","parameters":{"id":2369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2361,"mutability":"mutable","name":"_id","nameLocation":"21874:3:4","nodeType":"VariableDeclaration","scope":2382,"src":"21866:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2360,"name":"uint256","nodeType":"ElementaryTypeName","src":"21866:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2364,"mutability":"mutable","name":"side","nameLocation":"21893:4:4","nodeType":"VariableDeclaration","scope":2382,"src":"21888:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"},"typeName":{"id":2363,"nodeType":"UserDefinedTypeName","pathNode":{"id":2362,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":615,"src":"21888:4:4"},"referencedDeclaration":615,"src":"21888:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$615","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":2366,"mutability":"mutable","name":"_tokenA","nameLocation":"21916:7:4","nodeType":"VariableDeclaration","scope":2382,"src":"21908:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2365,"name":"address","nodeType":"ElementaryTypeName","src":"21908:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2368,"mutability":"mutable","name":"_tokenB","nameLocation":"21942:7:4","nodeType":"VariableDeclaration","scope":2382,"src":"21934:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2367,"name":"address","nodeType":"ElementaryTypeName","src":"21934:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21855:101:4"},"src":"21836:221:4","virtual":false,"visibility":"internal"},{"body":{"id":2394,"nodeType":"Block","src":"22101:91:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":2388,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"22136:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2387,"name":"isVerifiedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"22120:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22120:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20756e617661696c61626c6520696e20444558","id":2390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22145:26:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3","typeString":"literal_string \"Token unavailable in DEX\""},"value":"Token unavailable in DEX"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3","typeString":"literal_string \"Token unavailable in DEX\""}],"id":2386,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22112:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22112:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2392,"nodeType":"ExpressionStatement","src":"22112:60:4"},{"id":2393,"nodeType":"PlaceholderStatement","src":"22183:1:4"}]},"id":2395,"name":"validToken","nameLocation":"22074:10:4","nodeType":"ModifierDefinition","parameters":{"id":2385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2384,"mutability":"mutable","name":"_token","nameLocation":"22093:6:4","nodeType":"VariableDeclaration","scope":2395,"src":"22085:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2383,"name":"address","nodeType":"ElementaryTypeName","src":"22085:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22084:16:4"},"src":"22065:127:4","virtual":false,"visibility":"internal"}],"scope":2397,"src":"387:21808:4","usedErrors":[]}],"src":"35:22162:4"},"id":4},"contracts/PriceChecker.sol":{"ast":{"absolutePath":"contracts/PriceChecker.sol","exportedSymbols":{"AggregatorV3Interface":[45],"Context":[180],"Ownable":[158],"PriceChecker":[2565]},"id":2566,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2398,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"33:23:5"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":2399,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2566,"sourceUnit":46,"src":"60:76:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2400,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2566,"sourceUnit":159,"src":"138:52:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2401,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":158,"src":"219:7:5"},"id":2402,"nodeType":"InheritanceSpecifier","src":"219:7:5"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2565,"linearizedBaseContracts":[2565,158,180],"name":"PriceChecker","nameLocation":"203:12:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"10c7f0b9","id":2406,"mutability":"mutable","name":"priceFeeds","nameLocation":"254:10:5","nodeType":"VariableDeclaration","scope":2565,"src":"234:30:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2414_storage_$dyn_storage","typeString":"struct PriceChecker._priceFeed[]"},"typeName":{"baseType":{"id":2404,"nodeType":"UserDefinedTypeName","pathNode":{"id":2403,"name":"_priceFeed","nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"234:10:5"},"referencedDeclaration":2414,"src":"234:10:5","typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$2414_storage_ptr","typeString":"struct PriceChecker._priceFeed"}},"id":2405,"nodeType":"ArrayTypeName","src":"234:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2414_storage_$dyn_storage_ptr","typeString":"struct PriceChecker._priceFeed[]"}},"visibility":"public"},{"canonicalName":"PriceChecker._priceFeed","id":2414,"members":[{"constant":false,"id":2408,"mutability":"mutable","name":"name","nameLocation":"309:4:5","nodeType":"VariableDeclaration","scope":2414,"src":"302:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2407,"name":"string","nodeType":"ElementaryTypeName","src":"302:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2410,"mutability":"mutable","name":"token","nameLocation":"332:5:5","nodeType":"VariableDeclaration","scope":2414,"src":"324:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2409,"name":"address","nodeType":"ElementaryTypeName","src":"324:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2413,"mutability":"mutable","name":"priceFeed","nameLocation":"370:9:5","nodeType":"VariableDeclaration","scope":2414,"src":"348:31:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"},"typeName":{"id":2412,"nodeType":"UserDefinedTypeName","pathNode":{"id":2411,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"348:21:5"},"referencedDeclaration":45,"src":"348:21:5","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"}],"name":"_priceFeed","nameLocation":"280:10:5","nodeType":"StructDefinition","scope":2565,"src":"273:114:5","visibility":"public"},{"body":{"id":2495,"nodeType":"Block","src":"568:583:5","statements":[{"assignments":[2429],"declarations":[{"constant":false,"id":2429,"mutability":"mutable","name":"pricefeed","nameLocation":"599:9:5","nodeType":"VariableDeclaration","scope":2495,"src":"579:29:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2414_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed[]"},"typeName":{"baseType":{"id":2427,"nodeType":"UserDefinedTypeName","pathNode":{"id":2426,"name":"_priceFeed","nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"579:10:5"},"referencedDeclaration":2414,"src":"579:10:5","typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$2414_storage_ptr","typeString":"struct PriceChecker._priceFeed"}},"id":2428,"nodeType":"ArrayTypeName","src":"579:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2414_storage_$dyn_storage_ptr","typeString":"struct PriceChecker._priceFeed[]"}},"visibility":"internal"}],"id":2431,"initialValue":{"id":2430,"name":"priceFeeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"611:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2414_storage_$dyn_storage","typeString":"struct PriceChecker._priceFeed storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"579:42:5"},{"assignments":[2433],"declarations":[{"constant":false,"id":2433,"mutability":"mutable","name":"isAdded","nameLocation":"637:7:5","nodeType":"VariableDeclaration","scope":2495,"src":"632:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2432,"name":"bool","nodeType":"ElementaryTypeName","src":"632:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2435,"initialValue":{"hexValue":"66616c7365","id":2434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"647:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"632:20:5"},{"body":{"id":2470,"nodeType":"Block","src":"710:238:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2450,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"774:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2448,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"757:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"757:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"757:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2447,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"747:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"747:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2456,"name":"pricefeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"829:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2414_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed memory[] memory"}},"id":2458,"indexExpression":{"id":2457,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"839:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"829:12:5","typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$2414_memory_ptr","typeString":"struct PriceChecker._priceFeed memory"}},"id":2459,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"name","nodeType":"MemberAccess","referencedDeclaration":2408,"src":"829:17:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2454,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"812:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"812:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"812:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2453,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"802:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"802:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"747:101:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2469,"nodeType":"IfStatement","src":"725:212:5","trueBody":{"id":2468,"nodeType":"Block","src":"864:73:5","statements":[{"expression":{"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2463,"name":"isAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"883:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"893:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"883:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2466,"nodeType":"ExpressionStatement","src":"883:14:5"},{"id":2467,"nodeType":"Break","src":"916:5:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2440,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"683:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2441,"name":"pricefeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"687:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2414_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed memory[] memory"}},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"687:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"683:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2471,"initializationExpression":{"assignments":[2437],"declarations":[{"constant":false,"id":2437,"mutability":"mutable","name":"i","nameLocation":"676:1:5","nodeType":"VariableDeclaration","scope":2471,"src":"668:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2436,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2439,"initialValue":{"hexValue":"30","id":2438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"680:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"668:13:5"},"loopExpression":{"expression":{"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"705:3:5","subExpression":{"id":2444,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"705:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2446,"nodeType":"ExpressionStatement","src":"705:3:5"},"nodeType":"ForStatement","src":"663:285:5"},{"expression":{"arguments":[{"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"966:8:5","subExpression":{"id":2473,"name":"isAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"967:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5072696365204665656420616c7265616479206164646564","id":2475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"976:26:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f","typeString":"literal_string \"Price Feed already added\""},"value":"Price Feed already added"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f","typeString":"literal_string \"Price Feed already added\""}],"id":2472,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"958:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"958:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2477,"nodeType":"ExpressionStatement","src":"958:45:5"},{"assignments":[2480],"declarations":[{"constant":false,"id":2480,"mutability":"mutable","name":"priceFeed","nameLocation":"1036:9:5","nodeType":"VariableDeclaration","scope":2495,"src":"1014:31:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"},"typeName":{"id":2479,"nodeType":"UserDefinedTypeName","pathNode":{"id":2478,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"1014:21:5"},"referencedDeclaration":45,"src":"1014:21:5","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"}],"id":2484,"initialValue":{"arguments":[{"id":2482,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"1070:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2481,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"1048:21:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$45_$","typeString":"type(contract AggregatorV3Interface)"}},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1048:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"nodeType":"VariableDeclarationStatement","src":"1014:65:5"},{"expression":{"arguments":[{"arguments":[{"id":2489,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"1117:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2490,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"1124:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2491,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"1132:9:5","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}],"id":2488,"name":"_priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"1106:10:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__priceFeed_$2414_storage_ptr_$","typeString":"type(struct PriceChecker._priceFeed storage pointer)"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1106:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$2414_memory_ptr","typeString":"struct PriceChecker._priceFeed memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__priceFeed_$2414_memory_ptr","typeString":"struct PriceChecker._priceFeed memory"}],"expression":{"id":2485,"name":"priceFeeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"1090:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2414_storage_$dyn_storage","typeString":"struct PriceChecker._priceFeed storage ref[] storage ref"}},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"1090:15:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$__priceFeed_$2414_storage_$dyn_storage_ptr_$_t_struct$__priceFeed_$2414_storage_$returns$__$bound_to$_t_array$_t_struct$__priceFeed_$2414_storage_$dyn_storage_ptr_$","typeString":"function (struct PriceChecker._priceFeed storage ref[] storage pointer,struct PriceChecker._priceFeed storage ref)"}},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1090:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2494,"nodeType":"ExpressionStatement","src":"1090:53:5"}]},"functionSelector":"8c35423e","id":2496,"implemented":true,"kind":"function","modifiers":[{"id":2423,"kind":"modifierInvocation","modifierName":{"id":2422,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"558:9:5"},"nodeType":"ModifierInvocation","src":"558:9:5"}],"name":"addPriceFeed","nameLocation":"447:12:5","nodeType":"FunctionDefinition","parameters":{"id":2421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2416,"mutability":"mutable","name":"_name","nameLocation":"484:5:5","nodeType":"VariableDeclaration","scope":2496,"src":"470:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2415,"name":"string","nodeType":"ElementaryTypeName","src":"470:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2418,"mutability":"mutable","name":"_token","nameLocation":"508:6:5","nodeType":"VariableDeclaration","scope":2496,"src":"500:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2417,"name":"address","nodeType":"ElementaryTypeName","src":"500:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2420,"mutability":"mutable","name":"_address","nameLocation":"533:8:5","nodeType":"VariableDeclaration","scope":2496,"src":"525:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2419,"name":"address","nodeType":"ElementaryTypeName","src":"525:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:89:5"},"returnParameters":{"id":2424,"nodeType":"ParameterList","parameters":[],"src":"568:0:5"},"scope":2565,"src":"438:713:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2537,"nodeType":"Block","src":"1269:244:5","statements":[{"assignments":[2508],"declarations":[{"constant":false,"id":2508,"mutability":"mutable","name":"pricefeed","nameLocation":"1300:9:5","nodeType":"VariableDeclaration","scope":2537,"src":"1280:29:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2414_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed[]"},"typeName":{"baseType":{"id":2506,"nodeType":"UserDefinedTypeName","pathNode":{"id":2505,"name":"_priceFeed","nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"1280:10:5"},"referencedDeclaration":2414,"src":"1280:10:5","typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$2414_storage_ptr","typeString":"struct PriceChecker._priceFeed"}},"id":2507,"nodeType":"ArrayTypeName","src":"1280:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2414_storage_$dyn_storage_ptr","typeString":"struct PriceChecker._priceFeed[]"}},"visibility":"internal"}],"id":2510,"initialValue":{"id":2509,"name":"priceFeeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"1312:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2414_storage_$dyn_storage","typeString":"struct PriceChecker._priceFeed storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1280:42:5"},{"body":{"id":2535,"nodeType":"Block","src":"1382:124:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2522,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"1401:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"baseExpression":{"id":2523,"name":"pricefeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"1411:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2414_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed memory[] memory"}},"id":2525,"indexExpression":{"id":2524,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"1421:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1411:12:5","typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$2414_memory_ptr","typeString":"struct PriceChecker._priceFeed memory"}},"id":2526,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":2410,"src":"1411:18:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1401:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2534,"nodeType":"IfStatement","src":"1397:98:5","trueBody":{"id":2533,"nodeType":"Block","src":"1431:64:5","statements":[{"expression":{"expression":{"baseExpression":{"id":2528,"name":"pricefeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"1457:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2414_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed memory[] memory"}},"id":2530,"indexExpression":{"id":2529,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"1467:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1457:12:5","typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$2414_memory_ptr","typeString":"struct PriceChecker._priceFeed memory"}},"id":2531,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"priceFeed","nodeType":"MemberAccess","referencedDeclaration":2413,"src":"1457:22:5","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"functionReturnParameters":2503,"id":2532,"nodeType":"Return","src":"1450:29:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2515,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"1355:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2516,"name":"pricefeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"1359:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2414_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed memory[] memory"}},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1359:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1355:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2536,"initializationExpression":{"assignments":[2512],"declarations":[{"constant":false,"id":2512,"mutability":"mutable","name":"i","nameLocation":"1348:1:5","nodeType":"VariableDeclaration","scope":2536,"src":"1340:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2511,"name":"uint256","nodeType":"ElementaryTypeName","src":"1340:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2514,"initialValue":{"hexValue":"30","id":2513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1352:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1340:13:5"},"loopExpression":{"expression":{"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1377:3:5","subExpression":{"id":2519,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"1377:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2521,"nodeType":"ExpressionStatement","src":"1377:3:5"},"nodeType":"ForStatement","src":"1335:171:5"}]},"id":2538,"implemented":true,"kind":"function","modifiers":[],"name":"getPriceFeed","nameLocation":"1168:12:5","nodeType":"FunctionDefinition","parameters":{"id":2499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"_token","nameLocation":"1199:6:5","nodeType":"VariableDeclaration","scope":2538,"src":"1191:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2497,"name":"address","nodeType":"ElementaryTypeName","src":"1191:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1180:32:5"},"returnParameters":{"id":2503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2502,"mutability":"mutable","name":"priceFeed","nameLocation":"1258:9:5","nodeType":"VariableDeclaration","scope":2538,"src":"1236:31:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"},"typeName":{"id":2501,"nodeType":"UserDefinedTypeName","pathNode":{"id":2500,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"1236:21:5"},"referencedDeclaration":45,"src":"1236:21:5","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"}],"src":"1235:33:5"},"scope":2565,"src":"1159:354:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2563,"nodeType":"Block","src":"1589:172:5","statements":[{"assignments":[2547],"declarations":[{"constant":false,"id":2547,"mutability":"mutable","name":"priceFeed","nameLocation":"1622:9:5","nodeType":"VariableDeclaration","scope":2563,"src":"1600:31:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"},"typeName":{"id":2546,"nodeType":"UserDefinedTypeName","pathNode":{"id":2545,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"1600:21:5"},"referencedDeclaration":45,"src":"1600:21:5","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"}],"id":2551,"initialValue":{"arguments":[{"id":2549,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"1647:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2548,"name":"getPriceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"1634:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_contract$_AggregatorV3Interface_$45_$","typeString":"function (address) view returns (contract AggregatorV3Interface)"}},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1634:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"nodeType":"VariableDeclarationStatement","src":"1600:56:5"},{"assignments":[null,2553,null,null,null],"declarations":[null,{"constant":false,"id":2553,"mutability":"mutable","name":"answer","nameLocation":"1677:6:5","nodeType":"VariableDeclaration","scope":2563,"src":"1670:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2552,"name":"int256","nodeType":"ElementaryTypeName","src":"1670:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},null,null,null],"id":2557,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2554,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"1693:9:5","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":44,"src":"1693:25:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1693:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"nodeType":"VariableDeclarationStatement","src":"1667:53:5"},{"expression":{"arguments":[{"id":2560,"name":"answer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"1746:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1738:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2558,"name":"uint256","nodeType":"ElementaryTypeName","src":"1738:7:5","typeDescriptions":{}}},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1738:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2544,"id":2562,"nodeType":"Return","src":"1731:22:5"}]},"functionSelector":"41976e09","id":2564,"implemented":true,"kind":"function","modifiers":[],"name":"getPrice","nameLocation":"1530:8:5","nodeType":"FunctionDefinition","parameters":{"id":2541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2540,"mutability":"mutable","name":"_address","nameLocation":"1547:8:5","nodeType":"VariableDeclaration","scope":2564,"src":"1539:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2539,"name":"address","nodeType":"ElementaryTypeName","src":"1539:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1538:18:5"},"returnParameters":{"id":2544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2564,"src":"1580:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2542,"name":"uint256","nodeType":"ElementaryTypeName","src":"1580:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1579:9:5"},"scope":2565,"src":"1521:240:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2566,"src":"194:1570:5","usedErrors":[]}],"src":"33:1733:5"},"id":5},"contracts/TradingFees.sol":{"ast":{"absolutePath":"contracts/TradingFees.sol","exportedSymbols":{"AggregatorV3Interface":[45],"Context":[180],"Exchange":[2396],"IERC20":[3445],"Ownable":[158],"PriceChecker":[2565],"SafeMath":[492],"TradingFees":[2795],"Wallet":[3359]},"id":2796,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2567,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"35:23:6"},{"absolutePath":"contracts/PriceChecker.sol","file":"./PriceChecker.sol","id":2568,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2796,"sourceUnit":2566,"src":"62:28:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Wallet.sol","file":"./Wallet.sol","id":2569,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2796,"sourceUnit":3360,"src":"92:22:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":2570,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2796,"sourceUnit":493,"src":"189:57:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":2571,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2796,"sourceUnit":46,"src":"248:76:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2572,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2796,"sourceUnit":159,"src":"326:52:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2573,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":158,"src":"406:7:6"},"id":2574,"nodeType":"InheritanceSpecifier","src":"406:7:6"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2795,"linearizedBaseContracts":[2795,158,180],"name":"TradingFees","nameLocation":"391:11:6","nodeType":"ContractDefinition","nodes":[{"id":2577,"libraryName":{"id":2575,"name":"SafeMath","nodeType":"IdentifierPath","referencedDeclaration":492,"src":"924:8:6"},"nodeType":"UsingForDirective","src":"918:27:6","typeName":{"id":2576,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":2582,"mutability":"mutable","name":"decimals","nameLocation":"998:8:6","nodeType":"VariableDeclaration","scope":2795,"src":"990:27:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2578,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":2581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1009:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":2580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1015:2:6","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"1009:8:6","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"visibility":"internal"},{"constant":false,"functionSelector":"be22f546","id":2588,"mutability":"mutable","name":"daiToken","nameLocation":"1039:8:6","nodeType":"VariableDeclaration","scope":2795,"src":"1024:86:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2583,"name":"address","nodeType":"ElementaryTypeName","src":"1024:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"307842613844436544333531323932356535324645363762316235333239313837353839303732413535","id":2586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1067:42:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xBa8DCeD3512925e52FE67b1b5329187589072A55"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1059:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2584,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:6","typeDescriptions":{}}},"id":2587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1059:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"1a38a4fb","id":2594,"mutability":"mutable","name":"aDAI","nameLocation":"1157:4:6","nodeType":"VariableDeclaration","scope":2795,"src":"1142:73:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2589,"name":"address","nodeType":"ElementaryTypeName","src":"1142:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"307841444439384230333432653430393445633332663362363743636664333234324338373666663761","id":2592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1172:42:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xADD98B0342e4094Ec32f3b67Ccfd3242C876ff7a"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1164:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2590,"name":"address","nodeType":"ElementaryTypeName","src":"1164:7:6","typeDescriptions":{}}},"id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1164:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":2597,"mutability":"mutable","name":"priceFeed","nameLocation":"1260:9:6","nodeType":"VariableDeclaration","scope":2795,"src":"1247:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2565","typeString":"contract PriceChecker"},"typeName":{"id":2596,"nodeType":"UserDefinedTypeName","pathNode":{"id":2595,"name":"PriceChecker","nodeType":"IdentifierPath","referencedDeclaration":2565,"src":"1247:12:6"},"referencedDeclaration":2565,"src":"1247:12:6","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2565","typeString":"contract PriceChecker"}},"visibility":"internal"},{"constant":false,"id":2600,"mutability":"mutable","name":"wallet","nameLocation":"1283:6:6","nodeType":"VariableDeclaration","scope":2795,"src":"1276:13:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"},"typeName":{"id":2599,"nodeType":"UserDefinedTypeName","pathNode":{"id":2598,"name":"Wallet","nodeType":"IdentifierPath","referencedDeclaration":3359,"src":"1276:6:6"},"referencedDeclaration":3359,"src":"1276:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"visibility":"internal"},{"body":{"id":2611,"nodeType":"Block","src":"1340:65:6","statements":[{"expression":{"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2605,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"1351:9:6","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2565","typeString":"contract PriceChecker"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2607,"name":"_priceCheckerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"1376:20:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2606,"name":"PriceChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"1363:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PriceChecker_$2565_$","typeString":"type(contract PriceChecker)"}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1363:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2565","typeString":"contract PriceChecker"}},"src":"1351:46:6","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2565","typeString":"contract PriceChecker"}},"id":2610,"nodeType":"ExpressionStatement","src":"1351:46:6"}]},"id":2612,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2602,"mutability":"mutable","name":"_priceCheckerAddress","nameLocation":"1318:20:6","nodeType":"VariableDeclaration","scope":2612,"src":"1310:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2601,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1309:30:6"},"returnParameters":{"id":2604,"nodeType":"ParameterList","parameters":[],"src":"1340:0:6"},"scope":2795,"src":"1298:107:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2665,"nodeType":"Block","src":"1551:542:6","statements":[{"assignments":[2624],"declarations":[{"constant":false,"id":2624,"mutability":"mutable","name":"priceOfToken","nameLocation":"1797:12:6","nodeType":"VariableDeclaration","scope":2665,"src":"1789:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2623,"name":"uint256","nodeType":"ElementaryTypeName","src":"1789:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2629,"initialValue":{"arguments":[{"id":2627,"name":"_refToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"1831:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2625,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"1812:9:6","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2565","typeString":"contract PriceChecker"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPrice","nodeType":"MemberAccess","referencedDeclaration":2564,"src":"1812:18:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1812:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1789:52:6"},{"assignments":[2631],"declarations":[{"constant":false,"id":2631,"mutability":"mutable","name":"value","nameLocation":"1880:5:6","nodeType":"VariableDeclaration","scope":2665,"src":"1872:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2630,"name":"uint256","nodeType":"ElementaryTypeName","src":"1872:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2653,"initialValue":{"arguments":[{"id":2651,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"1987:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"id":2646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1961:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3130","id":2645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1967:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1961:8:6","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}],"expression":{"id":2642,"name":"priceOfToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"1944:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"1944:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1944:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":2638,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"1929:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":2634,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"1917:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2632,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"1905:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"1905:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1905:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2636,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1904:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":401,"src":"1904:24:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1904:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2640,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1903:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"1903:40:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1903:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2649,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1888:94:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":401,"src":"1888:98:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1888:108:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1872:124:6"},{"assignments":[2655],"declarations":[{"constant":false,"id":2655,"mutability":"mutable","name":"fees","nameLocation":"2015:4:6","nodeType":"VariableDeclaration","scope":2665,"src":"2007:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2654,"name":"uint256","nodeType":"ElementaryTypeName","src":"2007:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2662,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2032:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2038:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2032:7:6","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}],"expression":{"id":2656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"2022:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":401,"src":"2022:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2022:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2007:33:6"},{"expression":{"id":2663,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"2060:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2622,"id":2664,"nodeType":"Return","src":"2053:11:6"}]},"functionSelector":"513ffedd","id":2666,"implemented":true,"kind":"function","modifiers":[],"name":"calculateFees","nameLocation":"1422:13:6","nodeType":"FunctionDefinition","parameters":{"id":2619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2614,"mutability":"mutable","name":"_amount","nameLocation":"1454:7:6","nodeType":"VariableDeclaration","scope":2666,"src":"1446:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2613,"name":"uint256","nodeType":"ElementaryTypeName","src":"1446:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2616,"mutability":"mutable","name":"_rate","nameLocation":"1480:5:6","nodeType":"VariableDeclaration","scope":2666,"src":"1472:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2615,"name":"uint256","nodeType":"ElementaryTypeName","src":"1472:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2618,"mutability":"mutable","name":"_refToken","nameLocation":"1504:9:6","nodeType":"VariableDeclaration","scope":2666,"src":"1496:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2617,"name":"address","nodeType":"ElementaryTypeName","src":"1496:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1435:85:6"},"returnParameters":{"id":2622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2666,"src":"1542:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2620,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:9:6"},"scope":2795,"src":"1413:680:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2700,"nodeType":"Block","src":"2215:199:6","statements":[{"assignments":[2674],"declarations":[{"constant":false,"id":2674,"mutability":"mutable","name":"aDAI_Price","nameLocation":"2234:10:6","nodeType":"VariableDeclaration","scope":2700,"src":"2226:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2673,"name":"uint256","nodeType":"ElementaryTypeName","src":"2226:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2679,"initialValue":{"arguments":[{"id":2677,"name":"daiToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"2266:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2675,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"2247:9:6","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2565","typeString":"contract PriceChecker"}},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPrice","nodeType":"MemberAccess","referencedDeclaration":2564,"src":"2247:18:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2247:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2226:49:6"},{"assignments":[2681],"declarations":[{"constant":false,"id":2681,"mutability":"mutable","name":"amt","nameLocation":"2321:3:6","nodeType":"VariableDeclaration","scope":2700,"src":"2313:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2680,"name":"uint256","nodeType":"ElementaryTypeName","src":"2313:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2694,"initialValue":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"id":2691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2366:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3130","id":2690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2372:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"2366:8:6","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}],"expression":{"id":2687,"name":"aDAI_Price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"2351:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"2351:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2351:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2684,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"2337:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2682,"name":"_fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"2327:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"2327:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2327:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":401,"src":"2327:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2327:49:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2313:63:6"},{"expression":{"arguments":[{"id":2697,"name":"amt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"2402:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2394:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2695,"name":"uint256","nodeType":"ElementaryTypeName","src":"2394:7:6","typeDescriptions":{}}},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2394:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2672,"id":2699,"nodeType":"Return","src":"2387:19:6"}]},"functionSelector":"a42963e9","id":2701,"implemented":true,"kind":"function","modifiers":[],"name":"amountaDAIToDeduct","nameLocation":"2151:18:6","nodeType":"FunctionDefinition","parameters":{"id":2669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2668,"mutability":"mutable","name":"_fees","nameLocation":"2178:5:6","nodeType":"VariableDeclaration","scope":2701,"src":"2170:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2667,"name":"uint256","nodeType":"ElementaryTypeName","src":"2170:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2169:15:6"},"returnParameters":{"id":2672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2701,"src":"2206:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2670,"name":"uint256","nodeType":"ElementaryTypeName","src":"2206:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2205:9:6"},"scope":2795,"src":"2142:272:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2737,"nodeType":"Block","src":"2585:192:6","statements":[{"assignments":[2711],"declarations":[{"constant":false,"id":2711,"mutability":"mutable","name":"priceOfToken","nameLocation":"2604:12:6","nodeType":"VariableDeclaration","scope":2737,"src":"2596:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2710,"name":"uint256","nodeType":"ElementaryTypeName","src":"2596:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2716,"initialValue":{"arguments":[{"id":2714,"name":"_refToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"2638:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2712,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"2619:9:6","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2565","typeString":"contract PriceChecker"}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPrice","nodeType":"MemberAccess","referencedDeclaration":2564,"src":"2619:18:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2619:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2596:52:6"},{"assignments":[2718],"declarations":[{"constant":false,"id":2718,"mutability":"mutable","name":"amt","nameLocation":"2682:3:6","nodeType":"VariableDeclaration","scope":2737,"src":"2674:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2717,"name":"uint256","nodeType":"ElementaryTypeName","src":"2674:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2731,"initialValue":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"id":2728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2729:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3130","id":2727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2735:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"2729:8:6","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}],"expression":{"id":2724,"name":"priceOfToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"2712:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"2712:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2712:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2721,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"2698:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2719,"name":"_fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"2688:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"2688:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2688:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":401,"src":"2688:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2688:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2674:65:6"},{"expression":{"arguments":[{"id":2734,"name":"amt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"2765:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2757:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2732,"name":"uint256","nodeType":"ElementaryTypeName","src":"2757:7:6","typeDescriptions":{}}},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2757:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2709,"id":2736,"nodeType":"Return","src":"2750:19:6"}]},"functionSelector":"b98ee419","id":2738,"implemented":true,"kind":"function","modifiers":[],"name":"amountTokensToDeduct","nameLocation":"2475:20:6","nodeType":"FunctionDefinition","parameters":{"id":2706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2703,"mutability":"mutable","name":"_refToken","nameLocation":"2514:9:6","nodeType":"VariableDeclaration","scope":2738,"src":"2506:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2702,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2705,"mutability":"mutable","name":"_fees","nameLocation":"2542:5:6","nodeType":"VariableDeclaration","scope":2738,"src":"2534:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2704,"name":"uint256","nodeType":"ElementaryTypeName","src":"2534:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2495:59:6"},"returnParameters":{"id":2709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2738,"src":"2576:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2707,"name":"uint256","nodeType":"ElementaryTypeName","src":"2576:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2575:9:6"},"scope":2795,"src":"2466:311:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2765,"nodeType":"Block","src":"2896:155:6","statements":[{"assignments":[2748],"declarations":[{"constant":false,"id":2748,"mutability":"mutable","name":"amtDAI","nameLocation":"2915:6:6","nodeType":"VariableDeclaration","scope":2765,"src":"2907:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2747,"name":"uint256","nodeType":"ElementaryTypeName","src":"2907:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2752,"initialValue":{"arguments":[{"id":2750,"name":"_fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"2943:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2749,"name":"amountaDAIToDeduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"2924:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2924:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2907:42:6"},{"assignments":[2754],"declarations":[{"constant":false,"id":2754,"mutability":"mutable","name":"balance","nameLocation":"2968:7:6","nodeType":"VariableDeclaration","scope":2765,"src":"2960:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2753,"name":"uint256","nodeType":"ElementaryTypeName","src":"2960:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2760,"initialValue":{"arguments":[{"id":2757,"name":"aDAI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"2994:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2758,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"3000:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2755,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"2978:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"s_tokens","nodeType":"MemberAccess","referencedDeclaration":2823,"src":"2978:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2978:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2960:46:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2761,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"3026:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2762,"name":"amtDAI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"3037:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3026:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2746,"id":2764,"nodeType":"Return","src":"3019:24:6"}]},"functionSelector":"ca8963f1","id":2766,"implemented":true,"kind":"function","modifiers":[],"name":"checkSufficientaDAI","nameLocation":"2794:19:6","nodeType":"FunctionDefinition","parameters":{"id":2743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2740,"mutability":"mutable","name":"_fees","nameLocation":"2832:5:6","nodeType":"VariableDeclaration","scope":2766,"src":"2824:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2739,"name":"uint256","nodeType":"ElementaryTypeName","src":"2824:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2742,"mutability":"mutable","name":"_user","nameLocation":"2856:5:6","nodeType":"VariableDeclaration","scope":2766,"src":"2848:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2741,"name":"address","nodeType":"ElementaryTypeName","src":"2848:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2813:55:6"},"returnParameters":{"id":2746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2766,"src":"2890:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2744,"name":"bool","nodeType":"ElementaryTypeName","src":"2890:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2889:6:6"},"scope":2795,"src":"2785:266:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2779,"nodeType":"Block","src":"3126:50:6","statements":[{"expression":{"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2773,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"3137:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2775,"name":"_Walletaddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"3153:14:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2774,"name":"Wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"3146:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Wallet_$3359_$","typeString":"type(contract Wallet)"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3146:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"src":"3137:31:6","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}},"id":2778,"nodeType":"ExpressionStatement","src":"3137:31:6"}]},"functionSelector":"ac1a386a","id":2780,"implemented":true,"kind":"function","modifiers":[{"id":2771,"kind":"modifierInvocation","modifierName":{"id":2770,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"3116:9:6"},"nodeType":"ModifierInvocation","src":"3116:9:6"}],"name":"setWalletAddress","nameLocation":"3068:16:6","nodeType":"FunctionDefinition","parameters":{"id":2769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2768,"mutability":"mutable","name":"_Walletaddress","nameLocation":"3093:14:6","nodeType":"VariableDeclaration","scope":2780,"src":"3085:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2767,"name":"address","nodeType":"ElementaryTypeName","src":"3085:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3084:24:6"},"returnParameters":{"id":2772,"nodeType":"ParameterList","parameters":[],"src":"3126:0:6"},"scope":2795,"src":"3059:117:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2793,"nodeType":"Block","src":"3279:65:6","statements":[{"expression":{"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2787,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"3290:9:6","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2565","typeString":"contract PriceChecker"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2789,"name":"_PriceCheckeraddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"3315:20:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2788,"name":"PriceChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"3302:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PriceChecker_$2565_$","typeString":"type(contract PriceChecker)"}},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3302:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2565","typeString":"contract PriceChecker"}},"src":"3290:46:6","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2565","typeString":"contract PriceChecker"}},"id":2792,"nodeType":"ExpressionStatement","src":"3290:46:6"}]},"functionSelector":"b136e39a","id":2794,"implemented":true,"kind":"function","modifiers":[{"id":2785,"kind":"modifierInvocation","modifierName":{"id":2784,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"3269:9:6"},"nodeType":"ModifierInvocation","src":"3269:9:6"}],"name":"setPriceCheckerAddress","nameLocation":"3193:22:6","nodeType":"FunctionDefinition","parameters":{"id":2783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2782,"mutability":"mutable","name":"_PriceCheckeraddress","nameLocation":"3234:20:6","nodeType":"VariableDeclaration","scope":2794,"src":"3226:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2781,"name":"address","nodeType":"ElementaryTypeName","src":"3226:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3215:46:6"},"returnParameters":{"id":2786,"nodeType":"ParameterList","parameters":[],"src":"3279:0:6"},"scope":2795,"src":"3184:160:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":2796,"src":"382:2965:6","usedErrors":[]}],"src":"35:3314:6"},"id":6},"contracts/Wallet.sol":{"ast":{"absolutePath":"contracts/Wallet.sol","exportedSymbols":{"AggregatorV3Interface":[45],"Context":[180],"Exchange":[2396],"IERC20":[3445],"Ownable":[158],"SafeMath":[492],"Wallet":[3359]},"id":3360,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2797,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"35:23:7"},{"absolutePath":"contracts/interface/IERC20.sol","file":"./interface/IERC20.sol","id":2798,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3360,"sourceUnit":3446,"src":"62:32:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Exchange.sol","file":"./Exchange.sol","id":2799,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3360,"sourceUnit":2397,"src":"96:24:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":2800,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3360,"sourceUnit":493,"src":"195:57:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":2801,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3360,"sourceUnit":46,"src":"254:76:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2802,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3360,"sourceUnit":159,"src":"332:52:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2803,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":158,"src":"407:7:7"},"id":2804,"nodeType":"InheritanceSpecifier","src":"407:7:7"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3359,"linearizedBaseContracts":[3359,158,180],"name":"Wallet","nameLocation":"397:6:7","nodeType":"ContractDefinition","nodes":[{"id":2807,"libraryName":{"id":2805,"name":"SafeMath","nodeType":"IdentifierPath","referencedDeclaration":492,"src":"428:8:7"},"nodeType":"UsingForDirective","src":"422:27:7","typeName":{"id":2806,"name":"uint256","nodeType":"ElementaryTypeName","src":"441:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"functionSelector":"b4a99a4e","id":2809,"mutability":"immutable","name":"Owner","nameLocation":"519:5:7","nodeType":"VariableDeclaration","scope":3359,"src":"494:30:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2808,"name":"address","nodeType":"ElementaryTypeName","src":"494:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":2811,"mutability":"mutable","name":"locked","nameLocation":"582:6:7","nodeType":"VariableDeclaration","scope":3359,"src":"569:19:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2810,"name":"bool","nodeType":"ElementaryTypeName","src":"569:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"constant":false,"functionSelector":"7bf1a627","id":2817,"mutability":"mutable","name":"ethToken","nameLocation":"612:8:7","nodeType":"VariableDeclaration","scope":3359,"src":"597:36:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2812,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"30","id":2815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"631:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"623:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2813,"name":"address","nodeType":"ElementaryTypeName","src":"623:7:7","typeDescriptions":{}}},"id":2816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"623:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"cd5d767c","id":2823,"mutability":"mutable","name":"s_tokens","nameLocation":"697:8:7","nodeType":"VariableDeclaration","scope":3359,"src":"642:63:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":2822,"keyType":{"id":2818,"name":"address","nodeType":"ElementaryTypeName","src":"650:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"642:47:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":2821,"keyType":{"id":2819,"name":"address","nodeType":"ElementaryTypeName","src":"669:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"661:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2820,"name":"uint256","nodeType":"ElementaryTypeName","src":"680:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"4bdde1cf","id":2829,"mutability":"mutable","name":"lockedFunds","nameLocation":"807:11:7","nodeType":"VariableDeclaration","scope":3359,"src":"752:66:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":2828,"keyType":{"id":2824,"name":"address","nodeType":"ElementaryTypeName","src":"760:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"752:47:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":2827,"keyType":{"id":2825,"name":"address","nodeType":"ElementaryTypeName","src":"779:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"771:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2826,"name":"uint256","nodeType":"ElementaryTypeName","src":"790:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"id":2832,"mutability":"mutable","name":"exchange","nameLocation":"836:8:7","nodeType":"VariableDeclaration","scope":3359,"src":"827:17:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2396","typeString":"contract Exchange"},"typeName":{"id":2831,"nodeType":"UserDefinedTypeName","pathNode":{"id":2830,"name":"Exchange","nodeType":"IdentifierPath","referencedDeclaration":2396,"src":"827:8:7"},"referencedDeclaration":2396,"src":"827:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2396","typeString":"contract Exchange"}},"visibility":"internal"},{"constant":false,"id":2835,"mutability":"mutable","name":"token","nameLocation":"858:5:7","nodeType":"VariableDeclaration","scope":3359,"src":"851:12:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3445","typeString":"contract IERC20"},"typeName":{"id":2834,"nodeType":"UserDefinedTypeName","pathNode":{"id":2833,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":3445,"src":"851:6:7"},"referencedDeclaration":3445,"src":"851:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3445","typeString":"contract IERC20"}},"visibility":"internal"},{"anonymous":false,"id":2845,"name":"Deposit","nameLocation":"878:7:7","nodeType":"EventDefinition","parameters":{"id":2844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2837,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"894:5:7","nodeType":"VariableDeclaration","scope":2845,"src":"886:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2836,"name":"address","nodeType":"ElementaryTypeName","src":"886:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2839,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"909:4:7","nodeType":"VariableDeclaration","scope":2845,"src":"901:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2838,"name":"address","nodeType":"ElementaryTypeName","src":"901:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2841,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"923:6:7","nodeType":"VariableDeclaration","scope":2845,"src":"915:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2840,"name":"uint256","nodeType":"ElementaryTypeName","src":"915:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2843,"indexed":false,"mutability":"mutable","name":"balance","nameLocation":"939:7:7","nodeType":"VariableDeclaration","scope":2845,"src":"931:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2842,"name":"uint256","nodeType":"ElementaryTypeName","src":"931:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"885:62:7"},"src":"872:76:7"},{"anonymous":false,"documentation":{"id":2846,"nodeType":"StructuredDocumentation","src":"956:48:7","text":"@notice Event when amount withdrawn exchange"},"id":2856,"name":"Withdraw","nameLocation":"1016:8:7","nodeType":"EventDefinition","parameters":{"id":2855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2848,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1043:5:7","nodeType":"VariableDeclaration","scope":2856,"src":"1035:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2847,"name":"address","nodeType":"ElementaryTypeName","src":"1035:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2850,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"1067:4:7","nodeType":"VariableDeclaration","scope":2856,"src":"1059:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2849,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2852,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1090:6:7","nodeType":"VariableDeclaration","scope":2856,"src":"1082:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2851,"name":"uint256","nodeType":"ElementaryTypeName","src":"1082:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2854,"indexed":false,"mutability":"mutable","name":"balance","nameLocation":"1115:7:7","nodeType":"VariableDeclaration","scope":2856,"src":"1107:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2853,"name":"uint256","nodeType":"ElementaryTypeName","src":"1107:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1024:105:7"},"src":"1010:120:7"},{"body":{"id":2864,"nodeType":"Block","src":"1152:37:7","statements":[{"expression":{"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2859,"name":"Owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"1163:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2860,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1171:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1171:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1163:18:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2863,"nodeType":"ExpressionStatement","src":"1163:18:7"}]},"id":2865,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2857,"nodeType":"ParameterList","parameters":[],"src":"1149:2:7"},"returnParameters":{"id":2858,"nodeType":"ParameterList","parameters":[],"src":"1152:0:7"},"scope":3359,"src":"1138:51:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2890,"nodeType":"Block","src":"1236:225:7","statements":[{"expression":{"arguments":[{"id":2869,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"1261:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2870,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1271:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1271:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2872,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1283:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"1283:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1294:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2868,"name":"updateBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"1247:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1247:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2876,"nodeType":"ExpressionStatement","src":"1247:52:7"},{"eventCall":{"arguments":[{"id":2878,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"1339:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2879,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1362:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1362:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2881,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1387:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"1387:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2884,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"1421:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2885,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1431:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1431:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2883,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"1411:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1411:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2877,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"1317:7:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1317:136:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2889,"nodeType":"EmitStatement","src":"1312:141:7"}]},"functionSelector":"f6326fb3","id":2891,"implemented":true,"kind":"function","modifiers":[],"name":"depositETH","nameLocation":"1206:10:7","nodeType":"FunctionDefinition","parameters":{"id":2866,"nodeType":"ParameterList","parameters":[],"src":"1216:2:7"},"returnParameters":{"id":2867,"nodeType":"ParameterList","parameters":[],"src":"1236:0:7"},"scope":3359,"src":"1197:264:7","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2963,"nodeType":"Block","src":"1516:657:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"id":2904,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1618:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1618:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2906,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"1630:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2903,"name":"getlockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"1603:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1603:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2898,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"1559:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2899,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1569:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1569:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2897,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"1549:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1549:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":371,"src":"1549:35:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1549:105:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2909,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"1658:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1549:116:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e63652045544820746f207769746864726177","id":2911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1680:38:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4","typeString":"literal_string \"Insufficient balance ETH to withdraw\""},"value":"Insufficient balance ETH to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4","typeString":"literal_string \"Insufficient balance ETH to withdraw\""}],"id":2896,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1527:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1527:202:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2913,"nodeType":"ExpressionStatement","src":"1527:202:7"},{"expression":{"arguments":[{"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1748:7:7","subExpression":{"id":2915,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"1749:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e742063616c6c20646574656374656421","id":2917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1757:26:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","typeString":"literal_string \"Reentrant call detected!\""},"value":"Reentrant call detected!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","typeString":"literal_string \"Reentrant call detected!\""}],"id":2914,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1740:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1740:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2919,"nodeType":"ExpressionStatement","src":"1740:44:7"},{"expression":{"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2920,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"1795:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1804:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1795:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2923,"nodeType":"ExpressionStatement","src":"1795:13:7"},{"expression":{"arguments":[{"id":2925,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"1833:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2926,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1843:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1843:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2928,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"1855:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1864:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2924,"name":"updateBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"1819:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1819:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2931,"nodeType":"ExpressionStatement","src":"1819:51:7"},{"expression":{"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2932,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"1881:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1890:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1881:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2935,"nodeType":"ExpressionStatement","src":"1881:14:7"},{"assignments":[2937,null],"declarations":[{"constant":false,"id":2937,"mutability":"mutable","name":"success","nameLocation":"1912:7:7","nodeType":"VariableDeclaration","scope":2963,"src":"1907:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2936,"name":"bool","nodeType":"ElementaryTypeName","src":"1907:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2945,"initialValue":{"arguments":[{"hexValue":"","id":2943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1957:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":2938,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1925:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1925:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"1925:15:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2941,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"1948:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1925:31:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1925:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1906:54:7"},{"expression":{"arguments":[{"id":2947,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"1979:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6661696c656420746f2073656e6420616d6f756e74","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1988:23:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4","typeString":"literal_string \"failed to send amount\""},"value":"failed to send amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4","typeString":"literal_string \"failed to send amount\""}],"id":2946,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1971:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1971:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2950,"nodeType":"ExpressionStatement","src":"1971:41:7"},{"eventCall":{"arguments":[{"id":2952,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"2053:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2953,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2076:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2076:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2955,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"2101:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2957,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"2133:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2958,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2143:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2143:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2956,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"2123:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2123:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2951,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"2030:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2030:135:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2962,"nodeType":"EmitStatement","src":"2025:140:7"}]},"functionSelector":"f14210a6","id":2964,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawETH","nameLocation":"1478:11:7","nodeType":"FunctionDefinition","parameters":{"id":2894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2893,"mutability":"mutable","name":"_amount","nameLocation":"1498:7:7","nodeType":"VariableDeclaration","scope":2964,"src":"1490:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2892,"name":"uint256","nodeType":"ElementaryTypeName","src":"1490:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1489:17:7"},"returnParameters":{"id":2895,"nodeType":"ParameterList","parameters":[],"src":"1516:0:7"},"scope":3359,"src":"1469:704:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3052,"nodeType":"Block","src":"2389:907:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2974,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"2408:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2975,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"2418:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2408:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2973,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2400:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2400:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2978,"nodeType":"ExpressionStatement","src":"2400:27:7"},{"expression":{"arguments":[{"arguments":[{"id":2982,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"2485:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2980,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"2460:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2396","typeString":"contract Exchange"}},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isVerifiedToken","nodeType":"MemberAccess","referencedDeclaration":2283,"src":"2460:24:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2460:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f74207665726966696564206f6e2045786368616e6765","id":2984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2507:32:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a","typeString":"literal_string \"Token not verified on Exchange\""},"value":"Token not verified on Exchange"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a","typeString":"literal_string \"Token not verified on Exchange\""}],"id":2979,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2438:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2438:112:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2986,"nodeType":"ExpressionStatement","src":"2438:112:7"},{"expression":{"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2987,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"2627:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3445","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2989,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"2642:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2988,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"2635:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3445_$","typeString":"type(contract IERC20)"}},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2635:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3445","typeString":"contract IERC20"}},"src":"2627:22:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3445","typeString":"contract IERC20"}},"id":2992,"nodeType":"ExpressionStatement","src":"2627:22:7"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":2996,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2738:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2738:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3000,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2758:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}],"id":2999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2750:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2998,"name":"address","nodeType":"ElementaryTypeName","src":"2750:7:7","typeDescriptions":{}}},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2750:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3002,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"2765:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2994,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"2719:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3445","typeString":"contract IERC20"}},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":3444,"src":"2719:18:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2719:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20417070726f76616c20796574","id":3004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2788:17:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba","typeString":"literal_string \"No Approval yet\""},"value":"No Approval yet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba","typeString":"literal_string \"No Approval yet\""}],"id":2993,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2697:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2697:119:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3006,"nodeType":"ExpressionStatement","src":"2697:119:7"},{"assignments":[3008],"declarations":[{"constant":false,"id":3008,"mutability":"mutable","name":"decimals","nameLocation":"2835:8:7","nodeType":"VariableDeclaration","scope":3052,"src":"2827:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3007,"name":"uint256","nodeType":"ElementaryTypeName","src":"2827:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3010,"initialValue":{"hexValue":"3138","id":3009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2846:2:7","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"nodeType":"VariableDeclarationStatement","src":"2827:21:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3011,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"2863:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3138","id":3012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2876:2:7","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"2863:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"arguments":[{"id":3024,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"3006:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3025,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3031:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3031:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3072:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[{"id":3032,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"3091:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3030,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"3078:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":371,"src":"3078:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3078:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3072:29:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3027,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"3060:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"3060:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3060:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":3036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3121:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3023,"name":"updateBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"2974:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2974:166:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3038,"nodeType":"ExpressionStatement","src":"2974:166:7"},"id":3039,"nodeType":"IfStatement","src":"2859:281:7","trueBody":{"id":3022,"nodeType":"Block","src":"2880:75:7","statements":[{"expression":{"arguments":[{"id":3015,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"2909:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3016,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2917:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2917:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3018,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"2929:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":3019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2938:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3014,"name":"updateBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"2895:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2895:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3021,"nodeType":"ExpressionStatement","src":"2895:48:7"}]}},{"eventCall":{"arguments":[{"id":3041,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"3180:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3042,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3201:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3201:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3044,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"3226:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3046,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"3258:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3047,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3266:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3266:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3045,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"3248:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3248:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3040,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"3158:7:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3158:130:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3051,"nodeType":"EmitStatement","src":"3153:135:7"}]},"functionSelector":"99c6d2de","id":3053,"implemented":true,"kind":"function","modifiers":[],"name":"depositToken","nameLocation":"2281:12:7","nodeType":"FunctionDefinition","parameters":{"id":2971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2966,"mutability":"mutable","name":"_token","nameLocation":"2312:6:7","nodeType":"VariableDeclaration","scope":3053,"src":"2304:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2965,"name":"address","nodeType":"ElementaryTypeName","src":"2304:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2968,"mutability":"mutable","name":"_amount","nameLocation":"2337:7:7","nodeType":"VariableDeclaration","scope":3053,"src":"2329:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2967,"name":"uint256","nodeType":"ElementaryTypeName","src":"2329:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2970,"mutability":"mutable","name":"_decimals","nameLocation":"2363:9:7","nodeType":"VariableDeclaration","scope":3053,"src":"2355:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2969,"name":"uint256","nodeType":"ElementaryTypeName","src":"2355:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2293:86:7"},"returnParameters":{"id":2972,"nodeType":"ParameterList","parameters":[],"src":"2389:0:7"},"scope":3359,"src":"2272:1024:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3186,"nodeType":"Block","src":"3422:1248:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3063,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"3441:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3064,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"3451:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3441:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3062,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3433:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3433:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3067,"nodeType":"ExpressionStatement","src":"3433:27:7"},{"expression":{"arguments":[{"arguments":[{"id":3071,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"3518:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3069,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"3493:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2396","typeString":"contract Exchange"}},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isVerifiedToken","nodeType":"MemberAccess","referencedDeclaration":2283,"src":"3493:24:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3493:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f74207665726966696564206f6e2045786368616e6765","id":3073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3540:32:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a","typeString":"literal_string \"Token not verified on Exchange\""},"value":"Token not verified on Exchange"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a","typeString":"literal_string \"Token not verified on Exchange\""}],"id":3068,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3471:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3471:112:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3075,"nodeType":"ExpressionStatement","src":"3471:112:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"id":3084,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3685:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3685:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3086,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"3697:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3083,"name":"getlockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"3670:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3670:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3078,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"3628:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3079,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3636:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3636:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3077,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"3618:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3618:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":371,"src":"3618:33:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3618:101:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3089,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"3723:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3618:112:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420546f6b656e7320746f207769746864726177","id":3091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3745:33:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9","typeString":"literal_string \"Insufficient Tokens to withdraw\""},"value":"Insufficient Tokens to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9","typeString":"literal_string \"Insufficient Tokens to withdraw\""}],"id":3076,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3596:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3596:193:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3093,"nodeType":"ExpressionStatement","src":"3596:193:7"},{"expression":{"arguments":[{"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3808:7:7","subExpression":{"id":3095,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"3809:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e742063616c6c20646574656374656421","id":3097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3817:26:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","typeString":"literal_string \"Reentrant call detected!\""},"value":"Reentrant call detected!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","typeString":"literal_string \"Reentrant call detected!\""}],"id":3094,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3800:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3800:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3099,"nodeType":"ExpressionStatement","src":"3800:44:7"},{"expression":{"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3100,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"3855:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3864:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3855:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3103,"nodeType":"ExpressionStatement","src":"3855:13:7"},{"expression":{"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3104,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"3881:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3445","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3106,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"3896:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3105,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"3889:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3445_$","typeString":"type(contract IERC20)"}},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3889:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3445","typeString":"contract IERC20"}},"src":"3881:22:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3445","typeString":"contract IERC20"}},"id":3109,"nodeType":"ExpressionStatement","src":"3881:22:7"},{"assignments":[3111],"declarations":[{"constant":false,"id":3111,"mutability":"mutable","name":"decimals","nameLocation":"3922:8:7","nodeType":"VariableDeclaration","scope":3186,"src":"3914:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3110,"name":"uint256","nodeType":"ElementaryTypeName","src":"3914:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3113,"initialValue":{"hexValue":"3138","id":3112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3933:2:7","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"nodeType":"VariableDeclarationStatement","src":"3914:21:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3114,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"3950:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3138","id":3115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3963:2:7","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"3950:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3168,"nodeType":"Block","src":"4108:381:7","statements":[{"expression":{"arguments":[{"id":3136,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"4155:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3137,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4180:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4180:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4221:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[{"id":3144,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"4240:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3142,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"4227:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":371,"src":"4227:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4227:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4221:29:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3139,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"4209:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"4209:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4209:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":3148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4270:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3135,"name":"updateBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"4123:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4123:167:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3150,"nodeType":"ExpressionStatement","src":"4123:167:7"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":3154,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4368:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4368:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4413:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[{"id":3161,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"4432:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3159,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"4419:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":371,"src":"4419:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4419:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4413:29:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3156,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"4401:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":401,"src":"4401:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4401:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3152,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"4331:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3445","typeString":"contract IERC20"}},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":3433,"src":"4331:14:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4331:131:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3151,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4305:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4305:172:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3167,"nodeType":"ExpressionStatement","src":"4305:172:7"}]},"id":3169,"nodeType":"IfStatement","src":"3946:543:7","trueBody":{"id":3134,"nodeType":"Block","src":"3967:135:7","statements":[{"expression":{"arguments":[{"id":3118,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"3996:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3119,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4004:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4004:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3121,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"4016:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":3122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4025:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3117,"name":"updateBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"3982:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3982:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3124,"nodeType":"ExpressionStatement","src":"3982:49:7"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":3128,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4069:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4069:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3130,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"4081:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3126,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"4054:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3445","typeString":"contract IERC20"}},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":3433,"src":"4054:14:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4054:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3125,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4046:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4046:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3133,"nodeType":"ExpressionStatement","src":"4046:44:7"}]}},{"expression":{"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3170,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"4501:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4510:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4501:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3173,"nodeType":"ExpressionStatement","src":"4501:14:7"},{"eventCall":{"arguments":[{"id":3175,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"4554:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3176,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4575:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4575:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3178,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"4600:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3180,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"4632:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3181,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4640:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4640:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3179,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"4622:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4622:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3174,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"4531:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4531:131:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3185,"nodeType":"EmitStatement","src":"4526:136:7"}]},"functionSelector":"96c0ec55","id":3187,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawToken","nameLocation":"3313:13:7","nodeType":"FunctionDefinition","parameters":{"id":3060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3055,"mutability":"mutable","name":"_token","nameLocation":"3345:6:7","nodeType":"VariableDeclaration","scope":3187,"src":"3337:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3054,"name":"address","nodeType":"ElementaryTypeName","src":"3337:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3057,"mutability":"mutable","name":"_amount","nameLocation":"3370:7:7","nodeType":"VariableDeclaration","scope":3187,"src":"3362:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3056,"name":"uint256","nodeType":"ElementaryTypeName","src":"3362:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3059,"mutability":"mutable","name":"_decimals","nameLocation":"3396:9:7","nodeType":"VariableDeclaration","scope":3187,"src":"3388:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3058,"name":"uint256","nodeType":"ElementaryTypeName","src":"3388:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3326:86:7"},"returnParameters":{"id":3061,"nodeType":"ParameterList","parameters":[],"src":"3422:0:7"},"scope":3359,"src":"3304:1366:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3202,"nodeType":"Block","src":"4788:52:7","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":3196,"name":"lockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"4806:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3198,"indexExpression":{"id":3197,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"4818:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4806:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3200,"indexExpression":{"id":3199,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"4825:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4806:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3195,"id":3201,"nodeType":"Return","src":"4799:33:7"}]},"functionSelector":"4fc121db","id":3203,"implemented":true,"kind":"function","modifiers":[],"name":"getlockedFunds","nameLocation":"4687:14:7","nodeType":"FunctionDefinition","parameters":{"id":3192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3189,"mutability":"mutable","name":"_user","nameLocation":"4720:5:7","nodeType":"VariableDeclaration","scope":3203,"src":"4712:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3188,"name":"address","nodeType":"ElementaryTypeName","src":"4712:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3191,"mutability":"mutable","name":"_token","nameLocation":"4744:6:7","nodeType":"VariableDeclaration","scope":3203,"src":"4736:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3190,"name":"address","nodeType":"ElementaryTypeName","src":"4736:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4701:56:7"},"returnParameters":{"id":3195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3203,"src":"4779:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3193,"name":"uint256","nodeType":"ElementaryTypeName","src":"4779:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4778:9:7"},"scope":3359,"src":"4678:162:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3253,"nodeType":"Block","src":"4998:301:7","statements":[{"condition":{"id":3216,"name":"isAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"5013:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5157:6:7","subExpression":{"id":3233,"name":"isAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"5158:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3251,"nodeType":"IfStatement","src":"5153:139:7","trueBody":{"id":3250,"nodeType":"Block","src":"5165:127:7","statements":[{"expression":{"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3235,"name":"lockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"5180:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3238,"indexExpression":{"id":3236,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"5192:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5180:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3239,"indexExpression":{"id":3237,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"5199:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5180:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3246,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"5258:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":3240,"name":"lockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"5209:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3242,"indexExpression":{"id":3241,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"5221:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5209:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3244,"indexExpression":{"id":3243,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"5228:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5209:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":371,"src":"5209:30:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5209:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5180:100:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3249,"nodeType":"ExpressionStatement","src":"5180:100:7"}]}},"id":3252,"nodeType":"IfStatement","src":"5009:283:7","trueBody":{"id":3232,"nodeType":"Block","src":"5020:127:7","statements":[{"expression":{"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3217,"name":"lockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"5035:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3220,"indexExpression":{"id":3218,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"5047:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5035:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3221,"indexExpression":{"id":3219,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"5054:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5035:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3228,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"5113:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":3222,"name":"lockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"5064:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3224,"indexExpression":{"id":3223,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"5076:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5064:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3226,"indexExpression":{"id":3225,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"5083:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5064:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":356,"src":"5064:30:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5064:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5035:100:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3231,"nodeType":"ExpressionStatement","src":"5035:100:7"}]}}]},"functionSelector":"46a8f820","id":3254,"implemented":true,"kind":"function","modifiers":[{"id":3214,"kind":"modifierInvocation","modifierName":{"id":3213,"name":"isAuthorised","nodeType":"IdentifierPath","referencedDeclaration":3358,"src":"4985:12:7"},"nodeType":"ModifierInvocation","src":"4985:12:7"}],"name":"updateLockedFunds","nameLocation":"4857:17:7","nodeType":"FunctionDefinition","parameters":{"id":3212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3205,"mutability":"mutable","name":"_user","nameLocation":"4893:5:7","nodeType":"VariableDeclaration","scope":3254,"src":"4885:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3204,"name":"address","nodeType":"ElementaryTypeName","src":"4885:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3207,"mutability":"mutable","name":"_token","nameLocation":"4917:6:7","nodeType":"VariableDeclaration","scope":3254,"src":"4909:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3206,"name":"address","nodeType":"ElementaryTypeName","src":"4909:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3209,"mutability":"mutable","name":"_amount","nameLocation":"4942:7:7","nodeType":"VariableDeclaration","scope":3254,"src":"4934:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3208,"name":"uint256","nodeType":"ElementaryTypeName","src":"4934:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3211,"mutability":"mutable","name":"isAdd","nameLocation":"4965:5:7","nodeType":"VariableDeclaration","scope":3254,"src":"4960:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3210,"name":"bool","nodeType":"ElementaryTypeName","src":"4960:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4874:103:7"},"returnParameters":{"id":3215,"nodeType":"ParameterList","parameters":[],"src":"4998:0:7"},"scope":3359,"src":"4848:451:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3269,"nodeType":"Block","src":"5480:49:7","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":3263,"name":"s_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"5498:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3265,"indexExpression":{"id":3264,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"5507:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5498:16:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3267,"indexExpression":{"id":3266,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"5515:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5498:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3262,"id":3268,"nodeType":"Return","src":"5491:30:7"}]},"functionSelector":"f7888aec","id":3270,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"5384:9:7","nodeType":"FunctionDefinition","parameters":{"id":3259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3256,"mutability":"mutable","name":"_token","nameLocation":"5412:6:7","nodeType":"VariableDeclaration","scope":3270,"src":"5404:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3255,"name":"address","nodeType":"ElementaryTypeName","src":"5404:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3258,"mutability":"mutable","name":"_user","nameLocation":"5437:5:7","nodeType":"VariableDeclaration","scope":3270,"src":"5429:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3257,"name":"address","nodeType":"ElementaryTypeName","src":"5429:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5393:56:7"},"returnParameters":{"id":3262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3270,"src":"5471:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3260,"name":"uint256","nodeType":"ElementaryTypeName","src":"5471:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5470:9:7"},"scope":3359,"src":"5375:154:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3320,"nodeType":"Block","src":"5683:225:7","statements":[{"condition":{"id":3283,"name":"isAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"5698:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5804:6:7","subExpression":{"id":3300,"name":"isAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"5805:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3318,"nodeType":"IfStatement","src":"5800:101:7","trueBody":{"id":3317,"nodeType":"Block","src":"5812:89:7","statements":[{"expression":{"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3302,"name":"s_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"5827:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3305,"indexExpression":{"id":3303,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"5836:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5827:16:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3306,"indexExpression":{"id":3304,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"5844:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5827:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3313,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"5881:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":3307,"name":"s_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"5853:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3309,"indexExpression":{"id":3308,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"5862:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5853:16:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3311,"indexExpression":{"id":3310,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"5870:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5853:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":371,"src":"5853:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5853:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5827:62:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3316,"nodeType":"ExpressionStatement","src":"5827:62:7"}]}},"id":3319,"nodeType":"IfStatement","src":"5694:207:7","trueBody":{"id":3299,"nodeType":"Block","src":"5705:89:7","statements":[{"expression":{"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3284,"name":"s_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"5720:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3287,"indexExpression":{"id":3285,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"5729:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5720:16:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3288,"indexExpression":{"id":3286,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"5737:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5720:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3295,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"5774:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":3289,"name":"s_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"5746:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3291,"indexExpression":{"id":3290,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"5755:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5746:16:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3293,"indexExpression":{"id":3292,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"5763:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5746:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":356,"src":"5746:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5746:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5720:62:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3298,"nodeType":"ExpressionStatement","src":"5720:62:7"}]}}]},"functionSelector":"c5ab4602","id":3321,"implemented":true,"kind":"function","modifiers":[{"id":3281,"kind":"modifierInvocation","modifierName":{"id":3280,"name":"isAuthorised","nodeType":"IdentifierPath","referencedDeclaration":3358,"src":"5670:12:7"},"nodeType":"ModifierInvocation","src":"5670:12:7"}],"name":"updateBalance","nameLocation":"5546:13:7","nodeType":"FunctionDefinition","parameters":{"id":3279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3272,"mutability":"mutable","name":"_token","nameLocation":"5578:6:7","nodeType":"VariableDeclaration","scope":3321,"src":"5570:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3271,"name":"address","nodeType":"ElementaryTypeName","src":"5570:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3274,"mutability":"mutable","name":"_user","nameLocation":"5603:5:7","nodeType":"VariableDeclaration","scope":3321,"src":"5595:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3273,"name":"address","nodeType":"ElementaryTypeName","src":"5595:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3276,"mutability":"mutable","name":"_amount","nameLocation":"5627:7:7","nodeType":"VariableDeclaration","scope":3321,"src":"5619:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3275,"name":"uint256","nodeType":"ElementaryTypeName","src":"5619:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3278,"mutability":"mutable","name":"isAdd","nameLocation":"5650:5:7","nodeType":"VariableDeclaration","scope":3321,"src":"5645:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3277,"name":"bool","nodeType":"ElementaryTypeName","src":"5645:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5559:103:7"},"returnParameters":{"id":3282,"nodeType":"ParameterList","parameters":[],"src":"5683:0:7"},"scope":3359,"src":"5537:371:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3334,"nodeType":"Block","src":"5990:56:7","statements":[{"expression":{"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3328,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"6001:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2396","typeString":"contract Exchange"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3330,"name":"_exchangeAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"6021:16:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3329,"name":"Exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"6012:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Exchange_$2396_$","typeString":"type(contract Exchange)"}},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6012:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2396","typeString":"contract Exchange"}},"src":"6001:37:7","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2396","typeString":"contract Exchange"}},"id":3333,"nodeType":"ExpressionStatement","src":"6001:37:7"}]},"functionSelector":"31415a65","id":3335,"implemented":true,"kind":"function","modifiers":[{"id":3326,"kind":"modifierInvocation","modifierName":{"id":3325,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"5980:9:7"},"nodeType":"ModifierInvocation","src":"5980:9:7"}],"name":"updateExchangeAddress","nameLocation":"5925:21:7","nodeType":"FunctionDefinition","parameters":{"id":3324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3323,"mutability":"mutable","name":"_exchangeAddress","nameLocation":"5955:16:7","nodeType":"VariableDeclaration","scope":3335,"src":"5947:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3322,"name":"address","nodeType":"ElementaryTypeName","src":"5947:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5946:26:7"},"returnParameters":{"id":3327,"nodeType":"ParameterList","parameters":[],"src":"5990:0:7"},"scope":3359,"src":"5916:130:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3357,"nodeType":"Block","src":"6078:169:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3338,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6111:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6111:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3342,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6133:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Wallet_$3359","typeString":"contract Wallet"}],"id":3341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6125:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3340,"name":"address","nodeType":"ElementaryTypeName","src":"6125:7:7","typeDescriptions":{}}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6125:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6111:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3345,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6142:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6142:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3349,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"6164:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2396","typeString":"contract Exchange"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Exchange_$2396","typeString":"contract Exchange"}],"id":3348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6156:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3347,"name":"address","nodeType":"ElementaryTypeName","src":"6156:7:7","typeDescriptions":{}}},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6156:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6142:31:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6111:62:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e617574686f72697365642046756e6374696f6e2043616c6c","id":3353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6188:28:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1","typeString":"literal_string \"Unauthorised Function Call\""},"value":"Unauthorised Function Call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1","typeString":"literal_string \"Unauthorised Function Call\""}],"id":3337,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6089:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6089:138:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3355,"nodeType":"ExpressionStatement","src":"6089:138:7"},{"id":3356,"nodeType":"PlaceholderStatement","src":"6238:1:7"}]},"id":3358,"name":"isAuthorised","nameLocation":"6063:12:7","nodeType":"ModifierDefinition","parameters":{"id":3336,"nodeType":"ParameterList","parameters":[],"src":"6075:2:7"},"src":"6054:193:7","virtual":false,"visibility":"internal"}],"scope":3360,"src":"388:5862:7","usedErrors":[]}],"src":"35:6217:7"},"id":7},"contracts/interface/IERC20.sol":{"ast":{"absolutePath":"contracts/interface/IERC20.sol","exportedSymbols":{"IERC20":[3445]},"id":3446,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3361,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:8"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3445,"linearizedBaseContracts":[3445],"name":"IERC20","nameLocation":"70:6:8","nodeType":"ContractDefinition","nodes":[{"functionSelector":"dd62ed3e","id":3370,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"93:9:8","nodeType":"FunctionDefinition","parameters":{"id":3366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3363,"mutability":"mutable","name":"owner","nameLocation":"121:5:8","nodeType":"VariableDeclaration","scope":3370,"src":"113:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3362,"name":"address","nodeType":"ElementaryTypeName","src":"113:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3365,"mutability":"mutable","name":"spender","nameLocation":"145:7:8","nodeType":"VariableDeclaration","scope":3370,"src":"137:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3364,"name":"address","nodeType":"ElementaryTypeName","src":"137:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"102:57:8"},"returnParameters":{"id":3369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3368,"mutability":"mutable","name":"remaining","nameLocation":"191:9:8","nodeType":"VariableDeclaration","scope":3370,"src":"183:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3367,"name":"uint256","nodeType":"ElementaryTypeName","src":"183:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"182:19:8"},"scope":3445,"src":"84:118:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":3379,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"219:7:8","nodeType":"FunctionDefinition","parameters":{"id":3375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3372,"mutability":"mutable","name":"spender","nameLocation":"245:7:8","nodeType":"VariableDeclaration","scope":3379,"src":"237:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3371,"name":"address","nodeType":"ElementaryTypeName","src":"237:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3374,"mutability":"mutable","name":"value","nameLocation":"271:5:8","nodeType":"VariableDeclaration","scope":3379,"src":"263:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3373,"name":"uint256","nodeType":"ElementaryTypeName","src":"263:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"226:57:8"},"returnParameters":{"id":3378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3377,"mutability":"mutable","name":"success","nameLocation":"307:7:8","nodeType":"VariableDeclaration","scope":3379,"src":"302:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3376,"name":"bool","nodeType":"ElementaryTypeName","src":"302:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"301:14:8"},"scope":3445,"src":"210:106:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":3386,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"333:9:8","nodeType":"FunctionDefinition","parameters":{"id":3382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3381,"mutability":"mutable","name":"owner","nameLocation":"351:5:8","nodeType":"VariableDeclaration","scope":3386,"src":"343:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3380,"name":"address","nodeType":"ElementaryTypeName","src":"343:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"342:15:8"},"returnParameters":{"id":3385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3384,"mutability":"mutable","name":"balance","nameLocation":"389:7:8","nodeType":"VariableDeclaration","scope":3386,"src":"381:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3383,"name":"uint256","nodeType":"ElementaryTypeName","src":"381:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"380:17:8"},"scope":3445,"src":"324:74:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":3391,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"415:8:8","nodeType":"FunctionDefinition","parameters":{"id":3387,"nodeType":"ParameterList","parameters":[],"src":"423:2:8"},"returnParameters":{"id":3390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3389,"mutability":"mutable","name":"decimalPlaces","nameLocation":"455:13:8","nodeType":"VariableDeclaration","scope":3391,"src":"449:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3388,"name":"uint8","nodeType":"ElementaryTypeName","src":"449:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"448:21:8"},"scope":3445,"src":"406:64:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"66188463","id":3400,"implemented":false,"kind":"function","modifiers":[],"name":"decreaseApproval","nameLocation":"487:16:8","nodeType":"FunctionDefinition","parameters":{"id":3396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3393,"mutability":"mutable","name":"spender","nameLocation":"522:7:8","nodeType":"VariableDeclaration","scope":3400,"src":"514:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3392,"name":"address","nodeType":"ElementaryTypeName","src":"514:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3395,"mutability":"mutable","name":"subtractedValue","nameLocation":"548:15:8","nodeType":"VariableDeclaration","scope":3400,"src":"540:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3394,"name":"uint256","nodeType":"ElementaryTypeName","src":"540:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"503:67:8"},"returnParameters":{"id":3399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3398,"mutability":"mutable","name":"success","nameLocation":"594:7:8","nodeType":"VariableDeclaration","scope":3400,"src":"589:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3397,"name":"bool","nodeType":"ElementaryTypeName","src":"589:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"588:14:8"},"scope":3445,"src":"478:125:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d73dd623","id":3409,"implemented":false,"kind":"function","modifiers":[],"name":"increaseApproval","nameLocation":"620:16:8","nodeType":"FunctionDefinition","parameters":{"id":3405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3402,"mutability":"mutable","name":"spender","nameLocation":"655:7:8","nodeType":"VariableDeclaration","scope":3409,"src":"647:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3401,"name":"address","nodeType":"ElementaryTypeName","src":"647:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3404,"mutability":"mutable","name":"addedValue","nameLocation":"681:10:8","nodeType":"VariableDeclaration","scope":3409,"src":"673:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3403,"name":"uint256","nodeType":"ElementaryTypeName","src":"673:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:62:8"},"returnParameters":{"id":3408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3407,"mutability":"mutable","name":"success","nameLocation":"722:7:8","nodeType":"VariableDeclaration","scope":3409,"src":"717:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3406,"name":"bool","nodeType":"ElementaryTypeName","src":"717:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"716:14:8"},"scope":3445,"src":"611:120:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"06fdde03","id":3414,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"748:4:8","nodeType":"FunctionDefinition","parameters":{"id":3410,"nodeType":"ParameterList","parameters":[],"src":"752:2:8"},"returnParameters":{"id":3413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3412,"mutability":"mutable","name":"tokenName","nameLocation":"792:9:8","nodeType":"VariableDeclaration","scope":3414,"src":"778:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3411,"name":"string","nodeType":"ElementaryTypeName","src":"778:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"777:25:8"},"scope":3445,"src":"739:64:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":3419,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"820:6:8","nodeType":"FunctionDefinition","parameters":{"id":3415,"nodeType":"ParameterList","parameters":[],"src":"826:2:8"},"returnParameters":{"id":3418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3417,"mutability":"mutable","name":"tokenSymbol","nameLocation":"866:11:8","nodeType":"VariableDeclaration","scope":3419,"src":"852:25:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3416,"name":"string","nodeType":"ElementaryTypeName","src":"852:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"851:27:8"},"scope":3445,"src":"811:68:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":3424,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"896:11:8","nodeType":"FunctionDefinition","parameters":{"id":3420,"nodeType":"ParameterList","parameters":[],"src":"907:2:8"},"returnParameters":{"id":3423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3422,"mutability":"mutable","name":"totalTokensIssued","nameLocation":"941:17:8","nodeType":"VariableDeclaration","scope":3424,"src":"933:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3421,"name":"uint256","nodeType":"ElementaryTypeName","src":"933:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"932:27:8"},"scope":3445,"src":"887:73:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":3433,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"977:8:8","nodeType":"FunctionDefinition","parameters":{"id":3429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3426,"mutability":"mutable","name":"to","nameLocation":"1004:2:8","nodeType":"VariableDeclaration","scope":3433,"src":"996:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3425,"name":"address","nodeType":"ElementaryTypeName","src":"996:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3428,"mutability":"mutable","name":"value","nameLocation":"1025:5:8","nodeType":"VariableDeclaration","scope":3433,"src":"1017:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3427,"name":"uint256","nodeType":"ElementaryTypeName","src":"1017:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"985:52:8"},"returnParameters":{"id":3432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3431,"mutability":"mutable","name":"success","nameLocation":"1061:7:8","nodeType":"VariableDeclaration","scope":3433,"src":"1056:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3430,"name":"bool","nodeType":"ElementaryTypeName","src":"1056:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1055:14:8"},"scope":3445,"src":"968:102:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":3444,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1087:12:8","nodeType":"FunctionDefinition","parameters":{"id":3440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3435,"mutability":"mutable","name":"from","nameLocation":"1118:4:8","nodeType":"VariableDeclaration","scope":3444,"src":"1110:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3434,"name":"address","nodeType":"ElementaryTypeName","src":"1110:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3437,"mutability":"mutable","name":"to","nameLocation":"1141:2:8","nodeType":"VariableDeclaration","scope":3444,"src":"1133:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3436,"name":"address","nodeType":"ElementaryTypeName","src":"1133:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3439,"mutability":"mutable","name":"value","nameLocation":"1162:5:8","nodeType":"VariableDeclaration","scope":3444,"src":"1154:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3438,"name":"uint256","nodeType":"ElementaryTypeName","src":"1154:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1099:75:8"},"returnParameters":{"id":3443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3442,"mutability":"mutable","name":"success","nameLocation":"1198:7:8","nodeType":"VariableDeclaration","scope":3444,"src":"1193:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3441,"name":"bool","nodeType":"ElementaryTypeName","src":"1193:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1192:14:8"},"scope":3445,"src":"1078:129:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3446,"src":"60:1150:8","usedErrors":[]}],"src":"33:1179:8"},"id":8}},"contracts":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":53,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"SafeMath":{"abi":[],"devdoc":{"details":"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220801a649639a4662f1423a07f295f253ac939f4e1d9e14aa3cc81e609359b6e5264736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 BYTE PUSH5 0x9639A4662F EQ 0x23 LOG0 PUSH32 0x295F253AC939F4E1D9E14AA3CC81E609359B6E5264736F6C6343000807003300 ","sourceMap":"482:6300:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220801a649639a4662f1423a07f295f253ac939f4e1d9e14aa3cc81e609359b6e5264736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 BYTE PUSH5 0x9639A4662F EQ 0x23 LOG0 PUSH32 0x295F253AC939F4E1D9E14AA3CC81E609359B6E5264736F6C6343000807003300 ","sourceMap":"482:6300:3:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","div(uint256,uint256,string memory)":"infinite","mod(uint256,uint256)":"infinite","mod(uint256,uint256,string memory)":"infinite","mul(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite","sub(uint256,uint256,string memory)":"infinite","tryAdd(uint256,uint256)":"infinite","tryDiv(uint256,uint256)":"infinite","tryMod(uint256,uint256)":"infinite","tryMul(uint256,uint256)":"infinite","trySub(uint256,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Exchange.sol":{"Exchange":{"abi":[{"inputs":[{"internalType":"address","name":"_wallet","type":"address"},{"internalType":"address","name":"_fees","type":"address"},{"internalType":"address","name":"_priceChecker","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"address","name":"tokenA","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountA","type":"uint256"},{"indexed":false,"internalType":"address","name":"tokenB","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountB","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"rate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"indexed":false,"internalType":"bool","name":"waiveFees","type":"bool"}],"name":"Cancel","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"address","name":"tokenA","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountA","type":"uint256"},{"indexed":false,"internalType":"address","name":"tokenB","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountB","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"rate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"indexed":false,"internalType":"bool","name":"waiveFees","type":"bool"}],"name":"Order","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"rate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"waiveFees","type":"bool"}],"indexed":false,"internalType":"struct Exchange._Order","name":"remainingOrder","type":"tuple"},{"indexed":false,"internalType":"uint256","name":"amountBought","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fillBuyRate","type":"uint256"},{"indexed":false,"internalType":"bool","name":"feesWaived","type":"bool"},{"indexed":false,"internalType":"uint256","name":"feesPaid","type":"uint256"}],"name":"fillBuyOrder","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"rate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"waiveFees","type":"bool"}],"indexed":false,"internalType":"struct Exchange._Order","name":"remainingOrder","type":"tuple"},{"indexed":false,"internalType":"uint256","name":"amountSold","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fillSellRate","type":"uint256"},{"indexed":false,"internalType":"bool","name":"feesWaived","type":"bool"},{"indexed":false,"internalType":"uint256","name":"feesPaid","type":"uint256"}],"name":"fillSellOrder","type":"event"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_decimals","type":"uint256"}],"name":"addToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"address","name":"_tokenA","type":"address"},{"internalType":"address","name":"_tokenB","type":"address"}],"name":"cancelOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenA","type":"address"},{"internalType":"uint256","name":"_amountA","type":"uint256"},{"internalType":"address","name":"_tokenB","type":"address"},{"internalType":"uint256","name":"_amountB","type":"uint256"},{"internalType":"uint256","name":"_rate","type":"uint256"},{"internalType":"bool","name":"_waiveFees","type":"bool"}],"name":"createLimitBuyOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenA","type":"address"},{"internalType":"uint256","name":"_amountA","type":"uint256"},{"internalType":"address","name":"_tokenB","type":"address"},{"internalType":"uint256","name":"_amountB","type":"uint256"},{"internalType":"uint256","name":"_rate","type":"uint256"},{"internalType":"bool","name":"_waiveFees","type":"bool"}],"name":"createLimitSellOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"ethToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getFilledOrder","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountFilled","type":"uint256"},{"internalType":"uint256","name":"fillRate","type":"uint256"},{"internalType":"uint256","name":"originalRate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"feesWaived","type":"bool"},{"internalType":"uint256","name":"feesPaid","type":"uint256"}],"internalType":"struct Exchange._filledOrder","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"}],"name":"getFilledOrderLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenA","type":"address"},{"internalType":"address","name":"_tokenB","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"}],"name":"getOrder","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"rate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"waiveFees","type":"bool"}],"internalType":"struct Exchange._Order","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenA","type":"address"},{"internalType":"address","name":"_tokenB","type":"address"},{"internalType":"uint256","name":"side","type":"uint256"},{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"getOrderFromArray","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"rate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"waiveFees","type":"bool"}],"internalType":"struct Exchange._Order","name":"","type":"tuple"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"_tokenA","type":"address"},{"internalType":"address","name":"_tokenB","type":"address"}],"name":"getOrderLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"getTokenInfo","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"isVerifiedToken","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"_tokenA","type":"address"},{"internalType":"address","name":"_tokenB","type":"address"}],"name":"orderExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"s_filledOrders","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountFilled","type":"uint256"},{"internalType":"uint256","name":"fillRate","type":"uint256"},{"internalType":"uint256","name":"originalRate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"feesWaived","type":"bool"},{"internalType":"uint256","name":"feesPaid","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"s_orderBook","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"rate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"waiveFees","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_orderId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_PriceCheckeraddress","type":"address"}],"name":"setPriceCheckerAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tradingFees","type":"address"}],"name":"setTradingFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_Walletaddress","type":"address"}],"name":"setWalletAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokenList","outputs":[{"internalType":"address","name":"add","type":"address"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_69":{"entryPoint":null,"id":69,"parameterSlots":0,"returnSlots":0},"@_721":{"entryPoint":null,"id":721,"parameterSlots":3,"returnSlots":0},"@_msgSender_170":{"entryPoint":401,"id":170,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_157":{"entryPoint":409,"id":157,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":605,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_address_fromMemory":{"entryPoint":628,"id":null,"parameterSlots":2,"returnSlots":3},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":720,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":740,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":772,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":777,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1511:9","statements":[{"body":{"nodeType":"YulBlock","src":"70:80:9","statements":[{"nodeType":"YulAssignment","src":"80:22:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"89:5:9"},"nodeType":"YulFunctionCall","src":"89:13:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"80:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"138:5:9"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"111:26:9"},"nodeType":"YulFunctionCall","src":"111:33:9"},"nodeType":"YulExpressionStatement","src":"111:33:9"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"56:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:9","type":""}],"src":"7:143:9"},{"body":{"nodeType":"YulBlock","src":"267:552:9","statements":[{"body":{"nodeType":"YulBlock","src":"313:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"315:77:9"},"nodeType":"YulFunctionCall","src":"315:79:9"},"nodeType":"YulExpressionStatement","src":"315:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"288:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"297:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"284:3:9"},"nodeType":"YulFunctionCall","src":"284:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"309:2:9","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"280:3:9"},"nodeType":"YulFunctionCall","src":"280:32:9"},"nodeType":"YulIf","src":"277:119:9"},{"nodeType":"YulBlock","src":"406:128:9","statements":[{"nodeType":"YulVariableDeclaration","src":"421:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"435:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"425:6:9","type":""}]},{"nodeType":"YulAssignment","src":"450:74:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"496:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"507:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"492:3:9"},"nodeType":"YulFunctionCall","src":"492:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"516:7:9"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"460:31:9"},"nodeType":"YulFunctionCall","src":"460:64:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"450:6:9"}]}]},{"nodeType":"YulBlock","src":"544:129:9","statements":[{"nodeType":"YulVariableDeclaration","src":"559:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"573:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"563:6:9","type":""}]},{"nodeType":"YulAssignment","src":"589:74:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"635:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"646:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"631:3:9"},"nodeType":"YulFunctionCall","src":"631:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"655:7:9"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"599:31:9"},"nodeType":"YulFunctionCall","src":"599:64:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"589:6:9"}]}]},{"nodeType":"YulBlock","src":"683:129:9","statements":[{"nodeType":"YulVariableDeclaration","src":"698:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"712:2:9","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"702:6:9","type":""}]},{"nodeType":"YulAssignment","src":"728:74:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"774:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"785:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"770:3:9"},"nodeType":"YulFunctionCall","src":"770:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"794:7:9"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"738:31:9"},"nodeType":"YulFunctionCall","src":"738:64:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"728:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"221:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"232:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"244:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"252:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"260:6:9","type":""}],"src":"156:663:9"},{"body":{"nodeType":"YulBlock","src":"865:35:9","statements":[{"nodeType":"YulAssignment","src":"875:19:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"891:2:9","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"885:5:9"},"nodeType":"YulFunctionCall","src":"885:9:9"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"875:6:9"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"858:6:9","type":""}],"src":"825:75:9"},{"body":{"nodeType":"YulBlock","src":"951:51:9","statements":[{"nodeType":"YulAssignment","src":"961:35:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:9"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"972:17:9"},"nodeType":"YulFunctionCall","src":"972:24:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"961:7:9"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"933:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"943:7:9","type":""}],"src":"906:96:9"},{"body":{"nodeType":"YulBlock","src":"1053:81:9","statements":[{"nodeType":"YulAssignment","src":"1063:65:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1078:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"1085:42:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1074:3:9"},"nodeType":"YulFunctionCall","src":"1074:54:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1063:7:9"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1035:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1045:7:9","type":""}],"src":"1008:126:9"},{"body":{"nodeType":"YulBlock","src":"1229:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1246:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1249:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1239:6:9"},"nodeType":"YulFunctionCall","src":"1239:12:9"},"nodeType":"YulExpressionStatement","src":"1239:12:9"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1140:117:9"},{"body":{"nodeType":"YulBlock","src":"1352:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1369:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1372:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1362:6:9"},"nodeType":"YulFunctionCall","src":"1362:12:9"},"nodeType":"YulExpressionStatement","src":"1362:12:9"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1263:117:9"},{"body":{"nodeType":"YulBlock","src":"1429:79:9","statements":[{"body":{"nodeType":"YulBlock","src":"1486:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1495:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1498:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1488:6:9"},"nodeType":"YulFunctionCall","src":"1488:12:9"},"nodeType":"YulExpressionStatement","src":"1488:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1452:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:9"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1459:17:9"},"nodeType":"YulFunctionCall","src":"1459:24:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1449:2:9"},"nodeType":"YulFunctionCall","src":"1449:35:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1442:6:9"},"nodeType":"YulFunctionCall","src":"1442:43:9"},"nodeType":"YulIf","src":"1439:63:9"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1422:5:9","type":""}],"src":"1386:122:9"}]},"contents":"{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n","id":9,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6080604052670de0b6b3a76400006004556000600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006009556001600a60006101000a81548160ff0219169083151502179055503480156200007f57600080fd5b5060405162004756380380620047568339818101604052810190620000a5919062000274565b620000c5620000b96200019160201b60201c565b6200019960201b60201c565b82600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505062000323565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200026e8162000309565b92915050565b60008060006060848603121562000290576200028f62000304565b5b6000620002a0868287016200025d565b9350506020620002b3868287016200025d565b9250506040620002c6868287016200025d565b9150509250925092565b6000620002dd82620002e4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200031481620002d0565b81146200032057600080fd5b50565b61442380620003336000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80639c07ce26116100c3578063c3364be41161007c578063c3364be4146103cf578063dafbfe6a146103ff578063e4c3c7cd1461041b578063ea42f34914610455578063f2fde38b14610485578063f90ef4f2146104a15761014d565b80639c07ce26146102f15780639ead72221461030f578063ac1a386a14610340578063af81c5b91461035c578063b136e39a14610378578063bd8098ec146103945761014d565b80636f4e410b116101155780636f4e410b1461022e578063715018a61461024a5780637bf1a627146102545780638da5cb5b146102725780638f101b0e1461029057806392e43d3a146102c05761014d565b80631027b2191461015257806314eca9dc146101825780631f69565f146101b2578063429d24b2146101e257806362c09cfa14610212575b600080fd5b61016c60048036038101906101679190613530565b6104bd565b6040516101799190613d4f565b60405180910390f35b61019c600480360381019061019791906137de565b610573565b6040516101a99190613ead565b60405180910390f35b6101cc60048036038101906101c79190613530565b610621565b6040516101d99190613ead565b60405180910390f35b6101fc60048036038101906101f791906138f2565b6106f7565b6040516102099190613d4f565b60405180910390f35b61022c600480360381019061022791906136fe565b6109e5565b005b610248600480360381019061024391906136fe565b610fff565b005b610252611618565b005b61025c61162c565b6040516102699190613c9d565b60405180910390f35b61027a611652565b6040516102879190613c9d565b60405180910390f35b6102aa60048036038101906102a5919061366b565b61167b565b6040516102b79190613e91565b60405180910390f35b6102da60048036038101906102d591906135c4565b6118be565b6040516102e8929190613e66565b60405180910390f35b6102f9611bc8565b6040516103069190613ead565b60405180910390f35b61032960048036038101906103249190613898565b611bce565b604051610337929190613d26565b60405180910390f35b61035a60048036038101906103559190613530565b611c22565b005b610376600480360381019061037191906136be565b611c6e565b005b610392600480360381019061038d9190613530565b611d6c565b005b6103ae60048036038101906103a9919061378b565b611db8565b6040516103c69c9b9a99989796959493929190613ec8565b60405180910390f35b6103e960048036038101906103e4919061362b565b611ebc565b6040516103f69190613ead565b60405180910390f35b61041960048036038101906104149190613530565b611f2c565b005b610435600480360381019061043091906135c4565b611f78565b60405161044c9b9a99989796959493929190613f82565b60405180910390f35b61046f600480360381019061046a919061355d565b612083565b60405161047c9190613e4a565b60405180910390f35b61049f600480360381019061049a9190613530565b6122fa565b005b6104bb60048036038101906104b69190613831565b61237e565b005b600080600090505b600680549050811015610568578273ffffffffffffffffffffffffffffffffffffffff16600682815481106104fd576104fc61420b565b5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561055557600191505061056e565b808061056090614135565b9150506104c5565b50600090505b919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000856001811115610606576106056141ad565b5b81526020019081526020016000208054905090509392505050565b600080600090505b6006805490508110156106f0578273ffffffffffffffffffffffffffffffffffffffff16600682815481106106615761066061420b565b5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106dd57600681815481106106c3576106c261420b565b5b9060005260206000209060020201600101549150506106f2565b80806106e890614135565b915050610629565b505b919050565b600080600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086600181111561078b5761078a6141ad565b5b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561098057838290600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff16600181111561080c5761080b6141ad565b5b600181111561081e5761081d6141ad565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff161515151581525050815260200190600101906107b9565b50505050905060005b81518110156109d657868282815181106109a6576109a561420b565b5b60200260200101516000015114156109c3576001925050506109dd565b80806109ce90614135565b915050610989565b5060009150505b949350505050565b856109ef816104bd565b610a2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2590613daa565b60405180910390fd5b84610a38816104bd565b610a77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6e90613daa565b60405180910390fd5b84610be3600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634fc121db338a6040518363ffffffff1660e01b8152600401610ad8929190613cb8565b60206040518083038186803b158015610af057600080fd5b505afa158015610b04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2891906138c5565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7888aec8a336040518363ffffffff1660e01b8152600401610b85929190613cb8565b60206040518083038186803b158015610b9d57600080fd5b505afa158015610bb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd591906138c5565b612ed390919063ffffffff16565b1015610c24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1b90613dca565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346a8f82033888860016040518563ffffffff1660e01b8152600401610c869493929190613ce1565b600060405180830381600087803b158015610ca057600080fd5b505af1158015610cb4573d6000803e3d6000fd5b50505050600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000806001811115610d4957610d486141ad565b5b8152602001908152602001600020604051806101600160405280600954815260200160006001811115610d7f57610d7e6141ad565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018a73ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018873ffffffffffffffffffffffffffffffffffffffff16815260200187815260200186815260200189815260200187815260200185151581525090806001815401808255809150506001900390600052602060002090600a02016000909190919091506000820151816000015560208201518160010160006101000a81548160ff02191690836001811115610e5a57610e596141ad565b5b021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816003015560a08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816005015560e08201518160060155610100820151816007015561012082015181600801556101408201518160090160006101000a81548160ff02191690831515021790555050507fcb2df66a1a7db52683240584eca4355946d7b80a59dcb7707aa8dd95463ed7446009546000338b8b8b8b8b8f8e8d604051610fd19b9a99989796959493929190613f82565b60405180910390a1610fef6001600954612ee990919063ffffffff16565b6009819055505050505050505050565b85611009816104bd565b611048576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103f90613daa565b60405180910390fd5b84611052816104bd565b611091576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108890613daa565b60405180910390fd5b866111fd600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634fc121db338c6040518363ffffffff1660e01b81526004016110f2929190613cb8565b60206040518083038186803b15801561110a57600080fd5b505afa15801561111e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114291906138c5565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7888aec8c336040518363ffffffff1660e01b815260040161119f929190613cb8565b60206040518083038186803b1580156111b757600080fd5b505afa1580156111cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ef91906138c5565b612ed390919063ffffffff16565b101561123e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123590613dca565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346a8f820338a8a60016040518563ffffffff1660e01b81526004016112a09493929190613ce1565b600060405180830381600087803b1580156112ba57600080fd5b505af11580156112ce573d6000803e3d6000fd5b50505050600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600180811115611363576113626141ad565b5b81526020019081526020016000206040518061016001604052806009548152602001600180811115611398576113976141ad565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018a73ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018873ffffffffffffffffffffffffffffffffffffffff16815260200187815260200186815260200189815260200187815260200185151581525090806001815401808255809150506001900390600052602060002090600a02016000909190919091506000820151816000015560208201518160010160006101000a81548160ff02191690836001811115611473576114726141ad565b5b021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816003015560a08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816005015560e08201518160060155610100820151816007015561012082015181600801556101408201518160090160006101000a81548160ff02191690831515021790555050507fcb2df66a1a7db52683240584eca4355946d7b80a59dcb7707aa8dd95463ed7446009546001338b8b8b8b8b8f8e8d6040516115ea9b9a99989796959493929190613f82565b60405180910390a16116086001600954612ee990919063ffffffff16565b6009819055505050505050505050565b611620612eff565b61162a6000612f7d565b565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611683613049565b6000600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008560018111156116d9576116d86141ad565b5b815260200190815260200160002083815481106116f9576116f861420b565b5b90600052602060002090600b020160405180610180016040529081600082015481526020016001820160009054906101000a900460ff166001811115611742576117416141ad565b5b6001811115611754576117536141ad565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff16151515158152602001600a820154815250509050809150509392505050565b6118c6613100565b600080600090506000600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015611b4357838290600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff1660018111156119cf576119ce6141ad565b5b60018111156119e1576119e06141ad565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff1615151515815250508152602001906001019061197c565b505050509050611b51613100565b5b8151831015611bb65785828481518110611b6f57611b6e61420b565b5b6020026020010151600001511415611ba357818381518110611b9457611b9361420b565b5b60200260200101519050611bb6565b8280611bae90614135565b935050611b52565b80839450945050505094509492505050565b60095481565b60068181548110611bde57600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b611c2a612eff565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611c76612eff565b611c7f826104bd565b15611cbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cb690613e0a565b60405180910390fd5b600660405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505050565b611d74612eff565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60086020528260005260406000206020528160005260406000208181548110611de057600080fd5b90600052602060002090600b020160009250925050508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050154908060060154908060070154908060080154908060090160009054906101000a900460ff169080600a015490508c565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000836001811115611f1257611f116141ad565b5b815260200190815260200160002080549050905092915050565b611f34612eff565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60076020528360005260406000206020528260005260406000206020528160005260406000208181548110611fac57600080fd5b90600052602060002090600a02016000935093505050508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060154908060070154908060080154908060090160009054906101000a900460ff1690508b565b61208b613100565b6000600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084600181111561211e5761211d6141ad565b5b8152602001908152602001600020848154811061213e5761213d61420b565b5b90600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff166001811115612187576121866141ad565b5b6001811115612199576121986141ad565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff161515151581525050905080915050949350505050565b612302612eff565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612372576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161236990613d8a565b60405180910390fd5b61237b81612f7d565b50565b8284838361238e848484846106f7565b6123cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123c490613d6a565b60405180910390fd5b856123d7816104bd565b612416576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161240d90613daa565b60405180910390fd5b85612420816104bd565b61245f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161245690613daa565b60405180910390fd5b60008a6001811115612474576124736141ad565b5b90506000600760008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000209050600081805490509050612518613100565b600080600090505b83811015612732578e85828154811061253c5761253b61420b565b5b90600052602060002090600a020160000154141561271f5780915084818154811061256a5761256961420b565b5b90600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff1660018111156125b3576125b26141ad565b5b60018111156125c5576125c46141ad565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff1615151515815250509250612732565b808061272a90614135565b915050612520565b50600a60009054906101000a900460ff161561295357816040015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146127ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127b190613dea565b60405180910390fd5b600060018111156127ce576127cd6141ad565b5b8f60018111156127e1576127e06141ad565b5b141561288857600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346a8f820338460a001518560c0015160006040518563ffffffff1660e01b81526004016128519493929190613ce1565b600060405180830381600087803b15801561286b57600080fd5b505af115801561287f573d6000803e3d6000fd5b50505050612952565b60018081111561289b5761289a6141ad565b5b8f60018111156128ae576128ad6141ad565b5b141561295157600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346a8f820338460600151856080015160006040518563ffffffff1660e01b815260040161291e9493929190613ce1565b600060405180830381600087803b15801561293857600080fd5b505af115801561294c573d6000803e3d6000fd5b505050505b5b5b60008190505b6001846129669190614094565b811015612bb35784612982600183612ee990919063ffffffff16565b815481106129935761299261420b565b5b90600052602060002090600a02018582815481106129b4576129b361420b565b5b90600052602060002090600a0201600082015481600001556001820160009054906101000a900460ff168160010160006101000a81548160ff02191690836001811115612a0457612a036141ad565b5b02179055506001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600382015481600301556004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600582015481600501556006820154816006015560078201548160070155600882015481600801556009820160009054906101000a900460ff168160090160006101000a81548160ff0219169083151502179055509050508080612bab90614135565b915050612959565b5083612bc9600185612ed390919063ffffffff16565b81548110612bda57612bd961420b565b5b90600052602060002090600a02016000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600090556006820160009055600782016000905560088201600090556009820160006101000a81549060ff0219169055505083805480612cc957612cc86141dc565b5b60019003818190600052602060002090600a02016000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600090556006820160009055600782016000905560088201600090556009820160006101000a81549060ff02191690555050905583600760008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020908054612e4b9291906131b0565b507fa1cc643491754200d3eca5769e524a0fd00f9b0862b18d0da7d6e7277a83dfda8e83602001518460400151856060015186608001518760a001518860c001518960e001518a61010001518b61012001518c6101400151604051612eba9b9a99989796959493929190613f82565b60405180910390a1505050505050505050505050505050565b60008183612ee19190614094565b905092915050565b60008183612ef7919061403e565b905092915050565b612f07613041565b73ffffffffffffffffffffffffffffffffffffffff16612f25611652565b73ffffffffffffffffffffffffffffffffffffffff1614612f7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f7290613e2a565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60405180610180016040528060008152602001600060018111156130705761306f6141ad565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160008152602001600015158152602001600081525090565b6040518061016001604052806000815260200160006001811115613127576131266141ad565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000151581525090565b82805482825590600052602060002090600a0281019282156133d257600052602060002091600a0282015b828111156133d1578282600082015481600001556001820160009054906101000a900460ff168160010160006101000a81548160ff02191690836001811115613227576132266141ad565b5b02179055506001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600382015481600301556004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600582015481600501556006820154816006015560078201548160070155600882015481600801556009820160009054906101000a900460ff168160090160006101000a81548160ff021916908315150217905550505091600a019190600a01906131db565b5b5090506133df91906133e3565b5090565b5b808211156134c3576000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600090556006820160009055600782016000905560088201600090556009820160006101000a81549060ff021916905550600a016133e4565b5090565b6000813590506134d681614398565b92915050565b6000813590506134eb816143af565b92915050565b600081359050613500816143c6565b92915050565b600081359050613515816143d6565b92915050565b60008151905061352a816143d6565b92915050565b6000602082840312156135465761354561423a565b5b6000613554848285016134c7565b91505092915050565b600080600080608085870312156135775761357661423a565b5b6000613585878288016134c7565b9450506020613596878288016134c7565b93505060406135a787828801613506565b92505060606135b8878288016134f1565b91505092959194509250565b600080600080608085870312156135de576135dd61423a565b5b60006135ec878288016134c7565b94505060206135fd878288016134c7565b935050604061360e87828801613506565b925050606061361f87828801613506565b91505092959194509250565b600080604083850312156136425761364161423a565b5b6000613650858286016134c7565b9250506020613661858286016134f1565b9150509250929050565b6000806000606084860312156136845761368361423a565b5b6000613692868287016134c7565b93505060206136a3868287016134f1565b92505060406136b486828701613506565b9150509250925092565b600080604083850312156136d5576136d461423a565b5b60006136e3858286016134c7565b92505060206136f485828601613506565b9150509250929050565b60008060008060008060c0878903121561371b5761371a61423a565b5b600061372989828a016134c7565b965050602061373a89828a01613506565b955050604061374b89828a016134c7565b945050606061375c89828a01613506565b935050608061376d89828a01613506565b92505060a061377e89828a016134dc565b9150509295509295509295565b6000806000606084860312156137a4576137a361423a565b5b60006137b2868287016134c7565b93505060206137c386828701613506565b92505060406137d486828701613506565b9150509250925092565b6000806000606084860312156137f7576137f661423a565b5b6000613805868287016134f1565b9350506020613816868287016134c7565b9250506040613827868287016134c7565b9150509250925092565b6000806000806080858703121561384b5761384a61423a565b5b6000613859878288016134f1565b945050602061386a87828801613506565b935050604061387b878288016134c7565b925050606061388c878288016134c7565b91505092959194509250565b6000602082840312156138ae576138ad61423a565b5b60006138bc84828501613506565b91505092915050565b6000602082840312156138db576138da61423a565b5b60006138e98482850161351b565b91505092915050565b6000806000806080858703121561390c5761390b61423a565b5b600061391a87828801613506565b945050602061392b878288016134f1565b935050604061393c878288016134c7565b925050606061394d878288016134c7565b91505092959194509250565b613962816140c8565b82525050565b613971816140c8565b82525050565b613980816140da565b82525050565b61398f816140da565b82525050565b61399e81614123565b82525050565b6139ad81614123565b82525050565b60006139c060108361402d565b91506139cb8261423f565b602082019050919050565b60006139e360268361402d565b91506139ee82614268565b604082019050919050565b6000613a0660188361402d565b9150613a11826142b7565b602082019050919050565b6000613a2960128361402d565b9150613a34826142e0565b602082019050919050565b6000613a4c60098361402d565b9150613a5782614309565b602082019050919050565b6000613a6f60168361402d565b9150613a7a82614332565b602082019050919050565b6000613a9260208361402d565b9150613a9d8261435b565b602082019050919050565b61016082016000820151613abf6000850182613c7f565b506020820151613ad26020850182613995565b506040820151613ae56040850182613959565b506060820151613af86060850182613959565b506080820151613b0b6080850182613c7f565b5060a0820151613b1e60a0850182613959565b5060c0820151613b3160c0850182613c7f565b5060e0820151613b4460e0850182613c7f565b50610100820151613b59610100850182613c7f565b50610120820151613b6e610120850182613c7f565b50610140820151613b83610140850182613977565b50505050565b61018082016000820151613ba06000850182613c7f565b506020820151613bb36020850182613995565b506040820151613bc66040850182613959565b506060820151613bd96060850182613959565b506080820151613bec6080850182613959565b5060a0820151613bff60a0850182613c7f565b5060c0820151613c1260c0850182613c7f565b5060e0820151613c2560e0850182613c7f565b50610100820151613c3a610100850182613c7f565b50610120820151613c4f610120850182613c7f565b50610140820151613c64610140850182613977565b50610160820151613c79610160850182613c7f565b50505050565b613c8881614119565b82525050565b613c9781614119565b82525050565b6000602082019050613cb26000830184613968565b92915050565b6000604082019050613ccd6000830185613968565b613cda6020830184613968565b9392505050565b6000608082019050613cf66000830187613968565b613d036020830186613968565b613d106040830185613c8e565b613d1d6060830184613986565b95945050505050565b6000604082019050613d3b6000830185613968565b613d486020830184613c8e565b9392505050565b6000602082019050613d646000830184613986565b92915050565b60006020820190508181036000830152613d83816139b3565b9050919050565b60006020820190508181036000830152613da3816139d6565b9050919050565b60006020820190508181036000830152613dc3816139f9565b9050919050565b60006020820190508181036000830152613de381613a1c565b9050919050565b60006020820190508181036000830152613e0381613a3f565b9050919050565b60006020820190508181036000830152613e2381613a62565b9050919050565b60006020820190508181036000830152613e4381613a85565b9050919050565b600061016082019050613e606000830184613aa8565b92915050565b600061018082019050613e7c6000830185613aa8565b613e8a610160830184613c8e565b9392505050565b600061018082019050613ea76000830184613b89565b92915050565b6000602082019050613ec26000830184613c8e565b92915050565b600061018082019050613ede600083018f613c8e565b613eeb602083018e6139a4565b613ef8604083018d613968565b613f05606083018c613968565b613f12608083018b613968565b613f1f60a083018a613c8e565b613f2c60c0830189613c8e565b613f3960e0830188613c8e565b613f47610100830187613c8e565b613f55610120830186613c8e565b613f63610140830185613986565b613f71610160830184613c8e565b9d9c50505050505050505050505050565b600061016082019050613f98600083018e613c8e565b613fa5602083018d6139a4565b613fb2604083018c613968565b613fbf606083018b613968565b613fcc608083018a613c8e565b613fd960a0830189613968565b613fe660c0830188613c8e565b613ff360e0830187613c8e565b614001610100830186613c8e565b61400f610120830185613c8e565b61401d610140830184613986565b9c9b505050505050505050505050565b600082825260208201905092915050565b600061404982614119565b915061405483614119565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156140895761408861417e565b5b828201905092915050565b600061409f82614119565b91506140aa83614119565b9250828210156140bd576140bc61417e565b5b828203905092915050565b60006140d3826140f9565b9050919050565b60008115159050919050565b60008190506140f482614384565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061412e826140e6565b9050919050565b600061414082614119565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156141735761417261417e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b7f496e76616c6964204f7264657220494400000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f546f6b656e20756e617661696c61626c6520696e204445580000000000000000600082015250565b7f496e73756666696369656e742046756e64730000000000000000000000000000600082015250565b7f4e6f74204f776e65720000000000000000000000000000000000000000000000600082015250565b7f546f6b656e20616c726561647920766572696669656400000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60028110614395576143946141ad565b5b50565b6143a1816140c8565b81146143ac57600080fd5b50565b6143b8816140da565b81146143c357600080fd5b50565b600281106143d357600080fd5b50565b6143df81614119565b81146143ea57600080fd5b5056fea2646970667358221220be360c578658835cbb8234ed7e31d607d87084eeea85588ac20133adb68693ab64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x4 SSTORE PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 SSTORE PUSH1 0x1 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4756 CODESIZE SUB DUP1 PUSH3 0x4756 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0xA5 SWAP2 SWAP1 PUSH3 0x274 JUMP JUMPDEST PUSH3 0xC5 PUSH3 0xB9 PUSH3 0x191 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x199 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP3 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x323 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x26E DUP2 PUSH3 0x309 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x290 JUMPI PUSH3 0x28F PUSH3 0x304 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2A0 DUP7 DUP3 DUP8 ADD PUSH3 0x25D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x2B3 DUP7 DUP3 DUP8 ADD PUSH3 0x25D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x2C6 DUP7 DUP3 DUP8 ADD PUSH3 0x25D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2DD DUP3 PUSH3 0x2E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x314 DUP2 PUSH3 0x2D0 JUMP JUMPDEST DUP2 EQ PUSH3 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4423 DUP1 PUSH3 0x333 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C07CE26 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xC3364BE4 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC3364BE4 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xDAFBFE6A EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0xE4C3C7CD EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0xEA42F349 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0xF90EF4F2 EQ PUSH2 0x4A1 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x9C07CE26 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x9EAD7222 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xAC1A386A EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0xAF81C5B9 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0xB136E39A EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0xBD8098EC EQ PUSH2 0x394 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x6F4E410B GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x6F4E410B EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x7BF1A627 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x8F101B0E EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x92E43D3A EQ PUSH2 0x2C0 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x1027B219 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x14ECA9DC EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x1F69565F EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x429D24B2 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x62C09CFA EQ PUSH2 0x212 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x3530 JUMP JUMPDEST PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x3D4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x37DE JUMP JUMPDEST PUSH2 0x573 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x3EAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x3530 JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x3EAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x38F2 JUMP JUMPDEST PUSH2 0x6F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x3D4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x36FE JUMP JUMPDEST PUSH2 0x9E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x36FE JUMP JUMPDEST PUSH2 0xFFF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x252 PUSH2 0x1618 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25C PUSH2 0x162C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x3C9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27A PUSH2 0x1652 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x3C9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x366B JUMP JUMPDEST PUSH2 0x167B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x3E91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x35C4 JUMP JUMPDEST PUSH2 0x18BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP3 SWAP2 SWAP1 PUSH2 0x3E66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F9 PUSH2 0x1BC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x3EAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x3898 JUMP JUMPDEST PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x337 SWAP3 SWAP2 SWAP1 PUSH2 0x3D26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x3530 JUMP JUMPDEST PUSH2 0x1C22 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x376 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x36BE JUMP JUMPDEST PUSH2 0x1C6E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x392 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x3530 JUMP JUMPDEST PUSH2 0x1D6C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x378B JUMP JUMPDEST PUSH2 0x1DB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C6 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x362B JUMP JUMPDEST PUSH2 0x1EBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x3EAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x419 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x3530 JUMP JUMPDEST PUSH2 0x1F2C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x435 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x35C4 JUMP JUMPDEST PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44C SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x355D JUMP JUMPDEST PUSH2 0x2083 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x3E4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x3530 JUMP JUMPDEST PUSH2 0x22FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B6 SWAP2 SWAP1 PUSH2 0x3831 JUMP JUMPDEST PUSH2 0x237E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x568 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4FD JUMPI PUSH2 0x4FC PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x555 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x56E JUMP JUMPDEST DUP1 DUP1 PUSH2 0x560 SWAP1 PUSH2 0x4135 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4C5 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x606 JUMPI PUSH2 0x605 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x6F0 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x661 JUMPI PUSH2 0x660 PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6DD JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6C3 JUMPI PUSH2 0x6C2 PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP POP PUSH2 0x6F2 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x6E8 SWAP1 PUSH2 0x4135 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x629 JUMP JUMPDEST POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x78B JUMPI PUSH2 0x78A PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x980 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x80C JUMPI PUSH2 0x80B PUSH2 0x41AD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x81E JUMPI PUSH2 0x81D PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x7B9 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x9D6 JUMPI DUP7 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9A6 JUMPI PUSH2 0x9A5 PUSH2 0x420B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x9C3 JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x9DD JUMP JUMPDEST DUP1 DUP1 PUSH2 0x9CE SWAP1 PUSH2 0x4135 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x989 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP6 PUSH2 0x9EF DUP2 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA25 SWAP1 PUSH2 0x3DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0xA38 DUP2 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0xA77 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6E SWAP1 PUSH2 0x3DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0xBE3 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4FC121DB CALLER DUP11 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD8 SWAP3 SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB04 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB28 SWAP2 SWAP1 PUSH2 0x38C5 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF7888AEC DUP11 CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB85 SWAP3 SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBD5 SWAP2 SWAP1 PUSH2 0x38C5 JUMP JUMPDEST PUSH2 0x2ED3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0xC24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1B SWAP1 PUSH2 0x3DCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x46A8F820 CALLER DUP9 DUP9 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC86 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CE1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCB4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x7 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD49 JUMPI PUSH2 0xD48 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD7F JUMPI PUSH2 0xD7E PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xE5A JUMPI PUSH2 0xE59 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH32 0xCB2DF66A1A7DB52683240584ECA4355946D7B80A59DCB7707AA8DD95463ED744 PUSH1 0x9 SLOAD PUSH1 0x0 CALLER DUP12 DUP12 DUP12 DUP12 DUP12 DUP16 DUP15 DUP14 PUSH1 0x40 MLOAD PUSH2 0xFD1 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xFEF PUSH1 0x1 PUSH1 0x9 SLOAD PUSH2 0x2EE9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP6 PUSH2 0x1009 DUP2 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x1048 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103F SWAP1 PUSH2 0x3DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0x1052 DUP2 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x1091 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1088 SWAP1 PUSH2 0x3DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH2 0x11FD PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4FC121DB CALLER DUP13 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F2 SWAP3 SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x110A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x111E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1142 SWAP2 SWAP1 PUSH2 0x38C5 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF7888AEC DUP13 CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119F SWAP3 SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11EF SWAP2 SWAP1 PUSH2 0x38C5 JUMP JUMPDEST PUSH2 0x2ED3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x123E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1235 SWAP1 PUSH2 0x3DCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x46A8F820 CALLER DUP11 DUP11 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CE1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x7 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x1363 JUMPI PUSH2 0x1362 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x1398 JUMPI PUSH2 0x1397 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1473 JUMPI PUSH2 0x1472 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH32 0xCB2DF66A1A7DB52683240584ECA4355946D7B80A59DCB7707AA8DD95463ED744 PUSH1 0x9 SLOAD PUSH1 0x1 CALLER DUP12 DUP12 DUP12 DUP12 DUP12 DUP16 DUP15 DUP14 PUSH1 0x40 MLOAD PUSH2 0x15EA SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1608 PUSH1 0x1 PUSH1 0x9 SLOAD PUSH2 0x2EE9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1620 PUSH2 0x2EFF JUMP JUMPDEST PUSH2 0x162A PUSH1 0x0 PUSH2 0x2F7D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1683 PUSH2 0x3049 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x16D9 JUMPI PUSH2 0x16D8 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x16F9 JUMPI PUSH2 0x16F8 PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xB MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1742 JUMPI PUSH2 0x1741 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1754 JUMPI PUSH2 0x1753 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x18C6 PUSH2 0x3100 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1B43 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x19CF JUMPI PUSH2 0x19CE PUSH2 0x41AD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x19E1 JUMPI PUSH2 0x19E0 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x197C JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH2 0x1B51 PUSH2 0x3100 JUMP JUMPDEST JUMPDEST DUP2 MLOAD DUP4 LT ISZERO PUSH2 0x1BB6 JUMPI DUP6 DUP3 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1B6F JUMPI PUSH2 0x1B6E PUSH2 0x420B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x1BA3 JUMPI DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B94 JUMPI PUSH2 0x1B93 PUSH2 0x420B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x1BB6 JUMP JUMPDEST DUP3 DUP1 PUSH2 0x1BAE SWAP1 PUSH2 0x4135 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x1B52 JUMP JUMPDEST DUP1 DUP4 SWAP5 POP SWAP5 POP POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1BDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x1C2A PUSH2 0x2EFF JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1C76 PUSH2 0x2EFF JUMP JUMPDEST PUSH2 0x1C7F DUP3 PUSH2 0x4BD JUMP JUMPDEST ISZERO PUSH2 0x1CBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CB6 SWAP1 PUSH2 0x3E0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x1D74 PUSH2 0x2EFF JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1DE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xB MUL ADD PUSH1 0x0 SWAP3 POP SWAP3 POP POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0xA ADD SLOAD SWAP1 POP DUP13 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1F12 JUMPI PUSH2 0x1F11 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F34 PUSH2 0x2EFF JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP4 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1FAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 SWAP4 POP SWAP4 POP POP POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP12 JUMP JUMPDEST PUSH2 0x208B PUSH2 0x3100 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x211E JUMPI PUSH2 0x211D PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x213E JUMPI PUSH2 0x213D PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2187 JUMPI PUSH2 0x2186 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2199 JUMPI PUSH2 0x2198 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2302 PUSH2 0x2EFF JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2372 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2369 SWAP1 PUSH2 0x3D8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x237B DUP2 PUSH2 0x2F7D JUMP JUMPDEST POP JUMP JUMPDEST DUP3 DUP5 DUP4 DUP4 PUSH2 0x238E DUP5 DUP5 DUP5 DUP5 PUSH2 0x6F7 JUMP JUMPDEST PUSH2 0x23CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23C4 SWAP1 PUSH2 0x3D6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH2 0x23D7 DUP2 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x2416 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x240D SWAP1 PUSH2 0x3DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH2 0x2420 DUP2 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x245F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2456 SWAP1 PUSH2 0x3DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP11 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2474 JUMPI PUSH2 0x2473 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH2 0x2518 PUSH2 0x3100 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2732 JUMPI DUP15 DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x253C JUMPI PUSH2 0x253B PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x271F JUMPI DUP1 SWAP2 POP DUP5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x256A JUMPI PUSH2 0x2569 PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x25B3 JUMPI PUSH2 0x25B2 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x25C5 JUMPI PUSH2 0x25C4 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP3 POP PUSH2 0x2732 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x272A SWAP1 PUSH2 0x4135 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2520 JUMP JUMPDEST POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2953 JUMPI DUP2 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x27BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27B1 SWAP1 PUSH2 0x3DEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x27CE JUMPI PUSH2 0x27CD PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP16 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x27E1 JUMPI PUSH2 0x27E0 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2888 JUMPI PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x46A8F820 CALLER DUP5 PUSH1 0xA0 ADD MLOAD DUP6 PUSH1 0xC0 ADD MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2851 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CE1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x286B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x287F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2952 JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x289B JUMPI PUSH2 0x289A PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP16 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x28AE JUMPI PUSH2 0x28AD PUSH2 0x41AD JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2951 JUMPI PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x46A8F820 CALLER DUP5 PUSH1 0x60 ADD MLOAD DUP6 PUSH1 0x80 ADD MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x291E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CE1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x294C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP JUMPDEST PUSH1 0x1 DUP5 PUSH2 0x2966 SWAP2 SWAP1 PUSH2 0x4094 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2BB3 JUMPI DUP5 PUSH2 0x2982 PUSH1 0x1 DUP4 PUSH2 0x2EE9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2993 JUMPI PUSH2 0x2992 PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x29B4 JUMPI PUSH2 0x29B3 PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2A04 JUMPI PUSH2 0x2A03 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP3 ADD SLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 DUP3 ADD SLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0x6 DUP3 ADD SLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0x7 DUP3 ADD SLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH1 0x8 DUP3 ADD SLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 DUP1 PUSH2 0x2BAB SWAP1 PUSH2 0x4135 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2959 JUMP JUMPDEST POP DUP4 PUSH2 0x2BC9 PUSH1 0x1 DUP6 PUSH2 0x2ED3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2BDA JUMPI PUSH2 0x2BD9 PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP DUP4 DUP1 SLOAD DUP1 PUSH2 0x2CC9 JUMPI PUSH2 0x2CC8 PUSH2 0x41DC JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP SWAP1 SSTORE DUP4 PUSH1 0x7 PUSH1 0x0 DUP16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 SLOAD PUSH2 0x2E4B SWAP3 SWAP2 SWAP1 PUSH2 0x31B0 JUMP JUMPDEST POP PUSH32 0xA1CC643491754200D3ECA5769E524A0FD00F9B0862B18D0DA7D6E7277A83DFDA DUP15 DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD DUP7 PUSH1 0x80 ADD MLOAD DUP8 PUSH1 0xA0 ADD MLOAD DUP9 PUSH1 0xC0 ADD MLOAD DUP10 PUSH1 0xE0 ADD MLOAD DUP11 PUSH2 0x100 ADD MLOAD DUP12 PUSH2 0x120 ADD MLOAD DUP13 PUSH2 0x140 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x2EBA SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2EE1 SWAP2 SWAP1 PUSH2 0x4094 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2EF7 SWAP2 SWAP1 PUSH2 0x403E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F07 PUSH2 0x3041 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2F25 PUSH2 0x1652 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2F7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F72 SWAP1 PUSH2 0x3E2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3070 JUMPI PUSH2 0x306F PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3127 JUMPI PUSH2 0x3126 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x33D2 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0xA MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x33D1 JUMPI DUP3 DUP3 PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3227 JUMPI PUSH2 0x3226 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP3 ADD SLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 DUP3 ADD SLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0x6 DUP3 ADD SLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0x7 DUP3 ADD SLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH1 0x8 DUP3 ADD SLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP SWAP2 PUSH1 0xA ADD SWAP2 SWAP1 PUSH1 0xA ADD SWAP1 PUSH2 0x31DB JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x33DF SWAP2 SWAP1 PUSH2 0x33E3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x34C3 JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP PUSH1 0xA ADD PUSH2 0x33E4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x34D6 DUP2 PUSH2 0x4398 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x34EB DUP2 PUSH2 0x43AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3500 DUP2 PUSH2 0x43C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3515 DUP2 PUSH2 0x43D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x352A DUP2 PUSH2 0x43D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3546 JUMPI PUSH2 0x3545 PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3554 DUP5 DUP3 DUP6 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3577 JUMPI PUSH2 0x3576 PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3585 DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3596 DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x35A7 DUP8 DUP3 DUP9 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x35B8 DUP8 DUP3 DUP9 ADD PUSH2 0x34F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x35DE JUMPI PUSH2 0x35DD PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35EC DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x35FD DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x360E DUP8 DUP3 DUP9 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x361F DUP8 DUP3 DUP9 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3642 JUMPI PUSH2 0x3641 PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3650 DUP6 DUP3 DUP7 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3661 DUP6 DUP3 DUP7 ADD PUSH2 0x34F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3684 JUMPI PUSH2 0x3683 PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3692 DUP7 DUP3 DUP8 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x36A3 DUP7 DUP3 DUP8 ADD PUSH2 0x34F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x36B4 DUP7 DUP3 DUP8 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x36D5 JUMPI PUSH2 0x36D4 PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36E3 DUP6 DUP3 DUP7 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x36F4 DUP6 DUP3 DUP7 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x371B JUMPI PUSH2 0x371A PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3729 DUP10 DUP3 DUP11 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x373A DUP10 DUP3 DUP11 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x374B DUP10 DUP3 DUP11 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x375C DUP10 DUP3 DUP11 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x376D DUP10 DUP3 DUP11 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x377E DUP10 DUP3 DUP11 ADD PUSH2 0x34DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x37A4 JUMPI PUSH2 0x37A3 PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37B2 DUP7 DUP3 DUP8 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x37C3 DUP7 DUP3 DUP8 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x37D4 DUP7 DUP3 DUP8 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x37F7 JUMPI PUSH2 0x37F6 PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3805 DUP7 DUP3 DUP8 ADD PUSH2 0x34F1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3816 DUP7 DUP3 DUP8 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3827 DUP7 DUP3 DUP8 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x384B JUMPI PUSH2 0x384A PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3859 DUP8 DUP3 DUP9 ADD PUSH2 0x34F1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x386A DUP8 DUP3 DUP9 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x387B DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x388C DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38AE JUMPI PUSH2 0x38AD PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38BC DUP5 DUP3 DUP6 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38DB JUMPI PUSH2 0x38DA PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38E9 DUP5 DUP3 DUP6 ADD PUSH2 0x351B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x390C JUMPI PUSH2 0x390B PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x391A DUP8 DUP3 DUP9 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x392B DUP8 DUP3 DUP9 ADD PUSH2 0x34F1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x393C DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x394D DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x3962 DUP2 PUSH2 0x40C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3971 DUP2 PUSH2 0x40C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3980 DUP2 PUSH2 0x40DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x398F DUP2 PUSH2 0x40DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x399E DUP2 PUSH2 0x4123 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x39AD DUP2 PUSH2 0x4123 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39C0 PUSH1 0x10 DUP4 PUSH2 0x402D JUMP JUMPDEST SWAP2 POP PUSH2 0x39CB DUP3 PUSH2 0x423F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39E3 PUSH1 0x26 DUP4 PUSH2 0x402D JUMP JUMPDEST SWAP2 POP PUSH2 0x39EE DUP3 PUSH2 0x4268 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A06 PUSH1 0x18 DUP4 PUSH2 0x402D JUMP JUMPDEST SWAP2 POP PUSH2 0x3A11 DUP3 PUSH2 0x42B7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A29 PUSH1 0x12 DUP4 PUSH2 0x402D JUMP JUMPDEST SWAP2 POP PUSH2 0x3A34 DUP3 PUSH2 0x42E0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A4C PUSH1 0x9 DUP4 PUSH2 0x402D JUMP JUMPDEST SWAP2 POP PUSH2 0x3A57 DUP3 PUSH2 0x4309 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A6F PUSH1 0x16 DUP4 PUSH2 0x402D JUMP JUMPDEST SWAP2 POP PUSH2 0x3A7A DUP3 PUSH2 0x4332 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A92 PUSH1 0x20 DUP4 PUSH2 0x402D JUMP JUMPDEST SWAP2 POP PUSH2 0x3A9D DUP3 PUSH2 0x435B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x160 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3ABF PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3AD2 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3995 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x3AE5 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3959 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x3AF8 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x3959 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x3B0B PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x3B1E PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x3959 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x3B31 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x3B44 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x3B59 PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x3B6E PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x3B83 PUSH2 0x140 DUP6 ADD DUP3 PUSH2 0x3977 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x180 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3BA0 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3BB3 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3995 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x3BC6 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3959 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x3BD9 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x3959 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x3BEC PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x3959 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x3BFF PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x3C12 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x3C25 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x3C3A PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x3C4F PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x3C64 PUSH2 0x140 DUP6 ADD DUP3 PUSH2 0x3977 JUMP JUMPDEST POP PUSH2 0x160 DUP3 ADD MLOAD PUSH2 0x3C79 PUSH2 0x160 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3C88 DUP2 PUSH2 0x4119 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3C97 DUP2 PUSH2 0x4119 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3CB2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3968 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3CCD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3CDA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3968 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3CF6 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3D03 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3D10 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3D1D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3986 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3D3B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3D48 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3C8E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D64 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3986 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D83 DUP2 PUSH2 0x39B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DA3 DUP2 PUSH2 0x39D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DC3 DUP2 PUSH2 0x39F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DE3 DUP2 PUSH2 0x3A1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E03 DUP2 PUSH2 0x3A3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E23 DUP2 PUSH2 0x3A62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E43 DUP2 PUSH2 0x3A85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x3E60 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3AA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 ADD SWAP1 POP PUSH2 0x3E7C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3AA8 JUMP JUMPDEST PUSH2 0x3E8A PUSH2 0x160 DUP4 ADD DUP5 PUSH2 0x3C8E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 ADD SWAP1 POP PUSH2 0x3EA7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3B89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3EC2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 ADD SWAP1 POP PUSH2 0x3EDE PUSH1 0x0 DUP4 ADD DUP16 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3EEB PUSH1 0x20 DUP4 ADD DUP15 PUSH2 0x39A4 JUMP JUMPDEST PUSH2 0x3EF8 PUSH1 0x40 DUP4 ADD DUP14 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3F05 PUSH1 0x60 DUP4 ADD DUP13 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3F12 PUSH1 0x80 DUP4 ADD DUP12 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3F1F PUSH1 0xA0 DUP4 ADD DUP11 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3F2C PUSH1 0xC0 DUP4 ADD DUP10 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3F39 PUSH1 0xE0 DUP4 ADD DUP9 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3F47 PUSH2 0x100 DUP4 ADD DUP8 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3F55 PUSH2 0x120 DUP4 ADD DUP7 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3F63 PUSH2 0x140 DUP4 ADD DUP6 PUSH2 0x3986 JUMP JUMPDEST PUSH2 0x3F71 PUSH2 0x160 DUP4 ADD DUP5 PUSH2 0x3C8E JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x3F98 PUSH1 0x0 DUP4 ADD DUP15 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3FA5 PUSH1 0x20 DUP4 ADD DUP14 PUSH2 0x39A4 JUMP JUMPDEST PUSH2 0x3FB2 PUSH1 0x40 DUP4 ADD DUP13 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3FBF PUSH1 0x60 DUP4 ADD DUP12 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3FCC PUSH1 0x80 DUP4 ADD DUP11 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3FD9 PUSH1 0xA0 DUP4 ADD DUP10 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3FE6 PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3FF3 PUSH1 0xE0 DUP4 ADD DUP8 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x4001 PUSH2 0x100 DUP4 ADD DUP7 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x400F PUSH2 0x120 DUP4 ADD DUP6 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x401D PUSH2 0x140 DUP4 ADD DUP5 PUSH2 0x3986 JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4049 DUP3 PUSH2 0x4119 JUMP JUMPDEST SWAP2 POP PUSH2 0x4054 DUP4 PUSH2 0x4119 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4089 JUMPI PUSH2 0x4088 PUSH2 0x417E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x409F DUP3 PUSH2 0x4119 JUMP JUMPDEST SWAP2 POP PUSH2 0x40AA DUP4 PUSH2 0x4119 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x40BD JUMPI PUSH2 0x40BC PUSH2 0x417E JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40D3 DUP3 PUSH2 0x40F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x40F4 DUP3 PUSH2 0x4384 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x412E DUP3 PUSH2 0x40E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4140 DUP3 PUSH2 0x4119 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x4173 JUMPI PUSH2 0x4172 PUSH2 0x417E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x496E76616C6964204F7264657220494400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E20756E617661696C61626C6520696E204445580000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742046756E64730000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F74204F776E65720000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E20616C726561647920766572696669656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x4395 JUMPI PUSH2 0x4394 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x43A1 DUP2 PUSH2 0x40C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x43AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x43B8 DUP2 PUSH2 0x40DA JUMP JUMPDEST DUP2 EQ PUSH2 0x43C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x43D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x43DF DUP2 PUSH2 0x4119 JUMP JUMPDEST DUP2 EQ PUSH2 0x43EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE CALLDATASIZE 0xC JUMPI DUP7 PC DUP4 0x5C 0xBB DUP3 CALLVALUE 0xED PUSH31 0x31D607D87084EEEA85588AC20133ADB68693AB64736F6C6343000807003300 ","sourceMap":"387:21808:4:-:0;;;596:8;577:27;;645:1;611:36;;;;;;;;;;;;;;;;;;;;1040:1;1013:28;;1074:4;1048:30;;;;;;;;;;;;;;;;;;;;3359:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:1;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;3453:7:4;3437:6;;:24;;;;;;;;;;;;;;;;;;3498:5;3472:11;;:32;;;;;;;;;;;;;;;;;;3543:13;3515:12;;:42;;;;;;;;;;;;;;;;;;3359:206;;;387:21808;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2433:187:1:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;7:143:9:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:663::-;244:6;252;260;309:2;297:9;288:7;284:23;280:32;277:119;;;315:79;;:::i;:::-;277:119;435:1;460:64;516:7;507:6;496:9;492:22;460:64;:::i;:::-;450:74;;406:128;573:2;599:64;655:7;646:6;635:9;631:22;599:64;:::i;:::-;589:74;;544:129;712:2;738:64;794:7;785:6;774:9;770:22;738:64;:::i;:::-;728:74;;683:129;156:663;;;;;:::o;906:96::-;943:7;972:24;990:5;972:24;:::i;:::-;961:35;;906:96;;;:::o;1008:126::-;1045:7;1085:42;1078:5;1074:54;1063:65;;1008:126;;;:::o;1263:117::-;1372:1;1369;1362:12;1386:122;1459:24;1477:5;1459:24;:::i;:::-;1452:5;1449:35;1439:63;;1498:1;1495;1488:12;1439:63;1386:122;:::o;387:21808:4:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_100":{"entryPoint":12031,"id":100,"parameterSlots":0,"returnSlots":0},"@_msgSender_170":{"entryPoint":12353,"id":170,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_157":{"entryPoint":12157,"id":157,"parameterSlots":1,"returnSlots":0},"@addToken_2251":{"entryPoint":7278,"id":2251,"parameterSlots":2,"returnSlots":0},"@add_356":{"entryPoint":12009,"id":356,"parameterSlots":2,"returnSlots":1},"@cancelOrder_1137":{"entryPoint":9086,"id":1137,"parameterSlots":4,"returnSlots":0},"@createLimitBuyOrder_825":{"entryPoint":2533,"id":825,"parameterSlots":6,"returnSlots":0},"@createLimitSellOrder_929":{"entryPoint":4095,"id":929,"parameterSlots":6,"returnSlots":0},"@ethToken_524":{"entryPoint":5676,"id":524,"parameterSlots":0,"returnSlots":0},"@getFilledOrderLength_2069":{"entryPoint":7868,"id":2069,"parameterSlots":2,"returnSlots":1},"@getFilledOrder_2100":{"entryPoint":5755,"id":2100,"parameterSlots":3,"returnSlots":1},"@getOrderFromArray_2168":{"entryPoint":6334,"id":2168,"parameterSlots":4,"returnSlots":2},"@getOrderLength_2013":{"entryPoint":1395,"id":2013,"parameterSlots":3,"returnSlots":1},"@getOrder_2048":{"entryPoint":8323,"id":2048,"parameterSlots":4,"returnSlots":1},"@getTokenInfo_2317":{"entryPoint":1569,"id":2317,"parameterSlots":1,"returnSlots":1},"@isVerifiedToken_2283":{"entryPoint":1213,"id":2283,"parameterSlots":1,"returnSlots":1},"@orderExists_2224":{"entryPoint":1783,"id":2224,"parameterSlots":4,"returnSlots":1},"@owner_86":{"entryPoint":5714,"id":86,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_114":{"entryPoint":5656,"id":114,"parameterSlots":0,"returnSlots":0},"@s_filledOrders_546":{"entryPoint":7608,"id":546,"parameterSlots":0,"returnSlots":0},"@s_orderBook_538":{"entryPoint":8056,"id":538,"parameterSlots":0,"returnSlots":0},"@s_orderId_549":{"entryPoint":7112,"id":549,"parameterSlots":0,"returnSlots":0},"@setPriceCheckerAddress_2345":{"entryPoint":7532,"id":2345,"parameterSlots":1,"returnSlots":0},"@setTradingFees_2359":{"entryPoint":7980,"id":2359,"parameterSlots":1,"returnSlots":0},"@setWalletAddress_2331":{"entryPoint":7202,"id":2331,"parameterSlots":1,"returnSlots":0},"@sub_371":{"entryPoint":11987,"id":371,"parameterSlots":2,"returnSlots":1},"@tokenList_528":{"entryPoint":7118,"id":528,"parameterSlots":0,"returnSlots":0},"@transferOwnership_137":{"entryPoint":8954,"id":137,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":13511,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":13532,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_enum$_Side_$615":{"entryPoint":13553,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":13574,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":13595,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":13616,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256t_enum$_Side_$615":{"entryPoint":13661,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256":{"entryPoint":13764,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_enum$_Side_$615":{"entryPoint":13867,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_enum$_Side_$615t_uint256":{"entryPoint":13931,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":14014,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_uint256t_bool":{"entryPoint":14078,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":14219,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_enum$_Side_$615t_addresst_address":{"entryPoint":14302,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_enum$_Side_$615t_uint256t_addresst_address":{"entryPoint":14385,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256":{"entryPoint":14488,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":14533,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_enum$_Side_$615t_addresst_address":{"entryPoint":14578,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_t_address_to_t_address":{"entryPoint":14681,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":14696,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool":{"entryPoint":14711,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":14726,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_Side_$615_to_t_uint8":{"entryPoint":14741,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_Side_$615_to_t_uint8_fromStack":{"entryPoint":14756,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2_to_t_string_memory_ptr_fromStack":{"entryPoint":14771,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":14806,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3_to_t_string_memory_ptr_fromStack":{"entryPoint":14841,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092_to_t_string_memory_ptr_fromStack":{"entryPoint":14876,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4_to_t_string_memory_ptr_fromStack":{"entryPoint":14911,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430_to_t_string_memory_ptr_fromStack":{"entryPoint":14946,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":14981,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$__Order_$586_memory_ptr_to_t_struct$__Order_$586_memory_ptr_fromStack":{"entryPoint":15016,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_struct$__filledOrder_$612_memory_ptr_to_t_struct$__filledOrder_$612_memory_ptr_fromStack":{"entryPoint":15241,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":15487,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":15502,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":15517,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":15544,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_bool__fromStack_reversed":{"entryPoint":15585,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":15654,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":15695,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15722,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15754,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15786,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15818,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15850,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15882,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15914,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$__Order_$586_memory_ptr__to_t_struct$__Order_$586_memory_ptr__fromStack_reversed":{"entryPoint":15946,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$__Order_$586_memory_ptr_t_uint256__to_t_struct$__Order_$586_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":15974,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_struct$__filledOrder_$612_memory_ptr__to_t_struct$__filledOrder_$612_memory_ptr__fromStack_reversed":{"entryPoint":16017,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":16045,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_enum$_Side_$615_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint8_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed":{"entryPoint":16072,"id":null,"parameterSlots":13,"returnSlots":1},"abi_encode_tuple_t_uint256_t_enum$_Side_$615_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint8_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed":{"entryPoint":16258,"id":null,"parameterSlots":12,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":16429,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":16446,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":16532,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":16584,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":16602,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_Side_$615":{"entryPoint":16614,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":16633,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":16665,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_Side_$615_to_t_uint8":{"entryPoint":16675,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":16693,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":16766,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":16813,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":16860,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":16907,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":16954,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2":{"entryPoint":16959,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":17000,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3":{"entryPoint":17079,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092":{"entryPoint":17120,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4":{"entryPoint":17161,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430":{"entryPoint":17202,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":17243,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_Side_$615":{"entryPoint":17284,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":17304,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":17327,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_enum$_Side_$615":{"entryPoint":17350,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":17366,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:30337:9","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:9","statements":[{"nodeType":"YulAssignment","src":"69:29:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:9"},"nodeType":"YulFunctionCall","src":"78:20:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:9"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:9"},"nodeType":"YulFunctionCall","src":"107:33:9"},"nodeType":"YulExpressionStatement","src":"107:33:9"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:9","type":""}],"src":"7:139:9"},{"body":{"nodeType":"YulBlock","src":"201:84:9","statements":[{"nodeType":"YulAssignment","src":"211:29:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"233:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"220:12:9"},"nodeType":"YulFunctionCall","src":"220:20:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"211:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"273:5:9"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"249:23:9"},"nodeType":"YulFunctionCall","src":"249:30:9"},"nodeType":"YulExpressionStatement","src":"249:30:9"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"179:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"187:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"195:5:9","type":""}],"src":"152:133:9"},{"body":{"nodeType":"YulBlock","src":"351:95:9","statements":[{"nodeType":"YulAssignment","src":"361:29:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"383:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"370:12:9"},"nodeType":"YulFunctionCall","src":"370:20:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"361:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"434:5:9"}],"functionName":{"name":"validator_revert_t_enum$_Side_$615","nodeType":"YulIdentifier","src":"399:34:9"},"nodeType":"YulFunctionCall","src":"399:41:9"},"nodeType":"YulExpressionStatement","src":"399:41:9"}]},"name":"abi_decode_t_enum$_Side_$615","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"329:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"337:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"345:5:9","type":""}],"src":"291:155:9"},{"body":{"nodeType":"YulBlock","src":"504:87:9","statements":[{"nodeType":"YulAssignment","src":"514:29:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"536:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"523:12:9"},"nodeType":"YulFunctionCall","src":"523:20:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"514:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"579:5:9"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"552:26:9"},"nodeType":"YulFunctionCall","src":"552:33:9"},"nodeType":"YulExpressionStatement","src":"552:33:9"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"482:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"490:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"498:5:9","type":""}],"src":"452:139:9"},{"body":{"nodeType":"YulBlock","src":"660:80:9","statements":[{"nodeType":"YulAssignment","src":"670:22:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"685:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"679:5:9"},"nodeType":"YulFunctionCall","src":"679:13:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"670:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"728:5:9"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"701:26:9"},"nodeType":"YulFunctionCall","src":"701:33:9"},"nodeType":"YulExpressionStatement","src":"701:33:9"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"638:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"646:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"654:5:9","type":""}],"src":"597:143:9"},{"body":{"nodeType":"YulBlock","src":"812:263:9","statements":[{"body":{"nodeType":"YulBlock","src":"858:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"860:77:9"},"nodeType":"YulFunctionCall","src":"860:79:9"},"nodeType":"YulExpressionStatement","src":"860:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"833:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"842:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"829:3:9"},"nodeType":"YulFunctionCall","src":"829:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"854:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"825:3:9"},"nodeType":"YulFunctionCall","src":"825:32:9"},"nodeType":"YulIf","src":"822:119:9"},{"nodeType":"YulBlock","src":"951:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"966:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"980:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"970:6:9","type":""}]},{"nodeType":"YulAssignment","src":"995:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1030:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1041:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1026:3:9"},"nodeType":"YulFunctionCall","src":"1026:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1050:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1005:20:9"},"nodeType":"YulFunctionCall","src":"1005:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"995:6:9"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"782:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"793:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"805:6:9","type":""}],"src":"746:329:9"},{"body":{"nodeType":"YulBlock","src":"1206:656:9","statements":[{"body":{"nodeType":"YulBlock","src":"1253:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1255:77:9"},"nodeType":"YulFunctionCall","src":"1255:79:9"},"nodeType":"YulExpressionStatement","src":"1255:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1227:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"1236:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1223:3:9"},"nodeType":"YulFunctionCall","src":"1223:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"1248:3:9","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1219:3:9"},"nodeType":"YulFunctionCall","src":"1219:33:9"},"nodeType":"YulIf","src":"1216:120:9"},{"nodeType":"YulBlock","src":"1346:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1361:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1375:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1365:6:9","type":""}]},{"nodeType":"YulAssignment","src":"1390:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1425:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1436:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1421:3:9"},"nodeType":"YulFunctionCall","src":"1421:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1445:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1400:20:9"},"nodeType":"YulFunctionCall","src":"1400:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1390:6:9"}]}]},{"nodeType":"YulBlock","src":"1473:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1488:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1502:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1492:6:9","type":""}]},{"nodeType":"YulAssignment","src":"1518:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1553:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1564:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1549:3:9"},"nodeType":"YulFunctionCall","src":"1549:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1573:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1528:20:9"},"nodeType":"YulFunctionCall","src":"1528:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1518:6:9"}]}]},{"nodeType":"YulBlock","src":"1601:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1616:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1630:2:9","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1620:6:9","type":""}]},{"nodeType":"YulAssignment","src":"1646:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1681:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1692:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1677:3:9"},"nodeType":"YulFunctionCall","src":"1677:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1701:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1656:20:9"},"nodeType":"YulFunctionCall","src":"1656:53:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1646:6:9"}]}]},{"nodeType":"YulBlock","src":"1729:126:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1744:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1758:2:9","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1748:6:9","type":""}]},{"nodeType":"YulAssignment","src":"1774:71:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1817:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1828:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1813:3:9"},"nodeType":"YulFunctionCall","src":"1813:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1837:7:9"}],"functionName":{"name":"abi_decode_t_enum$_Side_$615","nodeType":"YulIdentifier","src":"1784:28:9"},"nodeType":"YulFunctionCall","src":"1784:61:9"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1774:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_enum$_Side_$615","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1152:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1163:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1175:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1183:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1191:6:9","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1199:6:9","type":""}],"src":"1081:781:9"},{"body":{"nodeType":"YulBlock","src":"1985:648:9","statements":[{"body":{"nodeType":"YulBlock","src":"2032:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2034:77:9"},"nodeType":"YulFunctionCall","src":"2034:79:9"},"nodeType":"YulExpressionStatement","src":"2034:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2006:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"2015:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2002:3:9"},"nodeType":"YulFunctionCall","src":"2002:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"2027:3:9","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1998:3:9"},"nodeType":"YulFunctionCall","src":"1998:33:9"},"nodeType":"YulIf","src":"1995:120:9"},{"nodeType":"YulBlock","src":"2125:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2140:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2154:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2144:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2169:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2204:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2215:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2200:3:9"},"nodeType":"YulFunctionCall","src":"2200:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2224:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2179:20:9"},"nodeType":"YulFunctionCall","src":"2179:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2169:6:9"}]}]},{"nodeType":"YulBlock","src":"2252:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2267:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2281:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2271:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2297:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2332:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2343:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2328:3:9"},"nodeType":"YulFunctionCall","src":"2328:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2352:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2307:20:9"},"nodeType":"YulFunctionCall","src":"2307:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2297:6:9"}]}]},{"nodeType":"YulBlock","src":"2380:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2395:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2409:2:9","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2399:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2425:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2460:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2471:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2456:3:9"},"nodeType":"YulFunctionCall","src":"2456:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2480:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2435:20:9"},"nodeType":"YulFunctionCall","src":"2435:53:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2425:6:9"}]}]},{"nodeType":"YulBlock","src":"2508:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2523:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2537:2:9","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2527:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2553:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2588:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2599:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:9"},"nodeType":"YulFunctionCall","src":"2584:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2608:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2563:20:9"},"nodeType":"YulFunctionCall","src":"2563:53:9"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2553:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1931:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1942:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1954:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1962:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1970:6:9","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1978:6:9","type":""}],"src":"1868:765:9"},{"body":{"nodeType":"YulBlock","src":"2730:399:9","statements":[{"body":{"nodeType":"YulBlock","src":"2776:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2778:77:9"},"nodeType":"YulFunctionCall","src":"2778:79:9"},"nodeType":"YulExpressionStatement","src":"2778:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2751:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"2760:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2747:3:9"},"nodeType":"YulFunctionCall","src":"2747:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"2772:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2743:3:9"},"nodeType":"YulFunctionCall","src":"2743:32:9"},"nodeType":"YulIf","src":"2740:119:9"},{"nodeType":"YulBlock","src":"2869:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2884:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2898:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2888:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2913:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2948:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2959:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2944:3:9"},"nodeType":"YulFunctionCall","src":"2944:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2968:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2923:20:9"},"nodeType":"YulFunctionCall","src":"2923:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2913:6:9"}]}]},{"nodeType":"YulBlock","src":"2996:126:9","statements":[{"nodeType":"YulVariableDeclaration","src":"3011:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"3025:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3015:6:9","type":""}]},{"nodeType":"YulAssignment","src":"3041:71:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3084:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"3095:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3080:3:9"},"nodeType":"YulFunctionCall","src":"3080:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3104:7:9"}],"functionName":{"name":"abi_decode_t_enum$_Side_$615","nodeType":"YulIdentifier","src":"3051:28:9"},"nodeType":"YulFunctionCall","src":"3051:61:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3041:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_enum$_Side_$615","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2692:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2703:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2715:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2723:6:9","type":""}],"src":"2639:490:9"},{"body":{"nodeType":"YulBlock","src":"3243:527:9","statements":[{"body":{"nodeType":"YulBlock","src":"3289:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3291:77:9"},"nodeType":"YulFunctionCall","src":"3291:79:9"},"nodeType":"YulExpressionStatement","src":"3291:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3264:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"3273:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3260:3:9"},"nodeType":"YulFunctionCall","src":"3260:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"3285:2:9","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3256:3:9"},"nodeType":"YulFunctionCall","src":"3256:32:9"},"nodeType":"YulIf","src":"3253:119:9"},{"nodeType":"YulBlock","src":"3382:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"3397:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"3411:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3401:6:9","type":""}]},{"nodeType":"YulAssignment","src":"3426:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3461:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"3472:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3457:3:9"},"nodeType":"YulFunctionCall","src":"3457:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3481:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3436:20:9"},"nodeType":"YulFunctionCall","src":"3436:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3426:6:9"}]}]},{"nodeType":"YulBlock","src":"3509:126:9","statements":[{"nodeType":"YulVariableDeclaration","src":"3524:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"3538:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3528:6:9","type":""}]},{"nodeType":"YulAssignment","src":"3554:71:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3597:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"3608:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3593:3:9"},"nodeType":"YulFunctionCall","src":"3593:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3617:7:9"}],"functionName":{"name":"abi_decode_t_enum$_Side_$615","nodeType":"YulIdentifier","src":"3564:28:9"},"nodeType":"YulFunctionCall","src":"3564:61:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3554:6:9"}]}]},{"nodeType":"YulBlock","src":"3645:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"3660:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"3674:2:9","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3664:6:9","type":""}]},{"nodeType":"YulAssignment","src":"3690:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3725:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"3736:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3721:3:9"},"nodeType":"YulFunctionCall","src":"3721:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3745:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3700:20:9"},"nodeType":"YulFunctionCall","src":"3700:53:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3690:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_enum$_Side_$615t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3197:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3208:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3220:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3228:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3236:6:9","type":""}],"src":"3135:635:9"},{"body":{"nodeType":"YulBlock","src":"3859:391:9","statements":[{"body":{"nodeType":"YulBlock","src":"3905:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3907:77:9"},"nodeType":"YulFunctionCall","src":"3907:79:9"},"nodeType":"YulExpressionStatement","src":"3907:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3880:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"3889:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3876:3:9"},"nodeType":"YulFunctionCall","src":"3876:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"3901:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3872:3:9"},"nodeType":"YulFunctionCall","src":"3872:32:9"},"nodeType":"YulIf","src":"3869:119:9"},{"nodeType":"YulBlock","src":"3998:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"4013:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"4027:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4017:6:9","type":""}]},{"nodeType":"YulAssignment","src":"4042:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4077:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"4088:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4073:3:9"},"nodeType":"YulFunctionCall","src":"4073:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4097:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4052:20:9"},"nodeType":"YulFunctionCall","src":"4052:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4042:6:9"}]}]},{"nodeType":"YulBlock","src":"4125:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"4140:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"4154:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4144:6:9","type":""}]},{"nodeType":"YulAssignment","src":"4170:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4205:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"4216:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4201:3:9"},"nodeType":"YulFunctionCall","src":"4201:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4225:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4180:20:9"},"nodeType":"YulFunctionCall","src":"4180:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4170:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3821:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3832:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3844:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3852:6:9","type":""}],"src":"3776:474:9"},{"body":{"nodeType":"YulBlock","src":"4404:903:9","statements":[{"body":{"nodeType":"YulBlock","src":"4451:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4453:77:9"},"nodeType":"YulFunctionCall","src":"4453:79:9"},"nodeType":"YulExpressionStatement","src":"4453:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4425:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"4434:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4421:3:9"},"nodeType":"YulFunctionCall","src":"4421:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"4446:3:9","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4417:3:9"},"nodeType":"YulFunctionCall","src":"4417:33:9"},"nodeType":"YulIf","src":"4414:120:9"},{"nodeType":"YulBlock","src":"4544:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"4559:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"4573:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4563:6:9","type":""}]},{"nodeType":"YulAssignment","src":"4588:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4623:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"4634:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4619:3:9"},"nodeType":"YulFunctionCall","src":"4619:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4643:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4598:20:9"},"nodeType":"YulFunctionCall","src":"4598:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4588:6:9"}]}]},{"nodeType":"YulBlock","src":"4671:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"4686:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"4700:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4690:6:9","type":""}]},{"nodeType":"YulAssignment","src":"4716:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4751:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"4762:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4747:3:9"},"nodeType":"YulFunctionCall","src":"4747:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4771:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4726:20:9"},"nodeType":"YulFunctionCall","src":"4726:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4716:6:9"}]}]},{"nodeType":"YulBlock","src":"4799:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"4814:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"4828:2:9","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4818:6:9","type":""}]},{"nodeType":"YulAssignment","src":"4844:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4879:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"4890:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4875:3:9"},"nodeType":"YulFunctionCall","src":"4875:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4899:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4854:20:9"},"nodeType":"YulFunctionCall","src":"4854:53:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4844:6:9"}]}]},{"nodeType":"YulBlock","src":"4927:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"4942:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"4956:2:9","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4946:6:9","type":""}]},{"nodeType":"YulAssignment","src":"4972:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5007:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"5018:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5003:3:9"},"nodeType":"YulFunctionCall","src":"5003:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5027:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4982:20:9"},"nodeType":"YulFunctionCall","src":"4982:53:9"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4972:6:9"}]}]},{"nodeType":"YulBlock","src":"5055:119:9","statements":[{"nodeType":"YulVariableDeclaration","src":"5070:17:9","value":{"kind":"number","nodeType":"YulLiteral","src":"5084:3:9","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5074:6:9","type":""}]},{"nodeType":"YulAssignment","src":"5101:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5136:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"5147:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5132:3:9"},"nodeType":"YulFunctionCall","src":"5132:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5156:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5111:20:9"},"nodeType":"YulFunctionCall","src":"5111:53:9"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5101:6:9"}]}]},{"nodeType":"YulBlock","src":"5184:116:9","statements":[{"nodeType":"YulVariableDeclaration","src":"5199:17:9","value":{"kind":"number","nodeType":"YulLiteral","src":"5213:3:9","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5203:6:9","type":""}]},{"nodeType":"YulAssignment","src":"5230:60:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5262:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"5273:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5258:3:9"},"nodeType":"YulFunctionCall","src":"5258:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5282:7:9"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"5240:17:9"},"nodeType":"YulFunctionCall","src":"5240:50:9"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"5230:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_uint256t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4334:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4345:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4357:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4365:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4373:6:9","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4381:6:9","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4389:6:9","type":""},{"name":"value5","nodeType":"YulTypedName","src":"4397:6:9","type":""}],"src":"4256:1051:9"},{"body":{"nodeType":"YulBlock","src":"5413:519:9","statements":[{"body":{"nodeType":"YulBlock","src":"5459:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5461:77:9"},"nodeType":"YulFunctionCall","src":"5461:79:9"},"nodeType":"YulExpressionStatement","src":"5461:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5434:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"5443:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5430:3:9"},"nodeType":"YulFunctionCall","src":"5430:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"5455:2:9","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5426:3:9"},"nodeType":"YulFunctionCall","src":"5426:32:9"},"nodeType":"YulIf","src":"5423:119:9"},{"nodeType":"YulBlock","src":"5552:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"5567:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"5581:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5571:6:9","type":""}]},{"nodeType":"YulAssignment","src":"5596:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5631:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"5642:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5627:3:9"},"nodeType":"YulFunctionCall","src":"5627:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5651:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5606:20:9"},"nodeType":"YulFunctionCall","src":"5606:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5596:6:9"}]}]},{"nodeType":"YulBlock","src":"5679:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"5694:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"5708:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5698:6:9","type":""}]},{"nodeType":"YulAssignment","src":"5724:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5759:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"5770:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5755:3:9"},"nodeType":"YulFunctionCall","src":"5755:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5779:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5734:20:9"},"nodeType":"YulFunctionCall","src":"5734:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5724:6:9"}]}]},{"nodeType":"YulBlock","src":"5807:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"5822:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"5836:2:9","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5826:6:9","type":""}]},{"nodeType":"YulAssignment","src":"5852:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5887:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"5898:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5883:3:9"},"nodeType":"YulFunctionCall","src":"5883:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5907:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5862:20:9"},"nodeType":"YulFunctionCall","src":"5862:53:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5852:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5367:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5378:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5390:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5398:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5406:6:9","type":""}],"src":"5313:619:9"},{"body":{"nodeType":"YulBlock","src":"6046:527:9","statements":[{"body":{"nodeType":"YulBlock","src":"6092:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6094:77:9"},"nodeType":"YulFunctionCall","src":"6094:79:9"},"nodeType":"YulExpressionStatement","src":"6094:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6067:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"6076:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6063:3:9"},"nodeType":"YulFunctionCall","src":"6063:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"6088:2:9","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6059:3:9"},"nodeType":"YulFunctionCall","src":"6059:32:9"},"nodeType":"YulIf","src":"6056:119:9"},{"nodeType":"YulBlock","src":"6185:125:9","statements":[{"nodeType":"YulVariableDeclaration","src":"6200:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"6214:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6204:6:9","type":""}]},{"nodeType":"YulAssignment","src":"6229:71:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6272:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"6283:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6268:3:9"},"nodeType":"YulFunctionCall","src":"6268:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6292:7:9"}],"functionName":{"name":"abi_decode_t_enum$_Side_$615","nodeType":"YulIdentifier","src":"6239:28:9"},"nodeType":"YulFunctionCall","src":"6239:61:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6229:6:9"}]}]},{"nodeType":"YulBlock","src":"6320:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"6335:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"6349:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6339:6:9","type":""}]},{"nodeType":"YulAssignment","src":"6365:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6400:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"6411:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6396:3:9"},"nodeType":"YulFunctionCall","src":"6396:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6420:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6375:20:9"},"nodeType":"YulFunctionCall","src":"6375:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6365:6:9"}]}]},{"nodeType":"YulBlock","src":"6448:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"6463:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"6477:2:9","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6467:6:9","type":""}]},{"nodeType":"YulAssignment","src":"6493:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6528:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"6539:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6524:3:9"},"nodeType":"YulFunctionCall","src":"6524:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6548:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6503:20:9"},"nodeType":"YulFunctionCall","src":"6503:53:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6493:6:9"}]}]}]},"name":"abi_decode_tuple_t_enum$_Side_$615t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6000:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6011:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6023:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6031:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6039:6:9","type":""}],"src":"5938:635:9"},{"body":{"nodeType":"YulBlock","src":"6704:656:9","statements":[{"body":{"nodeType":"YulBlock","src":"6751:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6753:77:9"},"nodeType":"YulFunctionCall","src":"6753:79:9"},"nodeType":"YulExpressionStatement","src":"6753:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6725:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"6734:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6721:3:9"},"nodeType":"YulFunctionCall","src":"6721:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"6746:3:9","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6717:3:9"},"nodeType":"YulFunctionCall","src":"6717:33:9"},"nodeType":"YulIf","src":"6714:120:9"},{"nodeType":"YulBlock","src":"6844:125:9","statements":[{"nodeType":"YulVariableDeclaration","src":"6859:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"6873:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6863:6:9","type":""}]},{"nodeType":"YulAssignment","src":"6888:71:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6931:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"6942:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6927:3:9"},"nodeType":"YulFunctionCall","src":"6927:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6951:7:9"}],"functionName":{"name":"abi_decode_t_enum$_Side_$615","nodeType":"YulIdentifier","src":"6898:28:9"},"nodeType":"YulFunctionCall","src":"6898:61:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6888:6:9"}]}]},{"nodeType":"YulBlock","src":"6979:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"6994:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"7008:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6998:6:9","type":""}]},{"nodeType":"YulAssignment","src":"7024:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7059:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"7070:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7055:3:9"},"nodeType":"YulFunctionCall","src":"7055:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7079:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7034:20:9"},"nodeType":"YulFunctionCall","src":"7034:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7024:6:9"}]}]},{"nodeType":"YulBlock","src":"7107:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"7122:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"7136:2:9","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7126:6:9","type":""}]},{"nodeType":"YulAssignment","src":"7152:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7187:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"7198:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7183:3:9"},"nodeType":"YulFunctionCall","src":"7183:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7207:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7162:20:9"},"nodeType":"YulFunctionCall","src":"7162:53:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7152:6:9"}]}]},{"nodeType":"YulBlock","src":"7235:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"7250:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"7264:2:9","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7254:6:9","type":""}]},{"nodeType":"YulAssignment","src":"7280:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7315:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"7326:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7311:3:9"},"nodeType":"YulFunctionCall","src":"7311:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7335:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7290:20:9"},"nodeType":"YulFunctionCall","src":"7290:53:9"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7280:6:9"}]}]}]},"name":"abi_decode_tuple_t_enum$_Side_$615t_uint256t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6650:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6661:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6673:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6681:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6689:6:9","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6697:6:9","type":""}],"src":"6579:781:9"},{"body":{"nodeType":"YulBlock","src":"7432:263:9","statements":[{"body":{"nodeType":"YulBlock","src":"7478:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7480:77:9"},"nodeType":"YulFunctionCall","src":"7480:79:9"},"nodeType":"YulExpressionStatement","src":"7480:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7453:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"7462:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7449:3:9"},"nodeType":"YulFunctionCall","src":"7449:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"7474:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7445:3:9"},"nodeType":"YulFunctionCall","src":"7445:32:9"},"nodeType":"YulIf","src":"7442:119:9"},{"nodeType":"YulBlock","src":"7571:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"7586:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"7600:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7590:6:9","type":""}]},{"nodeType":"YulAssignment","src":"7615:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7650:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"7661:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7646:3:9"},"nodeType":"YulFunctionCall","src":"7646:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7670:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7625:20:9"},"nodeType":"YulFunctionCall","src":"7625:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7615:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7402:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7413:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7425:6:9","type":""}],"src":"7366:329:9"},{"body":{"nodeType":"YulBlock","src":"7778:274:9","statements":[{"body":{"nodeType":"YulBlock","src":"7824:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7826:77:9"},"nodeType":"YulFunctionCall","src":"7826:79:9"},"nodeType":"YulExpressionStatement","src":"7826:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7799:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"7808:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7795:3:9"},"nodeType":"YulFunctionCall","src":"7795:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"7820:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7791:3:9"},"nodeType":"YulFunctionCall","src":"7791:32:9"},"nodeType":"YulIf","src":"7788:119:9"},{"nodeType":"YulBlock","src":"7917:128:9","statements":[{"nodeType":"YulVariableDeclaration","src":"7932:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"7946:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7936:6:9","type":""}]},{"nodeType":"YulAssignment","src":"7961:74:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8007:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"8018:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8003:3:9"},"nodeType":"YulFunctionCall","src":"8003:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8027:7:9"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"7971:31:9"},"nodeType":"YulFunctionCall","src":"7971:64:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7961:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7748:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7759:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7771:6:9","type":""}],"src":"7701:351:9"},{"body":{"nodeType":"YulBlock","src":"8183:656:9","statements":[{"body":{"nodeType":"YulBlock","src":"8230:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8232:77:9"},"nodeType":"YulFunctionCall","src":"8232:79:9"},"nodeType":"YulExpressionStatement","src":"8232:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8204:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"8213:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8200:3:9"},"nodeType":"YulFunctionCall","src":"8200:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"8225:3:9","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8196:3:9"},"nodeType":"YulFunctionCall","src":"8196:33:9"},"nodeType":"YulIf","src":"8193:120:9"},{"nodeType":"YulBlock","src":"8323:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"8338:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"8352:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8342:6:9","type":""}]},{"nodeType":"YulAssignment","src":"8367:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8402:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"8413:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8398:3:9"},"nodeType":"YulFunctionCall","src":"8398:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8422:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8377:20:9"},"nodeType":"YulFunctionCall","src":"8377:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8367:6:9"}]}]},{"nodeType":"YulBlock","src":"8450:126:9","statements":[{"nodeType":"YulVariableDeclaration","src":"8465:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"8479:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8469:6:9","type":""}]},{"nodeType":"YulAssignment","src":"8495:71:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8538:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"8549:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8534:3:9"},"nodeType":"YulFunctionCall","src":"8534:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8558:7:9"}],"functionName":{"name":"abi_decode_t_enum$_Side_$615","nodeType":"YulIdentifier","src":"8505:28:9"},"nodeType":"YulFunctionCall","src":"8505:61:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8495:6:9"}]}]},{"nodeType":"YulBlock","src":"8586:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"8601:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"8615:2:9","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8605:6:9","type":""}]},{"nodeType":"YulAssignment","src":"8631:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8666:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"8677:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8662:3:9"},"nodeType":"YulFunctionCall","src":"8662:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8686:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8641:20:9"},"nodeType":"YulFunctionCall","src":"8641:53:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8631:6:9"}]}]},{"nodeType":"YulBlock","src":"8714:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"8729:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"8743:2:9","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8733:6:9","type":""}]},{"nodeType":"YulAssignment","src":"8759:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8794:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"8805:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8790:3:9"},"nodeType":"YulFunctionCall","src":"8790:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8814:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8769:20:9"},"nodeType":"YulFunctionCall","src":"8769:53:9"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"8759:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256t_enum$_Side_$615t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8129:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8140:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8152:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8160:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8168:6:9","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8176:6:9","type":""}],"src":"8058:781:9"},{"body":{"nodeType":"YulBlock","src":"8900:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8917:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8940:5:9"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8922:17:9"},"nodeType":"YulFunctionCall","src":"8922:24:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8910:6:9"},"nodeType":"YulFunctionCall","src":"8910:37:9"},"nodeType":"YulExpressionStatement","src":"8910:37:9"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8888:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8895:3:9","type":""}],"src":"8845:108:9"},{"body":{"nodeType":"YulBlock","src":"9024:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9041:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9064:5:9"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"9046:17:9"},"nodeType":"YulFunctionCall","src":"9046:24:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9034:6:9"},"nodeType":"YulFunctionCall","src":"9034:37:9"},"nodeType":"YulExpressionStatement","src":"9034:37:9"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9012:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9019:3:9","type":""}],"src":"8959:118:9"},{"body":{"nodeType":"YulBlock","src":"9132:50:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9149:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9169:5:9"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"9154:14:9"},"nodeType":"YulFunctionCall","src":"9154:21:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9142:6:9"},"nodeType":"YulFunctionCall","src":"9142:34:9"},"nodeType":"YulExpressionStatement","src":"9142:34:9"}]},"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9120:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9127:3:9","type":""}],"src":"9083:99:9"},{"body":{"nodeType":"YulBlock","src":"9247:50:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9264:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9284:5:9"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"9269:14:9"},"nodeType":"YulFunctionCall","src":"9269:21:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9257:6:9"},"nodeType":"YulFunctionCall","src":"9257:34:9"},"nodeType":"YulExpressionStatement","src":"9257:34:9"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9235:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9242:3:9","type":""}],"src":"9188:109:9"},{"body":{"nodeType":"YulBlock","src":"9364:72:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9381:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9423:5:9"}],"functionName":{"name":"convert_t_enum$_Side_$615_to_t_uint8","nodeType":"YulIdentifier","src":"9386:36:9"},"nodeType":"YulFunctionCall","src":"9386:43:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9374:6:9"},"nodeType":"YulFunctionCall","src":"9374:56:9"},"nodeType":"YulExpressionStatement","src":"9374:56:9"}]},"name":"abi_encode_t_enum$_Side_$615_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9352:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9359:3:9","type":""}],"src":"9303:133:9"},{"body":{"nodeType":"YulBlock","src":"9513:72:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9530:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9572:5:9"}],"functionName":{"name":"convert_t_enum$_Side_$615_to_t_uint8","nodeType":"YulIdentifier","src":"9535:36:9"},"nodeType":"YulFunctionCall","src":"9535:43:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9523:6:9"},"nodeType":"YulFunctionCall","src":"9523:56:9"},"nodeType":"YulExpressionStatement","src":"9523:56:9"}]},"name":"abi_encode_t_enum$_Side_$615_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9501:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9508:3:9","type":""}],"src":"9442:143:9"},{"body":{"nodeType":"YulBlock","src":"9737:220:9","statements":[{"nodeType":"YulAssignment","src":"9747:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9813:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"9818:2:9","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9754:58:9"},"nodeType":"YulFunctionCall","src":"9754:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9747:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9919:3:9"}],"functionName":{"name":"store_literal_in_memory_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2","nodeType":"YulIdentifier","src":"9830:88:9"},"nodeType":"YulFunctionCall","src":"9830:93:9"},"nodeType":"YulExpressionStatement","src":"9830:93:9"},{"nodeType":"YulAssignment","src":"9932:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9943:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"9948:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9939:3:9"},"nodeType":"YulFunctionCall","src":"9939:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9932:3:9"}]}]},"name":"abi_encode_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9725:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9733:3:9","type":""}],"src":"9591:366:9"},{"body":{"nodeType":"YulBlock","src":"10109:220:9","statements":[{"nodeType":"YulAssignment","src":"10119:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10185:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"10190:2:9","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10126:58:9"},"nodeType":"YulFunctionCall","src":"10126:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10119:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10291:3:9"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"10202:88:9"},"nodeType":"YulFunctionCall","src":"10202:93:9"},"nodeType":"YulExpressionStatement","src":"10202:93:9"},{"nodeType":"YulAssignment","src":"10304:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10315:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"10320:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10311:3:9"},"nodeType":"YulFunctionCall","src":"10311:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10304:3:9"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10097:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10105:3:9","type":""}],"src":"9963:366:9"},{"body":{"nodeType":"YulBlock","src":"10481:220:9","statements":[{"nodeType":"YulAssignment","src":"10491:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10557:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"10562:2:9","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10498:58:9"},"nodeType":"YulFunctionCall","src":"10498:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10491:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10663:3:9"}],"functionName":{"name":"store_literal_in_memory_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3","nodeType":"YulIdentifier","src":"10574:88:9"},"nodeType":"YulFunctionCall","src":"10574:93:9"},"nodeType":"YulExpressionStatement","src":"10574:93:9"},{"nodeType":"YulAssignment","src":"10676:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10687:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"10692:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10683:3:9"},"nodeType":"YulFunctionCall","src":"10683:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10676:3:9"}]}]},"name":"abi_encode_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10469:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10477:3:9","type":""}],"src":"10335:366:9"},{"body":{"nodeType":"YulBlock","src":"10853:220:9","statements":[{"nodeType":"YulAssignment","src":"10863:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10929:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"10934:2:9","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10870:58:9"},"nodeType":"YulFunctionCall","src":"10870:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10863:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11035:3:9"}],"functionName":{"name":"store_literal_in_memory_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092","nodeType":"YulIdentifier","src":"10946:88:9"},"nodeType":"YulFunctionCall","src":"10946:93:9"},"nodeType":"YulExpressionStatement","src":"10946:93:9"},{"nodeType":"YulAssignment","src":"11048:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11059:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"11064:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11055:3:9"},"nodeType":"YulFunctionCall","src":"11055:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11048:3:9"}]}]},"name":"abi_encode_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10841:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10849:3:9","type":""}],"src":"10707:366:9"},{"body":{"nodeType":"YulBlock","src":"11225:219:9","statements":[{"nodeType":"YulAssignment","src":"11235:73:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11301:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"11306:1:9","type":"","value":"9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11242:58:9"},"nodeType":"YulFunctionCall","src":"11242:66:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11235:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11406:3:9"}],"functionName":{"name":"store_literal_in_memory_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4","nodeType":"YulIdentifier","src":"11317:88:9"},"nodeType":"YulFunctionCall","src":"11317:93:9"},"nodeType":"YulExpressionStatement","src":"11317:93:9"},{"nodeType":"YulAssignment","src":"11419:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11430:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"11435:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11426:3:9"},"nodeType":"YulFunctionCall","src":"11426:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11419:3:9"}]}]},"name":"abi_encode_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11213:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11221:3:9","type":""}],"src":"11079:365:9"},{"body":{"nodeType":"YulBlock","src":"11596:220:9","statements":[{"nodeType":"YulAssignment","src":"11606:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11672:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"11677:2:9","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11613:58:9"},"nodeType":"YulFunctionCall","src":"11613:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11606:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11778:3:9"}],"functionName":{"name":"store_literal_in_memory_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430","nodeType":"YulIdentifier","src":"11689:88:9"},"nodeType":"YulFunctionCall","src":"11689:93:9"},"nodeType":"YulExpressionStatement","src":"11689:93:9"},{"nodeType":"YulAssignment","src":"11791:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11802:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"11807:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11798:3:9"},"nodeType":"YulFunctionCall","src":"11798:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11791:3:9"}]}]},"name":"abi_encode_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11584:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11592:3:9","type":""}],"src":"11450:366:9"},{"body":{"nodeType":"YulBlock","src":"11968:220:9","statements":[{"nodeType":"YulAssignment","src":"11978:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12044:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"12049:2:9","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11985:58:9"},"nodeType":"YulFunctionCall","src":"11985:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11978:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12150:3:9"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"12061:88:9"},"nodeType":"YulFunctionCall","src":"12061:93:9"},"nodeType":"YulExpressionStatement","src":"12061:93:9"},{"nodeType":"YulAssignment","src":"12163:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12174:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"12179:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12170:3:9"},"nodeType":"YulFunctionCall","src":"12170:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12163:3:9"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11956:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11964:3:9","type":""}],"src":"11822:366:9"},{"body":{"nodeType":"YulBlock","src":"12362:2006:9","statements":[{"nodeType":"YulVariableDeclaration","src":"12372:28:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12388:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"12393:6:9","type":"","value":"0x0160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12384:3:9"},"nodeType":"YulFunctionCall","src":"12384:16:9"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"12376:4:9","type":""}]},{"nodeType":"YulBlock","src":"12410:162:9","statements":[{"nodeType":"YulVariableDeclaration","src":"12443:43:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12473:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"12480:4:9","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12469:3:9"},"nodeType":"YulFunctionCall","src":"12469:16:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12463:5:9"},"nodeType":"YulFunctionCall","src":"12463:23:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12447:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12533:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12551:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"12556:4:9","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12547:3:9"},"nodeType":"YulFunctionCall","src":"12547:14:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"12499:33:9"},"nodeType":"YulFunctionCall","src":"12499:63:9"},"nodeType":"YulExpressionStatement","src":"12499:63:9"}]},{"nodeType":"YulBlock","src":"12582:170:9","statements":[{"nodeType":"YulVariableDeclaration","src":"12617:43:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12647:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"12654:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12643:3:9"},"nodeType":"YulFunctionCall","src":"12643:16:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12637:5:9"},"nodeType":"YulFunctionCall","src":"12637:23:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12621:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12713:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12731:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"12736:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12727:3:9"},"nodeType":"YulFunctionCall","src":"12727:14:9"}],"functionName":{"name":"abi_encode_t_enum$_Side_$615_to_t_uint8","nodeType":"YulIdentifier","src":"12673:39:9"},"nodeType":"YulFunctionCall","src":"12673:69:9"},"nodeType":"YulExpressionStatement","src":"12673:69:9"}]},{"nodeType":"YulBlock","src":"12762:164:9","statements":[{"nodeType":"YulVariableDeclaration","src":"12797:43:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12827:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"12834:4:9","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12823:3:9"},"nodeType":"YulFunctionCall","src":"12823:16:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12817:5:9"},"nodeType":"YulFunctionCall","src":"12817:23:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12801:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12887:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12905:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"12910:4:9","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12901:3:9"},"nodeType":"YulFunctionCall","src":"12901:14:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"12853:33:9"},"nodeType":"YulFunctionCall","src":"12853:63:9"},"nodeType":"YulExpressionStatement","src":"12853:63:9"}]},{"nodeType":"YulBlock","src":"12936:166:9","statements":[{"nodeType":"YulVariableDeclaration","src":"12973:43:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13003:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"13010:4:9","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12999:3:9"},"nodeType":"YulFunctionCall","src":"12999:16:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12993:5:9"},"nodeType":"YulFunctionCall","src":"12993:23:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12977:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13063:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13081:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"13086:4:9","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13077:3:9"},"nodeType":"YulFunctionCall","src":"13077:14:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"13029:33:9"},"nodeType":"YulFunctionCall","src":"13029:63:9"},"nodeType":"YulExpressionStatement","src":"13029:63:9"}]},{"nodeType":"YulBlock","src":"13112:167:9","statements":[{"nodeType":"YulVariableDeclaration","src":"13150:43:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13180:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"13187:4:9","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13176:3:9"},"nodeType":"YulFunctionCall","src":"13176:16:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13170:5:9"},"nodeType":"YulFunctionCall","src":"13170:23:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13154:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13240:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13258:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"13263:4:9","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13254:3:9"},"nodeType":"YulFunctionCall","src":"13254:14:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"13206:33:9"},"nodeType":"YulFunctionCall","src":"13206:63:9"},"nodeType":"YulExpressionStatement","src":"13206:63:9"}]},{"nodeType":"YulBlock","src":"13289:166:9","statements":[{"nodeType":"YulVariableDeclaration","src":"13326:43:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13356:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"13363:4:9","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13352:3:9"},"nodeType":"YulFunctionCall","src":"13352:16:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13346:5:9"},"nodeType":"YulFunctionCall","src":"13346:23:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13330:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13416:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13434:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"13439:4:9","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13430:3:9"},"nodeType":"YulFunctionCall","src":"13430:14:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"13382:33:9"},"nodeType":"YulFunctionCall","src":"13382:63:9"},"nodeType":"YulExpressionStatement","src":"13382:63:9"}]},{"nodeType":"YulBlock","src":"13465:167:9","statements":[{"nodeType":"YulVariableDeclaration","src":"13503:43:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13533:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"13540:4:9","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13529:3:9"},"nodeType":"YulFunctionCall","src":"13529:16:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13523:5:9"},"nodeType":"YulFunctionCall","src":"13523:23:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13507:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13593:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13611:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"13616:4:9","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13607:3:9"},"nodeType":"YulFunctionCall","src":"13607:14:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"13559:33:9"},"nodeType":"YulFunctionCall","src":"13559:63:9"},"nodeType":"YulExpressionStatement","src":"13559:63:9"}]},{"nodeType":"YulBlock","src":"13642:164:9","statements":[{"nodeType":"YulVariableDeclaration","src":"13677:43:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13707:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"13714:4:9","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13703:3:9"},"nodeType":"YulFunctionCall","src":"13703:16:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13697:5:9"},"nodeType":"YulFunctionCall","src":"13697:23:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13681:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13767:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13785:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"13790:4:9","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13781:3:9"},"nodeType":"YulFunctionCall","src":"13781:14:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"13733:33:9"},"nodeType":"YulFunctionCall","src":"13733:63:9"},"nodeType":"YulExpressionStatement","src":"13733:63:9"}]},{"nodeType":"YulBlock","src":"13816:179:9","statements":[{"nodeType":"YulVariableDeclaration","src":"13862:45:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13892:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"13899:6:9","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13888:3:9"},"nodeType":"YulFunctionCall","src":"13888:18:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13882:5:9"},"nodeType":"YulFunctionCall","src":"13882:25:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13866:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13954:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13972:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"13977:6:9","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13968:3:9"},"nodeType":"YulFunctionCall","src":"13968:16:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"13920:33:9"},"nodeType":"YulFunctionCall","src":"13920:65:9"},"nodeType":"YulExpressionStatement","src":"13920:65:9"}]},{"nodeType":"YulBlock","src":"14005:179:9","statements":[{"nodeType":"YulVariableDeclaration","src":"14051:45:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14081:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"14088:6:9","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14077:3:9"},"nodeType":"YulFunctionCall","src":"14077:18:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14071:5:9"},"nodeType":"YulFunctionCall","src":"14071:25:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14055:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14143:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14161:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"14166:6:9","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14157:3:9"},"nodeType":"YulFunctionCall","src":"14157:16:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"14109:33:9"},"nodeType":"YulFunctionCall","src":"14109:65:9"},"nodeType":"YulExpressionStatement","src":"14109:65:9"}]},{"nodeType":"YulBlock","src":"14194:167:9","statements":[{"nodeType":"YulVariableDeclaration","src":"14234:45:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14264:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"14271:6:9","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14260:3:9"},"nodeType":"YulFunctionCall","src":"14260:18:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14254:5:9"},"nodeType":"YulFunctionCall","src":"14254:25:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14238:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14320:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14338:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"14343:6:9","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14334:3:9"},"nodeType":"YulFunctionCall","src":"14334:16:9"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"14292:27:9"},"nodeType":"YulFunctionCall","src":"14292:59:9"},"nodeType":"YulExpressionStatement","src":"14292:59:9"}]}]},"name":"abi_encode_t_struct$__Order_$586_memory_ptr_to_t_struct$__Order_$586_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12349:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12356:3:9","type":""}],"src":"12250:2118:9"},{"body":{"nodeType":"YulBlock","src":"14566:2203:9","statements":[{"nodeType":"YulVariableDeclaration","src":"14576:28:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14592:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"14597:6:9","type":"","value":"0x0180"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14588:3:9"},"nodeType":"YulFunctionCall","src":"14588:16:9"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"14580:4:9","type":""}]},{"nodeType":"YulBlock","src":"14614:162:9","statements":[{"nodeType":"YulVariableDeclaration","src":"14647:43:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14677:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"14684:4:9","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14673:3:9"},"nodeType":"YulFunctionCall","src":"14673:16:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14667:5:9"},"nodeType":"YulFunctionCall","src":"14667:23:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14651:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14737:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14755:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"14760:4:9","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14751:3:9"},"nodeType":"YulFunctionCall","src":"14751:14:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"14703:33:9"},"nodeType":"YulFunctionCall","src":"14703:63:9"},"nodeType":"YulExpressionStatement","src":"14703:63:9"}]},{"nodeType":"YulBlock","src":"14786:170:9","statements":[{"nodeType":"YulVariableDeclaration","src":"14821:43:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14851:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"14858:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14847:3:9"},"nodeType":"YulFunctionCall","src":"14847:16:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14841:5:9"},"nodeType":"YulFunctionCall","src":"14841:23:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14825:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14917:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14935:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"14940:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14931:3:9"},"nodeType":"YulFunctionCall","src":"14931:14:9"}],"functionName":{"name":"abi_encode_t_enum$_Side_$615_to_t_uint8","nodeType":"YulIdentifier","src":"14877:39:9"},"nodeType":"YulFunctionCall","src":"14877:69:9"},"nodeType":"YulExpressionStatement","src":"14877:69:9"}]},{"nodeType":"YulBlock","src":"14966:164:9","statements":[{"nodeType":"YulVariableDeclaration","src":"15001:43:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15031:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"15038:4:9","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15027:3:9"},"nodeType":"YulFunctionCall","src":"15027:16:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15021:5:9"},"nodeType":"YulFunctionCall","src":"15021:23:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15005:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15091:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15109:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"15114:4:9","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15105:3:9"},"nodeType":"YulFunctionCall","src":"15105:14:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"15057:33:9"},"nodeType":"YulFunctionCall","src":"15057:63:9"},"nodeType":"YulExpressionStatement","src":"15057:63:9"}]},{"nodeType":"YulBlock","src":"15140:166:9","statements":[{"nodeType":"YulVariableDeclaration","src":"15177:43:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15207:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"15214:4:9","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15203:3:9"},"nodeType":"YulFunctionCall","src":"15203:16:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15197:5:9"},"nodeType":"YulFunctionCall","src":"15197:23:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15181:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15267:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15285:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"15290:4:9","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15281:3:9"},"nodeType":"YulFunctionCall","src":"15281:14:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"15233:33:9"},"nodeType":"YulFunctionCall","src":"15233:63:9"},"nodeType":"YulExpressionStatement","src":"15233:63:9"}]},{"nodeType":"YulBlock","src":"15316:166:9","statements":[{"nodeType":"YulVariableDeclaration","src":"15353:43:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15383:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"15390:4:9","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15379:3:9"},"nodeType":"YulFunctionCall","src":"15379:16:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15373:5:9"},"nodeType":"YulFunctionCall","src":"15373:23:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15357:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15443:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15461:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"15466:4:9","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15457:3:9"},"nodeType":"YulFunctionCall","src":"15457:14:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"15409:33:9"},"nodeType":"YulFunctionCall","src":"15409:63:9"},"nodeType":"YulExpressionStatement","src":"15409:63:9"}]},{"nodeType":"YulBlock","src":"15492:172:9","statements":[{"nodeType":"YulVariableDeclaration","src":"15535:43:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15565:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"15572:4:9","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15561:3:9"},"nodeType":"YulFunctionCall","src":"15561:16:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15555:5:9"},"nodeType":"YulFunctionCall","src":"15555:23:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15539:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15625:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15643:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"15648:4:9","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15639:3:9"},"nodeType":"YulFunctionCall","src":"15639:14:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"15591:33:9"},"nodeType":"YulFunctionCall","src":"15591:63:9"},"nodeType":"YulExpressionStatement","src":"15591:63:9"}]},{"nodeType":"YulBlock","src":"15674:168:9","statements":[{"nodeType":"YulVariableDeclaration","src":"15713:43:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15743:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"15750:4:9","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15739:3:9"},"nodeType":"YulFunctionCall","src":"15739:16:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15733:5:9"},"nodeType":"YulFunctionCall","src":"15733:23:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15717:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15803:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15821:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"15826:4:9","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15817:3:9"},"nodeType":"YulFunctionCall","src":"15817:14:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"15769:33:9"},"nodeType":"YulFunctionCall","src":"15769:63:9"},"nodeType":"YulExpressionStatement","src":"15769:63:9"}]},{"nodeType":"YulBlock","src":"15852:172:9","statements":[{"nodeType":"YulVariableDeclaration","src":"15895:43:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15925:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"15932:4:9","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15921:3:9"},"nodeType":"YulFunctionCall","src":"15921:16:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15915:5:9"},"nodeType":"YulFunctionCall","src":"15915:23:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15899:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15985:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16003:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"16008:4:9","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15999:3:9"},"nodeType":"YulFunctionCall","src":"15999:14:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"15951:33:9"},"nodeType":"YulFunctionCall","src":"15951:63:9"},"nodeType":"YulExpressionStatement","src":"15951:63:9"}]},{"nodeType":"YulBlock","src":"16034:179:9","statements":[{"nodeType":"YulVariableDeclaration","src":"16080:45:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16110:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"16117:6:9","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16106:3:9"},"nodeType":"YulFunctionCall","src":"16106:18:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16100:5:9"},"nodeType":"YulFunctionCall","src":"16100:25:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"16084:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"16172:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16190:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"16195:6:9","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16186:3:9"},"nodeType":"YulFunctionCall","src":"16186:16:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"16138:33:9"},"nodeType":"YulFunctionCall","src":"16138:65:9"},"nodeType":"YulExpressionStatement","src":"16138:65:9"}]},{"nodeType":"YulBlock","src":"16223:179:9","statements":[{"nodeType":"YulVariableDeclaration","src":"16269:45:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16299:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"16306:6:9","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16295:3:9"},"nodeType":"YulFunctionCall","src":"16295:18:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16289:5:9"},"nodeType":"YulFunctionCall","src":"16289:25:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"16273:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"16361:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16379:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"16384:6:9","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16375:3:9"},"nodeType":"YulFunctionCall","src":"16375:16:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"16327:33:9"},"nodeType":"YulFunctionCall","src":"16327:65:9"},"nodeType":"YulExpressionStatement","src":"16327:65:9"}]},{"nodeType":"YulBlock","src":"16412:168:9","statements":[{"nodeType":"YulVariableDeclaration","src":"16453:45:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16483:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"16490:6:9","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16479:3:9"},"nodeType":"YulFunctionCall","src":"16479:18:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16473:5:9"},"nodeType":"YulFunctionCall","src":"16473:25:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"16457:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"16539:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16557:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"16562:6:9","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16553:3:9"},"nodeType":"YulFunctionCall","src":"16553:16:9"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"16511:27:9"},"nodeType":"YulFunctionCall","src":"16511:59:9"},"nodeType":"YulExpressionStatement","src":"16511:59:9"}]},{"nodeType":"YulBlock","src":"16590:172:9","statements":[{"nodeType":"YulVariableDeclaration","src":"16629:45:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16659:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"16666:6:9","type":"","value":"0x0160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16655:3:9"},"nodeType":"YulFunctionCall","src":"16655:18:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16649:5:9"},"nodeType":"YulFunctionCall","src":"16649:25:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"16633:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"16721:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16739:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"16744:6:9","type":"","value":"0x0160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16735:3:9"},"nodeType":"YulFunctionCall","src":"16735:16:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"16687:33:9"},"nodeType":"YulFunctionCall","src":"16687:65:9"},"nodeType":"YulExpressionStatement","src":"16687:65:9"}]}]},"name":"abi_encode_t_struct$__filledOrder_$612_memory_ptr_to_t_struct$__filledOrder_$612_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14553:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14560:3:9","type":""}],"src":"14442:2327:9"},{"body":{"nodeType":"YulBlock","src":"16830:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16847:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16870:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16852:17:9"},"nodeType":"YulFunctionCall","src":"16852:24:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16840:6:9"},"nodeType":"YulFunctionCall","src":"16840:37:9"},"nodeType":"YulExpressionStatement","src":"16840:37:9"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16818:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16825:3:9","type":""}],"src":"16775:108:9"},{"body":{"nodeType":"YulBlock","src":"16954:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16971:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16994:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16976:17:9"},"nodeType":"YulFunctionCall","src":"16976:24:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16964:6:9"},"nodeType":"YulFunctionCall","src":"16964:37:9"},"nodeType":"YulExpressionStatement","src":"16964:37:9"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16942:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16949:3:9","type":""}],"src":"16889:118:9"},{"body":{"nodeType":"YulBlock","src":"17111:124:9","statements":[{"nodeType":"YulAssignment","src":"17121:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17133:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"17144:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17129:3:9"},"nodeType":"YulFunctionCall","src":"17129:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17121:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17201:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17214:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"17225:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17210:3:9"},"nodeType":"YulFunctionCall","src":"17210:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17157:43:9"},"nodeType":"YulFunctionCall","src":"17157:71:9"},"nodeType":"YulExpressionStatement","src":"17157:71:9"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17083:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17095:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17106:4:9","type":""}],"src":"17013:222:9"},{"body":{"nodeType":"YulBlock","src":"17367:206:9","statements":[{"nodeType":"YulAssignment","src":"17377:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17389:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"17400:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17385:3:9"},"nodeType":"YulFunctionCall","src":"17385:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17377:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17457:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17470:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"17481:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17466:3:9"},"nodeType":"YulFunctionCall","src":"17466:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17413:43:9"},"nodeType":"YulFunctionCall","src":"17413:71:9"},"nodeType":"YulExpressionStatement","src":"17413:71:9"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17538:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17551:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"17562:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17547:3:9"},"nodeType":"YulFunctionCall","src":"17547:18:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17494:43:9"},"nodeType":"YulFunctionCall","src":"17494:72:9"},"nodeType":"YulExpressionStatement","src":"17494:72:9"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17331:9:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17343:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17351:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17362:4:9","type":""}],"src":"17241:332:9"},{"body":{"nodeType":"YulBlock","src":"17755:365:9","statements":[{"nodeType":"YulAssignment","src":"17765:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17777:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"17788:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17773:3:9"},"nodeType":"YulFunctionCall","src":"17773:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17765:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17846:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17859:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"17870:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17855:3:9"},"nodeType":"YulFunctionCall","src":"17855:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17802:43:9"},"nodeType":"YulFunctionCall","src":"17802:71:9"},"nodeType":"YulExpressionStatement","src":"17802:71:9"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17927:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17940:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"17951:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17936:3:9"},"nodeType":"YulFunctionCall","src":"17936:18:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17883:43:9"},"nodeType":"YulFunctionCall","src":"17883:72:9"},"nodeType":"YulExpressionStatement","src":"17883:72:9"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"18009:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18022:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"18033:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18018:3:9"},"nodeType":"YulFunctionCall","src":"18018:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17965:43:9"},"nodeType":"YulFunctionCall","src":"17965:72:9"},"nodeType":"YulExpressionStatement","src":"17965:72:9"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"18085:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18098:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"18109:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18094:3:9"},"nodeType":"YulFunctionCall","src":"18094:18:9"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"18047:37:9"},"nodeType":"YulFunctionCall","src":"18047:66:9"},"nodeType":"YulExpressionStatement","src":"18047:66:9"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17703:9:9","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17715:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17723:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17731:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17739:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17750:4:9","type":""}],"src":"17579:541:9"},{"body":{"nodeType":"YulBlock","src":"18252:206:9","statements":[{"nodeType":"YulAssignment","src":"18262:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18274:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"18285:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18270:3:9"},"nodeType":"YulFunctionCall","src":"18270:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18262:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18342:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18355:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"18366:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18351:3:9"},"nodeType":"YulFunctionCall","src":"18351:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18298:43:9"},"nodeType":"YulFunctionCall","src":"18298:71:9"},"nodeType":"YulExpressionStatement","src":"18298:71:9"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18423:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18436:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"18447:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18432:3:9"},"nodeType":"YulFunctionCall","src":"18432:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18379:43:9"},"nodeType":"YulFunctionCall","src":"18379:72:9"},"nodeType":"YulExpressionStatement","src":"18379:72:9"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18216:9:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18228:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18236:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18247:4:9","type":""}],"src":"18126:332:9"},{"body":{"nodeType":"YulBlock","src":"18556:118:9","statements":[{"nodeType":"YulAssignment","src":"18566:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18578:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"18589:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18574:3:9"},"nodeType":"YulFunctionCall","src":"18574:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18566:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18640:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18653:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"18664:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18649:3:9"},"nodeType":"YulFunctionCall","src":"18649:17:9"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"18602:37:9"},"nodeType":"YulFunctionCall","src":"18602:65:9"},"nodeType":"YulExpressionStatement","src":"18602:65:9"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18528:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18540:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18551:4:9","type":""}],"src":"18464:210:9"},{"body":{"nodeType":"YulBlock","src":"18851:248:9","statements":[{"nodeType":"YulAssignment","src":"18861:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18873:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"18884:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18869:3:9"},"nodeType":"YulFunctionCall","src":"18869:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18861:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18908:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"18919:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18904:3:9"},"nodeType":"YulFunctionCall","src":"18904:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18927:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"18933:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18923:3:9"},"nodeType":"YulFunctionCall","src":"18923:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18897:6:9"},"nodeType":"YulFunctionCall","src":"18897:47:9"},"nodeType":"YulExpressionStatement","src":"18897:47:9"},{"nodeType":"YulAssignment","src":"18953:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19087:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18961:124:9"},"nodeType":"YulFunctionCall","src":"18961:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18953:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18831:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18846:4:9","type":""}],"src":"18680:419:9"},{"body":{"nodeType":"YulBlock","src":"19276:248:9","statements":[{"nodeType":"YulAssignment","src":"19286:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19298:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"19309:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19294:3:9"},"nodeType":"YulFunctionCall","src":"19294:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19286:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19333:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"19344:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19329:3:9"},"nodeType":"YulFunctionCall","src":"19329:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19352:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"19358:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19348:3:9"},"nodeType":"YulFunctionCall","src":"19348:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19322:6:9"},"nodeType":"YulFunctionCall","src":"19322:47:9"},"nodeType":"YulExpressionStatement","src":"19322:47:9"},{"nodeType":"YulAssignment","src":"19378:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19512:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19386:124:9"},"nodeType":"YulFunctionCall","src":"19386:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19378:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19256:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19271:4:9","type":""}],"src":"19105:419:9"},{"body":{"nodeType":"YulBlock","src":"19701:248:9","statements":[{"nodeType":"YulAssignment","src":"19711:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19723:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"19734:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19719:3:9"},"nodeType":"YulFunctionCall","src":"19719:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19711:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19758:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"19769:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19754:3:9"},"nodeType":"YulFunctionCall","src":"19754:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19777:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"19783:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19773:3:9"},"nodeType":"YulFunctionCall","src":"19773:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19747:6:9"},"nodeType":"YulFunctionCall","src":"19747:47:9"},"nodeType":"YulExpressionStatement","src":"19747:47:9"},{"nodeType":"YulAssignment","src":"19803:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19937:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19811:124:9"},"nodeType":"YulFunctionCall","src":"19811:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19803:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19681:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19696:4:9","type":""}],"src":"19530:419:9"},{"body":{"nodeType":"YulBlock","src":"20126:248:9","statements":[{"nodeType":"YulAssignment","src":"20136:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20148:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"20159:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20144:3:9"},"nodeType":"YulFunctionCall","src":"20144:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20136:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20183:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"20194:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20179:3:9"},"nodeType":"YulFunctionCall","src":"20179:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20202:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"20208:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20198:3:9"},"nodeType":"YulFunctionCall","src":"20198:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20172:6:9"},"nodeType":"YulFunctionCall","src":"20172:47:9"},"nodeType":"YulExpressionStatement","src":"20172:47:9"},{"nodeType":"YulAssignment","src":"20228:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20362:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20236:124:9"},"nodeType":"YulFunctionCall","src":"20236:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20228:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20106:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20121:4:9","type":""}],"src":"19955:419:9"},{"body":{"nodeType":"YulBlock","src":"20551:248:9","statements":[{"nodeType":"YulAssignment","src":"20561:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20573:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"20584:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20569:3:9"},"nodeType":"YulFunctionCall","src":"20569:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20561:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20608:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"20619:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20604:3:9"},"nodeType":"YulFunctionCall","src":"20604:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20627:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"20633:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20623:3:9"},"nodeType":"YulFunctionCall","src":"20623:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20597:6:9"},"nodeType":"YulFunctionCall","src":"20597:47:9"},"nodeType":"YulExpressionStatement","src":"20597:47:9"},{"nodeType":"YulAssignment","src":"20653:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20787:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20661:124:9"},"nodeType":"YulFunctionCall","src":"20661:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20653:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20531:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20546:4:9","type":""}],"src":"20380:419:9"},{"body":{"nodeType":"YulBlock","src":"20976:248:9","statements":[{"nodeType":"YulAssignment","src":"20986:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20998:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"21009:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20994:3:9"},"nodeType":"YulFunctionCall","src":"20994:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20986:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21033:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"21044:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21029:3:9"},"nodeType":"YulFunctionCall","src":"21029:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21052:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"21058:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21048:3:9"},"nodeType":"YulFunctionCall","src":"21048:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21022:6:9"},"nodeType":"YulFunctionCall","src":"21022:47:9"},"nodeType":"YulExpressionStatement","src":"21022:47:9"},{"nodeType":"YulAssignment","src":"21078:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21212:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21086:124:9"},"nodeType":"YulFunctionCall","src":"21086:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21078:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20956:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20971:4:9","type":""}],"src":"20805:419:9"},{"body":{"nodeType":"YulBlock","src":"21401:248:9","statements":[{"nodeType":"YulAssignment","src":"21411:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21423:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"21434:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21419:3:9"},"nodeType":"YulFunctionCall","src":"21419:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21411:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21458:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"21469:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21454:3:9"},"nodeType":"YulFunctionCall","src":"21454:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21477:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"21483:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21473:3:9"},"nodeType":"YulFunctionCall","src":"21473:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21447:6:9"},"nodeType":"YulFunctionCall","src":"21447:47:9"},"nodeType":"YulExpressionStatement","src":"21447:47:9"},{"nodeType":"YulAssignment","src":"21503:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21637:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21511:124:9"},"nodeType":"YulFunctionCall","src":"21511:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21503:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21381:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21396:4:9","type":""}],"src":"21230:419:9"},{"body":{"nodeType":"YulBlock","src":"21799:171:9","statements":[{"nodeType":"YulAssignment","src":"21809:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21821:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"21832:3:9","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21817:3:9"},"nodeType":"YulFunctionCall","src":"21817:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21809:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21936:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21949:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"21960:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21945:3:9"},"nodeType":"YulFunctionCall","src":"21945:17:9"}],"functionName":{"name":"abi_encode_t_struct$__Order_$586_memory_ptr_to_t_struct$__Order_$586_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21846:89:9"},"nodeType":"YulFunctionCall","src":"21846:117:9"},"nodeType":"YulExpressionStatement","src":"21846:117:9"}]},"name":"abi_encode_tuple_t_struct$__Order_$586_memory_ptr__to_t_struct$__Order_$586_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21771:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21783:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21794:4:9","type":""}],"src":"21655:315:9"},{"body":{"nodeType":"YulBlock","src":"22148:254:9","statements":[{"nodeType":"YulAssignment","src":"22158:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22170:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"22181:3:9","type":"","value":"384"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22166:3:9"},"nodeType":"YulFunctionCall","src":"22166:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22158:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22285:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22298:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"22309:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22294:3:9"},"nodeType":"YulFunctionCall","src":"22294:17:9"}],"functionName":{"name":"abi_encode_t_struct$__Order_$586_memory_ptr_to_t_struct$__Order_$586_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22195:89:9"},"nodeType":"YulFunctionCall","src":"22195:117:9"},"nodeType":"YulExpressionStatement","src":"22195:117:9"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22366:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22379:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"22390:3:9","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22375:3:9"},"nodeType":"YulFunctionCall","src":"22375:19:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22322:43:9"},"nodeType":"YulFunctionCall","src":"22322:73:9"},"nodeType":"YulExpressionStatement","src":"22322:73:9"}]},"name":"abi_encode_tuple_t_struct$__Order_$586_memory_ptr_t_uint256__to_t_struct$__Order_$586_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22112:9:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22124:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22132:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22143:4:9","type":""}],"src":"21976:426:9"},{"body":{"nodeType":"YulBlock","src":"22564:183:9","statements":[{"nodeType":"YulAssignment","src":"22574:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22586:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"22597:3:9","type":"","value":"384"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22582:3:9"},"nodeType":"YulFunctionCall","src":"22582:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22574:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22713:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22726:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"22737:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22722:3:9"},"nodeType":"YulFunctionCall","src":"22722:17:9"}],"functionName":{"name":"abi_encode_t_struct$__filledOrder_$612_memory_ptr_to_t_struct$__filledOrder_$612_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22611:101:9"},"nodeType":"YulFunctionCall","src":"22611:129:9"},"nodeType":"YulExpressionStatement","src":"22611:129:9"}]},"name":"abi_encode_tuple_t_struct$__filledOrder_$612_memory_ptr__to_t_struct$__filledOrder_$612_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22536:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22548:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22559:4:9","type":""}],"src":"22408:339:9"},{"body":{"nodeType":"YulBlock","src":"22851:124:9","statements":[{"nodeType":"YulAssignment","src":"22861:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22873:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"22884:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22869:3:9"},"nodeType":"YulFunctionCall","src":"22869:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22861:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22941:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22954:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"22965:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22950:3:9"},"nodeType":"YulFunctionCall","src":"22950:17:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22897:43:9"},"nodeType":"YulFunctionCall","src":"22897:71:9"},"nodeType":"YulExpressionStatement","src":"22897:71:9"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22823:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22835:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22846:4:9","type":""}],"src":"22753:222:9"},{"body":{"nodeType":"YulBlock","src":"23389:1037:9","statements":[{"nodeType":"YulAssignment","src":"23399:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23411:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"23422:3:9","type":"","value":"384"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23407:3:9"},"nodeType":"YulFunctionCall","src":"23407:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23399:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23480:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23493:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"23504:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23489:3:9"},"nodeType":"YulFunctionCall","src":"23489:17:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23436:43:9"},"nodeType":"YulFunctionCall","src":"23436:71:9"},"nodeType":"YulExpressionStatement","src":"23436:71:9"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23567:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23580:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"23591:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23576:3:9"},"nodeType":"YulFunctionCall","src":"23576:18:9"}],"functionName":{"name":"abi_encode_t_enum$_Side_$615_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"23517:49:9"},"nodeType":"YulFunctionCall","src":"23517:78:9"},"nodeType":"YulExpressionStatement","src":"23517:78:9"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23649:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23662:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"23673:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23658:3:9"},"nodeType":"YulFunctionCall","src":"23658:18:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23605:43:9"},"nodeType":"YulFunctionCall","src":"23605:72:9"},"nodeType":"YulExpressionStatement","src":"23605:72:9"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"23731:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23744:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"23755:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23740:3:9"},"nodeType":"YulFunctionCall","src":"23740:18:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23687:43:9"},"nodeType":"YulFunctionCall","src":"23687:72:9"},"nodeType":"YulExpressionStatement","src":"23687:72:9"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"23813:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23826:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"23837:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23822:3:9"},"nodeType":"YulFunctionCall","src":"23822:19:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23769:43:9"},"nodeType":"YulFunctionCall","src":"23769:73:9"},"nodeType":"YulExpressionStatement","src":"23769:73:9"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"23896:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23909:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"23920:3:9","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23905:3:9"},"nodeType":"YulFunctionCall","src":"23905:19:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23852:43:9"},"nodeType":"YulFunctionCall","src":"23852:73:9"},"nodeType":"YulExpressionStatement","src":"23852:73:9"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"23979:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23992:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"24003:3:9","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23988:3:9"},"nodeType":"YulFunctionCall","src":"23988:19:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23935:43:9"},"nodeType":"YulFunctionCall","src":"23935:73:9"},"nodeType":"YulExpressionStatement","src":"23935:73:9"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"24062:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24075:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"24086:3:9","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24071:3:9"},"nodeType":"YulFunctionCall","src":"24071:19:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24018:43:9"},"nodeType":"YulFunctionCall","src":"24018:73:9"},"nodeType":"YulExpressionStatement","src":"24018:73:9"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"24145:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24158:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"24169:3:9","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24154:3:9"},"nodeType":"YulFunctionCall","src":"24154:19:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24101:43:9"},"nodeType":"YulFunctionCall","src":"24101:73:9"},"nodeType":"YulExpressionStatement","src":"24101:73:9"},{"expression":{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"24228:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24241:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"24252:3:9","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24237:3:9"},"nodeType":"YulFunctionCall","src":"24237:19:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24184:43:9"},"nodeType":"YulFunctionCall","src":"24184:73:9"},"nodeType":"YulExpressionStatement","src":"24184:73:9"},{"expression":{"arguments":[{"name":"value10","nodeType":"YulIdentifier","src":"24305:7:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24319:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"24330:3:9","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24315:3:9"},"nodeType":"YulFunctionCall","src":"24315:19:9"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"24267:37:9"},"nodeType":"YulFunctionCall","src":"24267:68:9"},"nodeType":"YulExpressionStatement","src":"24267:68:9"},{"expression":{"arguments":[{"name":"value11","nodeType":"YulIdentifier","src":"24389:7:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24403:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"24414:3:9","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24399:3:9"},"nodeType":"YulFunctionCall","src":"24399:19:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24345:43:9"},"nodeType":"YulFunctionCall","src":"24345:74:9"},"nodeType":"YulExpressionStatement","src":"24345:74:9"}]},"name":"abi_encode_tuple_t_uint256_t_enum$_Side_$615_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint8_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23271:9:9","type":""},{"name":"value11","nodeType":"YulTypedName","src":"23283:7:9","type":""},{"name":"value10","nodeType":"YulTypedName","src":"23292:7:9","type":""},{"name":"value9","nodeType":"YulTypedName","src":"23301:6:9","type":""},{"name":"value8","nodeType":"YulTypedName","src":"23309:6:9","type":""},{"name":"value7","nodeType":"YulTypedName","src":"23317:6:9","type":""},{"name":"value6","nodeType":"YulTypedName","src":"23325:6:9","type":""},{"name":"value5","nodeType":"YulTypedName","src":"23333:6:9","type":""},{"name":"value4","nodeType":"YulTypedName","src":"23341:6:9","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23349:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23357:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23365:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23373:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23384:4:9","type":""}],"src":"22981:1445:9"},{"body":{"nodeType":"YulBlock","src":"24811:953:9","statements":[{"nodeType":"YulAssignment","src":"24821:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24833:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"24844:3:9","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24829:3:9"},"nodeType":"YulFunctionCall","src":"24829:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24821:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24902:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24915:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"24926:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24911:3:9"},"nodeType":"YulFunctionCall","src":"24911:17:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24858:43:9"},"nodeType":"YulFunctionCall","src":"24858:71:9"},"nodeType":"YulExpressionStatement","src":"24858:71:9"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24989:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25002:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"25013:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24998:3:9"},"nodeType":"YulFunctionCall","src":"24998:18:9"}],"functionName":{"name":"abi_encode_t_enum$_Side_$615_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"24939:49:9"},"nodeType":"YulFunctionCall","src":"24939:78:9"},"nodeType":"YulExpressionStatement","src":"24939:78:9"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"25071:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25084:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"25095:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25080:3:9"},"nodeType":"YulFunctionCall","src":"25080:18:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"25027:43:9"},"nodeType":"YulFunctionCall","src":"25027:72:9"},"nodeType":"YulExpressionStatement","src":"25027:72:9"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"25153:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25166:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"25177:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25162:3:9"},"nodeType":"YulFunctionCall","src":"25162:18:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"25109:43:9"},"nodeType":"YulFunctionCall","src":"25109:72:9"},"nodeType":"YulExpressionStatement","src":"25109:72:9"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"25235:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25248:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"25259:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25244:3:9"},"nodeType":"YulFunctionCall","src":"25244:19:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"25191:43:9"},"nodeType":"YulFunctionCall","src":"25191:73:9"},"nodeType":"YulExpressionStatement","src":"25191:73:9"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"25318:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25331:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"25342:3:9","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25327:3:9"},"nodeType":"YulFunctionCall","src":"25327:19:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"25274:43:9"},"nodeType":"YulFunctionCall","src":"25274:73:9"},"nodeType":"YulExpressionStatement","src":"25274:73:9"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"25401:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25414:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"25425:3:9","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25410:3:9"},"nodeType":"YulFunctionCall","src":"25410:19:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"25357:43:9"},"nodeType":"YulFunctionCall","src":"25357:73:9"},"nodeType":"YulExpressionStatement","src":"25357:73:9"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"25484:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25497:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"25508:3:9","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25493:3:9"},"nodeType":"YulFunctionCall","src":"25493:19:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"25440:43:9"},"nodeType":"YulFunctionCall","src":"25440:73:9"},"nodeType":"YulExpressionStatement","src":"25440:73:9"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"25567:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25580:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"25591:3:9","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25576:3:9"},"nodeType":"YulFunctionCall","src":"25576:19:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"25523:43:9"},"nodeType":"YulFunctionCall","src":"25523:73:9"},"nodeType":"YulExpressionStatement","src":"25523:73:9"},{"expression":{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"25650:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25663:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"25674:3:9","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25659:3:9"},"nodeType":"YulFunctionCall","src":"25659:19:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"25606:43:9"},"nodeType":"YulFunctionCall","src":"25606:73:9"},"nodeType":"YulExpressionStatement","src":"25606:73:9"},{"expression":{"arguments":[{"name":"value10","nodeType":"YulIdentifier","src":"25727:7:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25741:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"25752:3:9","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25737:3:9"},"nodeType":"YulFunctionCall","src":"25737:19:9"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"25689:37:9"},"nodeType":"YulFunctionCall","src":"25689:68:9"},"nodeType":"YulExpressionStatement","src":"25689:68:9"}]},"name":"abi_encode_tuple_t_uint256_t_enum$_Side_$615_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint8_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24702:9:9","type":""},{"name":"value10","nodeType":"YulTypedName","src":"24714:7:9","type":""},{"name":"value9","nodeType":"YulTypedName","src":"24723:6:9","type":""},{"name":"value8","nodeType":"YulTypedName","src":"24731:6:9","type":""},{"name":"value7","nodeType":"YulTypedName","src":"24739:6:9","type":""},{"name":"value6","nodeType":"YulTypedName","src":"24747:6:9","type":""},{"name":"value5","nodeType":"YulTypedName","src":"24755:6:9","type":""},{"name":"value4","nodeType":"YulTypedName","src":"24763:6:9","type":""},{"name":"value3","nodeType":"YulTypedName","src":"24771:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24779:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24787:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24795:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24806:4:9","type":""}],"src":"24432:1332:9"},{"body":{"nodeType":"YulBlock","src":"25810:35:9","statements":[{"nodeType":"YulAssignment","src":"25820:19:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25836:2:9","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25830:5:9"},"nodeType":"YulFunctionCall","src":"25830:9:9"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25820:6:9"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"25803:6:9","type":""}],"src":"25770:75:9"},{"body":{"nodeType":"YulBlock","src":"25947:73:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25964:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"25969:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25957:6:9"},"nodeType":"YulFunctionCall","src":"25957:19:9"},"nodeType":"YulExpressionStatement","src":"25957:19:9"},{"nodeType":"YulAssignment","src":"25985:29:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26004:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"26009:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26000:3:9"},"nodeType":"YulFunctionCall","src":"26000:14:9"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"25985:11:9"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25919:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"25924:6:9","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"25935:11:9","type":""}],"src":"25851:169:9"},{"body":{"nodeType":"YulBlock","src":"26070:261:9","statements":[{"nodeType":"YulAssignment","src":"26080:25:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26103:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26085:17:9"},"nodeType":"YulFunctionCall","src":"26085:20:9"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"26080:1:9"}]},{"nodeType":"YulAssignment","src":"26114:25:9","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"26137:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26119:17:9"},"nodeType":"YulFunctionCall","src":"26119:20:9"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"26114:1:9"}]},{"body":{"nodeType":"YulBlock","src":"26277:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"26279:16:9"},"nodeType":"YulFunctionCall","src":"26279:18:9"},"nodeType":"YulExpressionStatement","src":"26279:18:9"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26198:1:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26205:66:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"26273:1:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26201:3:9"},"nodeType":"YulFunctionCall","src":"26201:74:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26195:2:9"},"nodeType":"YulFunctionCall","src":"26195:81:9"},"nodeType":"YulIf","src":"26192:107:9"},{"nodeType":"YulAssignment","src":"26309:16:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26320:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"26323:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26316:3:9"},"nodeType":"YulFunctionCall","src":"26316:9:9"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"26309:3:9"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"26057:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"26060:1:9","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"26066:3:9","type":""}],"src":"26026:305:9"},{"body":{"nodeType":"YulBlock","src":"26382:146:9","statements":[{"nodeType":"YulAssignment","src":"26392:25:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26415:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26397:17:9"},"nodeType":"YulFunctionCall","src":"26397:20:9"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"26392:1:9"}]},{"nodeType":"YulAssignment","src":"26426:25:9","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"26449:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26431:17:9"},"nodeType":"YulFunctionCall","src":"26431:20:9"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"26426:1:9"}]},{"body":{"nodeType":"YulBlock","src":"26473:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"26475:16:9"},"nodeType":"YulFunctionCall","src":"26475:18:9"},"nodeType":"YulExpressionStatement","src":"26475:18:9"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26467:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"26470:1:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"26464:2:9"},"nodeType":"YulFunctionCall","src":"26464:8:9"},"nodeType":"YulIf","src":"26461:34:9"},{"nodeType":"YulAssignment","src":"26505:17:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26517:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"26520:1:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26513:3:9"},"nodeType":"YulFunctionCall","src":"26513:9:9"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"26505:4:9"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"26368:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"26371:1:9","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"26377:4:9","type":""}],"src":"26337:191:9"},{"body":{"nodeType":"YulBlock","src":"26579:51:9","statements":[{"nodeType":"YulAssignment","src":"26589:35:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26618:5:9"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"26600:17:9"},"nodeType":"YulFunctionCall","src":"26600:24:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"26589:7:9"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26561:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"26571:7:9","type":""}],"src":"26534:96:9"},{"body":{"nodeType":"YulBlock","src":"26678:48:9","statements":[{"nodeType":"YulAssignment","src":"26688:32:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26713:5:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26706:6:9"},"nodeType":"YulFunctionCall","src":"26706:13:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26699:6:9"},"nodeType":"YulFunctionCall","src":"26699:21:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"26688:7:9"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26660:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"26670:7:9","type":""}],"src":"26636:90:9"},{"body":{"nodeType":"YulBlock","src":"26785:74:9","statements":[{"nodeType":"YulAssignment","src":"26795:16:9","value":{"name":"value","nodeType":"YulIdentifier","src":"26806:5:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"26795:7:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26847:5:9"}],"functionName":{"name":"validator_assert_t_enum$_Side_$615","nodeType":"YulIdentifier","src":"26812:34:9"},"nodeType":"YulFunctionCall","src":"26812:41:9"},"nodeType":"YulExpressionStatement","src":"26812:41:9"}]},"name":"cleanup_t_enum$_Side_$615","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26767:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"26777:7:9","type":""}],"src":"26732:127:9"},{"body":{"nodeType":"YulBlock","src":"26910:81:9","statements":[{"nodeType":"YulAssignment","src":"26920:65:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26935:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"26942:42:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26931:3:9"},"nodeType":"YulFunctionCall","src":"26931:54:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"26920:7:9"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26892:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"26902:7:9","type":""}],"src":"26865:126:9"},{"body":{"nodeType":"YulBlock","src":"27042:32:9","statements":[{"nodeType":"YulAssignment","src":"27052:16:9","value":{"name":"value","nodeType":"YulIdentifier","src":"27063:5:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"27052:7:9"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27024:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"27034:7:9","type":""}],"src":"26997:77:9"},{"body":{"nodeType":"YulBlock","src":"27146:61:9","statements":[{"nodeType":"YulAssignment","src":"27156:45:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27195:5:9"}],"functionName":{"name":"cleanup_t_enum$_Side_$615","nodeType":"YulIdentifier","src":"27169:25:9"},"nodeType":"YulFunctionCall","src":"27169:32:9"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"27156:9:9"}]}]},"name":"convert_t_enum$_Side_$615_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27126:5:9","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"27136:9:9","type":""}],"src":"27080:127:9"},{"body":{"nodeType":"YulBlock","src":"27256:190:9","statements":[{"nodeType":"YulAssignment","src":"27266:33:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27293:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27275:17:9"},"nodeType":"YulFunctionCall","src":"27275:24:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"27266:5:9"}]},{"body":{"nodeType":"YulBlock","src":"27389:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"27391:16:9"},"nodeType":"YulFunctionCall","src":"27391:18:9"},"nodeType":"YulExpressionStatement","src":"27391:18:9"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27314:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"27321:66:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"27311:2:9"},"nodeType":"YulFunctionCall","src":"27311:77:9"},"nodeType":"YulIf","src":"27308:103:9"},{"nodeType":"YulAssignment","src":"27420:20:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27431:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"27438:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27427:3:9"},"nodeType":"YulFunctionCall","src":"27427:13:9"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"27420:3:9"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27242:5:9","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"27252:3:9","type":""}],"src":"27213:233:9"},{"body":{"nodeType":"YulBlock","src":"27480:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27497:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27500:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27490:6:9"},"nodeType":"YulFunctionCall","src":"27490:88:9"},"nodeType":"YulExpressionStatement","src":"27490:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27594:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27597:4:9","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27587:6:9"},"nodeType":"YulFunctionCall","src":"27587:15:9"},"nodeType":"YulExpressionStatement","src":"27587:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27618:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27621:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27611:6:9"},"nodeType":"YulFunctionCall","src":"27611:15:9"},"nodeType":"YulExpressionStatement","src":"27611:15:9"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"27452:180:9"},{"body":{"nodeType":"YulBlock","src":"27666:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27683:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27686:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27676:6:9"},"nodeType":"YulFunctionCall","src":"27676:88:9"},"nodeType":"YulExpressionStatement","src":"27676:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27780:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27783:4:9","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27773:6:9"},"nodeType":"YulFunctionCall","src":"27773:15:9"},"nodeType":"YulExpressionStatement","src":"27773:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27804:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27807:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27797:6:9"},"nodeType":"YulFunctionCall","src":"27797:15:9"},"nodeType":"YulExpressionStatement","src":"27797:15:9"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"27638:180:9"},{"body":{"nodeType":"YulBlock","src":"27852:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27869:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27872:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27862:6:9"},"nodeType":"YulFunctionCall","src":"27862:88:9"},"nodeType":"YulExpressionStatement","src":"27862:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27966:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27969:4:9","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27959:6:9"},"nodeType":"YulFunctionCall","src":"27959:15:9"},"nodeType":"YulExpressionStatement","src":"27959:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27990:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27993:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27983:6:9"},"nodeType":"YulFunctionCall","src":"27983:15:9"},"nodeType":"YulExpressionStatement","src":"27983:15:9"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"27824:180:9"},{"body":{"nodeType":"YulBlock","src":"28038:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28055:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28058:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28048:6:9"},"nodeType":"YulFunctionCall","src":"28048:88:9"},"nodeType":"YulExpressionStatement","src":"28048:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28152:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"28155:4:9","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28145:6:9"},"nodeType":"YulFunctionCall","src":"28145:15:9"},"nodeType":"YulExpressionStatement","src":"28145:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28176:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28179:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28169:6:9"},"nodeType":"YulFunctionCall","src":"28169:15:9"},"nodeType":"YulExpressionStatement","src":"28169:15:9"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"28010:180:9"},{"body":{"nodeType":"YulBlock","src":"28285:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28302:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28305:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28295:6:9"},"nodeType":"YulFunctionCall","src":"28295:12:9"},"nodeType":"YulExpressionStatement","src":"28295:12:9"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"28196:117:9"},{"body":{"nodeType":"YulBlock","src":"28408:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28425:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28428:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28418:6:9"},"nodeType":"YulFunctionCall","src":"28418:12:9"},"nodeType":"YulExpressionStatement","src":"28418:12:9"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"28319:117:9"},{"body":{"nodeType":"YulBlock","src":"28548:60:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28570:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"28578:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28566:3:9"},"nodeType":"YulFunctionCall","src":"28566:14:9"},{"hexValue":"496e76616c6964204f72646572204944","kind":"string","nodeType":"YulLiteral","src":"28582:18:9","type":"","value":"Invalid Order ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28559:6:9"},"nodeType":"YulFunctionCall","src":"28559:42:9"},"nodeType":"YulExpressionStatement","src":"28559:42:9"}]},"name":"store_literal_in_memory_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28540:6:9","type":""}],"src":"28442:166:9"},{"body":{"nodeType":"YulBlock","src":"28720:119:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28742:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"28750:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28738:3:9"},"nodeType":"YulFunctionCall","src":"28738:14:9"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"28754:34:9","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28731:6:9"},"nodeType":"YulFunctionCall","src":"28731:58:9"},"nodeType":"YulExpressionStatement","src":"28731:58:9"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28810:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"28818:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28806:3:9"},"nodeType":"YulFunctionCall","src":"28806:15:9"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"28823:8:9","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28799:6:9"},"nodeType":"YulFunctionCall","src":"28799:33:9"},"nodeType":"YulExpressionStatement","src":"28799:33:9"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28712:6:9","type":""}],"src":"28614:225:9"},{"body":{"nodeType":"YulBlock","src":"28951:68:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28973:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"28981:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28969:3:9"},"nodeType":"YulFunctionCall","src":"28969:14:9"},{"hexValue":"546f6b656e20756e617661696c61626c6520696e20444558","kind":"string","nodeType":"YulLiteral","src":"28985:26:9","type":"","value":"Token unavailable in DEX"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28962:6:9"},"nodeType":"YulFunctionCall","src":"28962:50:9"},"nodeType":"YulExpressionStatement","src":"28962:50:9"}]},"name":"store_literal_in_memory_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28943:6:9","type":""}],"src":"28845:174:9"},{"body":{"nodeType":"YulBlock","src":"29131:62:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29153:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"29161:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29149:3:9"},"nodeType":"YulFunctionCall","src":"29149:14:9"},{"hexValue":"496e73756666696369656e742046756e6473","kind":"string","nodeType":"YulLiteral","src":"29165:20:9","type":"","value":"Insufficient Funds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29142:6:9"},"nodeType":"YulFunctionCall","src":"29142:44:9"},"nodeType":"YulExpressionStatement","src":"29142:44:9"}]},"name":"store_literal_in_memory_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29123:6:9","type":""}],"src":"29025:168:9"},{"body":{"nodeType":"YulBlock","src":"29305:53:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29327:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"29335:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29323:3:9"},"nodeType":"YulFunctionCall","src":"29323:14:9"},{"hexValue":"4e6f74204f776e6572","kind":"string","nodeType":"YulLiteral","src":"29339:11:9","type":"","value":"Not Owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29316:6:9"},"nodeType":"YulFunctionCall","src":"29316:35:9"},"nodeType":"YulExpressionStatement","src":"29316:35:9"}]},"name":"store_literal_in_memory_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29297:6:9","type":""}],"src":"29199:159:9"},{"body":{"nodeType":"YulBlock","src":"29470:66:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29492:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"29500:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29488:3:9"},"nodeType":"YulFunctionCall","src":"29488:14:9"},{"hexValue":"546f6b656e20616c7265616479207665726966696564","kind":"string","nodeType":"YulLiteral","src":"29504:24:9","type":"","value":"Token already verified"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29481:6:9"},"nodeType":"YulFunctionCall","src":"29481:48:9"},"nodeType":"YulExpressionStatement","src":"29481:48:9"}]},"name":"store_literal_in_memory_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29462:6:9","type":""}],"src":"29364:172:9"},{"body":{"nodeType":"YulBlock","src":"29648:76:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29670:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"29678:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29666:3:9"},"nodeType":"YulFunctionCall","src":"29666:14:9"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"29682:34:9","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29659:6:9"},"nodeType":"YulFunctionCall","src":"29659:58:9"},"nodeType":"YulExpressionStatement","src":"29659:58:9"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29640:6:9","type":""}],"src":"29542:182:9"},{"body":{"nodeType":"YulBlock","src":"29781:62:9","statements":[{"body":{"nodeType":"YulBlock","src":"29815:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"29817:16:9"},"nodeType":"YulFunctionCall","src":"29817:18:9"},"nodeType":"YulExpressionStatement","src":"29817:18:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29804:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"29811:1:9","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"29801:2:9"},"nodeType":"YulFunctionCall","src":"29801:12:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29794:6:9"},"nodeType":"YulFunctionCall","src":"29794:20:9"},"nodeType":"YulIf","src":"29791:46:9"}]},"name":"validator_assert_t_enum$_Side_$615","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29774:5:9","type":""}],"src":"29730:113:9"},{"body":{"nodeType":"YulBlock","src":"29892:79:9","statements":[{"body":{"nodeType":"YulBlock","src":"29949:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29958:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29961:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"29951:6:9"},"nodeType":"YulFunctionCall","src":"29951:12:9"},"nodeType":"YulExpressionStatement","src":"29951:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29915:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29940:5:9"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"29922:17:9"},"nodeType":"YulFunctionCall","src":"29922:24:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"29912:2:9"},"nodeType":"YulFunctionCall","src":"29912:35:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29905:6:9"},"nodeType":"YulFunctionCall","src":"29905:43:9"},"nodeType":"YulIf","src":"29902:63:9"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29885:5:9","type":""}],"src":"29849:122:9"},{"body":{"nodeType":"YulBlock","src":"30017:76:9","statements":[{"body":{"nodeType":"YulBlock","src":"30071:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30080:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30083:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30073:6:9"},"nodeType":"YulFunctionCall","src":"30073:12:9"},"nodeType":"YulExpressionStatement","src":"30073:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30040:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30062:5:9"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"30047:14:9"},"nodeType":"YulFunctionCall","src":"30047:21:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"30037:2:9"},"nodeType":"YulFunctionCall","src":"30037:32:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30030:6:9"},"nodeType":"YulFunctionCall","src":"30030:40:9"},"nodeType":"YulIf","src":"30027:60:9"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30010:5:9","type":""}],"src":"29977:116:9"},{"body":{"nodeType":"YulBlock","src":"30150:56:9","statements":[{"body":{"nodeType":"YulBlock","src":"30184:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30193:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30196:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30186:6:9"},"nodeType":"YulFunctionCall","src":"30186:12:9"},"nodeType":"YulExpressionStatement","src":"30186:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30173:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"30180:1:9","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"30170:2:9"},"nodeType":"YulFunctionCall","src":"30170:12:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30163:6:9"},"nodeType":"YulFunctionCall","src":"30163:20:9"},"nodeType":"YulIf","src":"30160:40:9"}]},"name":"validator_revert_t_enum$_Side_$615","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30143:5:9","type":""}],"src":"30099:107:9"},{"body":{"nodeType":"YulBlock","src":"30255:79:9","statements":[{"body":{"nodeType":"YulBlock","src":"30312:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30321:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30324:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30314:6:9"},"nodeType":"YulFunctionCall","src":"30314:12:9"},"nodeType":"YulExpressionStatement","src":"30314:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30278:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30303:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"30285:17:9"},"nodeType":"YulFunctionCall","src":"30285:24:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"30275:2:9"},"nodeType":"YulFunctionCall","src":"30275:35:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30268:6:9"},"nodeType":"YulFunctionCall","src":"30268:43:9"},"nodeType":"YulIf","src":"30265:63:9"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30248:5:9","type":""}],"src":"30212:122:9"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_enum$_Side_$615(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Side_$615(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_enum$_Side_$615(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_enum$_Side_$615(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_enum$_Side_$615(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_Side_$615(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_enum$_Side_$615t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_Side_$615(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_enum$_Side_$615t_addresst_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Side_$615(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_enum$_Side_$615t_uint256t_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Side_$615(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_enum$_Side_$615t_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_Side_$615(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_enum$_Side_$615_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_Side_$615_to_t_uint8(value))\n    }\n\n    function abi_encode_t_enum$_Side_$615_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Side_$615_to_t_uint8(value))\n    }\n\n    function abi_encode_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    // struct Exchange._Order -> struct Exchange._Order\n    function abi_encode_t_struct$__Order_$586_memory_ptr_to_t_struct$__Order_$586_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0160)\n\n        {\n            // id\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // side\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_enum$_Side_$615_to_t_uint8(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // user\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // tokenA\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // amountA\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // tokenB\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountB\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // rate\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // originalAmountA\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0100))\n        }\n\n        {\n            // originalAmountB\n\n            let memberValue0 := mload(add(value, 0x0120))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0120))\n        }\n\n        {\n            // waiveFees\n\n            let memberValue0 := mload(add(value, 0x0140))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x0140))\n        }\n\n    }\n\n    // struct Exchange._filledOrder -> struct Exchange._filledOrder\n    function abi_encode_t_struct$__filledOrder_$612_memory_ptr_to_t_struct$__filledOrder_$612_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0180)\n\n        {\n            // id\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // side\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_enum$_Side_$615_to_t_uint8(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // user\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // tokenA\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // tokenB\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountFilled\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // fillRate\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // originalRate\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // originalAmountA\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0100))\n        }\n\n        {\n            // originalAmountB\n\n            let memberValue0 := mload(add(value, 0x0120))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0120))\n        }\n\n        {\n            // feesWaived\n\n            let memberValue0 := mload(add(value, 0x0140))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x0140))\n        }\n\n        {\n            // feesPaid\n\n            let memberValue0 := mload(add(value, 0x0160))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0160))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$__Order_$586_memory_ptr__to_t_struct$__Order_$586_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 352)\n\n        abi_encode_t_struct$__Order_$586_memory_ptr_to_t_struct$__Order_$586_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_struct$__Order_$586_memory_ptr_t_uint256__to_t_struct$__Order_$586_memory_ptr_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 384)\n\n        abi_encode_t_struct$__Order_$586_memory_ptr_to_t_struct$__Order_$586_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 352))\n\n    }\n\n    function abi_encode_tuple_t_struct$__filledOrder_$612_memory_ptr__to_t_struct$__filledOrder_$612_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 384)\n\n        abi_encode_t_struct$__filledOrder_$612_memory_ptr_to_t_struct$__filledOrder_$612_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_enum$_Side_$615_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint8_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart , value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 384)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_Side_$615_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value9,  add(headStart, 288))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value10,  add(headStart, 320))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value11,  add(headStart, 352))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_enum$_Side_$615_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint8_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 352)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_Side_$615_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_address_to_t_address_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value9,  add(headStart, 288))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value10,  add(headStart, 320))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_enum$_Side_$615(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Side_$615(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_enum$_Side_$615_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Side_$615(value)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Order ID\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token unavailable in DEX\")\n\n    }\n\n    function store_literal_in_memory_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient Funds\")\n\n    }\n\n    function store_literal_in_memory_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not Owner\")\n\n    }\n\n    function store_literal_in_memory_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token already verified\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_assert_t_enum$_Side_$615(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_enum$_Side_$615(value) {\n        if iszero(lt(value, 2)) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":9,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061014d5760003560e01c80639c07ce26116100c3578063c3364be41161007c578063c3364be4146103cf578063dafbfe6a146103ff578063e4c3c7cd1461041b578063ea42f34914610455578063f2fde38b14610485578063f90ef4f2146104a15761014d565b80639c07ce26146102f15780639ead72221461030f578063ac1a386a14610340578063af81c5b91461035c578063b136e39a14610378578063bd8098ec146103945761014d565b80636f4e410b116101155780636f4e410b1461022e578063715018a61461024a5780637bf1a627146102545780638da5cb5b146102725780638f101b0e1461029057806392e43d3a146102c05761014d565b80631027b2191461015257806314eca9dc146101825780631f69565f146101b2578063429d24b2146101e257806362c09cfa14610212575b600080fd5b61016c60048036038101906101679190613530565b6104bd565b6040516101799190613d4f565b60405180910390f35b61019c600480360381019061019791906137de565b610573565b6040516101a99190613ead565b60405180910390f35b6101cc60048036038101906101c79190613530565b610621565b6040516101d99190613ead565b60405180910390f35b6101fc60048036038101906101f791906138f2565b6106f7565b6040516102099190613d4f565b60405180910390f35b61022c600480360381019061022791906136fe565b6109e5565b005b610248600480360381019061024391906136fe565b610fff565b005b610252611618565b005b61025c61162c565b6040516102699190613c9d565b60405180910390f35b61027a611652565b6040516102879190613c9d565b60405180910390f35b6102aa60048036038101906102a5919061366b565b61167b565b6040516102b79190613e91565b60405180910390f35b6102da60048036038101906102d591906135c4565b6118be565b6040516102e8929190613e66565b60405180910390f35b6102f9611bc8565b6040516103069190613ead565b60405180910390f35b61032960048036038101906103249190613898565b611bce565b604051610337929190613d26565b60405180910390f35b61035a60048036038101906103559190613530565b611c22565b005b610376600480360381019061037191906136be565b611c6e565b005b610392600480360381019061038d9190613530565b611d6c565b005b6103ae60048036038101906103a9919061378b565b611db8565b6040516103c69c9b9a99989796959493929190613ec8565b60405180910390f35b6103e960048036038101906103e4919061362b565b611ebc565b6040516103f69190613ead565b60405180910390f35b61041960048036038101906104149190613530565b611f2c565b005b610435600480360381019061043091906135c4565b611f78565b60405161044c9b9a99989796959493929190613f82565b60405180910390f35b61046f600480360381019061046a919061355d565b612083565b60405161047c9190613e4a565b60405180910390f35b61049f600480360381019061049a9190613530565b6122fa565b005b6104bb60048036038101906104b69190613831565b61237e565b005b600080600090505b600680549050811015610568578273ffffffffffffffffffffffffffffffffffffffff16600682815481106104fd576104fc61420b565b5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561055557600191505061056e565b808061056090614135565b9150506104c5565b50600090505b919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000856001811115610606576106056141ad565b5b81526020019081526020016000208054905090509392505050565b600080600090505b6006805490508110156106f0578273ffffffffffffffffffffffffffffffffffffffff16600682815481106106615761066061420b565b5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106dd57600681815481106106c3576106c261420b565b5b9060005260206000209060020201600101549150506106f2565b80806106e890614135565b915050610629565b505b919050565b600080600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086600181111561078b5761078a6141ad565b5b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561098057838290600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff16600181111561080c5761080b6141ad565b5b600181111561081e5761081d6141ad565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff161515151581525050815260200190600101906107b9565b50505050905060005b81518110156109d657868282815181106109a6576109a561420b565b5b60200260200101516000015114156109c3576001925050506109dd565b80806109ce90614135565b915050610989565b5060009150505b949350505050565b856109ef816104bd565b610a2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2590613daa565b60405180910390fd5b84610a38816104bd565b610a77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6e90613daa565b60405180910390fd5b84610be3600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634fc121db338a6040518363ffffffff1660e01b8152600401610ad8929190613cb8565b60206040518083038186803b158015610af057600080fd5b505afa158015610b04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2891906138c5565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7888aec8a336040518363ffffffff1660e01b8152600401610b85929190613cb8565b60206040518083038186803b158015610b9d57600080fd5b505afa158015610bb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd591906138c5565b612ed390919063ffffffff16565b1015610c24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1b90613dca565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346a8f82033888860016040518563ffffffff1660e01b8152600401610c869493929190613ce1565b600060405180830381600087803b158015610ca057600080fd5b505af1158015610cb4573d6000803e3d6000fd5b50505050600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000806001811115610d4957610d486141ad565b5b8152602001908152602001600020604051806101600160405280600954815260200160006001811115610d7f57610d7e6141ad565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018a73ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018873ffffffffffffffffffffffffffffffffffffffff16815260200187815260200186815260200189815260200187815260200185151581525090806001815401808255809150506001900390600052602060002090600a02016000909190919091506000820151816000015560208201518160010160006101000a81548160ff02191690836001811115610e5a57610e596141ad565b5b021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816003015560a08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816005015560e08201518160060155610100820151816007015561012082015181600801556101408201518160090160006101000a81548160ff02191690831515021790555050507fcb2df66a1a7db52683240584eca4355946d7b80a59dcb7707aa8dd95463ed7446009546000338b8b8b8b8b8f8e8d604051610fd19b9a99989796959493929190613f82565b60405180910390a1610fef6001600954612ee990919063ffffffff16565b6009819055505050505050505050565b85611009816104bd565b611048576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103f90613daa565b60405180910390fd5b84611052816104bd565b611091576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108890613daa565b60405180910390fd5b866111fd600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634fc121db338c6040518363ffffffff1660e01b81526004016110f2929190613cb8565b60206040518083038186803b15801561110a57600080fd5b505afa15801561111e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114291906138c5565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7888aec8c336040518363ffffffff1660e01b815260040161119f929190613cb8565b60206040518083038186803b1580156111b757600080fd5b505afa1580156111cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ef91906138c5565b612ed390919063ffffffff16565b101561123e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123590613dca565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346a8f820338a8a60016040518563ffffffff1660e01b81526004016112a09493929190613ce1565b600060405180830381600087803b1580156112ba57600080fd5b505af11580156112ce573d6000803e3d6000fd5b50505050600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600180811115611363576113626141ad565b5b81526020019081526020016000206040518061016001604052806009548152602001600180811115611398576113976141ad565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018a73ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018873ffffffffffffffffffffffffffffffffffffffff16815260200187815260200186815260200189815260200187815260200185151581525090806001815401808255809150506001900390600052602060002090600a02016000909190919091506000820151816000015560208201518160010160006101000a81548160ff02191690836001811115611473576114726141ad565b5b021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816003015560a08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816005015560e08201518160060155610100820151816007015561012082015181600801556101408201518160090160006101000a81548160ff02191690831515021790555050507fcb2df66a1a7db52683240584eca4355946d7b80a59dcb7707aa8dd95463ed7446009546001338b8b8b8b8b8f8e8d6040516115ea9b9a99989796959493929190613f82565b60405180910390a16116086001600954612ee990919063ffffffff16565b6009819055505050505050505050565b611620612eff565b61162a6000612f7d565b565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611683613049565b6000600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008560018111156116d9576116d86141ad565b5b815260200190815260200160002083815481106116f9576116f861420b565b5b90600052602060002090600b020160405180610180016040529081600082015481526020016001820160009054906101000a900460ff166001811115611742576117416141ad565b5b6001811115611754576117536141ad565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff16151515158152602001600a820154815250509050809150509392505050565b6118c6613100565b600080600090506000600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015611b4357838290600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff1660018111156119cf576119ce6141ad565b5b60018111156119e1576119e06141ad565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff1615151515815250508152602001906001019061197c565b505050509050611b51613100565b5b8151831015611bb65785828481518110611b6f57611b6e61420b565b5b6020026020010151600001511415611ba357818381518110611b9457611b9361420b565b5b60200260200101519050611bb6565b8280611bae90614135565b935050611b52565b80839450945050505094509492505050565b60095481565b60068181548110611bde57600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b611c2a612eff565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611c76612eff565b611c7f826104bd565b15611cbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cb690613e0a565b60405180910390fd5b600660405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505050565b611d74612eff565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60086020528260005260406000206020528160005260406000208181548110611de057600080fd5b90600052602060002090600b020160009250925050508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050154908060060154908060070154908060080154908060090160009054906101000a900460ff169080600a015490508c565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000836001811115611f1257611f116141ad565b5b815260200190815260200160002080549050905092915050565b611f34612eff565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60076020528360005260406000206020528260005260406000206020528160005260406000208181548110611fac57600080fd5b90600052602060002090600a02016000935093505050508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060154908060070154908060080154908060090160009054906101000a900460ff1690508b565b61208b613100565b6000600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084600181111561211e5761211d6141ad565b5b8152602001908152602001600020848154811061213e5761213d61420b565b5b90600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff166001811115612187576121866141ad565b5b6001811115612199576121986141ad565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff161515151581525050905080915050949350505050565b612302612eff565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612372576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161236990613d8a565b60405180910390fd5b61237b81612f7d565b50565b8284838361238e848484846106f7565b6123cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123c490613d6a565b60405180910390fd5b856123d7816104bd565b612416576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161240d90613daa565b60405180910390fd5b85612420816104bd565b61245f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161245690613daa565b60405180910390fd5b60008a6001811115612474576124736141ad565b5b90506000600760008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000209050600081805490509050612518613100565b600080600090505b83811015612732578e85828154811061253c5761253b61420b565b5b90600052602060002090600a020160000154141561271f5780915084818154811061256a5761256961420b565b5b90600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff1660018111156125b3576125b26141ad565b5b60018111156125c5576125c46141ad565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff1615151515815250509250612732565b808061272a90614135565b915050612520565b50600a60009054906101000a900460ff161561295357816040015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146127ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127b190613dea565b60405180910390fd5b600060018111156127ce576127cd6141ad565b5b8f60018111156127e1576127e06141ad565b5b141561288857600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346a8f820338460a001518560c0015160006040518563ffffffff1660e01b81526004016128519493929190613ce1565b600060405180830381600087803b15801561286b57600080fd5b505af115801561287f573d6000803e3d6000fd5b50505050612952565b60018081111561289b5761289a6141ad565b5b8f60018111156128ae576128ad6141ad565b5b141561295157600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346a8f820338460600151856080015160006040518563ffffffff1660e01b815260040161291e9493929190613ce1565b600060405180830381600087803b15801561293857600080fd5b505af115801561294c573d6000803e3d6000fd5b505050505b5b5b60008190505b6001846129669190614094565b811015612bb35784612982600183612ee990919063ffffffff16565b815481106129935761299261420b565b5b90600052602060002090600a02018582815481106129b4576129b361420b565b5b90600052602060002090600a0201600082015481600001556001820160009054906101000a900460ff168160010160006101000a81548160ff02191690836001811115612a0457612a036141ad565b5b02179055506001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600382015481600301556004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600582015481600501556006820154816006015560078201548160070155600882015481600801556009820160009054906101000a900460ff168160090160006101000a81548160ff0219169083151502179055509050508080612bab90614135565b915050612959565b5083612bc9600185612ed390919063ffffffff16565b81548110612bda57612bd961420b565b5b90600052602060002090600a02016000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600090556006820160009055600782016000905560088201600090556009820160006101000a81549060ff0219169055505083805480612cc957612cc86141dc565b5b60019003818190600052602060002090600a02016000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600090556006820160009055600782016000905560088201600090556009820160006101000a81549060ff02191690555050905583600760008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020908054612e4b9291906131b0565b507fa1cc643491754200d3eca5769e524a0fd00f9b0862b18d0da7d6e7277a83dfda8e83602001518460400151856060015186608001518760a001518860c001518960e001518a61010001518b61012001518c6101400151604051612eba9b9a99989796959493929190613f82565b60405180910390a1505050505050505050505050505050565b60008183612ee19190614094565b905092915050565b60008183612ef7919061403e565b905092915050565b612f07613041565b73ffffffffffffffffffffffffffffffffffffffff16612f25611652565b73ffffffffffffffffffffffffffffffffffffffff1614612f7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f7290613e2a565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60405180610180016040528060008152602001600060018111156130705761306f6141ad565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160008152602001600015158152602001600081525090565b6040518061016001604052806000815260200160006001811115613127576131266141ad565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000151581525090565b82805482825590600052602060002090600a0281019282156133d257600052602060002091600a0282015b828111156133d1578282600082015481600001556001820160009054906101000a900460ff168160010160006101000a81548160ff02191690836001811115613227576132266141ad565b5b02179055506001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600382015481600301556004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600582015481600501556006820154816006015560078201548160070155600882015481600801556009820160009054906101000a900460ff168160090160006101000a81548160ff021916908315150217905550505091600a019190600a01906131db565b5b5090506133df91906133e3565b5090565b5b808211156134c3576000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600090556006820160009055600782016000905560088201600090556009820160006101000a81549060ff021916905550600a016133e4565b5090565b6000813590506134d681614398565b92915050565b6000813590506134eb816143af565b92915050565b600081359050613500816143c6565b92915050565b600081359050613515816143d6565b92915050565b60008151905061352a816143d6565b92915050565b6000602082840312156135465761354561423a565b5b6000613554848285016134c7565b91505092915050565b600080600080608085870312156135775761357661423a565b5b6000613585878288016134c7565b9450506020613596878288016134c7565b93505060406135a787828801613506565b92505060606135b8878288016134f1565b91505092959194509250565b600080600080608085870312156135de576135dd61423a565b5b60006135ec878288016134c7565b94505060206135fd878288016134c7565b935050604061360e87828801613506565b925050606061361f87828801613506565b91505092959194509250565b600080604083850312156136425761364161423a565b5b6000613650858286016134c7565b9250506020613661858286016134f1565b9150509250929050565b6000806000606084860312156136845761368361423a565b5b6000613692868287016134c7565b93505060206136a3868287016134f1565b92505060406136b486828701613506565b9150509250925092565b600080604083850312156136d5576136d461423a565b5b60006136e3858286016134c7565b92505060206136f485828601613506565b9150509250929050565b60008060008060008060c0878903121561371b5761371a61423a565b5b600061372989828a016134c7565b965050602061373a89828a01613506565b955050604061374b89828a016134c7565b945050606061375c89828a01613506565b935050608061376d89828a01613506565b92505060a061377e89828a016134dc565b9150509295509295509295565b6000806000606084860312156137a4576137a361423a565b5b60006137b2868287016134c7565b93505060206137c386828701613506565b92505060406137d486828701613506565b9150509250925092565b6000806000606084860312156137f7576137f661423a565b5b6000613805868287016134f1565b9350506020613816868287016134c7565b9250506040613827868287016134c7565b9150509250925092565b6000806000806080858703121561384b5761384a61423a565b5b6000613859878288016134f1565b945050602061386a87828801613506565b935050604061387b878288016134c7565b925050606061388c878288016134c7565b91505092959194509250565b6000602082840312156138ae576138ad61423a565b5b60006138bc84828501613506565b91505092915050565b6000602082840312156138db576138da61423a565b5b60006138e98482850161351b565b91505092915050565b6000806000806080858703121561390c5761390b61423a565b5b600061391a87828801613506565b945050602061392b878288016134f1565b935050604061393c878288016134c7565b925050606061394d878288016134c7565b91505092959194509250565b613962816140c8565b82525050565b613971816140c8565b82525050565b613980816140da565b82525050565b61398f816140da565b82525050565b61399e81614123565b82525050565b6139ad81614123565b82525050565b60006139c060108361402d565b91506139cb8261423f565b602082019050919050565b60006139e360268361402d565b91506139ee82614268565b604082019050919050565b6000613a0660188361402d565b9150613a11826142b7565b602082019050919050565b6000613a2960128361402d565b9150613a34826142e0565b602082019050919050565b6000613a4c60098361402d565b9150613a5782614309565b602082019050919050565b6000613a6f60168361402d565b9150613a7a82614332565b602082019050919050565b6000613a9260208361402d565b9150613a9d8261435b565b602082019050919050565b61016082016000820151613abf6000850182613c7f565b506020820151613ad26020850182613995565b506040820151613ae56040850182613959565b506060820151613af86060850182613959565b506080820151613b0b6080850182613c7f565b5060a0820151613b1e60a0850182613959565b5060c0820151613b3160c0850182613c7f565b5060e0820151613b4460e0850182613c7f565b50610100820151613b59610100850182613c7f565b50610120820151613b6e610120850182613c7f565b50610140820151613b83610140850182613977565b50505050565b61018082016000820151613ba06000850182613c7f565b506020820151613bb36020850182613995565b506040820151613bc66040850182613959565b506060820151613bd96060850182613959565b506080820151613bec6080850182613959565b5060a0820151613bff60a0850182613c7f565b5060c0820151613c1260c0850182613c7f565b5060e0820151613c2560e0850182613c7f565b50610100820151613c3a610100850182613c7f565b50610120820151613c4f610120850182613c7f565b50610140820151613c64610140850182613977565b50610160820151613c79610160850182613c7f565b50505050565b613c8881614119565b82525050565b613c9781614119565b82525050565b6000602082019050613cb26000830184613968565b92915050565b6000604082019050613ccd6000830185613968565b613cda6020830184613968565b9392505050565b6000608082019050613cf66000830187613968565b613d036020830186613968565b613d106040830185613c8e565b613d1d6060830184613986565b95945050505050565b6000604082019050613d3b6000830185613968565b613d486020830184613c8e565b9392505050565b6000602082019050613d646000830184613986565b92915050565b60006020820190508181036000830152613d83816139b3565b9050919050565b60006020820190508181036000830152613da3816139d6565b9050919050565b60006020820190508181036000830152613dc3816139f9565b9050919050565b60006020820190508181036000830152613de381613a1c565b9050919050565b60006020820190508181036000830152613e0381613a3f565b9050919050565b60006020820190508181036000830152613e2381613a62565b9050919050565b60006020820190508181036000830152613e4381613a85565b9050919050565b600061016082019050613e606000830184613aa8565b92915050565b600061018082019050613e7c6000830185613aa8565b613e8a610160830184613c8e565b9392505050565b600061018082019050613ea76000830184613b89565b92915050565b6000602082019050613ec26000830184613c8e565b92915050565b600061018082019050613ede600083018f613c8e565b613eeb602083018e6139a4565b613ef8604083018d613968565b613f05606083018c613968565b613f12608083018b613968565b613f1f60a083018a613c8e565b613f2c60c0830189613c8e565b613f3960e0830188613c8e565b613f47610100830187613c8e565b613f55610120830186613c8e565b613f63610140830185613986565b613f71610160830184613c8e565b9d9c50505050505050505050505050565b600061016082019050613f98600083018e613c8e565b613fa5602083018d6139a4565b613fb2604083018c613968565b613fbf606083018b613968565b613fcc608083018a613c8e565b613fd960a0830189613968565b613fe660c0830188613c8e565b613ff360e0830187613c8e565b614001610100830186613c8e565b61400f610120830185613c8e565b61401d610140830184613986565b9c9b505050505050505050505050565b600082825260208201905092915050565b600061404982614119565b915061405483614119565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156140895761408861417e565b5b828201905092915050565b600061409f82614119565b91506140aa83614119565b9250828210156140bd576140bc61417e565b5b828203905092915050565b60006140d3826140f9565b9050919050565b60008115159050919050565b60008190506140f482614384565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061412e826140e6565b9050919050565b600061414082614119565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156141735761417261417e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b7f496e76616c6964204f7264657220494400000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f546f6b656e20756e617661696c61626c6520696e204445580000000000000000600082015250565b7f496e73756666696369656e742046756e64730000000000000000000000000000600082015250565b7f4e6f74204f776e65720000000000000000000000000000000000000000000000600082015250565b7f546f6b656e20616c726561647920766572696669656400000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60028110614395576143946141ad565b5b50565b6143a1816140c8565b81146143ac57600080fd5b50565b6143b8816140da565b81146143c357600080fd5b50565b600281106143d357600080fd5b50565b6143df81614119565b81146143ea57600080fd5b5056fea2646970667358221220be360c578658835cbb8234ed7e31d607d87084eeea85588ac20133adb68693ab64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C07CE26 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xC3364BE4 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC3364BE4 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xDAFBFE6A EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0xE4C3C7CD EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0xEA42F349 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0xF90EF4F2 EQ PUSH2 0x4A1 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x9C07CE26 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x9EAD7222 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xAC1A386A EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0xAF81C5B9 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0xB136E39A EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0xBD8098EC EQ PUSH2 0x394 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x6F4E410B GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x6F4E410B EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x7BF1A627 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x8F101B0E EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x92E43D3A EQ PUSH2 0x2C0 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x1027B219 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x14ECA9DC EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x1F69565F EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x429D24B2 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x62C09CFA EQ PUSH2 0x212 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x3530 JUMP JUMPDEST PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x3D4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x37DE JUMP JUMPDEST PUSH2 0x573 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x3EAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x3530 JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x3EAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x38F2 JUMP JUMPDEST PUSH2 0x6F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x3D4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x36FE JUMP JUMPDEST PUSH2 0x9E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x36FE JUMP JUMPDEST PUSH2 0xFFF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x252 PUSH2 0x1618 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25C PUSH2 0x162C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x3C9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27A PUSH2 0x1652 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x3C9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x366B JUMP JUMPDEST PUSH2 0x167B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x3E91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x35C4 JUMP JUMPDEST PUSH2 0x18BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP3 SWAP2 SWAP1 PUSH2 0x3E66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F9 PUSH2 0x1BC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x3EAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x3898 JUMP JUMPDEST PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x337 SWAP3 SWAP2 SWAP1 PUSH2 0x3D26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x3530 JUMP JUMPDEST PUSH2 0x1C22 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x376 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x36BE JUMP JUMPDEST PUSH2 0x1C6E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x392 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x3530 JUMP JUMPDEST PUSH2 0x1D6C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x378B JUMP JUMPDEST PUSH2 0x1DB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C6 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x362B JUMP JUMPDEST PUSH2 0x1EBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x3EAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x419 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x3530 JUMP JUMPDEST PUSH2 0x1F2C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x435 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x35C4 JUMP JUMPDEST PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44C SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x355D JUMP JUMPDEST PUSH2 0x2083 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x3E4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x3530 JUMP JUMPDEST PUSH2 0x22FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B6 SWAP2 SWAP1 PUSH2 0x3831 JUMP JUMPDEST PUSH2 0x237E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x568 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4FD JUMPI PUSH2 0x4FC PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x555 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x56E JUMP JUMPDEST DUP1 DUP1 PUSH2 0x560 SWAP1 PUSH2 0x4135 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4C5 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x606 JUMPI PUSH2 0x605 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x6F0 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x661 JUMPI PUSH2 0x660 PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6DD JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6C3 JUMPI PUSH2 0x6C2 PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP POP PUSH2 0x6F2 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x6E8 SWAP1 PUSH2 0x4135 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x629 JUMP JUMPDEST POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x78B JUMPI PUSH2 0x78A PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x980 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x80C JUMPI PUSH2 0x80B PUSH2 0x41AD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x81E JUMPI PUSH2 0x81D PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x7B9 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x9D6 JUMPI DUP7 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9A6 JUMPI PUSH2 0x9A5 PUSH2 0x420B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x9C3 JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x9DD JUMP JUMPDEST DUP1 DUP1 PUSH2 0x9CE SWAP1 PUSH2 0x4135 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x989 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP6 PUSH2 0x9EF DUP2 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA25 SWAP1 PUSH2 0x3DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0xA38 DUP2 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0xA77 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6E SWAP1 PUSH2 0x3DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0xBE3 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4FC121DB CALLER DUP11 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD8 SWAP3 SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB04 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB28 SWAP2 SWAP1 PUSH2 0x38C5 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF7888AEC DUP11 CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB85 SWAP3 SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBD5 SWAP2 SWAP1 PUSH2 0x38C5 JUMP JUMPDEST PUSH2 0x2ED3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0xC24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1B SWAP1 PUSH2 0x3DCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x46A8F820 CALLER DUP9 DUP9 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC86 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CE1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCB4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x7 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD49 JUMPI PUSH2 0xD48 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD7F JUMPI PUSH2 0xD7E PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xE5A JUMPI PUSH2 0xE59 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH32 0xCB2DF66A1A7DB52683240584ECA4355946D7B80A59DCB7707AA8DD95463ED744 PUSH1 0x9 SLOAD PUSH1 0x0 CALLER DUP12 DUP12 DUP12 DUP12 DUP12 DUP16 DUP15 DUP14 PUSH1 0x40 MLOAD PUSH2 0xFD1 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xFEF PUSH1 0x1 PUSH1 0x9 SLOAD PUSH2 0x2EE9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP6 PUSH2 0x1009 DUP2 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x1048 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103F SWAP1 PUSH2 0x3DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0x1052 DUP2 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x1091 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1088 SWAP1 PUSH2 0x3DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH2 0x11FD PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4FC121DB CALLER DUP13 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F2 SWAP3 SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x110A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x111E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1142 SWAP2 SWAP1 PUSH2 0x38C5 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF7888AEC DUP13 CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119F SWAP3 SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11EF SWAP2 SWAP1 PUSH2 0x38C5 JUMP JUMPDEST PUSH2 0x2ED3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x123E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1235 SWAP1 PUSH2 0x3DCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x46A8F820 CALLER DUP11 DUP11 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CE1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x7 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x1363 JUMPI PUSH2 0x1362 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x1398 JUMPI PUSH2 0x1397 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1473 JUMPI PUSH2 0x1472 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH32 0xCB2DF66A1A7DB52683240584ECA4355946D7B80A59DCB7707AA8DD95463ED744 PUSH1 0x9 SLOAD PUSH1 0x1 CALLER DUP12 DUP12 DUP12 DUP12 DUP12 DUP16 DUP15 DUP14 PUSH1 0x40 MLOAD PUSH2 0x15EA SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1608 PUSH1 0x1 PUSH1 0x9 SLOAD PUSH2 0x2EE9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1620 PUSH2 0x2EFF JUMP JUMPDEST PUSH2 0x162A PUSH1 0x0 PUSH2 0x2F7D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1683 PUSH2 0x3049 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x16D9 JUMPI PUSH2 0x16D8 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x16F9 JUMPI PUSH2 0x16F8 PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xB MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1742 JUMPI PUSH2 0x1741 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1754 JUMPI PUSH2 0x1753 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x18C6 PUSH2 0x3100 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1B43 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x19CF JUMPI PUSH2 0x19CE PUSH2 0x41AD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x19E1 JUMPI PUSH2 0x19E0 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x197C JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH2 0x1B51 PUSH2 0x3100 JUMP JUMPDEST JUMPDEST DUP2 MLOAD DUP4 LT ISZERO PUSH2 0x1BB6 JUMPI DUP6 DUP3 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1B6F JUMPI PUSH2 0x1B6E PUSH2 0x420B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x1BA3 JUMPI DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B94 JUMPI PUSH2 0x1B93 PUSH2 0x420B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x1BB6 JUMP JUMPDEST DUP3 DUP1 PUSH2 0x1BAE SWAP1 PUSH2 0x4135 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x1B52 JUMP JUMPDEST DUP1 DUP4 SWAP5 POP SWAP5 POP POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1BDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x1C2A PUSH2 0x2EFF JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1C76 PUSH2 0x2EFF JUMP JUMPDEST PUSH2 0x1C7F DUP3 PUSH2 0x4BD JUMP JUMPDEST ISZERO PUSH2 0x1CBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CB6 SWAP1 PUSH2 0x3E0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x1D74 PUSH2 0x2EFF JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1DE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xB MUL ADD PUSH1 0x0 SWAP3 POP SWAP3 POP POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0xA ADD SLOAD SWAP1 POP DUP13 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1F12 JUMPI PUSH2 0x1F11 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F34 PUSH2 0x2EFF JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP4 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1FAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 SWAP4 POP SWAP4 POP POP POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP12 JUMP JUMPDEST PUSH2 0x208B PUSH2 0x3100 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x211E JUMPI PUSH2 0x211D PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x213E JUMPI PUSH2 0x213D PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2187 JUMPI PUSH2 0x2186 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2199 JUMPI PUSH2 0x2198 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2302 PUSH2 0x2EFF JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2372 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2369 SWAP1 PUSH2 0x3D8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x237B DUP2 PUSH2 0x2F7D JUMP JUMPDEST POP JUMP JUMPDEST DUP3 DUP5 DUP4 DUP4 PUSH2 0x238E DUP5 DUP5 DUP5 DUP5 PUSH2 0x6F7 JUMP JUMPDEST PUSH2 0x23CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23C4 SWAP1 PUSH2 0x3D6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH2 0x23D7 DUP2 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x2416 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x240D SWAP1 PUSH2 0x3DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH2 0x2420 DUP2 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x245F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2456 SWAP1 PUSH2 0x3DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP11 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2474 JUMPI PUSH2 0x2473 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH2 0x2518 PUSH2 0x3100 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2732 JUMPI DUP15 DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x253C JUMPI PUSH2 0x253B PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x271F JUMPI DUP1 SWAP2 POP DUP5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x256A JUMPI PUSH2 0x2569 PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x25B3 JUMPI PUSH2 0x25B2 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x25C5 JUMPI PUSH2 0x25C4 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP3 POP PUSH2 0x2732 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x272A SWAP1 PUSH2 0x4135 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2520 JUMP JUMPDEST POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2953 JUMPI DUP2 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x27BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27B1 SWAP1 PUSH2 0x3DEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x27CE JUMPI PUSH2 0x27CD PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP16 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x27E1 JUMPI PUSH2 0x27E0 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2888 JUMPI PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x46A8F820 CALLER DUP5 PUSH1 0xA0 ADD MLOAD DUP6 PUSH1 0xC0 ADD MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2851 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CE1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x286B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x287F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2952 JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x289B JUMPI PUSH2 0x289A PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP16 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x28AE JUMPI PUSH2 0x28AD PUSH2 0x41AD JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2951 JUMPI PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x46A8F820 CALLER DUP5 PUSH1 0x60 ADD MLOAD DUP6 PUSH1 0x80 ADD MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x291E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CE1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x294C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP JUMPDEST PUSH1 0x1 DUP5 PUSH2 0x2966 SWAP2 SWAP1 PUSH2 0x4094 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2BB3 JUMPI DUP5 PUSH2 0x2982 PUSH1 0x1 DUP4 PUSH2 0x2EE9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2993 JUMPI PUSH2 0x2992 PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x29B4 JUMPI PUSH2 0x29B3 PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2A04 JUMPI PUSH2 0x2A03 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP3 ADD SLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 DUP3 ADD SLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0x6 DUP3 ADD SLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0x7 DUP3 ADD SLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH1 0x8 DUP3 ADD SLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 DUP1 PUSH2 0x2BAB SWAP1 PUSH2 0x4135 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2959 JUMP JUMPDEST POP DUP4 PUSH2 0x2BC9 PUSH1 0x1 DUP6 PUSH2 0x2ED3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2BDA JUMPI PUSH2 0x2BD9 PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP DUP4 DUP1 SLOAD DUP1 PUSH2 0x2CC9 JUMPI PUSH2 0x2CC8 PUSH2 0x41DC JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP SWAP1 SSTORE DUP4 PUSH1 0x7 PUSH1 0x0 DUP16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 SLOAD PUSH2 0x2E4B SWAP3 SWAP2 SWAP1 PUSH2 0x31B0 JUMP JUMPDEST POP PUSH32 0xA1CC643491754200D3ECA5769E524A0FD00F9B0862B18D0DA7D6E7277A83DFDA DUP15 DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD DUP7 PUSH1 0x80 ADD MLOAD DUP8 PUSH1 0xA0 ADD MLOAD DUP9 PUSH1 0xC0 ADD MLOAD DUP10 PUSH1 0xE0 ADD MLOAD DUP11 PUSH2 0x100 ADD MLOAD DUP12 PUSH2 0x120 ADD MLOAD DUP13 PUSH2 0x140 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x2EBA SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2EE1 SWAP2 SWAP1 PUSH2 0x4094 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2EF7 SWAP2 SWAP1 PUSH2 0x403E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F07 PUSH2 0x3041 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2F25 PUSH2 0x1652 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2F7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F72 SWAP1 PUSH2 0x3E2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3070 JUMPI PUSH2 0x306F PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3127 JUMPI PUSH2 0x3126 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x33D2 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0xA MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x33D1 JUMPI DUP3 DUP3 PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3227 JUMPI PUSH2 0x3226 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP3 ADD SLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 DUP3 ADD SLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0x6 DUP3 ADD SLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0x7 DUP3 ADD SLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH1 0x8 DUP3 ADD SLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP SWAP2 PUSH1 0xA ADD SWAP2 SWAP1 PUSH1 0xA ADD SWAP1 PUSH2 0x31DB JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x33DF SWAP2 SWAP1 PUSH2 0x33E3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x34C3 JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP PUSH1 0xA ADD PUSH2 0x33E4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x34D6 DUP2 PUSH2 0x4398 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x34EB DUP2 PUSH2 0x43AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3500 DUP2 PUSH2 0x43C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3515 DUP2 PUSH2 0x43D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x352A DUP2 PUSH2 0x43D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3546 JUMPI PUSH2 0x3545 PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3554 DUP5 DUP3 DUP6 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3577 JUMPI PUSH2 0x3576 PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3585 DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3596 DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x35A7 DUP8 DUP3 DUP9 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x35B8 DUP8 DUP3 DUP9 ADD PUSH2 0x34F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x35DE JUMPI PUSH2 0x35DD PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35EC DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x35FD DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x360E DUP8 DUP3 DUP9 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x361F DUP8 DUP3 DUP9 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3642 JUMPI PUSH2 0x3641 PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3650 DUP6 DUP3 DUP7 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3661 DUP6 DUP3 DUP7 ADD PUSH2 0x34F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3684 JUMPI PUSH2 0x3683 PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3692 DUP7 DUP3 DUP8 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x36A3 DUP7 DUP3 DUP8 ADD PUSH2 0x34F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x36B4 DUP7 DUP3 DUP8 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x36D5 JUMPI PUSH2 0x36D4 PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36E3 DUP6 DUP3 DUP7 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x36F4 DUP6 DUP3 DUP7 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x371B JUMPI PUSH2 0x371A PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3729 DUP10 DUP3 DUP11 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x373A DUP10 DUP3 DUP11 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x374B DUP10 DUP3 DUP11 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x375C DUP10 DUP3 DUP11 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x376D DUP10 DUP3 DUP11 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x377E DUP10 DUP3 DUP11 ADD PUSH2 0x34DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x37A4 JUMPI PUSH2 0x37A3 PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37B2 DUP7 DUP3 DUP8 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x37C3 DUP7 DUP3 DUP8 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x37D4 DUP7 DUP3 DUP8 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x37F7 JUMPI PUSH2 0x37F6 PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3805 DUP7 DUP3 DUP8 ADD PUSH2 0x34F1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3816 DUP7 DUP3 DUP8 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3827 DUP7 DUP3 DUP8 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x384B JUMPI PUSH2 0x384A PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3859 DUP8 DUP3 DUP9 ADD PUSH2 0x34F1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x386A DUP8 DUP3 DUP9 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x387B DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x388C DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38AE JUMPI PUSH2 0x38AD PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38BC DUP5 DUP3 DUP6 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38DB JUMPI PUSH2 0x38DA PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38E9 DUP5 DUP3 DUP6 ADD PUSH2 0x351B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x390C JUMPI PUSH2 0x390B PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x391A DUP8 DUP3 DUP9 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x392B DUP8 DUP3 DUP9 ADD PUSH2 0x34F1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x393C DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x394D DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x3962 DUP2 PUSH2 0x40C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3971 DUP2 PUSH2 0x40C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3980 DUP2 PUSH2 0x40DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x398F DUP2 PUSH2 0x40DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x399E DUP2 PUSH2 0x4123 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x39AD DUP2 PUSH2 0x4123 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39C0 PUSH1 0x10 DUP4 PUSH2 0x402D JUMP JUMPDEST SWAP2 POP PUSH2 0x39CB DUP3 PUSH2 0x423F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39E3 PUSH1 0x26 DUP4 PUSH2 0x402D JUMP JUMPDEST SWAP2 POP PUSH2 0x39EE DUP3 PUSH2 0x4268 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A06 PUSH1 0x18 DUP4 PUSH2 0x402D JUMP JUMPDEST SWAP2 POP PUSH2 0x3A11 DUP3 PUSH2 0x42B7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A29 PUSH1 0x12 DUP4 PUSH2 0x402D JUMP JUMPDEST SWAP2 POP PUSH2 0x3A34 DUP3 PUSH2 0x42E0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A4C PUSH1 0x9 DUP4 PUSH2 0x402D JUMP JUMPDEST SWAP2 POP PUSH2 0x3A57 DUP3 PUSH2 0x4309 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A6F PUSH1 0x16 DUP4 PUSH2 0x402D JUMP JUMPDEST SWAP2 POP PUSH2 0x3A7A DUP3 PUSH2 0x4332 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A92 PUSH1 0x20 DUP4 PUSH2 0x402D JUMP JUMPDEST SWAP2 POP PUSH2 0x3A9D DUP3 PUSH2 0x435B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x160 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3ABF PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3AD2 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3995 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x3AE5 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3959 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x3AF8 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x3959 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x3B0B PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x3B1E PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x3959 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x3B31 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x3B44 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x3B59 PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x3B6E PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x3B83 PUSH2 0x140 DUP6 ADD DUP3 PUSH2 0x3977 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x180 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3BA0 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3BB3 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3995 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x3BC6 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3959 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x3BD9 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x3959 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x3BEC PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x3959 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x3BFF PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x3C12 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x3C25 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x3C3A PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x3C4F PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x3C64 PUSH2 0x140 DUP6 ADD DUP3 PUSH2 0x3977 JUMP JUMPDEST POP PUSH2 0x160 DUP3 ADD MLOAD PUSH2 0x3C79 PUSH2 0x160 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3C88 DUP2 PUSH2 0x4119 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3C97 DUP2 PUSH2 0x4119 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3CB2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3968 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3CCD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3CDA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3968 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3CF6 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3D03 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3D10 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3D1D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3986 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3D3B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3D48 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3C8E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D64 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3986 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D83 DUP2 PUSH2 0x39B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DA3 DUP2 PUSH2 0x39D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DC3 DUP2 PUSH2 0x39F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DE3 DUP2 PUSH2 0x3A1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E03 DUP2 PUSH2 0x3A3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E23 DUP2 PUSH2 0x3A62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E43 DUP2 PUSH2 0x3A85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x3E60 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3AA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 ADD SWAP1 POP PUSH2 0x3E7C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3AA8 JUMP JUMPDEST PUSH2 0x3E8A PUSH2 0x160 DUP4 ADD DUP5 PUSH2 0x3C8E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 ADD SWAP1 POP PUSH2 0x3EA7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3B89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3EC2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 ADD SWAP1 POP PUSH2 0x3EDE PUSH1 0x0 DUP4 ADD DUP16 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3EEB PUSH1 0x20 DUP4 ADD DUP15 PUSH2 0x39A4 JUMP JUMPDEST PUSH2 0x3EF8 PUSH1 0x40 DUP4 ADD DUP14 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3F05 PUSH1 0x60 DUP4 ADD DUP13 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3F12 PUSH1 0x80 DUP4 ADD DUP12 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3F1F PUSH1 0xA0 DUP4 ADD DUP11 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3F2C PUSH1 0xC0 DUP4 ADD DUP10 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3F39 PUSH1 0xE0 DUP4 ADD DUP9 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3F47 PUSH2 0x100 DUP4 ADD DUP8 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3F55 PUSH2 0x120 DUP4 ADD DUP7 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3F63 PUSH2 0x140 DUP4 ADD DUP6 PUSH2 0x3986 JUMP JUMPDEST PUSH2 0x3F71 PUSH2 0x160 DUP4 ADD DUP5 PUSH2 0x3C8E JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x3F98 PUSH1 0x0 DUP4 ADD DUP15 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3FA5 PUSH1 0x20 DUP4 ADD DUP14 PUSH2 0x39A4 JUMP JUMPDEST PUSH2 0x3FB2 PUSH1 0x40 DUP4 ADD DUP13 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3FBF PUSH1 0x60 DUP4 ADD DUP12 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3FCC PUSH1 0x80 DUP4 ADD DUP11 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3FD9 PUSH1 0xA0 DUP4 ADD DUP10 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3FE6 PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3FF3 PUSH1 0xE0 DUP4 ADD DUP8 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x4001 PUSH2 0x100 DUP4 ADD DUP7 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x400F PUSH2 0x120 DUP4 ADD DUP6 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x401D PUSH2 0x140 DUP4 ADD DUP5 PUSH2 0x3986 JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4049 DUP3 PUSH2 0x4119 JUMP JUMPDEST SWAP2 POP PUSH2 0x4054 DUP4 PUSH2 0x4119 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4089 JUMPI PUSH2 0x4088 PUSH2 0x417E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x409F DUP3 PUSH2 0x4119 JUMP JUMPDEST SWAP2 POP PUSH2 0x40AA DUP4 PUSH2 0x4119 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x40BD JUMPI PUSH2 0x40BC PUSH2 0x417E JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40D3 DUP3 PUSH2 0x40F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x40F4 DUP3 PUSH2 0x4384 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x412E DUP3 PUSH2 0x40E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4140 DUP3 PUSH2 0x4119 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x4173 JUMPI PUSH2 0x4172 PUSH2 0x417E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x496E76616C6964204F7264657220494400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E20756E617661696C61626C6520696E204445580000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742046756E64730000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F74204F776E65720000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E20616C726561647920766572696669656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x4395 JUMPI PUSH2 0x4394 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x43A1 DUP2 PUSH2 0x40C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x43AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x43B8 DUP2 PUSH2 0x40DA JUMP JUMPDEST DUP2 EQ PUSH2 0x43C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x43D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x43DF DUP2 PUSH2 0x4119 JUMP JUMPDEST DUP2 EQ PUSH2 0x43EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE CALLDATASIZE 0xC JUMPI DUP7 PC DUP4 0x5C 0xBB DUP3 CALLVALUE 0xED PUSH31 0x31D607D87084EEEA85588AC20133ADB68693AB64736F6C6343000807003300 ","sourceMap":"387:21808:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20869:272;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18574:210;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;21149:254;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20236:413;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3573:1376;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4957:1420;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101:1;;;:::i;:::-;;611:36:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19342:372:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19722:506;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1013:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;699:29;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;21411:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;20657:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;21536:163;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;919:85;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;19154:180;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;21707:121;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;822:88;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;18792:354;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6385:1850:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;20869:272;20931:4;20999:9;21011:1;20999:13;;20994:117;21018:9;:16;;;;21014:1;:20;20994:117;;;21080:6;21060:26;;:9;21070:1;21060:12;;;;;;;;:::i;:::-;;;;;;;;;;;;:16;;;;;;;;;;;;:26;;;21056:43;;;21095:4;21088:11;;;;;21056:43;21036:3;;;;;:::i;:::-;;;;20994:117;;;;21128:5;21121:12;;20869:272;;;;:::o;18574:210::-;18698:7;18725:11;:20;18737:7;18725:20;;;;;;;;;;;;;;;:29;18746:7;18725:29;;;;;;;;;;;;;;;:44;18763:4;18755:13;;;;;;;;:::i;:::-;;18725:44;;;;;;;;;;;:51;;;;18718:58;;18574:210;;;;;:::o;21149:254::-;21208:7;21233:9;21245:1;21233:13;;21228:168;21252:9;:16;;;;21248:1;:20;21228:168;;;21314:6;21294:26;;:9;21304:1;21294:12;;;;;;;;:::i;:::-;;;;;;;;;;;;:16;;;;;;;;;;;;:26;;;21290:95;;;21348:9;21358:1;21348:12;;;;;;;;:::i;:::-;;;;;;;;;;;;:21;;;21341:28;;;;;21290:95;21270:3;;;;;:::i;:::-;;;;21228:168;;;;21149:254;;;;:::o;20236:413::-;20379:4;20396:22;20421:11;:20;20433:7;20421:20;;;;;;;;;;;;;;;:29;20442:7;20421:29;;;;;;;;;;;;;;;:44;20459:4;20451:13;;;;;;;;:::i;:::-;;20421:44;;;;;;;;;;;20396:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20483:9;20478:141;20502:6;:13;20498:1;:17;20478:141;;;20557:3;20541:6;20548:1;20541:9;;;;;;;;:::i;:::-;;;;;;;;:12;;;:19;20537:71;;;20588:4;20581:11;;;;;;20537:71;20517:3;;;;;:::i;:::-;;;;20478:141;;;;20636:5;20629:12;;;20236:413;;;;;;;:::o;3573:1376::-;3811:7;22120:23;22136:6;22120:15;:23::i;:::-;22112:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;3831:7:::1;22120:23;22136:6;22120:15;:23::i;:::-;22112:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;4075:8:::2;3954:117;4014:6;;;;;;;;;;;:21;;;4036:10;4048:7;4014:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3954:6;;;;;;;;;;;:16;;;3971:7;3980:10;3954:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;:117;;;;:::i;:::-;:129;;3932:197;;;;;;;;;;;;:::i;:::-;;;;;;;;;4142:6;;;;;;;;;;;:24;;;4167:10;4179:7;4188:8;4198:4;4142:61;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;4216:11;:20;4228:7;4216:20;;;;;;;;;;;;;;;:29;4237:7;4216:29;;;;;;;;;;;;;;;:48;4254:8:::0;4246:17:::2;;;;;;;;:::i;:::-;;4216:48;;;;;;;;;;;4284:318;;;;;;;;4309:9;;4284:318;;;;4337:8;4284:318;;;;;;;;:::i;:::-;;;;;;4364:10;4284:318;;;;;;4393:7;4284:318;;;;;;4419:8;4284:318;;;;4446:7;4284:318;;;;;;4472:8;4284:318;;;;4499:5;4284:318;;;;4523:8;4284:318;;;;4550:8;4284:318;;;;4577:10;4284:318;;;;::::0;4216:397:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4631:269;4651:9;;4675:8;4698:10;4723:7;4745:8;4768:7;4790:8;4813:5;4833:8;4856;4879:10;4631:269;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;4925:16;4939:1;4925:9;;:13;;:16;;;;:::i;:::-;4913:9;:28;;;;22183:1:::1;3573:1376:::0;;;;;;;:::o;4957:1420::-;5170:7;22120:23;22136:6;22120:15;:23::i;:::-;22112:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5190:7:::1;22120:23;22136:6;22120:15;:23::i;:::-;22112:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5451:8:::2;5330:117;5390:6;;;;;;;;;;;:21;;;5412:10;5424:7;5390:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5330:6;;;;;;;;;;;:16;;;5347:7;5356:10;5330:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;:117;;;;:::i;:::-;:129;;5308:197;;;;;;;;;;;;:::i;:::-;;;;;;;;;5567:6;;;;;;;;;;;:24;;;5592:10;5604:7;5613:8;5623:4;5567:61;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;5641:11;:20;5653:7;5641:20;;;;;;;;;;;;;;;:29;5662:7;5641:29;;;;;;;;;;;;;;;:49;5679:9;5671:18:::0;::::2;;;;;;;:::i;:::-;;5641:49;;;;;;;;;;;5710:319;;;;;;;;5735:9;;5710:319;;;;5763:9;5710:319:::0;::::2;;;;;;;:::i;:::-;;;;;;5791:10;5710:319;;;;;;5820:7;5710:319;;;;;;5846:8;5710:319;;;;5873:7;5710:319;;;;;;5899:8;5710:319;;;;5926:5;5710:319;;;;5950:8;5710:319;;;;5977:8;5710:319;;;;6004:10;5710:319;;;;::::0;5641:399:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6058:270;6078:9;;6102;6126:10;6151:7;6173:8;6196:7;6218:8;6241:5;6261:8;6284;6307:10;6058:270;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;6353:16;6367:1;6353:9;;:13;;:16;;;;:::i;:::-;6341:9;:28;;;;22183:1:::1;4957:1420:::0;;;;;;;:::o;1831:101:1:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;611:36:4:-;;;;;;;;;;;;;:::o;1201:85:1:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;19342:372:4:-;19503:19;;:::i;:::-;19550:31;19584:14;:21;19599:5;19584:21;;;;;;;;;;;;;;;:36;19614:4;19606:13;;;;;;;;:::i;:::-;;19584:36;;;;;;;;;;;19635:5;19584:67;;;;;;;;:::i;:::-;;;;;;;;;;;;19550:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19684:11;19662:44;;;19342:372;;;;;:::o;19722:506::-;19874:13;;:::i;:::-;19889:7;19909:9;19921:1;19909:13;;19933:22;19958:11;:20;19970:7;19958:20;;;;;;;;;;;;;;;:29;19979:7;19958:29;;;;;;;;;;;;;;;:35;19988:4;19958:35;;;;;;;;;;;19933:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20004:19;;:::i;:::-;20034:159;20046:6;:13;20042:1;:17;20034:159;;;20101:3;20085:6;20092:1;20085:9;;;;;;;;:::i;:::-;;;;;;;;:12;;;:19;20081:101;;;20133:6;20140:1;20133:9;;;;;;;;:::i;:::-;;;;;;;;20125:17;;20161:5;;20081:101;20061:3;;;;;:::i;:::-;;;;20034:159;;;20211:5;20218:1;20203:17;;;;;;;19722:506;;;;;;;:::o;1013:28::-;;;;:::o;699:29::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;21411:117::-;1094:13:1;:11;:13::i;:::-;21505:14:4::1;21489:6;;:31;;;;;;;;;;;;;;;;;;21411:117:::0;:::o;20657:204::-;1094:13:1;:11;:13::i;:::-;20747:23:4::1;20763:6;20747:15;:23::i;:::-;20746:24;20738:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;20808:9;20823:29;;;;;;;;20834:6;20823:29;;;;;;20842:9;20823:29;;::::0;20808:45:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20657:204:::0;;:::o;21536:163::-;1094:13:1;:11;:13::i;:::-;21670:20:4::1;21642:12;;:49;;;;;;;;;;;;;;;;;;21536:163:::0;:::o;919:85::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;19154:180::-;19256:7;19283:14;:21;19298:5;19283:21;;;;;;;;;;;;;;;:36;19313:4;19305:13;;;;;;;;:::i;:::-;;19283:36;;;;;;;;;;;:43;;;;19276:50;;19154:180;;;;:::o;21707:121::-;1094:13:1;:11;:13::i;:::-;21807:12:4::1;21781:11;;:39;;;;;;;;;;;;;;;;;;21707:121:::0;:::o;822:88::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;18792:354::-;18975:13;;:::i;:::-;19016:19;19038:11;:20;19050:7;19038:20;;;;;;;;;;;;;;;:29;19059:7;19038:29;;;;;;;;;;;;;;;:44;19076:4;19068:13;;;;;;;;:::i;:::-;;19038:44;;;;;;;;;;;19083:5;19038:51;;;;;;;;:::i;:::-;;;;;;;;;;;;19016:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19122:5;19100:38;;;18792:354;;;;;;:::o;2081:198:1:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;6385:1850:4:-;6525:3;6530:4;6536:7;6545;21976:40;21988:3;21993:4;21999:7;22008;21976:11;:40::i;:::-;21968:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;6565:7:::1;22120:23;22136:6;22120:15;:23::i;:::-;22112:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;6585:7:::2;22120:23;22136:6;22120:15;:23::i;:::-;22112:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;6605:13:::3;6629:4;6621:13;;;;;;;;:::i;:::-;;6605:29;;6645:23;6671:11;:20;6683:7;6671:20;;;;;;;;;;;;;;;:29;6692:7;6671:29;;;;;;;;;;;;;;;:36;6701:5;6671:36;;;;;;;;;;;6645:62;;6718:12;6733:6;:13;;;;6718:28;;6757:19;;:::i;:::-;6789:13;6818:9:::0;6830:1:::3;6818:13;;6813:190;6837:4;6833:1;:8;6813:190;;;6883:3;6867:6;6874:1;6867:9;;;;;;;;:::i;:::-;;;;;;;;;;;;:12;;;:19;6863:129;;;6915:1;6907:9;;6943:6;6950:1;6943:9;;;;;;;;:::i;:::-;;;;;;;;;;;;6935:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::3;;;6971:5;;6863:129;6843:3;;;;;:::i;:::-;;;;6813:190;;;;7060:10;;;;;;;;;;;7056:604;;;7109:5;:10;;;7095:24;;:10;:24;;;7087:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;7190:8;7182:16;;;;;;;;:::i;:::-;;:4;:16;;;;;;;;:::i;:::-;;;7178:471;;;7219:6;;;;;;;;;;;:24;;;7266:10;7299:5;:12;;;7334:5;:13;;;7370:5;7219:175;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;7178:471;;;7428:9;7420:17:::0;::::3;;;;;;;:::i;:::-;;:4;:17;;;;;;;;:::i;:::-;;;7416:233;;;7458:6;;;;;;;;;;;:24;;;7505:10;7538:5;:12;;;7573:5;:13;;;7609:5;7458:175;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;7416:233;7178:471;7056:604;7677:9;7689:5;7677:17;;7672:98;7707:1;7700:4;:8;;;;:::i;:::-;7696:1;:12;7672:98;;;7742:6;7749:8;7755:1;7749;:5;;:8;;;;:::i;:::-;7742:16;;;;;;;;:::i;:::-;;;;;;;;;;;;7730:6;7737:1;7730:9;;;;;;;;:::i;:::-;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7710:3;;;;;:::i;:::-;;;;7672:98;;;;7787:6;7794:11;7803:1;7794:4;:8;;:11;;;;:::i;:::-;7787:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;7780:26:::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7817:6;:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7881:6;7842:11;:20;7854:7;7842:20;;;;;;;;;;;;;;;:29;7863:7;7842:29;;;;;;;;;;;;;;;:36;7872:5;7842:36;;;;;;;;;;;:45;;;;;;;;:::i;:::-;;7905:322;7926:3;7944:5;:10;;;7969:5;:10;;;7994:5;:12;;;8021:5;:13;;;8049:5;:12;;;8076:5;:13;;;8104:5;:10;;;8129:5;:21;;;8165:5;:21;;;8201:5;:15;;;7905:322;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;6594:1641;;;;;22183:1:::2;22048::::1;6385:1850:::0;;;;;;;;:::o;3122:96:3:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;1359:130:1:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:9:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:133::-;195:5;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;152:133;;;;:::o;291:155::-;345:5;383:6;370:20;361:29;;399:41;434:5;399:41;:::i;:::-;291:155;;;;:::o;452:139::-;498:5;536:6;523:20;514:29;;552:33;579:5;552:33;:::i;:::-;452:139;;;;:::o;597:143::-;654:5;685:6;679:13;670:22;;701:33;728:5;701:33;:::i;:::-;597:143;;;;:::o;746:329::-;805:6;854:2;842:9;833:7;829:23;825:32;822:119;;;860:79;;:::i;:::-;822:119;980:1;1005:53;1050:7;1041:6;1030:9;1026:22;1005:53;:::i;:::-;995:63;;951:117;746:329;;;;:::o;1081:781::-;1175:6;1183;1191;1199;1248:3;1236:9;1227:7;1223:23;1219:33;1216:120;;;1255:79;;:::i;:::-;1216:120;1375:1;1400:53;1445:7;1436:6;1425:9;1421:22;1400:53;:::i;:::-;1390:63;;1346:117;1502:2;1528:53;1573:7;1564:6;1553:9;1549:22;1528:53;:::i;:::-;1518:63;;1473:118;1630:2;1656:53;1701:7;1692:6;1681:9;1677:22;1656:53;:::i;:::-;1646:63;;1601:118;1758:2;1784:61;1837:7;1828:6;1817:9;1813:22;1784:61;:::i;:::-;1774:71;;1729:126;1081:781;;;;;;;:::o;1868:765::-;1954:6;1962;1970;1978;2027:3;2015:9;2006:7;2002:23;1998:33;1995:120;;;2034:79;;:::i;:::-;1995:120;2154:1;2179:53;2224:7;2215:6;2204:9;2200:22;2179:53;:::i;:::-;2169:63;;2125:117;2281:2;2307:53;2352:7;2343:6;2332:9;2328:22;2307:53;:::i;:::-;2297:63;;2252:118;2409:2;2435:53;2480:7;2471:6;2460:9;2456:22;2435:53;:::i;:::-;2425:63;;2380:118;2537:2;2563:53;2608:7;2599:6;2588:9;2584:22;2563:53;:::i;:::-;2553:63;;2508:118;1868:765;;;;;;;:::o;2639:490::-;2715:6;2723;2772:2;2760:9;2751:7;2747:23;2743:32;2740:119;;;2778:79;;:::i;:::-;2740:119;2898:1;2923:53;2968:7;2959:6;2948:9;2944:22;2923:53;:::i;:::-;2913:63;;2869:117;3025:2;3051:61;3104:7;3095:6;3084:9;3080:22;3051:61;:::i;:::-;3041:71;;2996:126;2639:490;;;;;:::o;3135:635::-;3220:6;3228;3236;3285:2;3273:9;3264:7;3260:23;3256:32;3253:119;;;3291:79;;:::i;:::-;3253:119;3411:1;3436:53;3481:7;3472:6;3461:9;3457:22;3436:53;:::i;:::-;3426:63;;3382:117;3538:2;3564:61;3617:7;3608:6;3597:9;3593:22;3564:61;:::i;:::-;3554:71;;3509:126;3674:2;3700:53;3745:7;3736:6;3725:9;3721:22;3700:53;:::i;:::-;3690:63;;3645:118;3135:635;;;;;:::o;3776:474::-;3844:6;3852;3901:2;3889:9;3880:7;3876:23;3872:32;3869:119;;;3907:79;;:::i;:::-;3869:119;4027:1;4052:53;4097:7;4088:6;4077:9;4073:22;4052:53;:::i;:::-;4042:63;;3998:117;4154:2;4180:53;4225:7;4216:6;4205:9;4201:22;4180:53;:::i;:::-;4170:63;;4125:118;3776:474;;;;;:::o;4256:1051::-;4357:6;4365;4373;4381;4389;4397;4446:3;4434:9;4425:7;4421:23;4417:33;4414:120;;;4453:79;;:::i;:::-;4414:120;4573:1;4598:53;4643:7;4634:6;4623:9;4619:22;4598:53;:::i;:::-;4588:63;;4544:117;4700:2;4726:53;4771:7;4762:6;4751:9;4747:22;4726:53;:::i;:::-;4716:63;;4671:118;4828:2;4854:53;4899:7;4890:6;4879:9;4875:22;4854:53;:::i;:::-;4844:63;;4799:118;4956:2;4982:53;5027:7;5018:6;5007:9;5003:22;4982:53;:::i;:::-;4972:63;;4927:118;5084:3;5111:53;5156:7;5147:6;5136:9;5132:22;5111:53;:::i;:::-;5101:63;;5055:119;5213:3;5240:50;5282:7;5273:6;5262:9;5258:22;5240:50;:::i;:::-;5230:60;;5184:116;4256:1051;;;;;;;;:::o;5313:619::-;5390:6;5398;5406;5455:2;5443:9;5434:7;5430:23;5426:32;5423:119;;;5461:79;;:::i;:::-;5423:119;5581:1;5606:53;5651:7;5642:6;5631:9;5627:22;5606:53;:::i;:::-;5596:63;;5552:117;5708:2;5734:53;5779:7;5770:6;5759:9;5755:22;5734:53;:::i;:::-;5724:63;;5679:118;5836:2;5862:53;5907:7;5898:6;5887:9;5883:22;5862:53;:::i;:::-;5852:63;;5807:118;5313:619;;;;;:::o;5938:635::-;6023:6;6031;6039;6088:2;6076:9;6067:7;6063:23;6059:32;6056:119;;;6094:79;;:::i;:::-;6056:119;6214:1;6239:61;6292:7;6283:6;6272:9;6268:22;6239:61;:::i;:::-;6229:71;;6185:125;6349:2;6375:53;6420:7;6411:6;6400:9;6396:22;6375:53;:::i;:::-;6365:63;;6320:118;6477:2;6503:53;6548:7;6539:6;6528:9;6524:22;6503:53;:::i;:::-;6493:63;;6448:118;5938:635;;;;;:::o;6579:781::-;6673:6;6681;6689;6697;6746:3;6734:9;6725:7;6721:23;6717:33;6714:120;;;6753:79;;:::i;:::-;6714:120;6873:1;6898:61;6951:7;6942:6;6931:9;6927:22;6898:61;:::i;:::-;6888:71;;6844:125;7008:2;7034:53;7079:7;7070:6;7059:9;7055:22;7034:53;:::i;:::-;7024:63;;6979:118;7136:2;7162:53;7207:7;7198:6;7187:9;7183:22;7162:53;:::i;:::-;7152:63;;7107:118;7264:2;7290:53;7335:7;7326:6;7315:9;7311:22;7290:53;:::i;:::-;7280:63;;7235:118;6579:781;;;;;;;:::o;7366:329::-;7425:6;7474:2;7462:9;7453:7;7449:23;7445:32;7442:119;;;7480:79;;:::i;:::-;7442:119;7600:1;7625:53;7670:7;7661:6;7650:9;7646:22;7625:53;:::i;:::-;7615:63;;7571:117;7366:329;;;;:::o;7701:351::-;7771:6;7820:2;7808:9;7799:7;7795:23;7791:32;7788:119;;;7826:79;;:::i;:::-;7788:119;7946:1;7971:64;8027:7;8018:6;8007:9;8003:22;7971:64;:::i;:::-;7961:74;;7917:128;7701:351;;;;:::o;8058:781::-;8152:6;8160;8168;8176;8225:3;8213:9;8204:7;8200:23;8196:33;8193:120;;;8232:79;;:::i;:::-;8193:120;8352:1;8377:53;8422:7;8413:6;8402:9;8398:22;8377:53;:::i;:::-;8367:63;;8323:117;8479:2;8505:61;8558:7;8549:6;8538:9;8534:22;8505:61;:::i;:::-;8495:71;;8450:126;8615:2;8641:53;8686:7;8677:6;8666:9;8662:22;8641:53;:::i;:::-;8631:63;;8586:118;8743:2;8769:53;8814:7;8805:6;8794:9;8790:22;8769:53;:::i;:::-;8759:63;;8714:118;8058:781;;;;;;;:::o;8845:108::-;8922:24;8940:5;8922:24;:::i;:::-;8917:3;8910:37;8845:108;;:::o;8959:118::-;9046:24;9064:5;9046:24;:::i;:::-;9041:3;9034:37;8959:118;;:::o;9083:99::-;9154:21;9169:5;9154:21;:::i;:::-;9149:3;9142:34;9083:99;;:::o;9188:109::-;9269:21;9284:5;9269:21;:::i;:::-;9264:3;9257:34;9188:109;;:::o;9303:133::-;9386:43;9423:5;9386:43;:::i;:::-;9381:3;9374:56;9303:133;;:::o;9442:143::-;9535:43;9572:5;9535:43;:::i;:::-;9530:3;9523:56;9442:143;;:::o;9591:366::-;9733:3;9754:67;9818:2;9813:3;9754:67;:::i;:::-;9747:74;;9830:93;9919:3;9830:93;:::i;:::-;9948:2;9943:3;9939:12;9932:19;;9591:366;;;:::o;9963:::-;10105:3;10126:67;10190:2;10185:3;10126:67;:::i;:::-;10119:74;;10202:93;10291:3;10202:93;:::i;:::-;10320:2;10315:3;10311:12;10304:19;;9963:366;;;:::o;10335:::-;10477:3;10498:67;10562:2;10557:3;10498:67;:::i;:::-;10491:74;;10574:93;10663:3;10574:93;:::i;:::-;10692:2;10687:3;10683:12;10676:19;;10335:366;;;:::o;10707:::-;10849:3;10870:67;10934:2;10929:3;10870:67;:::i;:::-;10863:74;;10946:93;11035:3;10946:93;:::i;:::-;11064:2;11059:3;11055:12;11048:19;;10707:366;;;:::o;11079:365::-;11221:3;11242:66;11306:1;11301:3;11242:66;:::i;:::-;11235:73;;11317:93;11406:3;11317:93;:::i;:::-;11435:2;11430:3;11426:12;11419:19;;11079:365;;;:::o;11450:366::-;11592:3;11613:67;11677:2;11672:3;11613:67;:::i;:::-;11606:74;;11689:93;11778:3;11689:93;:::i;:::-;11807:2;11802:3;11798:12;11791:19;;11450:366;;;:::o;11822:::-;11964:3;11985:67;12049:2;12044:3;11985:67;:::i;:::-;11978:74;;12061:93;12150:3;12061:93;:::i;:::-;12179:2;12174:3;12170:12;12163:19;;11822:366;;;:::o;12250:2118::-;12393:6;12388:3;12384:16;12480:4;12473:5;12469:16;12463:23;12499:63;12556:4;12551:3;12547:14;12533:12;12499:63;:::i;:::-;12410:162;12654:4;12647:5;12643:16;12637:23;12673:69;12736:4;12731:3;12727:14;12713:12;12673:69;:::i;:::-;12582:170;12834:4;12827:5;12823:16;12817:23;12853:63;12910:4;12905:3;12901:14;12887:12;12853:63;:::i;:::-;12762:164;13010:4;13003:5;12999:16;12993:23;13029:63;13086:4;13081:3;13077:14;13063:12;13029:63;:::i;:::-;12936:166;13187:4;13180:5;13176:16;13170:23;13206:63;13263:4;13258:3;13254:14;13240:12;13206:63;:::i;:::-;13112:167;13363:4;13356:5;13352:16;13346:23;13382:63;13439:4;13434:3;13430:14;13416:12;13382:63;:::i;:::-;13289:166;13540:4;13533:5;13529:16;13523:23;13559:63;13616:4;13611:3;13607:14;13593:12;13559:63;:::i;:::-;13465:167;13714:4;13707:5;13703:16;13697:23;13733:63;13790:4;13785:3;13781:14;13767:12;13733:63;:::i;:::-;13642:164;13899:6;13892:5;13888:18;13882:25;13920:65;13977:6;13972:3;13968:16;13954:12;13920:65;:::i;:::-;13816:179;14088:6;14081:5;14077:18;14071:25;14109:65;14166:6;14161:3;14157:16;14143:12;14109:65;:::i;:::-;14005:179;14271:6;14264:5;14260:18;14254:25;14292:59;14343:6;14338:3;14334:16;14320:12;14292:59;:::i;:::-;14194:167;12362:2006;12250:2118;;:::o;14442:2327::-;14597:6;14592:3;14588:16;14684:4;14677:5;14673:16;14667:23;14703:63;14760:4;14755:3;14751:14;14737:12;14703:63;:::i;:::-;14614:162;14858:4;14851:5;14847:16;14841:23;14877:69;14940:4;14935:3;14931:14;14917:12;14877:69;:::i;:::-;14786:170;15038:4;15031:5;15027:16;15021:23;15057:63;15114:4;15109:3;15105:14;15091:12;15057:63;:::i;:::-;14966:164;15214:4;15207:5;15203:16;15197:23;15233:63;15290:4;15285:3;15281:14;15267:12;15233:63;:::i;:::-;15140:166;15390:4;15383:5;15379:16;15373:23;15409:63;15466:4;15461:3;15457:14;15443:12;15409:63;:::i;:::-;15316:166;15572:4;15565:5;15561:16;15555:23;15591:63;15648:4;15643:3;15639:14;15625:12;15591:63;:::i;:::-;15492:172;15750:4;15743:5;15739:16;15733:23;15769:63;15826:4;15821:3;15817:14;15803:12;15769:63;:::i;:::-;15674:168;15932:4;15925:5;15921:16;15915:23;15951:63;16008:4;16003:3;15999:14;15985:12;15951:63;:::i;:::-;15852:172;16117:6;16110:5;16106:18;16100:25;16138:65;16195:6;16190:3;16186:16;16172:12;16138:65;:::i;:::-;16034:179;16306:6;16299:5;16295:18;16289:25;16327:65;16384:6;16379:3;16375:16;16361:12;16327:65;:::i;:::-;16223:179;16490:6;16483:5;16479:18;16473:25;16511:59;16562:6;16557:3;16553:16;16539:12;16511:59;:::i;:::-;16412:168;16666:6;16659:5;16655:18;16649:25;16687:65;16744:6;16739:3;16735:16;16721:12;16687:65;:::i;:::-;16590:172;14566:2203;14442:2327;;:::o;16775:108::-;16852:24;16870:5;16852:24;:::i;:::-;16847:3;16840:37;16775:108;;:::o;16889:118::-;16976:24;16994:5;16976:24;:::i;:::-;16971:3;16964:37;16889:118;;:::o;17013:222::-;17106:4;17144:2;17133:9;17129:18;17121:26;;17157:71;17225:1;17214:9;17210:17;17201:6;17157:71;:::i;:::-;17013:222;;;;:::o;17241:332::-;17362:4;17400:2;17389:9;17385:18;17377:26;;17413:71;17481:1;17470:9;17466:17;17457:6;17413:71;:::i;:::-;17494:72;17562:2;17551:9;17547:18;17538:6;17494:72;:::i;:::-;17241:332;;;;;:::o;17579:541::-;17750:4;17788:3;17777:9;17773:19;17765:27;;17802:71;17870:1;17859:9;17855:17;17846:6;17802:71;:::i;:::-;17883:72;17951:2;17940:9;17936:18;17927:6;17883:72;:::i;:::-;17965;18033:2;18022:9;18018:18;18009:6;17965:72;:::i;:::-;18047:66;18109:2;18098:9;18094:18;18085:6;18047:66;:::i;:::-;17579:541;;;;;;;:::o;18126:332::-;18247:4;18285:2;18274:9;18270:18;18262:26;;18298:71;18366:1;18355:9;18351:17;18342:6;18298:71;:::i;:::-;18379:72;18447:2;18436:9;18432:18;18423:6;18379:72;:::i;:::-;18126:332;;;;;:::o;18464:210::-;18551:4;18589:2;18578:9;18574:18;18566:26;;18602:65;18664:1;18653:9;18649:17;18640:6;18602:65;:::i;:::-;18464:210;;;;:::o;18680:419::-;18846:4;18884:2;18873:9;18869:18;18861:26;;18933:9;18927:4;18923:20;18919:1;18908:9;18904:17;18897:47;18961:131;19087:4;18961:131;:::i;:::-;18953:139;;18680:419;;;:::o;19105:::-;19271:4;19309:2;19298:9;19294:18;19286:26;;19358:9;19352:4;19348:20;19344:1;19333:9;19329:17;19322:47;19386:131;19512:4;19386:131;:::i;:::-;19378:139;;19105:419;;;:::o;19530:::-;19696:4;19734:2;19723:9;19719:18;19711:26;;19783:9;19777:4;19773:20;19769:1;19758:9;19754:17;19747:47;19811:131;19937:4;19811:131;:::i;:::-;19803:139;;19530:419;;;:::o;19955:::-;20121:4;20159:2;20148:9;20144:18;20136:26;;20208:9;20202:4;20198:20;20194:1;20183:9;20179:17;20172:47;20236:131;20362:4;20236:131;:::i;:::-;20228:139;;19955:419;;;:::o;20380:::-;20546:4;20584:2;20573:9;20569:18;20561:26;;20633:9;20627:4;20623:20;20619:1;20608:9;20604:17;20597:47;20661:131;20787:4;20661:131;:::i;:::-;20653:139;;20380:419;;;:::o;20805:::-;20971:4;21009:2;20998:9;20994:18;20986:26;;21058:9;21052:4;21048:20;21044:1;21033:9;21029:17;21022:47;21086:131;21212:4;21086:131;:::i;:::-;21078:139;;20805:419;;;:::o;21230:::-;21396:4;21434:2;21423:9;21419:18;21411:26;;21483:9;21477:4;21473:20;21469:1;21458:9;21454:17;21447:47;21511:131;21637:4;21511:131;:::i;:::-;21503:139;;21230:419;;;:::o;21655:315::-;21794:4;21832:3;21821:9;21817:19;21809:27;;21846:117;21960:1;21949:9;21945:17;21936:6;21846:117;:::i;:::-;21655:315;;;;:::o;21976:426::-;22143:4;22181:3;22170:9;22166:19;22158:27;;22195:117;22309:1;22298:9;22294:17;22285:6;22195:117;:::i;:::-;22322:73;22390:3;22379:9;22375:19;22366:6;22322:73;:::i;:::-;21976:426;;;;;:::o;22408:339::-;22559:4;22597:3;22586:9;22582:19;22574:27;;22611:129;22737:1;22726:9;22722:17;22713:6;22611:129;:::i;:::-;22408:339;;;;:::o;22753:222::-;22846:4;22884:2;22873:9;22869:18;22861:26;;22897:71;22965:1;22954:9;22950:17;22941:6;22897:71;:::i;:::-;22753:222;;;;:::o;22981:1445::-;23384:4;23422:3;23411:9;23407:19;23399:27;;23436:71;23504:1;23493:9;23489:17;23480:6;23436:71;:::i;:::-;23517:78;23591:2;23580:9;23576:18;23567:6;23517:78;:::i;:::-;23605:72;23673:2;23662:9;23658:18;23649:6;23605:72;:::i;:::-;23687;23755:2;23744:9;23740:18;23731:6;23687:72;:::i;:::-;23769:73;23837:3;23826:9;23822:19;23813:6;23769:73;:::i;:::-;23852;23920:3;23909:9;23905:19;23896:6;23852:73;:::i;:::-;23935;24003:3;23992:9;23988:19;23979:6;23935:73;:::i;:::-;24018;24086:3;24075:9;24071:19;24062:6;24018:73;:::i;:::-;24101;24169:3;24158:9;24154:19;24145:6;24101:73;:::i;:::-;24184;24252:3;24241:9;24237:19;24228:6;24184:73;:::i;:::-;24267:68;24330:3;24319:9;24315:19;24305:7;24267:68;:::i;:::-;24345:74;24414:3;24403:9;24399:19;24389:7;24345:74;:::i;:::-;22981:1445;;;;;;;;;;;;;;;:::o;24432:1332::-;24806:4;24844:3;24833:9;24829:19;24821:27;;24858:71;24926:1;24915:9;24911:17;24902:6;24858:71;:::i;:::-;24939:78;25013:2;25002:9;24998:18;24989:6;24939:78;:::i;:::-;25027:72;25095:2;25084:9;25080:18;25071:6;25027:72;:::i;:::-;25109;25177:2;25166:9;25162:18;25153:6;25109:72;:::i;:::-;25191:73;25259:3;25248:9;25244:19;25235:6;25191:73;:::i;:::-;25274;25342:3;25331:9;25327:19;25318:6;25274:73;:::i;:::-;25357;25425:3;25414:9;25410:19;25401:6;25357:73;:::i;:::-;25440;25508:3;25497:9;25493:19;25484:6;25440:73;:::i;:::-;25523;25591:3;25580:9;25576:19;25567:6;25523:73;:::i;:::-;25606;25674:3;25663:9;25659:19;25650:6;25606:73;:::i;:::-;25689:68;25752:3;25741:9;25737:19;25727:7;25689:68;:::i;:::-;24432:1332;;;;;;;;;;;;;;:::o;25851:169::-;25935:11;25969:6;25964:3;25957:19;26009:4;26004:3;26000:14;25985:29;;25851:169;;;;:::o;26026:305::-;26066:3;26085:20;26103:1;26085:20;:::i;:::-;26080:25;;26119:20;26137:1;26119:20;:::i;:::-;26114:25;;26273:1;26205:66;26201:74;26198:1;26195:81;26192:107;;;26279:18;;:::i;:::-;26192:107;26323:1;26320;26316:9;26309:16;;26026:305;;;;:::o;26337:191::-;26377:4;26397:20;26415:1;26397:20;:::i;:::-;26392:25;;26431:20;26449:1;26431:20;:::i;:::-;26426:25;;26470:1;26467;26464:8;26461:34;;;26475:18;;:::i;:::-;26461:34;26520:1;26517;26513:9;26505:17;;26337:191;;;;:::o;26534:96::-;26571:7;26600:24;26618:5;26600:24;:::i;:::-;26589:35;;26534:96;;;:::o;26636:90::-;26670:7;26713:5;26706:13;26699:21;26688:32;;26636:90;;;:::o;26732:127::-;26777:7;26806:5;26795:16;;26812:41;26847:5;26812:41;:::i;:::-;26732:127;;;:::o;26865:126::-;26902:7;26942:42;26935:5;26931:54;26920:65;;26865:126;;;:::o;26997:77::-;27034:7;27063:5;27052:16;;26997:77;;;:::o;27080:127::-;27136:9;27169:32;27195:5;27169:32;:::i;:::-;27156:45;;27080:127;;;:::o;27213:233::-;27252:3;27275:24;27293:5;27275:24;:::i;:::-;27266:33;;27321:66;27314:5;27311:77;27308:103;;;27391:18;;:::i;:::-;27308:103;27438:1;27431:5;27427:13;27420:20;;27213:233;;;:::o;27452:180::-;27500:77;27497:1;27490:88;27597:4;27594:1;27587:15;27621:4;27618:1;27611:15;27638:180;27686:77;27683:1;27676:88;27783:4;27780:1;27773:15;27807:4;27804:1;27797:15;27824:180;27872:77;27869:1;27862:88;27969:4;27966:1;27959:15;27993:4;27990:1;27983:15;28010:180;28058:77;28055:1;28048:88;28155:4;28152:1;28145:15;28179:4;28176:1;28169:15;28319:117;28428:1;28425;28418:12;28442:166;28582:18;28578:1;28570:6;28566:14;28559:42;28442:166;:::o;28614:225::-;28754:34;28750:1;28742:6;28738:14;28731:58;28823:8;28818:2;28810:6;28806:15;28799:33;28614:225;:::o;28845:174::-;28985:26;28981:1;28973:6;28969:14;28962:50;28845:174;:::o;29025:168::-;29165:20;29161:1;29153:6;29149:14;29142:44;29025:168;:::o;29199:159::-;29339:11;29335:1;29327:6;29323:14;29316:35;29199:159;:::o;29364:172::-;29504:24;29500:1;29492:6;29488:14;29481:48;29364:172;:::o;29542:182::-;29682:34;29678:1;29670:6;29666:14;29659:58;29542:182;:::o;29730:113::-;29811:1;29804:5;29801:12;29791:46;;29817:18;;:::i;:::-;29791:46;29730:113;:::o;29849:122::-;29922:24;29940:5;29922:24;:::i;:::-;29915:5;29912:35;29902:63;;29961:1;29958;29951:12;29902:63;29849:122;:::o;29977:116::-;30047:21;30062:5;30047:21;:::i;:::-;30040:5;30037:32;30027:60;;30083:1;30080;30073:12;30027:60;29977:116;:::o;30099:107::-;30180:1;30173:5;30170:12;30160:40;;30196:1;30193;30186:12;30160:40;30099:107;:::o;30212:122::-;30285:24;30303:5;30285:24;:::i;:::-;30278:5;30275:35;30265:63;;30324:1;30321;30314:12;30265:63;30212:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"3488600","executionCost":"infinite","totalCost":"infinite"},"external":{"addToken(address,uint256)":"infinite","cancelOrder(uint8,uint256,address,address)":"infinite","createLimitBuyOrder(address,uint256,address,uint256,uint256,bool)":"infinite","createLimitSellOrder(address,uint256,address,uint256,uint256,bool)":"infinite","ethToken()":"2581","getFilledOrder(address,uint8,uint256)":"infinite","getFilledOrderLength(address,uint8)":"3105","getOrder(address,address,uint256,uint8)":"infinite","getOrderFromArray(address,address,uint256,uint256)":"infinite","getOrderLength(uint8,address,address)":"infinite","getTokenInfo(address)":"infinite","isVerifiedToken(address)":"infinite","orderExists(uint256,uint8,address,address)":"infinite","owner()":"2611","renounceOwnership()":"30443","s_filledOrders(address,uint256,uint256)":"infinite","s_orderBook(address,address,uint256,uint256)":"infinite","s_orderId()":"2452","setPriceCheckerAddress(address)":"27097","setTradingFees(address)":"27030","setWalletAddress(address)":"27053","tokenList(uint256)":"infinite","transferOwnership(address)":"30857"},"internal":{"fillBuyOrders(struct Exchange._Order memory,uint256,uint256,bool,uint256)":"infinite","fillOrder(enum Exchange.Side,uint256,address,address,struct Exchange._fillOrderValues memory)":"infinite","fillSellOrders(struct Exchange._Order memory,uint256,uint256,bool,uint256)":"infinite","matchOrders(address,address,uint256,enum Exchange.Side)":"infinite"}},"methodIdentifiers":{"addToken(address,uint256)":"af81c5b9","cancelOrder(uint8,uint256,address,address)":"f90ef4f2","createLimitBuyOrder(address,uint256,address,uint256,uint256,bool)":"62c09cfa","createLimitSellOrder(address,uint256,address,uint256,uint256,bool)":"6f4e410b","ethToken()":"7bf1a627","getFilledOrder(address,uint8,uint256)":"8f101b0e","getFilledOrderLength(address,uint8)":"c3364be4","getOrder(address,address,uint256,uint8)":"ea42f349","getOrderFromArray(address,address,uint256,uint256)":"92e43d3a","getOrderLength(uint8,address,address)":"14eca9dc","getTokenInfo(address)":"1f69565f","isVerifiedToken(address)":"1027b219","orderExists(uint256,uint8,address,address)":"429d24b2","owner()":"8da5cb5b","renounceOwnership()":"715018a6","s_filledOrders(address,uint256,uint256)":"bd8098ec","s_orderBook(address,address,uint256,uint256)":"e4c3c7cd","s_orderId()":"9c07ce26","setPriceCheckerAddress(address)":"b136e39a","setTradingFees(address)":"dafbfe6a","setWalletAddress(address)":"ac1a386a","tokenList(uint256)":"9ead7222","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_fees\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceChecker\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"name\":\"Cancel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"name\":\"Order\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct Exchange._Order\",\"name\":\"remainingOrder\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountBought\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fillBuyRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"feesWaived\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feesPaid\",\"type\":\"uint256\"}],\"name\":\"fillBuyOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct Exchange._Order\",\"name\":\"remainingOrder\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountSold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fillSellRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"feesWaived\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feesPaid\",\"type\":\"uint256\"}],\"name\":\"fillSellOrder\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"}],\"name\":\"cancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_waiveFees\",\"type\":\"bool\"}],\"name\":\"createLimitBuyOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_waiveFees\",\"type\":\"bool\"}],\"name\":\"createLimitSellOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFilledOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountFilled\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fillRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"feesWaived\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"feesPaid\",\"type\":\"uint256\"}],\"internalType\":\"struct Exchange._filledOrder\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"}],\"name\":\"getFilledOrderLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"}],\"name\":\"getOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"internalType\":\"struct Exchange._Order\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"side\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getOrderFromArray\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"internalType\":\"struct Exchange._Order\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"}],\"name\":\"getOrderLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTokenInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isVerifiedToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"}],\"name\":\"orderExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_filledOrders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountFilled\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fillRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"feesWaived\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"feesPaid\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_orderBook\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_orderId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_PriceCheckeraddress\",\"type\":\"address\"}],\"name\":\"setPriceCheckerAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tradingFees\",\"type\":\"address\"}],\"name\":\"setTradingFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Walletaddress\",\"type\":\"address\"}],\"name\":\"setWalletAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Cancel(uint256,uint8,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)\":{\"notice\":\"Event when an order is cancelled\"},\"Order(uint256,uint8,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)\":{\"notice\":\"Event when an order is placed on an exchange\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Exchange.sol\":\"Exchange\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/Exchange.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./PriceChecker.sol\\\";\\r\\nimport \\\"./TradingFees.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Exchange is Ownable {\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n    PriceChecker priceChecker;\\r\\n    TradingFees tradingFees;\\r\\n    Wallet wallet;\\r\\n\\r\\n    uint256 decimals = 10 ** 18;\\r\\n    address public ethToken = address(0);\\r\\n\\r\\n    //Token Address List available in DEX\\r\\n    _tokenInfo[] public tokenList;\\r\\n\\r\\n    //s_orderBook mappping: tokenA Address -> tokenB Address -> Side -> Order Array\\r\\n    mapping(address => mapping( address => mapping(uint256 => _Order[]))) public s_orderBook;\\r\\n\\r\\n    mapping(address => mapping(uint256 => _filledOrder[]))\\r\\n        public s_filledOrders;\\r\\n\\r\\n    uint256 public s_orderId = 0;\\r\\n    bool private s_isManual = true;\\r\\n\\r\\n    struct _tokenInfo {\\r\\n        address add;\\r\\n        uint256 decimals;\\r\\n    }\\r\\n\\r\\n    struct _fillOrderValues {\\r\\n        uint256 rate;\\r\\n        uint256 amount;\\r\\n    }\\r\\n\\r\\n    //Structs representing an order that has unique id, user and amounts to give and get between two tokens to exchange\\r\\n    struct _Order {\\r\\n        uint256 id;\\r\\n        Side side;\\r\\n        address user;\\r\\n        address tokenA;\\r\\n        uint256 amountA;\\r\\n        address tokenB;\\r\\n        uint256 amountB;\\r\\n        uint256 rate; // TokenB/TokenA = price in terms of TokenB\\r\\n        uint256 originalAmountA;\\r\\n        uint256 originalAmountB;\\r\\n        bool waiveFees;\\r\\n    }\\r\\n\\r\\n    //For any order that is filled even if it is partially filled or fully filled\\r\\n    struct _filledOrder {\\r\\n        uint256 id;\\r\\n        Side side;\\r\\n        address user;\\r\\n        address tokenA;\\r\\n        address tokenB;\\r\\n        uint256 amountFilled;\\r\\n        uint256 fillRate;\\r\\n        uint256 originalRate;\\r\\n        uint256 originalAmountA;\\r\\n        uint256 originalAmountB;\\r\\n        bool feesWaived;\\r\\n        uint256 feesPaid; //in terms of ETH\\r\\n    }\\r\\n\\r\\n    enum Side {\\r\\n        BUY,\\r\\n        SELL\\r\\n    }\\r\\n\\r\\n    //add events\\r\\n    /// @notice Event when an order is placed on an exchange\\r\\n    event Order(\\r\\n        uint256 id,\\r\\n        Side side,\\r\\n        address user,\\r\\n        address tokenA,\\r\\n        uint256 amountA,\\r\\n        address tokenB,\\r\\n        uint256 amountB,\\r\\n        uint256 rate,\\r\\n        uint256 originalAmountA,\\r\\n        uint256 originalAmountB,\\r\\n        bool waiveFees\\r\\n    );\\r\\n\\r\\n    /// @notice Event when an order is cancelled\\r\\n    event Cancel(\\r\\n        uint256 id,\\r\\n        Side side,\\r\\n        address user,\\r\\n        address tokenA,\\r\\n        uint256 amountA,\\r\\n        address tokenB,\\r\\n        uint256 amountB,\\r\\n        uint256 rate,\\r\\n        uint256 originalAmountA,\\r\\n        uint256 originalAmountB,\\r\\n        bool waiveFees\\r\\n    );\\r\\n\\r\\n    event fillBuyOrder(\\r\\n        _Order remainingOrder,\\r\\n        uint256 amountBought,\\r\\n        uint256 fillBuyRate,\\r\\n        bool feesWaived,\\r\\n        uint256 feesPaid\\r\\n    );\\r\\n\\r\\n    event fillSellOrder(\\r\\n        _Order remainingOrder,\\r\\n        uint256 amountSold,\\r\\n        uint256 fillSellRate,\\r\\n        bool feesWaived,\\r\\n        uint256 feesPaid\\r\\n    );\\r\\n\\r\\n    constructor(address _wallet, address _fees, address _priceChecker) {\\r\\n        wallet = Wallet(_wallet);\\r\\n        tradingFees = TradingFees(_fees);\\r\\n        priceChecker = PriceChecker(_priceChecker);\\r\\n    }\\r\\n\\r\\n    function createLimitBuyOrder(\\r\\n        // TokenA/TokenB\\r\\n        address _tokenA,\\r\\n        uint256 _amountA,\\r\\n        address _tokenB,\\r\\n        uint256 _amountB,\\r\\n        uint256 _rate,\\r\\n        bool _waiveFees\\r\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\r\\n        //Amount user has deposited in the DEX must be >= value he wants to buy\\r\\n        require(\\r\\n            wallet.balanceOf(_tokenB, msg.sender).sub(\\r\\n                wallet.getlockedFunds(msg.sender, _tokenB)\\r\\n            ) >= _amountB,\\r\\n            \\\"Insufficient Funds\\\"\\r\\n        );\\r\\n\\r\\n        wallet.updateLockedFunds(msg.sender, _tokenB, _amountB, true);\\r\\n\\r\\n        s_orderBook[_tokenA][_tokenB][uint256(Side.BUY)].push(\\r\\n            _Order(\\r\\n                s_orderId,\\r\\n                Side.BUY,\\r\\n                msg.sender,\\r\\n                _tokenA,\\r\\n                _amountA,\\r\\n                _tokenB,\\r\\n                _amountB,\\r\\n                _rate,\\r\\n                _amountA,\\r\\n                _amountB,\\r\\n                _waiveFees\\r\\n            )\\r\\n        );\\r\\n\\r\\n        emit Order(\\r\\n            s_orderId,\\r\\n            Side.BUY,\\r\\n            msg.sender,\\r\\n            _tokenA,\\r\\n            _amountA,\\r\\n            _tokenB,\\r\\n            _amountB,\\r\\n            _rate,\\r\\n            _amountA,\\r\\n            _amountB,\\r\\n            _waiveFees\\r\\n        );\\r\\n\\r\\n        s_orderId = s_orderId.add(1);\\r\\n    }\\r\\n\\r\\n    function createLimitSellOrder(\\r\\n        address _tokenA,\\r\\n        uint256 _amountA,\\r\\n        address _tokenB,\\r\\n        uint256 _amountB,\\r\\n        uint256 _rate,\\r\\n        bool _waiveFees\\r\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\r\\n        //Amount of tokens user deposit in DEX must be >= the amount of tokens they want to sell\\r\\n        require(\\r\\n            wallet.balanceOf(_tokenA, msg.sender).sub(\\r\\n                wallet.getlockedFunds(msg.sender, _tokenA)\\r\\n            ) >= _amountA,\\r\\n            \\\"Insufficient Funds\\\"\\r\\n        );\\r\\n\\r\\n        //Lock the funds (tokens) in the wallet\\r\\n        wallet.updateLockedFunds(msg.sender, _tokenA, _amountA, true);\\r\\n\\r\\n        s_orderBook[_tokenA][_tokenB][uint256(Side.SELL)].push(\\r\\n            _Order(\\r\\n                s_orderId,\\r\\n                Side.SELL,\\r\\n                msg.sender,\\r\\n                _tokenA,\\r\\n                _amountA,\\r\\n                _tokenB,\\r\\n                _amountB,\\r\\n                _rate,\\r\\n                _amountA,\\r\\n                _amountB,\\r\\n                _waiveFees\\r\\n            )\\r\\n        );\\r\\n\\r\\n        emit Order(\\r\\n            s_orderId,\\r\\n            Side.SELL,\\r\\n            msg.sender,\\r\\n            _tokenA,\\r\\n            _amountA,\\r\\n            _tokenB,\\r\\n            _amountB,\\r\\n            _rate,\\r\\n            _amountA,\\r\\n            _amountB,\\r\\n            _waiveFees\\r\\n        );\\r\\n\\r\\n        s_orderId = s_orderId.add(1);\\r\\n    }\\r\\n\\r\\n    function cancelOrder(\\r\\n        Side side,\\r\\n        uint256 _id,\\r\\n        address _tokenA,\\r\\n        address _tokenB\\r\\n    ) public validOrder(_id, side, _tokenA, _tokenB) validToken(_tokenA) validToken(_tokenB) {\\r\\n        uint256 _side = uint256(side);\\r\\n        _Order[] storage _order = s_orderBook[_tokenA][_tokenB][_side];\\r\\n        uint256 size = _order.length;\\r\\n        _Order memory order;\\r\\n\\r\\n        uint256 index;\\r\\n        for (uint256 i = 0; i < size; i++) {\\r\\n            if (_order[i].id == _id) {\\r\\n                index = i;\\r\\n                order = _order[i];\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        //Manual cancellation of orders\\r\\n        if (s_isManual) {\\r\\n            require(msg.sender == order.user, \\\"Not Owner\\\");\\r\\n\\r\\n            //Unlock funds\\r\\n            if (side == Side.BUY) {\\r\\n                wallet.updateLockedFunds(\\r\\n                    msg.sender,\\r\\n                    order.tokenB,\\r\\n                    order.amountB,\\r\\n                    false\\r\\n                );\\r\\n            } else if (side == Side.SELL) {\\r\\n                wallet.updateLockedFunds(\\r\\n                    msg.sender,\\r\\n                    order.tokenA,\\r\\n                    order.amountA,\\r\\n                    false\\r\\n                );\\r\\n            }\\r\\n        }\\r\\n\\r\\n        for (uint256 j = index; j < size - 1; j++) {\\r\\n            _order[j] = _order[j.add(1)];\\r\\n        }\\r\\n        delete _order[size.sub(1)];\\r\\n        _order.pop();\\r\\n\\r\\n        s_orderBook[_tokenA][_tokenB][_side] = _order;\\r\\n\\r\\n        emit Cancel(\\r\\n            _id,\\r\\n            order.side,\\r\\n            order.user,\\r\\n            order.tokenA,\\r\\n            order.amountA,\\r\\n            order.tokenB,\\r\\n            order.amountB,\\r\\n            order.rate,\\r\\n            order.originalAmountA,\\r\\n            order.originalAmountB,\\r\\n            order.waiveFees\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function fillOrder(\\r\\n        Side side,\\r\\n        uint256 _id,\\r\\n        address _tokenA,\\r\\n        address _tokenB,\\r\\n        _fillOrderValues memory a\\r\\n    ) internal validOrder(_id, side, _tokenA, _tokenB) validToken(_tokenA) validToken(_tokenB) {\\r\\n        uint256 _side = uint256(side);\\r\\n        (_Order memory order, uint256 index) = getOrderFromArray(\\r\\n            _tokenA,\\r\\n            _tokenB,\\r\\n            _side,\\r\\n            _id\\r\\n        );\\r\\n\\r\\n        require(order.amountA >= a.amount, \\\"Invalid Order Amount to fill\\\");\\r\\n\\r\\n        order.amountA = order.amountA.sub(a.amount);\\r\\n        order.amountB = order.amountB.sub(\\r\\n            order.rate.mul(a.amount).div(decimals)\\r\\n        );\\r\\n        s_orderBook[_tokenA][_tokenB][_side][index].amountA = order.amountA;\\r\\n        s_orderBook[_tokenA][_tokenB][_side][index].amountB = order.amountB;\\r\\n\\r\\n        uint256 fees = tradingFees.calculateFees(\\r\\n            a.amount,\\r\\n            a.rate,\\r\\n            order.tokenB\\r\\n        ); \\r\\n        bool feesWaived = order.waiveFees &&\\r\\n            tradingFees.checkSufficientaDAI(fees, order.user);\\r\\n\\r\\n        if (side == Side.BUY) {\\r\\n            fillBuyOrders(order, a.amount, a.rate, feesWaived, fees);\\r\\n            emit fillBuyOrder(order, a.amount, a.rate, feesWaived, fees);\\r\\n        } else if (side == Side.SELL) {\\r\\n            fillSellOrders(order, a.amount, a.rate, feesWaived, fees);\\r\\n            emit fillSellOrder(order, a.amount, a.rate, feesWaived, fees);\\r\\n        }\\r\\n\\r\\n        if (order.amountA == 0) {\\r\\n            s_isManual = false;\\r\\n            cancelOrder(side, order.id, order.tokenA, order.tokenB); //remove filled orders \\r\\n            s_isManual = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function fillBuyOrders(\\r\\n        _Order memory order,\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        bool feesWaived,\\r\\n        uint256 fees\\r\\n    ) internal {\\r\\n        if (feesWaived) {\\r\\n            //Deduct aDAI\\r\\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\\r\\n            wallet.updateBalance(\\r\\n                tradingFees.aDAI(),\\r\\n                order.user,\\r\\n                aDAIToDeduct,\\r\\n                false\\r\\n            );\\r\\n            //Credit Bought tokens\\r\\n            wallet.updateBalance(order.tokenA, order.user, _amount, true);\\r\\n        } else {\\r\\n            uint256 amountTokenToDeduct = tradingFees.amountTokensToDeduct(\\r\\n                order.tokenA,\\r\\n                fees\\r\\n            );\\r\\n            //Credit Bought tokens after minusing fees\\r\\n            wallet.updateBalance(\\r\\n                order.tokenA,\\r\\n                order.user,\\r\\n                _amount.sub(amountTokenToDeduct),\\r\\n                true\\r\\n            );\\r\\n        }\\r\\n\\r\\n        //Original Locked Funds unlocked\\r\\n        wallet.updateLockedFunds(\\r\\n            order.user,\\r\\n            order.tokenB,\\r\\n            (order.rate.mul(_amount)).div(decimals),\\r\\n            false\\r\\n        );\\r\\n\\r\\n        //buyer update\\r\\n        //Buyer balance deducted from what he paid\\r\\n        wallet.updateBalance(\\r\\n            order.tokenB,\\r\\n            order.user,\\r\\n            (_rate.mul(_amount)).div(decimals),\\r\\n            false\\r\\n        );\\r\\n        \\r\\n        s_filledOrders[order.user][0].push(\\r\\n            _filledOrder(\\r\\n                order.id,\\r\\n                order.side,\\r\\n                order.user,\\r\\n                order.tokenA,\\r\\n                order.tokenB,\\r\\n                _amount,\\r\\n                _rate,\\r\\n                order.rate,\\r\\n                order.originalAmountA,\\r\\n                order.originalAmountB,\\r\\n                feesWaived,\\r\\n                fees\\r\\n            )\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function fillSellOrders(\\r\\n        _Order memory order,\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        bool feesWaived,\\r\\n        uint256 fees\\r\\n    ) internal {\\r\\n        if (feesWaived) {\\r\\n            //Deduct aDAI\\r\\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\\r\\n            wallet.updateBalance(tradingFees.aDAI(), order.user, aDAIToDeduct, false);\\r\\n            //Credit Earned tokens\\r\\n            wallet.updateBalance(\\r\\n                order.tokenB,\\r\\n                order.user,\\r\\n                (_rate.mul(_amount)).div(decimals),\\r\\n                true\\r\\n            );\\r\\n        } else {\\r\\n            uint256 amountTokensToDeduct = tradingFees.amountTokensToDeduct(\\r\\n                order.tokenB,\\r\\n                fees\\r\\n            );\\r\\n            //Credit Earned tokens after minusing fees\\r\\n            wallet.updateBalance(\\r\\n                order.tokenB,\\r\\n                order.user,\\r\\n                (_rate.mul(_amount)).div(decimals).sub(amountTokensToDeduct),\\r\\n                true\\r\\n            );\\r\\n        }\\r\\n\\r\\n        wallet.updateLockedFunds(order.user, order.tokenA, _amount, false);\\r\\n        //seller update\\r\\n        wallet.updateBalance(order.tokenA, order.user, _amount, false);\\r\\n\\r\\n         s_filledOrders[order.user][1].push(\\r\\n            _filledOrder(\\r\\n                order.id,\\r\\n                order.side,\\r\\n                order.user,\\r\\n                order.tokenA,\\r\\n                order.tokenB,\\r\\n                _amount,\\r\\n                _rate,\\r\\n                order.rate,\\r\\n                order.originalAmountA,\\r\\n                order.originalAmountB,\\r\\n                feesWaived,\\r\\n                fees\\r\\n            )\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function matchOrders(\\r\\n        address _tokenA,\\r\\n        address _tokenB,\\r\\n        uint256 _id,\\r\\n        Side side\\r\\n    ) internal validOrder(_id, side, _tokenA, _tokenB) validToken(_tokenA) validToken(_tokenB){\\r\\n        uint256 saleTokenAmt;\\r\\n\\r\\n        if (side == Side.BUY) {\\r\\n            //Retrieve sell order to match\\r\\n            _Order[] memory _sellOrder = s_orderBook[_tokenA][_tokenB][1];\\r\\n            for (uint256 i = 0; i < _sellOrder.length; i++) {\\r\\n                //Retrieve buy order to be filled\\r\\n                (_Order memory buyOrderToFill, ) = getOrderFromArray(\\r\\n                    _tokenA,\\r\\n                    _tokenB,\\r\\n                    uint8(side),\\r\\n                    _id\\r\\n                );\\r\\n                //sell order hit buyer's limit price & tokenB matches\\r\\n                if (\\r\\n                    _sellOrder[i].rate <= buyOrderToFill.rate &&\\r\\n                    buyOrderToFill.user != _sellOrder[i].user\\r\\n                    \\r\\n                ) {\\r\\n                    _Order memory sellOrder = _sellOrder[i];\\r\\n                    //if buyer's amount to buy > seller's amount to sell\\r\\n                    if (buyOrderToFill.amountA > sellOrder.amountA) {\\r\\n                        saleTokenAmt = sellOrder.amountA;\\r\\n                    }\\r\\n                    //if seller's amount to sell >= buyer's amount to buy\\r\\n                    else if (buyOrderToFill.amountA <= sellOrder.amountA) {\\r\\n                        saleTokenAmt = buyOrderToFill.amountA;\\r\\n                    }\\r\\n\\r\\n                    //Verify current balance\\r\\n                    require(\\r\\n                        wallet.balanceOf(\\r\\n                            buyOrderToFill.tokenB,\\r\\n                            buyOrderToFill.user\\r\\n                        ) >= (saleTokenAmt.mul(sellOrder.rate)).div(decimals),\\r\\n                        \\\"Insufficient Buyer Token Balance\\\"\\r\\n                    );\\r\\n                    require(\\r\\n                        wallet.balanceOf(_tokenA, sellOrder.user) >=\\r\\n                            saleTokenAmt,\\r\\n                        \\\"Insufficient Seller Token Balance\\\"\\r\\n                    );\\r\\n\\r\\n                    //update orders\\r\\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\\r\\n                        sellOrder.rate,\\r\\n                        saleTokenAmt\\r\\n                    );\\r\\n                    fillOrder(Side.BUY, _id, _tokenA, _tokenB, fillOrderValues);\\r\\n                    fillOrder(Side.SELL, sellOrder.id, _tokenA, _tokenB, fillOrderValues);\\r\\n                }\\r\\n\\r\\n                bool orderExist = orderExists(_id, side, _tokenA, _tokenB);\\r\\n                if (!orderExist) break;\\r\\n            }\\r\\n        } else if (side == Side.SELL) {\\r\\n            //Retrieve buy order to match\\r\\n            _Order[] memory _buyOrder = s_orderBook[_tokenA][_tokenB][0];\\r\\n            for (uint256 i = 0; i < _buyOrder.length; i++) {\\r\\n                //Retrieve sell order to be filled\\r\\n                (_Order memory sellOrderToFill, ) = getOrderFromArray(\\r\\n                    _tokenA,\\r\\n                    _tokenB,\\r\\n                    1,\\r\\n                    _id\\r\\n                );\\r\\n                //sell order hit buyer's limit price\\r\\n                if (\\r\\n                    _buyOrder[i].rate >= sellOrderToFill.rate &&\\r\\n                    _buyOrder[i].user != sellOrderToFill.user\\r\\n                ) {\\r\\n                    _Order memory order = _buyOrder[i];\\r\\n\\r\\n                    //if seller's amount to sell > buyer's amount to buy\\r\\n                    if (sellOrderToFill.amountA > order.amountA) {\\r\\n                        saleTokenAmt = order.amountA;\\r\\n                    }\\r\\n                    //if buyer's amount to buy > seller's amount to sell\\r\\n                    else if (sellOrderToFill.amountA <= order.amountA) {\\r\\n                        saleTokenAmt = sellOrderToFill.amountA;\\r\\n                    }\\r\\n                    //Verify current balance\\r\\n                    require(\\r\\n                        wallet.balanceOf(_tokenA, sellOrderToFill.user) >=\\r\\n                            saleTokenAmt,\\r\\n                        \\\"Insufficient Seller Token Balance\\\"\\r\\n                    );\\r\\n                    require(\\r\\n                        wallet.balanceOf(order.tokenB, order.user) >=\\r\\n                            (saleTokenAmt.mul(order.rate)).div(decimals),\\r\\n                        \\\"Insufficient Buyer Token Balance\\\"\\r\\n                    );\\r\\n\\r\\n                    //update orders\\r\\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\\r\\n                        order.rate,\\r\\n                        saleTokenAmt\\r\\n                    );\\r\\n                    fillOrder(Side.SELL, _id, _tokenA, _tokenB, fillOrderValues);\\r\\n                    fillOrder(Side.BUY, order.id, _tokenA, _tokenB, fillOrderValues);\\r\\n                }\\r\\n                bool orderExist = orderExists(_id, side, _tokenA, _tokenB);\\r\\n                if (!orderExist) break;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getOrderLength(\\r\\n        Side side,\\r\\n        address _tokenA,\\r\\n        address _tokenB\\r\\n    ) public view returns (uint256) {\\r\\n        return s_orderBook[_tokenA][_tokenB][uint256(side)].length;\\r\\n    }\\r\\n\\r\\n    function getOrder(\\r\\n        address _tokenA,\\r\\n        address _tokenB,\\r\\n        uint256 index,\\r\\n        Side side\\r\\n    )\\r\\n        public\\r\\n        view\\r\\n        returns (\\r\\n            _Order memory\\r\\n        )\\r\\n    {\\r\\n        _Order memory order = s_orderBook[_tokenA][_tokenB][uint256(side)][index];\\r\\n        return (\\r\\n            order\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getFilledOrderLength(\\r\\n        address _user,\\r\\n        Side side\\r\\n    ) public view returns (uint256) {\\r\\n        return s_filledOrders[_user][uint256(side)].length;\\r\\n    }\\r\\n\\r\\n    function getFilledOrder(\\r\\n        address _user,\\r\\n        Side side,\\r\\n        uint256 index\\r\\n    )\\r\\n        public\\r\\n        view\\r\\n        returns (\\r\\n            _filledOrder memory\\r\\n        )\\r\\n    {\\r\\n        _filledOrder memory filledOrder = s_filledOrders[_user][uint256(side)][\\r\\n            index\\r\\n        ];\\r\\n        return (\\r\\n            filledOrder\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getOrderFromArray(\\r\\n        address _tokenA,\\r\\n        address _tokenB,\\r\\n        uint256 side,\\r\\n        uint256 _id\\r\\n    ) public view returns (_Order memory, uint256) {\\r\\n        uint256 i = 0;\\r\\n        _Order[] memory _order = s_orderBook[_tokenA][_tokenB][side];\\r\\n        _Order memory order;\\r\\n        for (i; i < _order.length; i++) {\\r\\n            if (_order[i].id == _id) {\\r\\n                order = _order[i];\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        return (order, i);\\r\\n    }\\r\\n\\r\\n    function orderExists(\\r\\n        uint256 _id,\\r\\n        Side side,\\r\\n        address _tokenA,\\r\\n        address _tokenB\\r\\n    ) public view returns (bool) {\\r\\n        _Order[] memory orders = s_orderBook[_tokenA][_tokenB][uint256(side)];\\r\\n\\r\\n        for (uint256 i = 0; i < orders.length; i++) {\\r\\n            if (orders[i].id == _id) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function addToken(address _token, uint256 _decimals) public onlyOwner {\\r\\n        require(!isVerifiedToken(_token), \\\"Token already verified\\\");\\r\\n        tokenList.push(_tokenInfo(_token, _decimals));\\r\\n    }\\r\\n\\r\\n    function isVerifiedToken(address _token) public view returns (bool) {\\r\\n        //uint256 size = tokenList.length;\\r\\n\\r\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\r\\n            if (tokenList[i].add == _token) return true;\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function getTokenInfo(address _token) public view returns (uint256) {\\r\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\r\\n            if (tokenList[i].add == _token) {\\r\\n                return tokenList[i].decimals;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\\r\\n        wallet = Wallet(_Walletaddress);\\r\\n    }\\r\\n\\r\\n    function setPriceCheckerAddress(\\r\\n        address _PriceCheckeraddress\\r\\n    ) public onlyOwner {\\r\\n        priceChecker = PriceChecker(_PriceCheckeraddress);\\r\\n    }\\r\\n\\r\\n    function setTradingFees(address _tradingFees) public onlyOwner {\\r\\n        tradingFees = TradingFees(_tradingFees);\\r\\n    }\\r\\n\\r\\n    modifier validOrder(\\r\\n        uint256 _id,\\r\\n        Side side,\\r\\n        address _tokenA,\\r\\n        address _tokenB\\r\\n    ) {\\r\\n        require(orderExists(_id, side, _tokenA, _tokenB), \\\"Invalid Order ID\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier validToken(address _token) {\\r\\n        require(isVerifiedToken(_token), \\\"Token unavailable in DEX\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xe64f0bda5d0f32d897ccc59e310e3bd08369c8954ea7a1aeec4239aded44dbb0\",\"license\":\"MIT\"},\"contracts/PriceChecker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract PriceChecker is Ownable {\\r\\n    _priceFeed[] public priceFeeds;\\r\\n\\r\\n    struct _priceFeed {\\r\\n        string name;\\r\\n        address token;\\r\\n        AggregatorV3Interface priceFeed;\\r\\n    }\\r\\n\\r\\n    //only using PriceFeeds pegged to USD\\r\\n    function addPriceFeed(\\r\\n        string memory _name,\\r\\n        address _token,\\r\\n        address _address\\r\\n    ) external onlyOwner {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n        bool isAdded = false;\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (\\r\\n                keccak256(abi.encodePacked(_name)) ==\\r\\n                keccak256(abi.encodePacked(pricefeed[i].name))\\r\\n            ) {\\r\\n                isAdded = true;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        require(!isAdded, \\\"Price Feed already added\\\");\\r\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(_address);\\r\\n        priceFeeds.push(_priceFeed(_name, _token, priceFeed));\\r\\n    }\\r\\n\\r\\n    function getPriceFeed(\\r\\n        address _token\\r\\n    ) internal view returns (AggregatorV3Interface priceFeed) {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (_token == pricefeed[i].token) {\\r\\n                return pricefeed[i].priceFeed;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getPrice(address _address) external view returns (uint256) {\\r\\n        AggregatorV3Interface priceFeed = getPriceFeed(_address);\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(answer);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf1e1d97a9c555133c6a90fdc333e79e819ffaffd68d9c9579684b49413dda07c\",\"license\":\"MIT\"},\"contracts/TradingFees.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./PriceChecker.sol\\\";\\r\\nimport \\\"./Wallet.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract TradingFees is Ownable {\\r\\n    //When trading, have an option toggle to waive trading fees or not using deposited aETH\\r\\n    //Users have to first deposit aETH tokens into the Exchange contract to waive, aETH tokens are not for trading\\r\\n    //When a trade order goes through, trading fees of the trade fulfilled  = trade amount x trade price x 0.01,\\r\\n    //contract checks how much aETH is deposited and what is the value of aETH, if sufficient to waive fees fully, deduct balance in deposit\\r\\n    //and waive trading fees\\r\\n\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n\\r\\n    uint256 decimals = 10 ** 18;\\r\\n    address public daiToken =\\r\\n        address(0xBa8DCeD3512925e52FE67b1b5329187589072A55); //based on Aave contract\\r\\n    address public aDAI = address(0xADD98B0342e4094Ec32f3b67Ccfd3242C876ff7a); //based on Aave contract\\r\\n    PriceChecker priceFeed;\\r\\n    Wallet wallet;\\r\\n\\r\\n    constructor(address _priceCheckerAddress) {\\r\\n        priceFeed = PriceChecker(_priceCheckerAddress);\\r\\n    }\\r\\n\\r\\n    function calculateFees(\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        address _refToken\\r\\n    ) public view returns (uint256) {\\r\\n        //Calculated based on TokenB price, require actual price in 18dp\\r\\n        //trading fees is 0.1% of trade = 0.001\\r\\n        //moving up 18dp is 0.001 x 10**18 = 10**14\\r\\n        //have to fetch tokenPrice from PriceFeed\\r\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8dp originally\\r\\n        uint256 value = (\\r\\n            ((_amount.mul(_rate)).div(decimals)).mul(priceOfToken.mul(10 ** 10))\\r\\n        ).div(decimals);\\r\\n        uint256 fees = value.div(10 ** 4);\\r\\n\\r\\n        return fees; //based on USD value\\r\\n    }\\r\\n\\r\\n    //Amount of DAI to deduct from fees\\r\\n    function amountaDAIToDeduct(uint256 _fees) public view returns (uint256) {\\r\\n        uint256 aDAI_Price = priceFeed.getPrice(daiToken); // in 8 decimals initially\\r\\n        uint256 amt = _fees.mul(decimals).div(aDAI_Price.mul(10 ** 10));\\r\\n        return uint256(amt);\\r\\n    }\\r\\n\\r\\n    //Amount of Tokens to deduct from fees\\r\\n    function amountTokensToDeduct(\\r\\n        address _refToken,\\r\\n        uint256 _fees\\r\\n    ) public view returns (uint256) {\\r\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8decimals\\r\\n        uint256 amt = _fees.mul(decimals).div(priceOfToken.mul(10 ** 10));\\r\\n        return uint256(amt);\\r\\n    }\\r\\n\\r\\n    function checkSufficientaDAI(\\r\\n        uint256 _fees,\\r\\n        address _user\\r\\n    ) public view returns (bool) {\\r\\n        uint256 amtDAI = amountaDAIToDeduct(_fees);\\r\\n        uint256 balance = wallet.s_tokens(aDAI, _user);\\r\\n\\r\\n        return balance >= amtDAI;\\r\\n    }\\r\\n\\r\\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\\r\\n        wallet = Wallet(_Walletaddress);\\r\\n    }\\r\\n\\r\\n    function setPriceCheckerAddress(\\r\\n        address _PriceCheckeraddress\\r\\n    ) public onlyOwner {\\r\\n        priceFeed = PriceChecker(_PriceCheckeraddress);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x570e96da947a0e3017464615810b58bca9033d9fd045ff00077aa59313ee1d66\",\"license\":\"MIT\"},\"contracts/Wallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./interface/IERC20.sol\\\";\\r\\nimport \\\"./Exchange.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Wallet is Ownable {\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n\\r\\n    address public immutable Owner;\\r\\n\\r\\n    //For prevention of reentrancy\\r\\n    bool private locked;\\r\\n\\r\\n    address public ethToken = address(0);\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) public s_tokens; //tokenAdress -> msg.sender -> tokenAmt\\r\\n    mapping(address => mapping(address => uint256)) public lockedFunds;\\r\\n\\r\\n    Exchange exchange;\\r\\n    IERC20 token;\\r\\n\\r\\n    event Deposit(address token, address user, uint256 amount, uint256 balance);\\r\\n\\r\\n    /// @notice Event when amount withdrawn exchange\\r\\n    event Withdraw(\\r\\n        address token,\\r\\n        address user,\\r\\n        uint256 amount,\\r\\n        uint256 balance\\r\\n    );\\r\\n\\r\\n    constructor() {\\r\\n        Owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    function depositETH() external payable {\\r\\n        updateBalance(ethToken, msg.sender, msg.value, true);\\r\\n\\r\\n        emit Deposit(\\r\\n            ethToken,\\r\\n            msg.sender,\\r\\n            msg.value,\\r\\n            balanceOf(ethToken, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdrawETH(uint256 _amount) external {\\r\\n        require(\\r\\n            balanceOf(ethToken, msg.sender).sub(\\r\\n                getlockedFunds(msg.sender, ethToken)\\r\\n            ) >= _amount,\\r\\n            \\\"Insufficient balance ETH to withdraw\\\"\\r\\n        );\\r\\n        require(!locked, \\\"Reentrant call detected!\\\");\\r\\n        locked = true;\\r\\n        updateBalance(ethToken, msg.sender, _amount, false);\\r\\n        locked = false;\\r\\n        (bool success, ) = msg.sender.call{value: _amount}(\\\"\\\");\\r\\n        require(success, \\\"failed to send amount\\\");\\r\\n\\r\\n        emit Withdraw(\\r\\n            ethToken,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(ethToken, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    //from and transferFrom is from ERC20 contract\\r\\n    //_token should be an ERC20 token\\r\\n    function depositToken(\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        uint256 _decimals\\r\\n    ) external {\\r\\n        require(_token != ethToken);\\r\\n        require(\\r\\n            exchange.isVerifiedToken(_token),\\r\\n            \\\"Token not verified on Exchange\\\"\\r\\n        );\\r\\n        //need to add a check to prove that it is an ERC20 token\\r\\n        token = IERC20(_token);\\r\\n\\r\\n        //Requires approval first\\r\\n        require(\\r\\n            token.transferFrom(msg.sender, address(this), _amount),\\r\\n            \\\"No Approval yet\\\"\\r\\n        );\\r\\n        uint256 decimals = 18;\\r\\n        if (_decimals == 18) {\\r\\n            updateBalance(_token, msg.sender, _amount, true);\\r\\n        } else\\r\\n            updateBalance(\\r\\n                _token,\\r\\n                msg.sender,\\r\\n                _amount.mul(10 ** decimals.sub(_decimals)),\\r\\n                true\\r\\n            );\\r\\n\\r\\n        emit Deposit(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(_token, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdrawToken(\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        uint256 _decimals\\r\\n    ) external {\\r\\n        require(_token != ethToken);\\r\\n        require(\\r\\n            exchange.isVerifiedToken(_token),\\r\\n            \\\"Token not verified on Exchange\\\"\\r\\n        );\\r\\n\\r\\n        require(\\r\\n            balanceOf(_token, msg.sender).sub(\\r\\n                getlockedFunds(msg.sender, _token)\\r\\n            ) >= _amount,\\r\\n            \\\"Insufficient Tokens to withdraw\\\"\\r\\n        );\\r\\n        require(!locked, \\\"Reentrant call detected!\\\");\\r\\n        locked = true;\\r\\n\\r\\n        token = IERC20(_token);\\r\\n        uint256 decimals = 18;\\r\\n        if (_decimals == 18) {\\r\\n            updateBalance(_token, msg.sender, _amount, false);\\r\\n            require(token.transfer(msg.sender, _amount));\\r\\n        } else {\\r\\n            updateBalance(\\r\\n                _token,\\r\\n                msg.sender,\\r\\n                _amount.mul(10 ** decimals.sub(_decimals)),\\r\\n                false\\r\\n            );\\r\\n            require(\\r\\n                token.transfer(\\r\\n                    msg.sender,\\r\\n                    _amount.div(10 ** decimals.sub(_decimals))\\r\\n                )\\r\\n            );\\r\\n        }\\r\\n\\r\\n        locked = false;\\r\\n        emit Withdraw(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(_token, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getlockedFunds(\\r\\n        address _user,\\r\\n        address _token\\r\\n    ) public view returns (uint256) {\\r\\n        return lockedFunds[_user][_token];\\r\\n    }\\r\\n\\r\\n    function updateLockedFunds(\\r\\n        address _user,\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) public isAuthorised {\\r\\n        if (isAdd) {\\r\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].add(\\r\\n                _amount\\r\\n            );\\r\\n        } else if (!isAdd) {\\r\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].sub(\\r\\n                _amount\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //balance of specific tokens in the dex owned by specific user\\r\\n    function balanceOf(\\r\\n        address _token,\\r\\n        address _user\\r\\n    ) public view returns (uint256) {\\r\\n        return s_tokens[_token][_user];\\r\\n    }\\r\\n\\r\\n    function updateBalance(\\r\\n        address _token,\\r\\n        address _user,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) public isAuthorised {\\r\\n        if (isAdd) {\\r\\n            s_tokens[_token][_user] = s_tokens[_token][_user].add(_amount);\\r\\n        } else if (!isAdd) {\\r\\n            s_tokens[_token][_user] = s_tokens[_token][_user].sub(_amount);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function updateExchangeAddress(address _exchangeAddress) public onlyOwner {\\r\\n        exchange = Exchange(_exchangeAddress);\\r\\n    }\\r\\n\\r\\n    modifier isAuthorised() {\\r\\n        require(\\r\\n            msg.sender == address(this) || msg.sender == address(exchange),\\r\\n            \\\"Unauthorised Function Call\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf57179a3c0d338a6d94c7dadc3ee6873838e3af70c690754689b9c1c00aea67c\",\"license\":\"MIT\"},\"contracts/interface/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IERC20 {\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256 remaining);\\r\\n\\r\\n    function approve(\\r\\n        address spender,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function balanceOf(address owner) external view returns (uint256 balance);\\r\\n\\r\\n    function decimals() external view returns (uint8 decimalPlaces);\\r\\n\\r\\n    function decreaseApproval(\\r\\n        address spender,\\r\\n        uint256 subtractedValue\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function increaseApproval(\\r\\n        address spender,\\r\\n        uint256 addedValue\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function name() external view returns (string memory tokenName);\\r\\n\\r\\n    function symbol() external view returns (string memory tokenSymbol);\\r\\n\\r\\n    function totalSupply() external view returns (uint256 totalTokensIssued);\\r\\n\\r\\n    function transfer(\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n}\\r\\n\",\"keccak256\":\"0xef48d46afc4efefcd6d7f1799f25aee5d8fcd588e2aaa80a84af726128194326\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":53,"contract":"contracts/Exchange.sol:Exchange","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":507,"contract":"contracts/Exchange.sol:Exchange","label":"priceChecker","offset":0,"slot":"1","type":"t_contract(PriceChecker)2565"},{"astId":510,"contract":"contracts/Exchange.sol:Exchange","label":"tradingFees","offset":0,"slot":"2","type":"t_contract(TradingFees)2795"},{"astId":513,"contract":"contracts/Exchange.sol:Exchange","label":"wallet","offset":0,"slot":"3","type":"t_contract(Wallet)3359"},{"astId":518,"contract":"contracts/Exchange.sol:Exchange","label":"decimals","offset":0,"slot":"4","type":"t_uint256"},{"astId":524,"contract":"contracts/Exchange.sol:Exchange","label":"ethToken","offset":0,"slot":"5","type":"t_address"},{"astId":528,"contract":"contracts/Exchange.sol:Exchange","label":"tokenList","offset":0,"slot":"6","type":"t_array(t_struct(_tokenInfo)557_storage)dyn_storage"},{"astId":538,"contract":"contracts/Exchange.sol:Exchange","label":"s_orderBook","offset":0,"slot":"7","type":"t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(_Order)586_storage)dyn_storage)))"},{"astId":546,"contract":"contracts/Exchange.sol:Exchange","label":"s_filledOrders","offset":0,"slot":"8","type":"t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(_filledOrder)612_storage)dyn_storage))"},{"astId":549,"contract":"contracts/Exchange.sol:Exchange","label":"s_orderId","offset":0,"slot":"9","type":"t_uint256"},{"astId":552,"contract":"contracts/Exchange.sol:Exchange","label":"s_isManual","offset":0,"slot":"10","type":"t_bool"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(_Order)586_storage)dyn_storage":{"base":"t_struct(_Order)586_storage","encoding":"dynamic_array","label":"struct Exchange._Order[]","numberOfBytes":"32"},"t_array(t_struct(_filledOrder)612_storage)dyn_storage":{"base":"t_struct(_filledOrder)612_storage","encoding":"dynamic_array","label":"struct Exchange._filledOrder[]","numberOfBytes":"32"},"t_array(t_struct(_tokenInfo)557_storage)dyn_storage":{"base":"t_struct(_tokenInfo)557_storage","encoding":"dynamic_array","label":"struct Exchange._tokenInfo[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(PriceChecker)2565":{"encoding":"inplace","label":"contract PriceChecker","numberOfBytes":"20"},"t_contract(TradingFees)2795":{"encoding":"inplace","label":"contract TradingFees","numberOfBytes":"20"},"t_contract(Wallet)3359":{"encoding":"inplace","label":"contract Wallet","numberOfBytes":"20"},"t_enum(Side)615":{"encoding":"inplace","label":"enum Exchange.Side","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(_Order)586_storage)dyn_storage)))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order[])))","numberOfBytes":"32","value":"t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(_Order)586_storage)dyn_storage))"},"t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(_Order)586_storage)dyn_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => struct Exchange._Order[]))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_array(t_struct(_Order)586_storage)dyn_storage)"},"t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(_filledOrder)612_storage)dyn_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => struct Exchange._filledOrder[]))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_array(t_struct(_filledOrder)612_storage)dyn_storage)"},"t_mapping(t_uint256,t_array(t_struct(_Order)586_storage)dyn_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Exchange._Order[])","numberOfBytes":"32","value":"t_array(t_struct(_Order)586_storage)dyn_storage"},"t_mapping(t_uint256,t_array(t_struct(_filledOrder)612_storage)dyn_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Exchange._filledOrder[])","numberOfBytes":"32","value":"t_array(t_struct(_filledOrder)612_storage)dyn_storage"},"t_struct(_Order)586_storage":{"encoding":"inplace","label":"struct Exchange._Order","members":[{"astId":564,"contract":"contracts/Exchange.sol:Exchange","label":"id","offset":0,"slot":"0","type":"t_uint256"},{"astId":567,"contract":"contracts/Exchange.sol:Exchange","label":"side","offset":0,"slot":"1","type":"t_enum(Side)615"},{"astId":569,"contract":"contracts/Exchange.sol:Exchange","label":"user","offset":1,"slot":"1","type":"t_address"},{"astId":571,"contract":"contracts/Exchange.sol:Exchange","label":"tokenA","offset":0,"slot":"2","type":"t_address"},{"astId":573,"contract":"contracts/Exchange.sol:Exchange","label":"amountA","offset":0,"slot":"3","type":"t_uint256"},{"astId":575,"contract":"contracts/Exchange.sol:Exchange","label":"tokenB","offset":0,"slot":"4","type":"t_address"},{"astId":577,"contract":"contracts/Exchange.sol:Exchange","label":"amountB","offset":0,"slot":"5","type":"t_uint256"},{"astId":579,"contract":"contracts/Exchange.sol:Exchange","label":"rate","offset":0,"slot":"6","type":"t_uint256"},{"astId":581,"contract":"contracts/Exchange.sol:Exchange","label":"originalAmountA","offset":0,"slot":"7","type":"t_uint256"},{"astId":583,"contract":"contracts/Exchange.sol:Exchange","label":"originalAmountB","offset":0,"slot":"8","type":"t_uint256"},{"astId":585,"contract":"contracts/Exchange.sol:Exchange","label":"waiveFees","offset":0,"slot":"9","type":"t_bool"}],"numberOfBytes":"320"},"t_struct(_filledOrder)612_storage":{"encoding":"inplace","label":"struct Exchange._filledOrder","members":[{"astId":588,"contract":"contracts/Exchange.sol:Exchange","label":"id","offset":0,"slot":"0","type":"t_uint256"},{"astId":591,"contract":"contracts/Exchange.sol:Exchange","label":"side","offset":0,"slot":"1","type":"t_enum(Side)615"},{"astId":593,"contract":"contracts/Exchange.sol:Exchange","label":"user","offset":1,"slot":"1","type":"t_address"},{"astId":595,"contract":"contracts/Exchange.sol:Exchange","label":"tokenA","offset":0,"slot":"2","type":"t_address"},{"astId":597,"contract":"contracts/Exchange.sol:Exchange","label":"tokenB","offset":0,"slot":"3","type":"t_address"},{"astId":599,"contract":"contracts/Exchange.sol:Exchange","label":"amountFilled","offset":0,"slot":"4","type":"t_uint256"},{"astId":601,"contract":"contracts/Exchange.sol:Exchange","label":"fillRate","offset":0,"slot":"5","type":"t_uint256"},{"astId":603,"contract":"contracts/Exchange.sol:Exchange","label":"originalRate","offset":0,"slot":"6","type":"t_uint256"},{"astId":605,"contract":"contracts/Exchange.sol:Exchange","label":"originalAmountA","offset":0,"slot":"7","type":"t_uint256"},{"astId":607,"contract":"contracts/Exchange.sol:Exchange","label":"originalAmountB","offset":0,"slot":"8","type":"t_uint256"},{"astId":609,"contract":"contracts/Exchange.sol:Exchange","label":"feesWaived","offset":0,"slot":"9","type":"t_bool"},{"astId":611,"contract":"contracts/Exchange.sol:Exchange","label":"feesPaid","offset":0,"slot":"10","type":"t_uint256"}],"numberOfBytes":"352"},"t_struct(_tokenInfo)557_storage":{"encoding":"inplace","label":"struct Exchange._tokenInfo","members":[{"astId":554,"contract":"contracts/Exchange.sol:Exchange","label":"add","offset":0,"slot":"0","type":"t_address"},{"astId":556,"contract":"contracts/Exchange.sol:Exchange","label":"decimals","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"events":{"Cancel(uint256,uint8,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)":{"notice":"Event when an order is cancelled"},"Order(uint256,uint8,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)":{"notice":"Event when an order is placed on an exchange"}},"kind":"user","methods":{},"version":1}}},"contracts/PriceChecker.sol":{"PriceChecker":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_address","type":"address"}],"name":"addPriceFeed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"getPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"priceFeeds","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"token","type":"address"},{"internalType":"contract AggregatorV3Interface","name":"priceFeed","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_69":{"entryPoint":null,"id":69,"parameterSlots":0,"returnSlots":0},"@_msgSender_170":{"entryPoint":50,"id":170,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_157":{"entryPoint":58,"id":157,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6113778061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806310c7f0b91461006757806341976e0914610099578063715018a6146100c95780638c35423e146100d35780638da5cb5b146100ef578063f2fde38b1461010d575b600080fd5b610081600480360381019061007c9190610cd3565b610129565b60405161009093929190610ead565b60405180910390f35b6100b360048036038101906100ae9190610c37565b61022b565b6040516100c09190610f4b565b60405180910390f35b6100d16102c9565b005b6100ed60048036038101906100e89190610c64565b6102dd565b005b6100f7610688565b6040516101049190610e92565b60405180910390f35b61012760048036038101906101229190610c37565b6106b1565b005b6001818154811061013957600080fd5b906000526020600020906003020160009150905080600001805461015c906110b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610188906110b7565b80156101d55780601f106101aa576101008083540402835291602001916101d5565b820191906000526020600020905b8154815290600101906020018083116101b857829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b60008061023783610735565b905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561028157600080fd5b505afa158015610295573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b99190610d00565b5050509150508092505050919050565b6102d1610971565b6102db60006109ef565b565b6102e5610971565b60006001805480602002602001604051908101604052809291908181526020016000905b82821015610479578382906000526020600020906003020160405180606001604052908160008201805461033c906110b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610368906110b7565b80156103b55780601f1061038a576101008083540402835291602001916103b5565b820191906000526020600020905b81548152906001019060200180831161039857829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190610309565b5050505090506000805b825181101561051a5782818151811061049f5761049e6111c1565b5b6020026020010151600001516040516020016104bb9190610e7b565b60405160208183030381529060405280519060200120866040516020016104e29190610e7b565b604051602081830303815290604052805190602001201415610507576001915061051a565b80806105129061111a565b915050610483565b50801561055c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055390610f0b565b60405180910390fd5b6000839050600160405180606001604052808881526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000190805190602001906105ef929190610abb565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106b9610971565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610729576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072090610eeb565b60405180910390fd5b610732816109ef565b50565b6000806001805480602002602001604051908101604052809291908181526020016000905b828210156108ca578382906000526020600020906003020160405180606001604052908160008201805461078d906110b7565b80601f01602080910402602001604051908101604052809291908181526020018280546107b9906110b7565b80156108065780601f106107db57610100808354040283529160200191610806565b820191906000526020600020905b8154815290600101906020018083116107e957829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508152602001906001019061075a565b50505050905060005b8151811015610969578181815181106108ef576108ee6111c1565b5b60200260200101516020015173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561095657818181518110610941576109406111c1565b5b6020026020010151604001519250505061096c565b80806109619061111a565b9150506108d3565b50505b919050565b610979610ab3565b73ffffffffffffffffffffffffffffffffffffffff16610997610688565b73ffffffffffffffffffffffffffffffffffffffff16146109ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e490610f2b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b828054610ac7906110b7565b90600052602060002090601f016020900481019282610ae95760008555610b30565b82601f10610b0257805160ff1916838001178555610b30565b82800160010185558215610b30579182015b82811115610b2f578251825591602001919060010190610b14565b5b509050610b3d9190610b41565b5090565b5b80821115610b5a576000816000905550600101610b42565b5090565b6000610b71610b6c84610f8b565b610f66565b905082815260208101848484011115610b8d57610b8c611224565b5b610b98848285611075565b509392505050565b600081359050610baf816112e5565b92915050565b600081519050610bc4816112fc565b92915050565b600082601f830112610bdf57610bde61121f565b5b8135610bef848260208601610b5e565b91505092915050565b600081359050610c0781611313565b92915050565b600081519050610c1c81611313565b92915050565b600081519050610c318161132a565b92915050565b600060208284031215610c4d57610c4c61122e565b5b6000610c5b84828501610ba0565b91505092915050565b600080600060608486031215610c7d57610c7c61122e565b5b600084013567ffffffffffffffff811115610c9b57610c9a611229565b5b610ca786828701610bca565b9350506020610cb886828701610ba0565b9250506040610cc986828701610ba0565b9150509250925092565b600060208284031215610ce957610ce861122e565b5b6000610cf784828501610bf8565b91505092915050565b600080600080600060a08688031215610d1c57610d1b61122e565b5b6000610d2a88828901610c22565b9550506020610d3b88828901610bb5565b9450506040610d4c88828901610c0d565b9350506060610d5d88828901610c0d565b9250506080610d6e88828901610c22565b9150509295509295909350565b610d8481610fe3565b82525050565b610d938161103f565b82525050565b6000610da482610fbc565b610dae8185610fc7565b9350610dbe818560208601611084565b610dc781611233565b840191505092915050565b6000610ddd82610fbc565b610de78185610fd8565b9350610df7818560208601611084565b80840191505092915050565b6000610e10602683610fc7565b9150610e1b82611244565b604082019050919050565b6000610e33601883610fc7565b9150610e3e82611293565b602082019050919050565b6000610e56602083610fc7565b9150610e61826112bc565b602082019050919050565b610e758161101f565b82525050565b6000610e878284610dd2565b915081905092915050565b6000602082019050610ea76000830184610d7b565b92915050565b60006060820190508181036000830152610ec78186610d99565b9050610ed66020830185610d7b565b610ee36040830184610d8a565b949350505050565b60006020820190508181036000830152610f0481610e03565b9050919050565b60006020820190508181036000830152610f2481610e26565b9050919050565b60006020820190508181036000830152610f4481610e49565b9050919050565b6000602082019050610f606000830184610e6c565b92915050565b6000610f70610f81565b9050610f7c82826110e9565b919050565b6000604051905090565b600067ffffffffffffffff821115610fa657610fa56111f0565b5b610faf82611233565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000610fee82610fff565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b600061104a82611051565b9050919050565b600061105c82611063565b9050919050565b600061106e82610fff565b9050919050565b82818337600083830152505050565b60005b838110156110a2578082015181840152602081019050611087565b838111156110b1576000848401525b50505050565b600060028204905060018216806110cf57607f821691505b602082108114156110e3576110e2611192565b5b50919050565b6110f282611233565b810181811067ffffffffffffffff82111715611111576111106111f0565b5b80604052505050565b60006111258261101f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561115857611157611163565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5072696365204665656420616c72656164792061646465640000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6112ee81610fe3565b81146112f957600080fd5b50565b61130581610ff5565b811461131057600080fd5b50565b61131c8161101f565b811461132757600080fd5b50565b61133381611029565b811461133e57600080fd5b5056fea2646970667358221220c35e7e8ecb7262f04ee52507df9a62a77b09793980be9195195c1e70958bbdd764736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1377 DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x10C7F0B9 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x41976E09 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x8C35423E EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x10D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH2 0x129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x90 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAE SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH2 0x2C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xC64 JUMP JUMPDEST PUSH2 0x2DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF7 PUSH2 0x688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x6B1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x15C SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x188 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x237 DUP4 PUSH2 0x735 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x295 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0xD00 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x971 JUMP JUMPDEST PUSH2 0x2DB PUSH1 0x0 PUSH2 0x9EF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2E5 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x479 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x33C SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x368 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x38A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3B5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x398 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x309 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x51A JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x49F JUMPI PUSH2 0x49E PUSH2 0x11C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4E2 SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0x507 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x51A JUMP JUMPDEST DUP1 DUP1 PUSH2 0x512 SWAP1 PUSH2 0x111A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x483 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x553 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x5EF SWAP3 SWAP2 SWAP1 PUSH2 0xABB JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6B9 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x729 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x720 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x732 DUP2 PUSH2 0x9EF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x8CA JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x78D SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7B9 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x806 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7DB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x806 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7E9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x75A JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x969 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x8EF JUMPI PUSH2 0x8EE PUSH2 0x11C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x956 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x941 JUMPI PUSH2 0x940 PUSH2 0x11C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD SWAP3 POP POP POP PUSH2 0x96C JUMP JUMPDEST DUP1 DUP1 PUSH2 0x961 SWAP1 PUSH2 0x111A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8D3 JUMP JUMPDEST POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x979 PUSH2 0xAB3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x997 PUSH2 0x688 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E4 SWAP1 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xAC7 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xAE9 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xB30 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xB02 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xB30 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xB30 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB2F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB14 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0xB41 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xB5A JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xB42 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB71 PUSH2 0xB6C DUP5 PUSH2 0xF8B JUMP JUMPDEST PUSH2 0xF66 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xB8D JUMPI PUSH2 0xB8C PUSH2 0x1224 JUMP JUMPDEST JUMPDEST PUSH2 0xB98 DUP5 DUP3 DUP6 PUSH2 0x1075 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBAF DUP2 PUSH2 0x12E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xBC4 DUP2 PUSH2 0x12FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBDF JUMPI PUSH2 0xBDE PUSH2 0x121F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBEF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xB5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC07 DUP2 PUSH2 0x1313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC1C DUP2 PUSH2 0x1313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC31 DUP2 PUSH2 0x132A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC4D JUMPI PUSH2 0xC4C PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC5B DUP5 DUP3 DUP6 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC7D JUMPI PUSH2 0xC7C PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC9B JUMPI PUSH2 0xC9A PUSH2 0x1229 JUMP JUMPDEST JUMPDEST PUSH2 0xCA7 DUP7 DUP3 DUP8 ADD PUSH2 0xBCA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCB8 DUP7 DUP3 DUP8 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCC9 DUP7 DUP3 DUP8 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE9 JUMPI PUSH2 0xCE8 PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCF7 DUP5 DUP3 DUP6 ADD PUSH2 0xBF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD1C JUMPI PUSH2 0xD1B PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD2A DUP9 DUP3 DUP10 ADD PUSH2 0xC22 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xD3B DUP9 DUP3 DUP10 ADD PUSH2 0xBB5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xD4C DUP9 DUP3 DUP10 ADD PUSH2 0xC0D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xD5D DUP9 DUP3 DUP10 ADD PUSH2 0xC0D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xD6E DUP9 DUP3 DUP10 ADD PUSH2 0xC22 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0xD84 DUP2 PUSH2 0xFE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD93 DUP2 PUSH2 0x103F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA4 DUP3 PUSH2 0xFBC JUMP JUMPDEST PUSH2 0xDAE DUP2 DUP6 PUSH2 0xFC7 JUMP JUMPDEST SWAP4 POP PUSH2 0xDBE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1084 JUMP JUMPDEST PUSH2 0xDC7 DUP2 PUSH2 0x1233 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDD DUP3 PUSH2 0xFBC JUMP JUMPDEST PUSH2 0xDE7 DUP2 DUP6 PUSH2 0xFD8 JUMP JUMPDEST SWAP4 POP PUSH2 0xDF7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1084 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE10 PUSH1 0x26 DUP4 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE1B DUP3 PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE33 PUSH1 0x18 DUP4 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE3E DUP3 PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE56 PUSH1 0x20 DUP4 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE61 DUP3 PUSH2 0x12BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE75 DUP2 PUSH2 0x101F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE87 DUP3 DUP5 PUSH2 0xDD2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEA7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEC7 DUP2 DUP7 PUSH2 0xD99 JUMP JUMPDEST SWAP1 POP PUSH2 0xED6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0xEE3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD8A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF04 DUP2 PUSH2 0xE03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF24 DUP2 PUSH2 0xE26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF44 DUP2 PUSH2 0xE49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF60 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF70 PUSH2 0xF81 JUMP JUMPDEST SWAP1 POP PUSH2 0xF7C DUP3 DUP3 PUSH2 0x10E9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xFA6 JUMPI PUSH2 0xFA5 PUSH2 0x11F0 JUMP JUMPDEST JUMPDEST PUSH2 0xFAF DUP3 PUSH2 0x1233 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFEE DUP3 PUSH2 0xFFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104A DUP3 PUSH2 0x1051 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105C DUP3 PUSH2 0x1063 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x106E DUP3 PUSH2 0xFFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10A2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1087 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x10B1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10CF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x10E3 JUMPI PUSH2 0x10E2 PUSH2 0x1192 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F2 DUP3 PUSH2 0x1233 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1111 JUMPI PUSH2 0x1110 PUSH2 0x11F0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1125 DUP3 PUSH2 0x101F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1158 JUMPI PUSH2 0x1157 PUSH2 0x1163 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5072696365204665656420616C72656164792061646465640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x12EE DUP2 PUSH2 0xFE3 JUMP JUMPDEST DUP2 EQ PUSH2 0x12F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1305 DUP2 PUSH2 0xFF5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x131C DUP2 PUSH2 0x101F JUMP JUMPDEST DUP2 EQ PUSH2 0x1327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1333 DUP2 PUSH2 0x1029 JUMP JUMPDEST DUP2 EQ PUSH2 0x133E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0x5E PUSH31 0x8ECB7262F04EE52507DF9A62A77B09793980BE9195195C1E70958BBDD76473 PUSH16 0x6C634300080700330000000000000000 ","sourceMap":"194:1570:5:-:0;;;;;;;;;;;;;936:32:1;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;194:1570:5;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2433:187:1:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;194:1570:5:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_100":{"entryPoint":2417,"id":100,"parameterSlots":0,"returnSlots":0},"@_msgSender_170":{"entryPoint":2739,"id":170,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_157":{"entryPoint":2543,"id":157,"parameterSlots":1,"returnSlots":0},"@addPriceFeed_2496":{"entryPoint":733,"id":2496,"parameterSlots":3,"returnSlots":0},"@getPriceFeed_2538":{"entryPoint":1845,"id":2538,"parameterSlots":1,"returnSlots":1},"@getPrice_2564":{"entryPoint":555,"id":2564,"parameterSlots":1,"returnSlots":1},"@owner_86":{"entryPoint":1672,"id":86,"parameterSlots":0,"returnSlots":1},"@priceFeeds_2406":{"entryPoint":297,"id":2406,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_114":{"entryPoint":713,"id":114,"parameterSlots":0,"returnSlots":0},"@transferOwnership_137":{"entryPoint":1713,"id":137,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":2910,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2976,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_int256_fromMemory":{"entryPoint":2997,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":3018,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3064,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":3085,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint80_fromMemory":{"entryPoint":3106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3127,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_addresst_address":{"entryPoint":3172,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":3283,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory":{"entryPoint":3328,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3451,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack":{"entryPoint":3466,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3481,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":3538,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":3587,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f_to_t_string_memory_ptr_fromStack":{"entryPoint":3622,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":3657,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3692,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":3707,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3730,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_address_t_contract$_AggregatorV3Interface_$45__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed":{"entryPoint":3757,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3819,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3851,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3883,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3915,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":3942,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":3969,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":3979,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":4028,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4039,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4056,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":4067,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int256":{"entryPoint":4085,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4095,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4127,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint80":{"entryPoint":4137,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_AggregatorV3Interface_$45_to_t_address":{"entryPoint":4159,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":4177,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":4195,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":4213,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":4228,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4279,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":4329,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":4378,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4451,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4498,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4545,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4592,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":4639,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":4644,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":4649,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4654,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":4659,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":4676,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f":{"entryPoint":4755,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":4796,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":4837,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_int256":{"entryPoint":4860,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":4883,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint80":{"entryPoint":4906,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:14545:9","statements":[{"body":{"nodeType":"YulBlock","src":"91:328:9","statements":[{"nodeType":"YulAssignment","src":"101:75:9","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"168:6:9"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"126:41:9"},"nodeType":"YulFunctionCall","src":"126:49:9"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"110:15:9"},"nodeType":"YulFunctionCall","src":"110:66:9"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"101:5:9"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"192:5:9"},{"name":"length","nodeType":"YulIdentifier","src":"199:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"185:6:9"},"nodeType":"YulFunctionCall","src":"185:21:9"},"nodeType":"YulExpressionStatement","src":"185:21:9"},{"nodeType":"YulVariableDeclaration","src":"215:27:9","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"230:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"237:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"226:3:9"},"nodeType":"YulFunctionCall","src":"226:16:9"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"219:3:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"280:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"282:77:9"},"nodeType":"YulFunctionCall","src":"282:79:9"},"nodeType":"YulExpressionStatement","src":"282:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"261:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"266:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"257:3:9"},"nodeType":"YulFunctionCall","src":"257:16:9"},{"name":"end","nodeType":"YulIdentifier","src":"275:3:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"254:2:9"},"nodeType":"YulFunctionCall","src":"254:25:9"},"nodeType":"YulIf","src":"251:112:9"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"396:3:9"},{"name":"dst","nodeType":"YulIdentifier","src":"401:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"406:6:9"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"372:23:9"},"nodeType":"YulFunctionCall","src":"372:41:9"},"nodeType":"YulExpressionStatement","src":"372:41:9"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"64:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"69:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"77:3:9","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"85:5:9","type":""}],"src":"7:412:9"},{"body":{"nodeType":"YulBlock","src":"477:87:9","statements":[{"nodeType":"YulAssignment","src":"487:29:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"509:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"496:12:9"},"nodeType":"YulFunctionCall","src":"496:20:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"487:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"552:5:9"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"525:26:9"},"nodeType":"YulFunctionCall","src":"525:33:9"},"nodeType":"YulExpressionStatement","src":"525:33:9"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"455:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"463:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"471:5:9","type":""}],"src":"425:139:9"},{"body":{"nodeType":"YulBlock","src":"632:79:9","statements":[{"nodeType":"YulAssignment","src":"642:22:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"657:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"651:5:9"},"nodeType":"YulFunctionCall","src":"651:13:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"642:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"699:5:9"}],"functionName":{"name":"validator_revert_t_int256","nodeType":"YulIdentifier","src":"673:25:9"},"nodeType":"YulFunctionCall","src":"673:32:9"},"nodeType":"YulExpressionStatement","src":"673:32:9"}]},"name":"abi_decode_t_int256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"610:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"618:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"626:5:9","type":""}],"src":"570:141:9"},{"body":{"nodeType":"YulBlock","src":"793:278:9","statements":[{"body":{"nodeType":"YulBlock","src":"842:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"844:77:9"},"nodeType":"YulFunctionCall","src":"844:79:9"},"nodeType":"YulExpressionStatement","src":"844:79:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"821:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"829:4:9","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"817:3:9"},"nodeType":"YulFunctionCall","src":"817:17:9"},{"name":"end","nodeType":"YulIdentifier","src":"836:3:9"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"813:3:9"},"nodeType":"YulFunctionCall","src":"813:27:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"806:6:9"},"nodeType":"YulFunctionCall","src":"806:35:9"},"nodeType":"YulIf","src":"803:122:9"},{"nodeType":"YulVariableDeclaration","src":"934:34:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"961:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"948:12:9"},"nodeType":"YulFunctionCall","src":"948:20:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"938:6:9","type":""}]},{"nodeType":"YulAssignment","src":"977:88:9","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1038:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"1046:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1034:3:9"},"nodeType":"YulFunctionCall","src":"1034:17:9"},{"name":"length","nodeType":"YulIdentifier","src":"1053:6:9"},{"name":"end","nodeType":"YulIdentifier","src":"1061:3:9"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"986:47:9"},"nodeType":"YulFunctionCall","src":"986:79:9"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"977:5:9"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"771:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"779:3:9","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"787:5:9","type":""}],"src":"731:340:9"},{"body":{"nodeType":"YulBlock","src":"1129:87:9","statements":[{"nodeType":"YulAssignment","src":"1139:29:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1161:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1148:12:9"},"nodeType":"YulFunctionCall","src":"1148:20:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1139:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1204:5:9"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1177:26:9"},"nodeType":"YulFunctionCall","src":"1177:33:9"},"nodeType":"YulExpressionStatement","src":"1177:33:9"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1107:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"1115:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1123:5:9","type":""}],"src":"1077:139:9"},{"body":{"nodeType":"YulBlock","src":"1285:80:9","statements":[{"nodeType":"YulAssignment","src":"1295:22:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1310:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1304:5:9"},"nodeType":"YulFunctionCall","src":"1304:13:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1295:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1353:5:9"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1326:26:9"},"nodeType":"YulFunctionCall","src":"1326:33:9"},"nodeType":"YulExpressionStatement","src":"1326:33:9"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1263:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"1271:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1279:5:9","type":""}],"src":"1222:143:9"},{"body":{"nodeType":"YulBlock","src":"1433:79:9","statements":[{"nodeType":"YulAssignment","src":"1443:22:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1458:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1452:5:9"},"nodeType":"YulFunctionCall","src":"1452:13:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1443:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1500:5:9"}],"functionName":{"name":"validator_revert_t_uint80","nodeType":"YulIdentifier","src":"1474:25:9"},"nodeType":"YulFunctionCall","src":"1474:32:9"},"nodeType":"YulExpressionStatement","src":"1474:32:9"}]},"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1411:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"1419:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1427:5:9","type":""}],"src":"1371:141:9"},{"body":{"nodeType":"YulBlock","src":"1584:263:9","statements":[{"body":{"nodeType":"YulBlock","src":"1630:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1632:77:9"},"nodeType":"YulFunctionCall","src":"1632:79:9"},"nodeType":"YulExpressionStatement","src":"1632:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1605:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"1614:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1601:3:9"},"nodeType":"YulFunctionCall","src":"1601:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"1626:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1597:3:9"},"nodeType":"YulFunctionCall","src":"1597:32:9"},"nodeType":"YulIf","src":"1594:119:9"},{"nodeType":"YulBlock","src":"1723:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1738:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1752:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1742:6:9","type":""}]},{"nodeType":"YulAssignment","src":"1767:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1802:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1813:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1798:3:9"},"nodeType":"YulFunctionCall","src":"1798:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1822:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1777:20:9"},"nodeType":"YulFunctionCall","src":"1777:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1767:6:9"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1554:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1565:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1577:6:9","type":""}],"src":"1518:329:9"},{"body":{"nodeType":"YulBlock","src":"1963:689:9","statements":[{"body":{"nodeType":"YulBlock","src":"2009:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2011:77:9"},"nodeType":"YulFunctionCall","src":"2011:79:9"},"nodeType":"YulExpressionStatement","src":"2011:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1984:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"1993:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1980:3:9"},"nodeType":"YulFunctionCall","src":"1980:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"2005:2:9","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1976:3:9"},"nodeType":"YulFunctionCall","src":"1976:32:9"},"nodeType":"YulIf","src":"1973:119:9"},{"nodeType":"YulBlock","src":"2102:287:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2117:45:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2148:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"2159:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2144:3:9"},"nodeType":"YulFunctionCall","src":"2144:17:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2131:12:9"},"nodeType":"YulFunctionCall","src":"2131:31:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2121:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"2209:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"2211:77:9"},"nodeType":"YulFunctionCall","src":"2211:79:9"},"nodeType":"YulExpressionStatement","src":"2211:79:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2181:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"2189:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2178:2:9"},"nodeType":"YulFunctionCall","src":"2178:30:9"},"nodeType":"YulIf","src":"2175:117:9"},{"nodeType":"YulAssignment","src":"2306:73:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2351:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2362:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2347:3:9"},"nodeType":"YulFunctionCall","src":"2347:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2371:7:9"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2316:30:9"},"nodeType":"YulFunctionCall","src":"2316:63:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2306:6:9"}]}]},{"nodeType":"YulBlock","src":"2399:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2414:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2428:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2418:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2444:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2479:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2490:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2475:3:9"},"nodeType":"YulFunctionCall","src":"2475:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2499:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2454:20:9"},"nodeType":"YulFunctionCall","src":"2454:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2444:6:9"}]}]},{"nodeType":"YulBlock","src":"2527:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2542:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2556:2:9","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2546:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2572:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2607:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2618:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2603:3:9"},"nodeType":"YulFunctionCall","src":"2603:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2627:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2582:20:9"},"nodeType":"YulFunctionCall","src":"2582:53:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2572:6:9"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1917:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1928:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1940:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1948:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1956:6:9","type":""}],"src":"1853:799:9"},{"body":{"nodeType":"YulBlock","src":"2724:263:9","statements":[{"body":{"nodeType":"YulBlock","src":"2770:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2772:77:9"},"nodeType":"YulFunctionCall","src":"2772:79:9"},"nodeType":"YulExpressionStatement","src":"2772:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2745:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"2754:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2741:3:9"},"nodeType":"YulFunctionCall","src":"2741:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"2766:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2737:3:9"},"nodeType":"YulFunctionCall","src":"2737:32:9"},"nodeType":"YulIf","src":"2734:119:9"},{"nodeType":"YulBlock","src":"2863:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2878:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2892:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2882:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2907:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2942:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2953:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2938:3:9"},"nodeType":"YulFunctionCall","src":"2938:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2962:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2917:20:9"},"nodeType":"YulFunctionCall","src":"2917:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2907:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2694:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2705:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2717:6:9","type":""}],"src":"2658:329:9"},{"body":{"nodeType":"YulBlock","src":"3135:829:9","statements":[{"body":{"nodeType":"YulBlock","src":"3182:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3184:77:9"},"nodeType":"YulFunctionCall","src":"3184:79:9"},"nodeType":"YulExpressionStatement","src":"3184:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3156:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"3165:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3152:3:9"},"nodeType":"YulFunctionCall","src":"3152:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"3177:3:9","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3148:3:9"},"nodeType":"YulFunctionCall","src":"3148:33:9"},"nodeType":"YulIf","src":"3145:120:9"},{"nodeType":"YulBlock","src":"3275:127:9","statements":[{"nodeType":"YulVariableDeclaration","src":"3290:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"3304:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3294:6:9","type":""}]},{"nodeType":"YulAssignment","src":"3319:73:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3364:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"3375:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3360:3:9"},"nodeType":"YulFunctionCall","src":"3360:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3384:7:9"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"3329:30:9"},"nodeType":"YulFunctionCall","src":"3329:63:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3319:6:9"}]}]},{"nodeType":"YulBlock","src":"3412:128:9","statements":[{"nodeType":"YulVariableDeclaration","src":"3427:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"3441:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3431:6:9","type":""}]},{"nodeType":"YulAssignment","src":"3457:73:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3502:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"3513:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3498:3:9"},"nodeType":"YulFunctionCall","src":"3498:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3522:7:9"}],"functionName":{"name":"abi_decode_t_int256_fromMemory","nodeType":"YulIdentifier","src":"3467:30:9"},"nodeType":"YulFunctionCall","src":"3467:63:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3457:6:9"}]}]},{"nodeType":"YulBlock","src":"3550:129:9","statements":[{"nodeType":"YulVariableDeclaration","src":"3565:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"3579:2:9","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3569:6:9","type":""}]},{"nodeType":"YulAssignment","src":"3595:74:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3641:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"3652:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3637:3:9"},"nodeType":"YulFunctionCall","src":"3637:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3661:7:9"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"3605:31:9"},"nodeType":"YulFunctionCall","src":"3605:64:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3595:6:9"}]}]},{"nodeType":"YulBlock","src":"3689:129:9","statements":[{"nodeType":"YulVariableDeclaration","src":"3704:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"3718:2:9","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3708:6:9","type":""}]},{"nodeType":"YulAssignment","src":"3734:74:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3780:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"3791:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3776:3:9"},"nodeType":"YulFunctionCall","src":"3776:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3800:7:9"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"3744:31:9"},"nodeType":"YulFunctionCall","src":"3744:64:9"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3734:6:9"}]}]},{"nodeType":"YulBlock","src":"3828:129:9","statements":[{"nodeType":"YulVariableDeclaration","src":"3843:17:9","value":{"kind":"number","nodeType":"YulLiteral","src":"3857:3:9","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3847:6:9","type":""}]},{"nodeType":"YulAssignment","src":"3874:73:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3919:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"3930:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3915:3:9"},"nodeType":"YulFunctionCall","src":"3915:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3939:7:9"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"3884:30:9"},"nodeType":"YulFunctionCall","src":"3884:63:9"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3874:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3073:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3084:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3096:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3104:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3112:6:9","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3120:6:9","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3128:6:9","type":""}],"src":"2993:971:9"},{"body":{"nodeType":"YulBlock","src":"4035:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4052:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4075:5:9"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4057:17:9"},"nodeType":"YulFunctionCall","src":"4057:24:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4045:6:9"},"nodeType":"YulFunctionCall","src":"4045:37:9"},"nodeType":"YulExpressionStatement","src":"4045:37:9"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4023:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4030:3:9","type":""}],"src":"3970:118:9"},{"body":{"nodeType":"YulBlock","src":"4187:94:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4204:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4268:5:9"}],"functionName":{"name":"convert_t_contract$_AggregatorV3Interface_$45_to_t_address","nodeType":"YulIdentifier","src":"4209:58:9"},"nodeType":"YulFunctionCall","src":"4209:65:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4197:6:9"},"nodeType":"YulFunctionCall","src":"4197:78:9"},"nodeType":"YulExpressionStatement","src":"4197:78:9"}]},"name":"abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4175:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4182:3:9","type":""}],"src":"4094:187:9"},{"body":{"nodeType":"YulBlock","src":"4379:272:9","statements":[{"nodeType":"YulVariableDeclaration","src":"4389:53:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4436:5:9"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4403:32:9"},"nodeType":"YulFunctionCall","src":"4403:39:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4393:6:9","type":""}]},{"nodeType":"YulAssignment","src":"4451:78:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4517:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"4522:6:9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4458:58:9"},"nodeType":"YulFunctionCall","src":"4458:71:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4451:3:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4564:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"4571:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4560:3:9"},"nodeType":"YulFunctionCall","src":"4560:16:9"},{"name":"pos","nodeType":"YulIdentifier","src":"4578:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"4583:6:9"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4538:21:9"},"nodeType":"YulFunctionCall","src":"4538:52:9"},"nodeType":"YulExpressionStatement","src":"4538:52:9"},{"nodeType":"YulAssignment","src":"4599:46:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4610:3:9"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4637:6:9"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4615:21:9"},"nodeType":"YulFunctionCall","src":"4615:29:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4606:3:9"},"nodeType":"YulFunctionCall","src":"4606:39:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4599:3:9"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4360:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4367:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4375:3:9","type":""}],"src":"4287:364:9"},{"body":{"nodeType":"YulBlock","src":"4767:267:9","statements":[{"nodeType":"YulVariableDeclaration","src":"4777:53:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4824:5:9"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4791:32:9"},"nodeType":"YulFunctionCall","src":"4791:39:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4781:6:9","type":""}]},{"nodeType":"YulAssignment","src":"4839:96:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4923:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"4928:6:9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"4846:76:9"},"nodeType":"YulFunctionCall","src":"4846:89:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4839:3:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4970:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"4977:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4966:3:9"},"nodeType":"YulFunctionCall","src":"4966:16:9"},{"name":"pos","nodeType":"YulIdentifier","src":"4984:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"4989:6:9"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4944:21:9"},"nodeType":"YulFunctionCall","src":"4944:52:9"},"nodeType":"YulExpressionStatement","src":"4944:52:9"},{"nodeType":"YulAssignment","src":"5005:23:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5016:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"5021:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5012:3:9"},"nodeType":"YulFunctionCall","src":"5012:16:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5005:3:9"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4748:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4755:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4763:3:9","type":""}],"src":"4657:377:9"},{"body":{"nodeType":"YulBlock","src":"5186:220:9","statements":[{"nodeType":"YulAssignment","src":"5196:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5262:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"5267:2:9","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5203:58:9"},"nodeType":"YulFunctionCall","src":"5203:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5196:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5368:3:9"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"5279:88:9"},"nodeType":"YulFunctionCall","src":"5279:93:9"},"nodeType":"YulExpressionStatement","src":"5279:93:9"},{"nodeType":"YulAssignment","src":"5381:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5392:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"5397:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5388:3:9"},"nodeType":"YulFunctionCall","src":"5388:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5381:3:9"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5174:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5182:3:9","type":""}],"src":"5040:366:9"},{"body":{"nodeType":"YulBlock","src":"5558:220:9","statements":[{"nodeType":"YulAssignment","src":"5568:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5634:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"5639:2:9","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5575:58:9"},"nodeType":"YulFunctionCall","src":"5575:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5568:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5740:3:9"}],"functionName":{"name":"store_literal_in_memory_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f","nodeType":"YulIdentifier","src":"5651:88:9"},"nodeType":"YulFunctionCall","src":"5651:93:9"},"nodeType":"YulExpressionStatement","src":"5651:93:9"},{"nodeType":"YulAssignment","src":"5753:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5764:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"5769:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5760:3:9"},"nodeType":"YulFunctionCall","src":"5760:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5753:3:9"}]}]},"name":"abi_encode_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5546:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5554:3:9","type":""}],"src":"5412:366:9"},{"body":{"nodeType":"YulBlock","src":"5930:220:9","statements":[{"nodeType":"YulAssignment","src":"5940:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6006:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"6011:2:9","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5947:58:9"},"nodeType":"YulFunctionCall","src":"5947:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5940:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6112:3:9"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"6023:88:9"},"nodeType":"YulFunctionCall","src":"6023:93:9"},"nodeType":"YulExpressionStatement","src":"6023:93:9"},{"nodeType":"YulAssignment","src":"6125:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6136:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"6141:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6132:3:9"},"nodeType":"YulFunctionCall","src":"6132:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6125:3:9"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5918:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5926:3:9","type":""}],"src":"5784:366:9"},{"body":{"nodeType":"YulBlock","src":"6221:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6238:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6261:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6243:17:9"},"nodeType":"YulFunctionCall","src":"6243:24:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6231:6:9"},"nodeType":"YulFunctionCall","src":"6231:37:9"},"nodeType":"YulExpressionStatement","src":"6231:37:9"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6209:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6216:3:9","type":""}],"src":"6156:118:9"},{"body":{"nodeType":"YulBlock","src":"6416:139:9","statements":[{"nodeType":"YulAssignment","src":"6427:102:9","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6516:6:9"},{"name":"pos","nodeType":"YulIdentifier","src":"6525:3:9"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"6434:81:9"},"nodeType":"YulFunctionCall","src":"6434:95:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6427:3:9"}]},{"nodeType":"YulAssignment","src":"6539:10:9","value":{"name":"pos","nodeType":"YulIdentifier","src":"6546:3:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6539:3:9"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6395:3:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6401:6:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6412:3:9","type":""}],"src":"6280:275:9"},{"body":{"nodeType":"YulBlock","src":"6659:124:9","statements":[{"nodeType":"YulAssignment","src":"6669:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6681:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"6692:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6677:3:9"},"nodeType":"YulFunctionCall","src":"6677:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6669:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6749:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6762:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"6773:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6758:3:9"},"nodeType":"YulFunctionCall","src":"6758:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6705:43:9"},"nodeType":"YulFunctionCall","src":"6705:71:9"},"nodeType":"YulExpressionStatement","src":"6705:71:9"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6631:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6643:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6654:4:9","type":""}],"src":"6561:222:9"},{"body":{"nodeType":"YulBlock","src":"6991:387:9","statements":[{"nodeType":"YulAssignment","src":"7001:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7013:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7024:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7009:3:9"},"nodeType":"YulFunctionCall","src":"7009:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7001:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7048:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7059:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7044:3:9"},"nodeType":"YulFunctionCall","src":"7044:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7067:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"7073:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7063:3:9"},"nodeType":"YulFunctionCall","src":"7063:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7037:6:9"},"nodeType":"YulFunctionCall","src":"7037:47:9"},"nodeType":"YulExpressionStatement","src":"7037:47:9"},{"nodeType":"YulAssignment","src":"7093:86:9","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7165:6:9"},{"name":"tail","nodeType":"YulIdentifier","src":"7174:4:9"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7101:63:9"},"nodeType":"YulFunctionCall","src":"7101:78:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7093:4:9"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7233:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7246:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7257:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7242:3:9"},"nodeType":"YulFunctionCall","src":"7242:18:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7189:43:9"},"nodeType":"YulFunctionCall","src":"7189:72:9"},"nodeType":"YulExpressionStatement","src":"7189:72:9"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7343:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7356:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7367:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7352:3:9"},"nodeType":"YulFunctionCall","src":"7352:18:9"}],"functionName":{"name":"abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7271:71:9"},"nodeType":"YulFunctionCall","src":"7271:100:9"},"nodeType":"YulExpressionStatement","src":"7271:100:9"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_address_t_contract$_AggregatorV3Interface_$45__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6947:9:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6959:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6967:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6975:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6986:4:9","type":""}],"src":"6789:589:9"},{"body":{"nodeType":"YulBlock","src":"7555:248:9","statements":[{"nodeType":"YulAssignment","src":"7565:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7577:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7588:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7573:3:9"},"nodeType":"YulFunctionCall","src":"7573:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7565:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7612:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7623:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7608:3:9"},"nodeType":"YulFunctionCall","src":"7608:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7631:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"7637:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7627:3:9"},"nodeType":"YulFunctionCall","src":"7627:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7601:6:9"},"nodeType":"YulFunctionCall","src":"7601:47:9"},"nodeType":"YulExpressionStatement","src":"7601:47:9"},{"nodeType":"YulAssignment","src":"7657:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7791:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7665:124:9"},"nodeType":"YulFunctionCall","src":"7665:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7657:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7535:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7550:4:9","type":""}],"src":"7384:419:9"},{"body":{"nodeType":"YulBlock","src":"7980:248:9","statements":[{"nodeType":"YulAssignment","src":"7990:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8002:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8013:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7998:3:9"},"nodeType":"YulFunctionCall","src":"7998:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7990:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8037:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8048:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8033:3:9"},"nodeType":"YulFunctionCall","src":"8033:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8056:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"8062:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8052:3:9"},"nodeType":"YulFunctionCall","src":"8052:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8026:6:9"},"nodeType":"YulFunctionCall","src":"8026:47:9"},"nodeType":"YulExpressionStatement","src":"8026:47:9"},{"nodeType":"YulAssignment","src":"8082:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8216:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8090:124:9"},"nodeType":"YulFunctionCall","src":"8090:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8082:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7960:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7975:4:9","type":""}],"src":"7809:419:9"},{"body":{"nodeType":"YulBlock","src":"8405:248:9","statements":[{"nodeType":"YulAssignment","src":"8415:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8427:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8438:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8423:3:9"},"nodeType":"YulFunctionCall","src":"8423:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8415:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8462:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8473:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8458:3:9"},"nodeType":"YulFunctionCall","src":"8458:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8481:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"8487:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8477:3:9"},"nodeType":"YulFunctionCall","src":"8477:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8451:6:9"},"nodeType":"YulFunctionCall","src":"8451:47:9"},"nodeType":"YulExpressionStatement","src":"8451:47:9"},{"nodeType":"YulAssignment","src":"8507:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8641:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8515:124:9"},"nodeType":"YulFunctionCall","src":"8515:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8507:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8385:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8400:4:9","type":""}],"src":"8234:419:9"},{"body":{"nodeType":"YulBlock","src":"8757:124:9","statements":[{"nodeType":"YulAssignment","src":"8767:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8779:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8790:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8775:3:9"},"nodeType":"YulFunctionCall","src":"8775:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8767:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8847:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8860:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8871:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8856:3:9"},"nodeType":"YulFunctionCall","src":"8856:17:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8803:43:9"},"nodeType":"YulFunctionCall","src":"8803:71:9"},"nodeType":"YulExpressionStatement","src":"8803:71:9"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8729:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8741:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8752:4:9","type":""}],"src":"8659:222:9"},{"body":{"nodeType":"YulBlock","src":"8928:88:9","statements":[{"nodeType":"YulAssignment","src":"8938:30:9","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"8948:18:9"},"nodeType":"YulFunctionCall","src":"8948:20:9"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8938:6:9"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8997:6:9"},{"name":"size","nodeType":"YulIdentifier","src":"9005:4:9"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"8977:19:9"},"nodeType":"YulFunctionCall","src":"8977:33:9"},"nodeType":"YulExpressionStatement","src":"8977:33:9"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"8912:4:9","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"8921:6:9","type":""}],"src":"8887:129:9"},{"body":{"nodeType":"YulBlock","src":"9062:35:9","statements":[{"nodeType":"YulAssignment","src":"9072:19:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9088:2:9","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9082:5:9"},"nodeType":"YulFunctionCall","src":"9082:9:9"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9072:6:9"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"9055:6:9","type":""}],"src":"9022:75:9"},{"body":{"nodeType":"YulBlock","src":"9170:241:9","statements":[{"body":{"nodeType":"YulBlock","src":"9275:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9277:16:9"},"nodeType":"YulFunctionCall","src":"9277:18:9"},"nodeType":"YulExpressionStatement","src":"9277:18:9"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9247:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"9255:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9244:2:9"},"nodeType":"YulFunctionCall","src":"9244:30:9"},"nodeType":"YulIf","src":"9241:56:9"},{"nodeType":"YulAssignment","src":"9307:37:9","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9337:6:9"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9315:21:9"},"nodeType":"YulFunctionCall","src":"9315:29:9"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9307:4:9"}]},{"nodeType":"YulAssignment","src":"9381:23:9","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"9393:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"9399:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9389:3:9"},"nodeType":"YulFunctionCall","src":"9389:15:9"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9381:4:9"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"9154:6:9","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"9165:4:9","type":""}],"src":"9103:308:9"},{"body":{"nodeType":"YulBlock","src":"9476:40:9","statements":[{"nodeType":"YulAssignment","src":"9487:22:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9503:5:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9497:5:9"},"nodeType":"YulFunctionCall","src":"9497:12:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9487:6:9"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9459:5:9","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9469:6:9","type":""}],"src":"9417:99:9"},{"body":{"nodeType":"YulBlock","src":"9618:73:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9635:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"9640:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9628:6:9"},"nodeType":"YulFunctionCall","src":"9628:19:9"},"nodeType":"YulExpressionStatement","src":"9628:19:9"},{"nodeType":"YulAssignment","src":"9656:29:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9675:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"9680:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9671:3:9"},"nodeType":"YulFunctionCall","src":"9671:14:9"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9656:11:9"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9590:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"9595:6:9","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9606:11:9","type":""}],"src":"9522:169:9"},{"body":{"nodeType":"YulBlock","src":"9811:34:9","statements":[{"nodeType":"YulAssignment","src":"9821:18:9","value":{"name":"pos","nodeType":"YulIdentifier","src":"9836:3:9"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9821:11:9"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9783:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"9788:6:9","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9799:11:9","type":""}],"src":"9697:148:9"},{"body":{"nodeType":"YulBlock","src":"9896:51:9","statements":[{"nodeType":"YulAssignment","src":"9906:35:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9935:5:9"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9917:17:9"},"nodeType":"YulFunctionCall","src":"9917:24:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9906:7:9"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9878:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9888:7:9","type":""}],"src":"9851:96:9"},{"body":{"nodeType":"YulBlock","src":"9997:32:9","statements":[{"nodeType":"YulAssignment","src":"10007:16:9","value":{"name":"value","nodeType":"YulIdentifier","src":"10018:5:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10007:7:9"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9979:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9989:7:9","type":""}],"src":"9953:76:9"},{"body":{"nodeType":"YulBlock","src":"10080:81:9","statements":[{"nodeType":"YulAssignment","src":"10090:65:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10105:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"10112:42:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10101:3:9"},"nodeType":"YulFunctionCall","src":"10101:54:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10090:7:9"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10062:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10072:7:9","type":""}],"src":"10035:126:9"},{"body":{"nodeType":"YulBlock","src":"10212:32:9","statements":[{"nodeType":"YulAssignment","src":"10222:16:9","value":{"name":"value","nodeType":"YulIdentifier","src":"10233:5:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10222:7:9"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10194:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10204:7:9","type":""}],"src":"10167:77:9"},{"body":{"nodeType":"YulBlock","src":"10294:61:9","statements":[{"nodeType":"YulAssignment","src":"10304:45:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10319:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"10326:22:9","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10315:3:9"},"nodeType":"YulFunctionCall","src":"10315:34:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10304:7:9"}]}]},"name":"cleanup_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10276:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10286:7:9","type":""}],"src":"10250:105:9"},{"body":{"nodeType":"YulBlock","src":"10449:66:9","statements":[{"nodeType":"YulAssignment","src":"10459:50:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10503:5:9"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"10472:30:9"},"nodeType":"YulFunctionCall","src":"10472:37:9"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10459:9:9"}]}]},"name":"convert_t_contract$_AggregatorV3Interface_$45_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10429:5:9","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10439:9:9","type":""}],"src":"10361:154:9"},{"body":{"nodeType":"YulBlock","src":"10581:66:9","statements":[{"nodeType":"YulAssignment","src":"10591:50:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10635:5:9"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"10604:30:9"},"nodeType":"YulFunctionCall","src":"10604:37:9"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10591:9:9"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10561:5:9","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10571:9:9","type":""}],"src":"10521:126:9"},{"body":{"nodeType":"YulBlock","src":"10713:53:9","statements":[{"nodeType":"YulAssignment","src":"10723:37:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10754:5:9"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"10736:17:9"},"nodeType":"YulFunctionCall","src":"10736:24:9"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10723:9:9"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10693:5:9","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10703:9:9","type":""}],"src":"10653:113:9"},{"body":{"nodeType":"YulBlock","src":"10823:103:9","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10846:3:9"},{"name":"src","nodeType":"YulIdentifier","src":"10851:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"10856:6:9"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"10833:12:9"},"nodeType":"YulFunctionCall","src":"10833:30:9"},"nodeType":"YulExpressionStatement","src":"10833:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10904:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"10909:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10900:3:9"},"nodeType":"YulFunctionCall","src":"10900:16:9"},{"kind":"number","nodeType":"YulLiteral","src":"10918:1:9","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10893:6:9"},"nodeType":"YulFunctionCall","src":"10893:27:9"},"nodeType":"YulExpressionStatement","src":"10893:27:9"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10805:3:9","type":""},{"name":"dst","nodeType":"YulTypedName","src":"10810:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"10815:6:9","type":""}],"src":"10772:154:9"},{"body":{"nodeType":"YulBlock","src":"10981:258:9","statements":[{"nodeType":"YulVariableDeclaration","src":"10991:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"11000:1:9","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10995:1:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"11060:63:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11085:3:9"},{"name":"i","nodeType":"YulIdentifier","src":"11090:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11081:3:9"},"nodeType":"YulFunctionCall","src":"11081:11:9"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11104:3:9"},{"name":"i","nodeType":"YulIdentifier","src":"11109:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11100:3:9"},"nodeType":"YulFunctionCall","src":"11100:11:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11094:5:9"},"nodeType":"YulFunctionCall","src":"11094:18:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11074:6:9"},"nodeType":"YulFunctionCall","src":"11074:39:9"},"nodeType":"YulExpressionStatement","src":"11074:39:9"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11021:1:9"},{"name":"length","nodeType":"YulIdentifier","src":"11024:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11018:2:9"},"nodeType":"YulFunctionCall","src":"11018:13:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11032:19:9","statements":[{"nodeType":"YulAssignment","src":"11034:15:9","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11043:1:9"},{"kind":"number","nodeType":"YulLiteral","src":"11046:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11039:3:9"},"nodeType":"YulFunctionCall","src":"11039:10:9"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11034:1:9"}]}]},"pre":{"nodeType":"YulBlock","src":"11014:3:9","statements":[]},"src":"11010:113:9"},{"body":{"nodeType":"YulBlock","src":"11157:76:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11207:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"11212:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11203:3:9"},"nodeType":"YulFunctionCall","src":"11203:16:9"},{"kind":"number","nodeType":"YulLiteral","src":"11221:1:9","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11196:6:9"},"nodeType":"YulFunctionCall","src":"11196:27:9"},"nodeType":"YulExpressionStatement","src":"11196:27:9"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11138:1:9"},{"name":"length","nodeType":"YulIdentifier","src":"11141:6:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11135:2:9"},"nodeType":"YulFunctionCall","src":"11135:13:9"},"nodeType":"YulIf","src":"11132:101:9"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10963:3:9","type":""},{"name":"dst","nodeType":"YulTypedName","src":"10968:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"10973:6:9","type":""}],"src":"10932:307:9"},{"body":{"nodeType":"YulBlock","src":"11296:269:9","statements":[{"nodeType":"YulAssignment","src":"11306:22:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11320:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"11326:1:9","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11316:3:9"},"nodeType":"YulFunctionCall","src":"11316:12:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11306:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"11337:38:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11367:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"11373:1:9","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11363:3:9"},"nodeType":"YulFunctionCall","src":"11363:12:9"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"11341:18:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"11414:51:9","statements":[{"nodeType":"YulAssignment","src":"11428:27:9","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11442:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"11450:4:9","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11438:3:9"},"nodeType":"YulFunctionCall","src":"11438:17:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11428:6:9"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11394:18:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11387:6:9"},"nodeType":"YulFunctionCall","src":"11387:26:9"},"nodeType":"YulIf","src":"11384:81:9"},{"body":{"nodeType":"YulBlock","src":"11517:42:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"11531:16:9"},"nodeType":"YulFunctionCall","src":"11531:18:9"},"nodeType":"YulExpressionStatement","src":"11531:18:9"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11481:18:9"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11504:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"11512:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11501:2:9"},"nodeType":"YulFunctionCall","src":"11501:14:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11478:2:9"},"nodeType":"YulFunctionCall","src":"11478:38:9"},"nodeType":"YulIf","src":"11475:84:9"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11280:4:9","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11289:6:9","type":""}],"src":"11245:320:9"},{"body":{"nodeType":"YulBlock","src":"11614:238:9","statements":[{"nodeType":"YulVariableDeclaration","src":"11624:58:9","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11646:6:9"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"11676:4:9"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"11654:21:9"},"nodeType":"YulFunctionCall","src":"11654:27:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11642:3:9"},"nodeType":"YulFunctionCall","src":"11642:40:9"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"11628:10:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"11793:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"11795:16:9"},"nodeType":"YulFunctionCall","src":"11795:18:9"},"nodeType":"YulExpressionStatement","src":"11795:18:9"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"11736:10:9"},{"kind":"number","nodeType":"YulLiteral","src":"11748:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11733:2:9"},"nodeType":"YulFunctionCall","src":"11733:34:9"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"11772:10:9"},{"name":"memPtr","nodeType":"YulIdentifier","src":"11784:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11769:2:9"},"nodeType":"YulFunctionCall","src":"11769:22:9"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11730:2:9"},"nodeType":"YulFunctionCall","src":"11730:62:9"},"nodeType":"YulIf","src":"11727:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11831:2:9","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"11835:10:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11824:6:9"},"nodeType":"YulFunctionCall","src":"11824:22:9"},"nodeType":"YulExpressionStatement","src":"11824:22:9"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11600:6:9","type":""},{"name":"size","nodeType":"YulTypedName","src":"11608:4:9","type":""}],"src":"11571:281:9"},{"body":{"nodeType":"YulBlock","src":"11901:190:9","statements":[{"nodeType":"YulAssignment","src":"11911:33:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11938:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11920:17:9"},"nodeType":"YulFunctionCall","src":"11920:24:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11911:5:9"}]},{"body":{"nodeType":"YulBlock","src":"12034:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12036:16:9"},"nodeType":"YulFunctionCall","src":"12036:18:9"},"nodeType":"YulExpressionStatement","src":"12036:18:9"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11959:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"11966:66:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11956:2:9"},"nodeType":"YulFunctionCall","src":"11956:77:9"},"nodeType":"YulIf","src":"11953:103:9"},{"nodeType":"YulAssignment","src":"12065:20:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12076:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"12083:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12072:3:9"},"nodeType":"YulFunctionCall","src":"12072:13:9"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12065:3:9"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11887:5:9","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"11897:3:9","type":""}],"src":"11858:233:9"},{"body":{"nodeType":"YulBlock","src":"12125:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12142:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12145:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12135:6:9"},"nodeType":"YulFunctionCall","src":"12135:88:9"},"nodeType":"YulExpressionStatement","src":"12135:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12239:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12242:4:9","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12232:6:9"},"nodeType":"YulFunctionCall","src":"12232:15:9"},"nodeType":"YulExpressionStatement","src":"12232:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12263:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12266:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12256:6:9"},"nodeType":"YulFunctionCall","src":"12256:15:9"},"nodeType":"YulExpressionStatement","src":"12256:15:9"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"12097:180:9"},{"body":{"nodeType":"YulBlock","src":"12311:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12328:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12331:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12321:6:9"},"nodeType":"YulFunctionCall","src":"12321:88:9"},"nodeType":"YulExpressionStatement","src":"12321:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12425:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12428:4:9","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12418:6:9"},"nodeType":"YulFunctionCall","src":"12418:15:9"},"nodeType":"YulExpressionStatement","src":"12418:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12449:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12452:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12442:6:9"},"nodeType":"YulFunctionCall","src":"12442:15:9"},"nodeType":"YulExpressionStatement","src":"12442:15:9"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"12283:180:9"},{"body":{"nodeType":"YulBlock","src":"12497:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12514:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12517:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12507:6:9"},"nodeType":"YulFunctionCall","src":"12507:88:9"},"nodeType":"YulExpressionStatement","src":"12507:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12611:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12614:4:9","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12604:6:9"},"nodeType":"YulFunctionCall","src":"12604:15:9"},"nodeType":"YulExpressionStatement","src":"12604:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12635:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12638:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12628:6:9"},"nodeType":"YulFunctionCall","src":"12628:15:9"},"nodeType":"YulExpressionStatement","src":"12628:15:9"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"12469:180:9"},{"body":{"nodeType":"YulBlock","src":"12683:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12700:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12703:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12693:6:9"},"nodeType":"YulFunctionCall","src":"12693:88:9"},"nodeType":"YulExpressionStatement","src":"12693:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12797:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12800:4:9","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12790:6:9"},"nodeType":"YulFunctionCall","src":"12790:15:9"},"nodeType":"YulExpressionStatement","src":"12790:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12821:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12824:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12814:6:9"},"nodeType":"YulFunctionCall","src":"12814:15:9"},"nodeType":"YulExpressionStatement","src":"12814:15:9"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"12655:180:9"},{"body":{"nodeType":"YulBlock","src":"12930:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12947:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12950:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12940:6:9"},"nodeType":"YulFunctionCall","src":"12940:12:9"},"nodeType":"YulExpressionStatement","src":"12940:12:9"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"12841:117:9"},{"body":{"nodeType":"YulBlock","src":"13053:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13070:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13073:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13063:6:9"},"nodeType":"YulFunctionCall","src":"13063:12:9"},"nodeType":"YulExpressionStatement","src":"13063:12:9"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"12964:117:9"},{"body":{"nodeType":"YulBlock","src":"13176:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13193:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13196:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13186:6:9"},"nodeType":"YulFunctionCall","src":"13186:12:9"},"nodeType":"YulExpressionStatement","src":"13186:12:9"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"13087:117:9"},{"body":{"nodeType":"YulBlock","src":"13299:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13316:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13319:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13309:6:9"},"nodeType":"YulFunctionCall","src":"13309:12:9"},"nodeType":"YulExpressionStatement","src":"13309:12:9"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"13210:117:9"},{"body":{"nodeType":"YulBlock","src":"13381:54:9","statements":[{"nodeType":"YulAssignment","src":"13391:38:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13409:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"13416:2:9","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13405:3:9"},"nodeType":"YulFunctionCall","src":"13405:14:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13425:2:9","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13421:3:9"},"nodeType":"YulFunctionCall","src":"13421:7:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13401:3:9"},"nodeType":"YulFunctionCall","src":"13401:28:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13391:6:9"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13364:5:9","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"13374:6:9","type":""}],"src":"13333:102:9"},{"body":{"nodeType":"YulBlock","src":"13547:119:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13569:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"13577:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13565:3:9"},"nodeType":"YulFunctionCall","src":"13565:14:9"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"13581:34:9","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13558:6:9"},"nodeType":"YulFunctionCall","src":"13558:58:9"},"nodeType":"YulExpressionStatement","src":"13558:58:9"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13637:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"13645:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13633:3:9"},"nodeType":"YulFunctionCall","src":"13633:15:9"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"13650:8:9","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13626:6:9"},"nodeType":"YulFunctionCall","src":"13626:33:9"},"nodeType":"YulExpressionStatement","src":"13626:33:9"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13539:6:9","type":""}],"src":"13441:225:9"},{"body":{"nodeType":"YulBlock","src":"13778:68:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13800:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"13808:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13796:3:9"},"nodeType":"YulFunctionCall","src":"13796:14:9"},{"hexValue":"5072696365204665656420616c7265616479206164646564","kind":"string","nodeType":"YulLiteral","src":"13812:26:9","type":"","value":"Price Feed already added"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13789:6:9"},"nodeType":"YulFunctionCall","src":"13789:50:9"},"nodeType":"YulExpressionStatement","src":"13789:50:9"}]},"name":"store_literal_in_memory_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13770:6:9","type":""}],"src":"13672:174:9"},{"body":{"nodeType":"YulBlock","src":"13958:76:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13980:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"13988:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13976:3:9"},"nodeType":"YulFunctionCall","src":"13976:14:9"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"13992:34:9","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13969:6:9"},"nodeType":"YulFunctionCall","src":"13969:58:9"},"nodeType":"YulExpressionStatement","src":"13969:58:9"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13950:6:9","type":""}],"src":"13852:182:9"},{"body":{"nodeType":"YulBlock","src":"14083:79:9","statements":[{"body":{"nodeType":"YulBlock","src":"14140:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14149:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14152:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14142:6:9"},"nodeType":"YulFunctionCall","src":"14142:12:9"},"nodeType":"YulExpressionStatement","src":"14142:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14106:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14131:5:9"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"14113:17:9"},"nodeType":"YulFunctionCall","src":"14113:24:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14103:2:9"},"nodeType":"YulFunctionCall","src":"14103:35:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14096:6:9"},"nodeType":"YulFunctionCall","src":"14096:43:9"},"nodeType":"YulIf","src":"14093:63:9"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14076:5:9","type":""}],"src":"14040:122:9"},{"body":{"nodeType":"YulBlock","src":"14210:78:9","statements":[{"body":{"nodeType":"YulBlock","src":"14266:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14275:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14278:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14268:6:9"},"nodeType":"YulFunctionCall","src":"14268:12:9"},"nodeType":"YulExpressionStatement","src":"14268:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14233:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14257:5:9"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"14240:16:9"},"nodeType":"YulFunctionCall","src":"14240:23:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14230:2:9"},"nodeType":"YulFunctionCall","src":"14230:34:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14223:6:9"},"nodeType":"YulFunctionCall","src":"14223:42:9"},"nodeType":"YulIf","src":"14220:62:9"}]},"name":"validator_revert_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14203:5:9","type":""}],"src":"14168:120:9"},{"body":{"nodeType":"YulBlock","src":"14337:79:9","statements":[{"body":{"nodeType":"YulBlock","src":"14394:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14403:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14406:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14396:6:9"},"nodeType":"YulFunctionCall","src":"14396:12:9"},"nodeType":"YulExpressionStatement","src":"14396:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14360:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14385:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14367:17:9"},"nodeType":"YulFunctionCall","src":"14367:24:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14357:2:9"},"nodeType":"YulFunctionCall","src":"14357:35:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14350:6:9"},"nodeType":"YulFunctionCall","src":"14350:43:9"},"nodeType":"YulIf","src":"14347:63:9"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14330:5:9","type":""}],"src":"14294:122:9"},{"body":{"nodeType":"YulBlock","src":"14464:78:9","statements":[{"body":{"nodeType":"YulBlock","src":"14520:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14529:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14532:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14522:6:9"},"nodeType":"YulFunctionCall","src":"14522:12:9"},"nodeType":"YulExpressionStatement","src":"14522:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14487:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14511:5:9"}],"functionName":{"name":"cleanup_t_uint80","nodeType":"YulIdentifier","src":"14494:16:9"},"nodeType":"YulFunctionCall","src":"14494:23:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14484:2:9"},"nodeType":"YulFunctionCall","src":"14484:34:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14477:6:9"},"nodeType":"YulFunctionCall","src":"14477:42:9"},"nodeType":"YulIf","src":"14474:62:9"}]},"name":"validator_revert_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14457:5:9","type":""}],"src":"14422:120:9"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_addresst_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AggregatorV3Interface_$45_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_address_t_contract$_AggregatorV3Interface_$45__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function convert_t_contract$_AggregatorV3Interface_$45_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Price Feed already added\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n}\n","id":9,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100625760003560e01c806310c7f0b91461006757806341976e0914610099578063715018a6146100c95780638c35423e146100d35780638da5cb5b146100ef578063f2fde38b1461010d575b600080fd5b610081600480360381019061007c9190610cd3565b610129565b60405161009093929190610ead565b60405180910390f35b6100b360048036038101906100ae9190610c37565b61022b565b6040516100c09190610f4b565b60405180910390f35b6100d16102c9565b005b6100ed60048036038101906100e89190610c64565b6102dd565b005b6100f7610688565b6040516101049190610e92565b60405180910390f35b61012760048036038101906101229190610c37565b6106b1565b005b6001818154811061013957600080fd5b906000526020600020906003020160009150905080600001805461015c906110b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610188906110b7565b80156101d55780601f106101aa576101008083540402835291602001916101d5565b820191906000526020600020905b8154815290600101906020018083116101b857829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b60008061023783610735565b905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561028157600080fd5b505afa158015610295573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b99190610d00565b5050509150508092505050919050565b6102d1610971565b6102db60006109ef565b565b6102e5610971565b60006001805480602002602001604051908101604052809291908181526020016000905b82821015610479578382906000526020600020906003020160405180606001604052908160008201805461033c906110b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610368906110b7565b80156103b55780601f1061038a576101008083540402835291602001916103b5565b820191906000526020600020905b81548152906001019060200180831161039857829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190610309565b5050505090506000805b825181101561051a5782818151811061049f5761049e6111c1565b5b6020026020010151600001516040516020016104bb9190610e7b565b60405160208183030381529060405280519060200120866040516020016104e29190610e7b565b604051602081830303815290604052805190602001201415610507576001915061051a565b80806105129061111a565b915050610483565b50801561055c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055390610f0b565b60405180910390fd5b6000839050600160405180606001604052808881526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000190805190602001906105ef929190610abb565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106b9610971565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610729576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072090610eeb565b60405180910390fd5b610732816109ef565b50565b6000806001805480602002602001604051908101604052809291908181526020016000905b828210156108ca578382906000526020600020906003020160405180606001604052908160008201805461078d906110b7565b80601f01602080910402602001604051908101604052809291908181526020018280546107b9906110b7565b80156108065780601f106107db57610100808354040283529160200191610806565b820191906000526020600020905b8154815290600101906020018083116107e957829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508152602001906001019061075a565b50505050905060005b8151811015610969578181815181106108ef576108ee6111c1565b5b60200260200101516020015173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561095657818181518110610941576109406111c1565b5b6020026020010151604001519250505061096c565b80806109619061111a565b9150506108d3565b50505b919050565b610979610ab3565b73ffffffffffffffffffffffffffffffffffffffff16610997610688565b73ffffffffffffffffffffffffffffffffffffffff16146109ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e490610f2b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b828054610ac7906110b7565b90600052602060002090601f016020900481019282610ae95760008555610b30565b82601f10610b0257805160ff1916838001178555610b30565b82800160010185558215610b30579182015b82811115610b2f578251825591602001919060010190610b14565b5b509050610b3d9190610b41565b5090565b5b80821115610b5a576000816000905550600101610b42565b5090565b6000610b71610b6c84610f8b565b610f66565b905082815260208101848484011115610b8d57610b8c611224565b5b610b98848285611075565b509392505050565b600081359050610baf816112e5565b92915050565b600081519050610bc4816112fc565b92915050565b600082601f830112610bdf57610bde61121f565b5b8135610bef848260208601610b5e565b91505092915050565b600081359050610c0781611313565b92915050565b600081519050610c1c81611313565b92915050565b600081519050610c318161132a565b92915050565b600060208284031215610c4d57610c4c61122e565b5b6000610c5b84828501610ba0565b91505092915050565b600080600060608486031215610c7d57610c7c61122e565b5b600084013567ffffffffffffffff811115610c9b57610c9a611229565b5b610ca786828701610bca565b9350506020610cb886828701610ba0565b9250506040610cc986828701610ba0565b9150509250925092565b600060208284031215610ce957610ce861122e565b5b6000610cf784828501610bf8565b91505092915050565b600080600080600060a08688031215610d1c57610d1b61122e565b5b6000610d2a88828901610c22565b9550506020610d3b88828901610bb5565b9450506040610d4c88828901610c0d565b9350506060610d5d88828901610c0d565b9250506080610d6e88828901610c22565b9150509295509295909350565b610d8481610fe3565b82525050565b610d938161103f565b82525050565b6000610da482610fbc565b610dae8185610fc7565b9350610dbe818560208601611084565b610dc781611233565b840191505092915050565b6000610ddd82610fbc565b610de78185610fd8565b9350610df7818560208601611084565b80840191505092915050565b6000610e10602683610fc7565b9150610e1b82611244565b604082019050919050565b6000610e33601883610fc7565b9150610e3e82611293565b602082019050919050565b6000610e56602083610fc7565b9150610e61826112bc565b602082019050919050565b610e758161101f565b82525050565b6000610e878284610dd2565b915081905092915050565b6000602082019050610ea76000830184610d7b565b92915050565b60006060820190508181036000830152610ec78186610d99565b9050610ed66020830185610d7b565b610ee36040830184610d8a565b949350505050565b60006020820190508181036000830152610f0481610e03565b9050919050565b60006020820190508181036000830152610f2481610e26565b9050919050565b60006020820190508181036000830152610f4481610e49565b9050919050565b6000602082019050610f606000830184610e6c565b92915050565b6000610f70610f81565b9050610f7c82826110e9565b919050565b6000604051905090565b600067ffffffffffffffff821115610fa657610fa56111f0565b5b610faf82611233565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000610fee82610fff565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b600061104a82611051565b9050919050565b600061105c82611063565b9050919050565b600061106e82610fff565b9050919050565b82818337600083830152505050565b60005b838110156110a2578082015181840152602081019050611087565b838111156110b1576000848401525b50505050565b600060028204905060018216806110cf57607f821691505b602082108114156110e3576110e2611192565b5b50919050565b6110f282611233565b810181811067ffffffffffffffff82111715611111576111106111f0565b5b80604052505050565b60006111258261101f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561115857611157611163565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5072696365204665656420616c72656164792061646465640000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6112ee81610fe3565b81146112f957600080fd5b50565b61130581610ff5565b811461131057600080fd5b50565b61131c8161101f565b811461132757600080fd5b50565b61133381611029565b811461133e57600080fd5b5056fea2646970667358221220c35e7e8ecb7262f04ee52507df9a62a77b09793980be9195195c1e70958bbdd764736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x10C7F0B9 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x41976E09 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x8C35423E EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x10D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH2 0x129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x90 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAE SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH2 0x2C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xC64 JUMP JUMPDEST PUSH2 0x2DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF7 PUSH2 0x688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x6B1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x15C SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x188 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x237 DUP4 PUSH2 0x735 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x295 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0xD00 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x971 JUMP JUMPDEST PUSH2 0x2DB PUSH1 0x0 PUSH2 0x9EF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2E5 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x479 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x33C SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x368 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x38A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3B5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x398 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x309 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x51A JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x49F JUMPI PUSH2 0x49E PUSH2 0x11C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4E2 SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0x507 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x51A JUMP JUMPDEST DUP1 DUP1 PUSH2 0x512 SWAP1 PUSH2 0x111A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x483 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x553 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x5EF SWAP3 SWAP2 SWAP1 PUSH2 0xABB JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6B9 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x729 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x720 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x732 DUP2 PUSH2 0x9EF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x8CA JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x78D SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7B9 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x806 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7DB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x806 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7E9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x75A JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x969 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x8EF JUMPI PUSH2 0x8EE PUSH2 0x11C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x956 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x941 JUMPI PUSH2 0x940 PUSH2 0x11C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD SWAP3 POP POP POP PUSH2 0x96C JUMP JUMPDEST DUP1 DUP1 PUSH2 0x961 SWAP1 PUSH2 0x111A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8D3 JUMP JUMPDEST POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x979 PUSH2 0xAB3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x997 PUSH2 0x688 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E4 SWAP1 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xAC7 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xAE9 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xB30 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xB02 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xB30 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xB30 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB2F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB14 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0xB41 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xB5A JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xB42 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB71 PUSH2 0xB6C DUP5 PUSH2 0xF8B JUMP JUMPDEST PUSH2 0xF66 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xB8D JUMPI PUSH2 0xB8C PUSH2 0x1224 JUMP JUMPDEST JUMPDEST PUSH2 0xB98 DUP5 DUP3 DUP6 PUSH2 0x1075 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBAF DUP2 PUSH2 0x12E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xBC4 DUP2 PUSH2 0x12FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBDF JUMPI PUSH2 0xBDE PUSH2 0x121F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBEF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xB5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC07 DUP2 PUSH2 0x1313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC1C DUP2 PUSH2 0x1313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC31 DUP2 PUSH2 0x132A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC4D JUMPI PUSH2 0xC4C PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC5B DUP5 DUP3 DUP6 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC7D JUMPI PUSH2 0xC7C PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC9B JUMPI PUSH2 0xC9A PUSH2 0x1229 JUMP JUMPDEST JUMPDEST PUSH2 0xCA7 DUP7 DUP3 DUP8 ADD PUSH2 0xBCA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCB8 DUP7 DUP3 DUP8 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCC9 DUP7 DUP3 DUP8 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE9 JUMPI PUSH2 0xCE8 PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCF7 DUP5 DUP3 DUP6 ADD PUSH2 0xBF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD1C JUMPI PUSH2 0xD1B PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD2A DUP9 DUP3 DUP10 ADD PUSH2 0xC22 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xD3B DUP9 DUP3 DUP10 ADD PUSH2 0xBB5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xD4C DUP9 DUP3 DUP10 ADD PUSH2 0xC0D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xD5D DUP9 DUP3 DUP10 ADD PUSH2 0xC0D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xD6E DUP9 DUP3 DUP10 ADD PUSH2 0xC22 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0xD84 DUP2 PUSH2 0xFE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD93 DUP2 PUSH2 0x103F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA4 DUP3 PUSH2 0xFBC JUMP JUMPDEST PUSH2 0xDAE DUP2 DUP6 PUSH2 0xFC7 JUMP JUMPDEST SWAP4 POP PUSH2 0xDBE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1084 JUMP JUMPDEST PUSH2 0xDC7 DUP2 PUSH2 0x1233 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDD DUP3 PUSH2 0xFBC JUMP JUMPDEST PUSH2 0xDE7 DUP2 DUP6 PUSH2 0xFD8 JUMP JUMPDEST SWAP4 POP PUSH2 0xDF7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1084 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE10 PUSH1 0x26 DUP4 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE1B DUP3 PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE33 PUSH1 0x18 DUP4 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE3E DUP3 PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE56 PUSH1 0x20 DUP4 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE61 DUP3 PUSH2 0x12BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE75 DUP2 PUSH2 0x101F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE87 DUP3 DUP5 PUSH2 0xDD2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEA7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEC7 DUP2 DUP7 PUSH2 0xD99 JUMP JUMPDEST SWAP1 POP PUSH2 0xED6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0xEE3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD8A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF04 DUP2 PUSH2 0xE03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF24 DUP2 PUSH2 0xE26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF44 DUP2 PUSH2 0xE49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF60 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF70 PUSH2 0xF81 JUMP JUMPDEST SWAP1 POP PUSH2 0xF7C DUP3 DUP3 PUSH2 0x10E9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xFA6 JUMPI PUSH2 0xFA5 PUSH2 0x11F0 JUMP JUMPDEST JUMPDEST PUSH2 0xFAF DUP3 PUSH2 0x1233 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFEE DUP3 PUSH2 0xFFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104A DUP3 PUSH2 0x1051 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105C DUP3 PUSH2 0x1063 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x106E DUP3 PUSH2 0xFFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10A2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1087 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x10B1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10CF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x10E3 JUMPI PUSH2 0x10E2 PUSH2 0x1192 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F2 DUP3 PUSH2 0x1233 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1111 JUMPI PUSH2 0x1110 PUSH2 0x11F0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1125 DUP3 PUSH2 0x101F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1158 JUMPI PUSH2 0x1157 PUSH2 0x1163 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5072696365204665656420616C72656164792061646465640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x12EE DUP2 PUSH2 0xFE3 JUMP JUMPDEST DUP2 EQ PUSH2 0x12F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1305 DUP2 PUSH2 0xFF5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x131C DUP2 PUSH2 0x101F JUMP JUMPDEST DUP2 EQ PUSH2 0x1327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1333 DUP2 PUSH2 0x1029 JUMP JUMPDEST DUP2 EQ PUSH2 0x133E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0x5E PUSH31 0x8ECB7262F04EE52507DF9A62A77B09793980BE9195195C1E70958BBDD76473 PUSH16 0x6C634300080700330000000000000000 ","sourceMap":"194:1570:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;234:30;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1521:240;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:1;;;:::i;:::-;;438:713:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;234:30:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1521:240::-;1580:7;1600:31;1634:22;1647:8;1634:12;:22::i;:::-;1600:56;;1670:13;1693:9;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1667:53;;;;;;1746:6;1731:22;;;;1521:240;;;:::o;1831:101:1:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;438:713:5:-;1094:13:1;:11;:13::i;:::-;579:29:5::1;611:10;579:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;632:12;668:9:::0;663:285:::1;687:9;:16;683:1;:20;663:285;;;829:9;839:1;829:12;;;;;;;;:::i;:::-;;;;;;;;:17;;;812:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;802:46;;;;;;774:5;757:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;747:34;;;;;;:101;725:212;;;893:4;883:14;;916:5;;725:212;705:3;;;;;:::i;:::-;;;;663:285;;;;967:7;966:8;958:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;1014:31;1070:8;1014:65;;1090:10;1106:36;;;;;;;;1117:5;1106:36;;;;1124:6;1106:36;;;;;;1132:9;1106:36;;;;::::0;1090:53:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;568:583;;;438:713:::0;;;:::o;1201:85:1:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2081:198::-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1159:354:5:-;1236:31;1280:29;1312:10;1280:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1340:9;1335:171;1359:9;:16;1355:1;:20;1335:171;;;1411:9;1421:1;1411:12;;;;;;;;:::i;:::-;;;;;;;;:18;;;1401:28;;:6;:28;;;1397:98;;;1457:9;1467:1;1457:12;;;;;;;;:::i;:::-;;;;;;;;:22;;;1450:29;;;;;;1397:98;1377:3;;;;;:::i;:::-;;;;1335:171;;;;1269:244;1159:354;;;;:::o;1359:130:1:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:412:9:-;85:5;110:66;126:49;168:6;126:49;:::i;:::-;110:66;:::i;:::-;101:75;;199:6;192:5;185:21;237:4;230:5;226:16;275:3;266:6;261:3;257:16;254:25;251:112;;;282:79;;:::i;:::-;251:112;372:41;406:6;401:3;396;372:41;:::i;:::-;91:328;7:412;;;;;:::o;425:139::-;471:5;509:6;496:20;487:29;;525:33;552:5;525:33;:::i;:::-;425:139;;;;:::o;570:141::-;626:5;657:6;651:13;642:22;;673:32;699:5;673:32;:::i;:::-;570:141;;;;:::o;731:340::-;787:5;836:3;829:4;821:6;817:17;813:27;803:122;;844:79;;:::i;:::-;803:122;961:6;948:20;986:79;1061:3;1053:6;1046:4;1038:6;1034:17;986:79;:::i;:::-;977:88;;793:278;731:340;;;;:::o;1077:139::-;1123:5;1161:6;1148:20;1139:29;;1177:33;1204:5;1177:33;:::i;:::-;1077:139;;;;:::o;1222:143::-;1279:5;1310:6;1304:13;1295:22;;1326:33;1353:5;1326:33;:::i;:::-;1222:143;;;;:::o;1371:141::-;1427:5;1458:6;1452:13;1443:22;;1474:32;1500:5;1474:32;:::i;:::-;1371:141;;;;:::o;1518:329::-;1577:6;1626:2;1614:9;1605:7;1601:23;1597:32;1594:119;;;1632:79;;:::i;:::-;1594:119;1752:1;1777:53;1822:7;1813:6;1802:9;1798:22;1777:53;:::i;:::-;1767:63;;1723:117;1518:329;;;;:::o;1853:799::-;1940:6;1948;1956;2005:2;1993:9;1984:7;1980:23;1976:32;1973:119;;;2011:79;;:::i;:::-;1973:119;2159:1;2148:9;2144:17;2131:31;2189:18;2181:6;2178:30;2175:117;;;2211:79;;:::i;:::-;2175:117;2316:63;2371:7;2362:6;2351:9;2347:22;2316:63;:::i;:::-;2306:73;;2102:287;2428:2;2454:53;2499:7;2490:6;2479:9;2475:22;2454:53;:::i;:::-;2444:63;;2399:118;2556:2;2582:53;2627:7;2618:6;2607:9;2603:22;2582:53;:::i;:::-;2572:63;;2527:118;1853:799;;;;;:::o;2658:329::-;2717:6;2766:2;2754:9;2745:7;2741:23;2737:32;2734:119;;;2772:79;;:::i;:::-;2734:119;2892:1;2917:53;2962:7;2953:6;2942:9;2938:22;2917:53;:::i;:::-;2907:63;;2863:117;2658:329;;;;:::o;2993:971::-;3096:6;3104;3112;3120;3128;3177:3;3165:9;3156:7;3152:23;3148:33;3145:120;;;3184:79;;:::i;:::-;3145:120;3304:1;3329:63;3384:7;3375:6;3364:9;3360:22;3329:63;:::i;:::-;3319:73;;3275:127;3441:2;3467:63;3522:7;3513:6;3502:9;3498:22;3467:63;:::i;:::-;3457:73;;3412:128;3579:2;3605:64;3661:7;3652:6;3641:9;3637:22;3605:64;:::i;:::-;3595:74;;3550:129;3718:2;3744:64;3800:7;3791:6;3780:9;3776:22;3744:64;:::i;:::-;3734:74;;3689:129;3857:3;3884:63;3939:7;3930:6;3919:9;3915:22;3884:63;:::i;:::-;3874:73;;3828:129;2993:971;;;;;;;;:::o;3970:118::-;4057:24;4075:5;4057:24;:::i;:::-;4052:3;4045:37;3970:118;;:::o;4094:187::-;4209:65;4268:5;4209:65;:::i;:::-;4204:3;4197:78;4094:187;;:::o;4287:364::-;4375:3;4403:39;4436:5;4403:39;:::i;:::-;4458:71;4522:6;4517:3;4458:71;:::i;:::-;4451:78;;4538:52;4583:6;4578:3;4571:4;4564:5;4560:16;4538:52;:::i;:::-;4615:29;4637:6;4615:29;:::i;:::-;4610:3;4606:39;4599:46;;4379:272;4287:364;;;;:::o;4657:377::-;4763:3;4791:39;4824:5;4791:39;:::i;:::-;4846:89;4928:6;4923:3;4846:89;:::i;:::-;4839:96;;4944:52;4989:6;4984:3;4977:4;4970:5;4966:16;4944:52;:::i;:::-;5021:6;5016:3;5012:16;5005:23;;4767:267;4657:377;;;;:::o;5040:366::-;5182:3;5203:67;5267:2;5262:3;5203:67;:::i;:::-;5196:74;;5279:93;5368:3;5279:93;:::i;:::-;5397:2;5392:3;5388:12;5381:19;;5040:366;;;:::o;5412:::-;5554:3;5575:67;5639:2;5634:3;5575:67;:::i;:::-;5568:74;;5651:93;5740:3;5651:93;:::i;:::-;5769:2;5764:3;5760:12;5753:19;;5412:366;;;:::o;5784:::-;5926:3;5947:67;6011:2;6006:3;5947:67;:::i;:::-;5940:74;;6023:93;6112:3;6023:93;:::i;:::-;6141:2;6136:3;6132:12;6125:19;;5784:366;;;:::o;6156:118::-;6243:24;6261:5;6243:24;:::i;:::-;6238:3;6231:37;6156:118;;:::o;6280:275::-;6412:3;6434:95;6525:3;6516:6;6434:95;:::i;:::-;6427:102;;6546:3;6539:10;;6280:275;;;;:::o;6561:222::-;6654:4;6692:2;6681:9;6677:18;6669:26;;6705:71;6773:1;6762:9;6758:17;6749:6;6705:71;:::i;:::-;6561:222;;;;:::o;6789:589::-;6986:4;7024:2;7013:9;7009:18;7001:26;;7073:9;7067:4;7063:20;7059:1;7048:9;7044:17;7037:47;7101:78;7174:4;7165:6;7101:78;:::i;:::-;7093:86;;7189:72;7257:2;7246:9;7242:18;7233:6;7189:72;:::i;:::-;7271:100;7367:2;7356:9;7352:18;7343:6;7271:100;:::i;:::-;6789:589;;;;;;:::o;7384:419::-;7550:4;7588:2;7577:9;7573:18;7565:26;;7637:9;7631:4;7627:20;7623:1;7612:9;7608:17;7601:47;7665:131;7791:4;7665:131;:::i;:::-;7657:139;;7384:419;;;:::o;7809:::-;7975:4;8013:2;8002:9;7998:18;7990:26;;8062:9;8056:4;8052:20;8048:1;8037:9;8033:17;8026:47;8090:131;8216:4;8090:131;:::i;:::-;8082:139;;7809:419;;;:::o;8234:::-;8400:4;8438:2;8427:9;8423:18;8415:26;;8487:9;8481:4;8477:20;8473:1;8462:9;8458:17;8451:47;8515:131;8641:4;8515:131;:::i;:::-;8507:139;;8234:419;;;:::o;8659:222::-;8752:4;8790:2;8779:9;8775:18;8767:26;;8803:71;8871:1;8860:9;8856:17;8847:6;8803:71;:::i;:::-;8659:222;;;;:::o;8887:129::-;8921:6;8948:20;;:::i;:::-;8938:30;;8977:33;9005:4;8997:6;8977:33;:::i;:::-;8887:129;;;:::o;9022:75::-;9055:6;9088:2;9082:9;9072:19;;9022:75;:::o;9103:308::-;9165:4;9255:18;9247:6;9244:30;9241:56;;;9277:18;;:::i;:::-;9241:56;9315:29;9337:6;9315:29;:::i;:::-;9307:37;;9399:4;9393;9389:15;9381:23;;9103:308;;;:::o;9417:99::-;9469:6;9503:5;9497:12;9487:22;;9417:99;;;:::o;9522:169::-;9606:11;9640:6;9635:3;9628:19;9680:4;9675:3;9671:14;9656:29;;9522:169;;;;:::o;9697:148::-;9799:11;9836:3;9821:18;;9697:148;;;;:::o;9851:96::-;9888:7;9917:24;9935:5;9917:24;:::i;:::-;9906:35;;9851:96;;;:::o;9953:76::-;9989:7;10018:5;10007:16;;9953:76;;;:::o;10035:126::-;10072:7;10112:42;10105:5;10101:54;10090:65;;10035:126;;;:::o;10167:77::-;10204:7;10233:5;10222:16;;10167:77;;;:::o;10250:105::-;10286:7;10326:22;10319:5;10315:34;10304:45;;10250:105;;;:::o;10361:154::-;10439:9;10472:37;10503:5;10472:37;:::i;:::-;10459:50;;10361:154;;;:::o;10521:126::-;10571:9;10604:37;10635:5;10604:37;:::i;:::-;10591:50;;10521:126;;;:::o;10653:113::-;10703:9;10736:24;10754:5;10736:24;:::i;:::-;10723:37;;10653:113;;;:::o;10772:154::-;10856:6;10851:3;10846;10833:30;10918:1;10909:6;10904:3;10900:16;10893:27;10772:154;;;:::o;10932:307::-;11000:1;11010:113;11024:6;11021:1;11018:13;11010:113;;;11109:1;11104:3;11100:11;11094:18;11090:1;11085:3;11081:11;11074:39;11046:2;11043:1;11039:10;11034:15;;11010:113;;;11141:6;11138:1;11135:13;11132:101;;;11221:1;11212:6;11207:3;11203:16;11196:27;11132:101;10981:258;10932:307;;;:::o;11245:320::-;11289:6;11326:1;11320:4;11316:12;11306:22;;11373:1;11367:4;11363:12;11394:18;11384:81;;11450:4;11442:6;11438:17;11428:27;;11384:81;11512:2;11504:6;11501:14;11481:18;11478:38;11475:84;;;11531:18;;:::i;:::-;11475:84;11296:269;11245:320;;;:::o;11571:281::-;11654:27;11676:4;11654:27;:::i;:::-;11646:6;11642:40;11784:6;11772:10;11769:22;11748:18;11736:10;11733:34;11730:62;11727:88;;;11795:18;;:::i;:::-;11727:88;11835:10;11831:2;11824:22;11614:238;11571:281;;:::o;11858:233::-;11897:3;11920:24;11938:5;11920:24;:::i;:::-;11911:33;;11966:66;11959:5;11956:77;11953:103;;;12036:18;;:::i;:::-;11953:103;12083:1;12076:5;12072:13;12065:20;;11858:233;;;:::o;12097:180::-;12145:77;12142:1;12135:88;12242:4;12239:1;12232:15;12266:4;12263:1;12256:15;12283:180;12331:77;12328:1;12321:88;12428:4;12425:1;12418:15;12452:4;12449:1;12442:15;12469:180;12517:77;12514:1;12507:88;12614:4;12611:1;12604:15;12638:4;12635:1;12628:15;12655:180;12703:77;12700:1;12693:88;12800:4;12797:1;12790:15;12824:4;12821:1;12814:15;12841:117;12950:1;12947;12940:12;12964:117;13073:1;13070;13063:12;13087:117;13196:1;13193;13186:12;13210:117;13319:1;13316;13309:12;13333:102;13374:6;13425:2;13421:7;13416:2;13409:5;13405:14;13401:28;13391:38;;13333:102;;;:::o;13441:225::-;13581:34;13577:1;13569:6;13565:14;13558:58;13650:8;13645:2;13637:6;13633:15;13626:33;13441:225;:::o;13672:174::-;13812:26;13808:1;13800:6;13796:14;13789:50;13672:174;:::o;13852:182::-;13992:34;13988:1;13980:6;13976:14;13969:58;13852:182;:::o;14040:122::-;14113:24;14131:5;14113:24;:::i;:::-;14106:5;14103:35;14093:63;;14152:1;14149;14142:12;14093:63;14040:122;:::o;14168:120::-;14240:23;14257:5;14240:23;:::i;:::-;14233:5;14230:34;14220:62;;14278:1;14275;14268:12;14220:62;14168:120;:::o;14294:122::-;14367:24;14385:5;14367:24;:::i;:::-;14360:5;14357:35;14347:63;;14406:1;14403;14396:12;14347:63;14294:122;:::o;14422:120::-;14494:23;14511:5;14494:23;:::i;:::-;14487:5;14484:34;14474:62;;14532:1;14529;14522:12;14474:62;14422:120;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"996600","executionCost":"infinite","totalCost":"infinite"},"external":{"addPriceFeed(string,address,address)":"infinite","getPrice(address)":"infinite","owner()":"2588","priceFeeds(uint256)":"infinite","renounceOwnership()":"30420","transferOwnership(address)":"30835"},"internal":{"getPriceFeed(address)":"infinite"}},"methodIdentifiers":{"addPriceFeed(string,address,address)":"8c35423e","getPrice(address)":"41976e09","owner()":"8da5cb5b","priceFeeds(uint256)":"10c7f0b9","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"priceFeeds\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PriceChecker.sol\":\"PriceChecker\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/PriceChecker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract PriceChecker is Ownable {\\r\\n    _priceFeed[] public priceFeeds;\\r\\n\\r\\n    struct _priceFeed {\\r\\n        string name;\\r\\n        address token;\\r\\n        AggregatorV3Interface priceFeed;\\r\\n    }\\r\\n\\r\\n    //only using PriceFeeds pegged to USD\\r\\n    function addPriceFeed(\\r\\n        string memory _name,\\r\\n        address _token,\\r\\n        address _address\\r\\n    ) external onlyOwner {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n        bool isAdded = false;\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (\\r\\n                keccak256(abi.encodePacked(_name)) ==\\r\\n                keccak256(abi.encodePacked(pricefeed[i].name))\\r\\n            ) {\\r\\n                isAdded = true;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        require(!isAdded, \\\"Price Feed already added\\\");\\r\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(_address);\\r\\n        priceFeeds.push(_priceFeed(_name, _token, priceFeed));\\r\\n    }\\r\\n\\r\\n    function getPriceFeed(\\r\\n        address _token\\r\\n    ) internal view returns (AggregatorV3Interface priceFeed) {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (_token == pricefeed[i].token) {\\r\\n                return pricefeed[i].priceFeed;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getPrice(address _address) external view returns (uint256) {\\r\\n        AggregatorV3Interface priceFeed = getPriceFeed(_address);\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(answer);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf1e1d97a9c555133c6a90fdc333e79e819ffaffd68d9c9579684b49413dda07c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":53,"contract":"contracts/PriceChecker.sol:PriceChecker","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":2406,"contract":"contracts/PriceChecker.sol:PriceChecker","label":"priceFeeds","offset":0,"slot":"1","type":"t_array(t_struct(_priceFeed)2414_storage)dyn_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(_priceFeed)2414_storage)dyn_storage":{"base":"t_struct(_priceFeed)2414_storage","encoding":"dynamic_array","label":"struct PriceChecker._priceFeed[]","numberOfBytes":"32"},"t_contract(AggregatorV3Interface)45":{"encoding":"inplace","label":"contract AggregatorV3Interface","numberOfBytes":"20"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(_priceFeed)2414_storage":{"encoding":"inplace","label":"struct PriceChecker._priceFeed","members":[{"astId":2408,"contract":"contracts/PriceChecker.sol:PriceChecker","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":2410,"contract":"contracts/PriceChecker.sol:PriceChecker","label":"token","offset":0,"slot":"1","type":"t_address"},{"astId":2413,"contract":"contracts/PriceChecker.sol:PriceChecker","label":"priceFeed","offset":0,"slot":"2","type":"t_contract(AggregatorV3Interface)45"}],"numberOfBytes":"96"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/TradingFees.sol":{"TradingFees":{"abi":[{"inputs":[{"internalType":"address","name":"_priceCheckerAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"aDAI","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_refToken","type":"address"},{"internalType":"uint256","name":"_fees","type":"uint256"}],"name":"amountTokensToDeduct","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_fees","type":"uint256"}],"name":"amountaDAIToDeduct","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_rate","type":"uint256"},{"internalType":"address","name":"_refToken","type":"address"}],"name":"calculateFees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_fees","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"checkSufficientaDAI","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"daiToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_PriceCheckeraddress","type":"address"}],"name":"setPriceCheckerAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_Walletaddress","type":"address"}],"name":"setWalletAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2612":{"entryPoint":null,"id":2612,"parameterSlots":1,"returnSlots":0},"@_69":{"entryPoint":null,"id":69,"parameterSlots":0,"returnSlots":0},"@_msgSender_170":{"entryPoint":341,"id":170,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_157":{"entryPoint":349,"id":157,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":545,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":568,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":618,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":638,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":670,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":675,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1199:9","statements":[{"body":{"nodeType":"YulBlock","src":"70:80:9","statements":[{"nodeType":"YulAssignment","src":"80:22:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"89:5:9"},"nodeType":"YulFunctionCall","src":"89:13:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"80:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"138:5:9"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"111:26:9"},"nodeType":"YulFunctionCall","src":"111:33:9"},"nodeType":"YulExpressionStatement","src":"111:33:9"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"56:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:9","type":""}],"src":"7:143:9"},{"body":{"nodeType":"YulBlock","src":"233:274:9","statements":[{"body":{"nodeType":"YulBlock","src":"279:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"281:77:9"},"nodeType":"YulFunctionCall","src":"281:79:9"},"nodeType":"YulExpressionStatement","src":"281:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"254:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"263:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"250:3:9"},"nodeType":"YulFunctionCall","src":"250:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"275:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"246:3:9"},"nodeType":"YulFunctionCall","src":"246:32:9"},"nodeType":"YulIf","src":"243:119:9"},{"nodeType":"YulBlock","src":"372:128:9","statements":[{"nodeType":"YulVariableDeclaration","src":"387:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"401:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"391:6:9","type":""}]},{"nodeType":"YulAssignment","src":"416:74:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"462:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"473:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"458:3:9"},"nodeType":"YulFunctionCall","src":"458:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"482:7:9"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"426:31:9"},"nodeType":"YulFunctionCall","src":"426:64:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"416:6:9"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"203:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"214:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"226:6:9","type":""}],"src":"156:351:9"},{"body":{"nodeType":"YulBlock","src":"553:35:9","statements":[{"nodeType":"YulAssignment","src":"563:19:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"579:2:9","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"573:5:9"},"nodeType":"YulFunctionCall","src":"573:9:9"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"563:6:9"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"546:6:9","type":""}],"src":"513:75:9"},{"body":{"nodeType":"YulBlock","src":"639:51:9","statements":[{"nodeType":"YulAssignment","src":"649:35:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"678:5:9"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"660:17:9"},"nodeType":"YulFunctionCall","src":"660:24:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"649:7:9"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"621:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"631:7:9","type":""}],"src":"594:96:9"},{"body":{"nodeType":"YulBlock","src":"741:81:9","statements":[{"nodeType":"YulAssignment","src":"751:65:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"766:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"773:42:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"762:3:9"},"nodeType":"YulFunctionCall","src":"762:54:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"751:7:9"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"723:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"733:7:9","type":""}],"src":"696:126:9"},{"body":{"nodeType":"YulBlock","src":"917:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"934:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"937:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"927:6:9"},"nodeType":"YulFunctionCall","src":"927:12:9"},"nodeType":"YulExpressionStatement","src":"927:12:9"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"828:117:9"},{"body":{"nodeType":"YulBlock","src":"1040:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1057:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1060:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1050:6:9"},"nodeType":"YulFunctionCall","src":"1050:12:9"},"nodeType":"YulExpressionStatement","src":"1050:12:9"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"951:117:9"},{"body":{"nodeType":"YulBlock","src":"1117:79:9","statements":[{"body":{"nodeType":"YulBlock","src":"1174:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1183:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1186:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1176:6:9"},"nodeType":"YulFunctionCall","src":"1176:12:9"},"nodeType":"YulExpressionStatement","src":"1176:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1140:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1165:5:9"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1147:17:9"},"nodeType":"YulFunctionCall","src":"1147:24:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1137:2:9"},"nodeType":"YulFunctionCall","src":"1137:35:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1130:6:9"},"nodeType":"YulFunctionCall","src":"1130:43:9"},"nodeType":"YulIf","src":"1127:63:9"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1110:5:9","type":""}],"src":"1074:122:9"}]},"contents":"{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n","id":9,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6080604052670de0b6b3a764000060015573ba8dced3512925e52fe67b1b5329187589072a55600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073add98b0342e4094ec32f3b67ccfd3242c876ff7a600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550348015620000c757600080fd5b506040516200113f3803806200113f8339818101604052810190620000ed919062000238565b6200010d620001016200015560201b60201c565b6200015d60201b60201c565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620002bd565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200023281620002a3565b92915050565b6000602082840312156200025157620002506200029e565b5b6000620002618482850162000221565b91505092915050565b600062000277826200027e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b620002ae816200026a565b8114620002ba57600080fd5b50565b610e7280620002cd6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063ac1a386a11610071578063ac1a386a14610154578063b136e39a14610170578063b98ee4191461018c578063be22f546146101bc578063ca8963f1146101da578063f2fde38b1461020a576100a9565b80631a38a4fb146100ae578063513ffedd146100cc578063715018a6146100fc5780638da5cb5b14610106578063a42963e914610124575b600080fd5b6100b6610226565b6040516100c39190610b95565b60405180910390f35b6100e660048036038101906100e19190610acf565b61024c565b6040516100f39190610c34565b60405180910390f35b61010461038a565b005b61010e61039e565b60405161011b9190610b95565b60405180910390f35b61013e60048036038101906101399190610a35565b6103c7565b60405161014b9190610c34565b60405180910390f35b61016e600480360381019061016991906109c8565b6104e5565b005b61018a600480360381019061018591906109c8565b610531565b005b6101a660048036038101906101a191906109f5565b61057d565b6040516101b39190610c34565b60405180910390f35b6101c461067a565b6040516101d19190610b95565b60405180910390f35b6101f460048036038101906101ef9190610a8f565b6106a0565b6040516102019190610bd9565b60405180910390f35b610224600480360381019061021f91906109c8565b61078f565b005b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09846040518263ffffffff1660e01b81526004016102aa9190610b95565b60206040518083038186803b1580156102c257600080fd5b505afa1580156102d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fa9190610a62565b9050600061036260015461035461031f6402540be4008661081390919063ffffffff16565b6103466001546103388b8d61081390919063ffffffff16565b61082990919063ffffffff16565b61081390919063ffffffff16565b61082990919063ffffffff16565b9050600061037b6127108361082990919063ffffffff16565b90508093505050509392505050565b61039261083f565b61039c60006108bd565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016104479190610b95565b60206040518083038186803b15801561045f57600080fd5b505afa158015610473573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104979190610a62565b905060006104d96104b66402540be4008461081390919063ffffffff16565b6104cb6001548761081390919063ffffffff16565b61082990919063ffffffff16565b90508092505050919050565b6104ed61083f565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61053961083f565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09856040518263ffffffff1660e01b81526004016105db9190610b95565b60206040518083038186803b1580156105f357600080fd5b505afa158015610607573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062b9190610a62565b9050600061066d61064a6402540be4008461081390919063ffffffff16565b61065f6001548761081390919063ffffffff16565b61082990919063ffffffff16565b9050809250505092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106ac846103c7565b90506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cd5d767c600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518363ffffffff1660e01b815260040161072f929190610bb0565b60206040518083038186803b15801561074757600080fd5b505afa15801561075b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077f9190610a62565b9050818110159250505092915050565b61079761083f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610807576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fe90610bf4565b60405180910390fd5b610810816108bd565b50565b600081836108219190610c91565b905092915050565b600081836108379190610c60565b905092915050565b610847610981565b73ffffffffffffffffffffffffffffffffffffffff1661086561039e565b73ffffffffffffffffffffffffffffffffffffffff16146108bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b290610c14565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60008135905061099881610e0e565b92915050565b6000813590506109ad81610e25565b92915050565b6000815190506109c281610e25565b92915050565b6000602082840312156109de576109dd610d91565b5b60006109ec84828501610989565b91505092915050565b60008060408385031215610a0c57610a0b610d91565b5b6000610a1a85828601610989565b9250506020610a2b8582860161099e565b9150509250929050565b600060208284031215610a4b57610a4a610d91565b5b6000610a598482850161099e565b91505092915050565b600060208284031215610a7857610a77610d91565b5b6000610a86848285016109b3565b91505092915050565b60008060408385031215610aa657610aa5610d91565b5b6000610ab48582860161099e565b9250506020610ac585828601610989565b9150509250929050565b600080600060608486031215610ae857610ae7610d91565b5b6000610af68682870161099e565b9350506020610b078682870161099e565b9250506040610b1886828701610989565b9150509250925092565b610b2b81610ceb565b82525050565b610b3a81610cfd565b82525050565b6000610b4d602683610c4f565b9150610b5882610d96565b604082019050919050565b6000610b70602083610c4f565b9150610b7b82610de5565b602082019050919050565b610b8f81610d29565b82525050565b6000602082019050610baa6000830184610b22565b92915050565b6000604082019050610bc56000830185610b22565b610bd26020830184610b22565b9392505050565b6000602082019050610bee6000830184610b31565b92915050565b60006020820190508181036000830152610c0d81610b40565b9050919050565b60006020820190508181036000830152610c2d81610b63565b9050919050565b6000602082019050610c496000830184610b86565b92915050565b600082825260208201905092915050565b6000610c6b82610d29565b9150610c7683610d29565b925082610c8657610c85610d62565b5b828204905092915050565b6000610c9c82610d29565b9150610ca783610d29565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ce057610cdf610d33565b5b828202905092915050565b6000610cf682610d09565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610e1781610ceb565b8114610e2257600080fd5b50565b610e2e81610d29565b8114610e3957600080fd5b5056fea26469706673582212202cd149feac31ca6181aa74ef42fa26528ac6a06652324cd03efe3e2a3bdbfd2764736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 SSTORE PUSH20 0xBA8DCED3512925E52FE67B1B5329187589072A55 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xADD98B0342E4094EC32F3B67CCFD3242C876FF7A PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0xC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x113F CODESIZE SUB DUP1 PUSH3 0x113F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0xED SWAP2 SWAP1 PUSH3 0x238 JUMP JUMPDEST PUSH3 0x10D PUSH3 0x101 PUSH3 0x155 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x15D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x2BD JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x232 DUP2 PUSH3 0x2A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x251 JUMPI PUSH3 0x250 PUSH3 0x29E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x261 DUP5 DUP3 DUP6 ADD PUSH3 0x221 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x277 DUP3 PUSH3 0x27E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2AE DUP2 PUSH3 0x26A JUMP JUMPDEST DUP2 EQ PUSH3 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xE72 DUP1 PUSH3 0x2CD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAC1A386A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xAC1A386A EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xB136E39A EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0xB98EE419 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xBE22F546 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0xCA8963F1 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x20A JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x1A38A4FB EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x513FFEDD EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xA42963E9 EQ PUSH2 0x124 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x226 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xACF JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x38A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10E PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11B SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x139 SWAP2 SWAP1 PUSH2 0xA35 JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x201 SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x78F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x362 PUSH1 0x1 SLOAD PUSH2 0x354 PUSH2 0x31F PUSH5 0x2540BE400 DUP7 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x346 PUSH1 0x1 SLOAD PUSH2 0x338 DUP12 DUP14 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x37B PUSH2 0x2710 DUP4 PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x392 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x39C PUSH1 0x0 PUSH2 0x8BD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x447 SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x473 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x497 SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4D9 PUSH2 0x4B6 PUSH5 0x2540BE400 DUP5 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4CB PUSH1 0x1 SLOAD DUP8 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4ED PUSH2 0x83F JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x539 PUSH2 0x83F JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x607 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62B SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x66D PUSH2 0x64A PUSH5 0x2540BE400 DUP5 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x65F PUSH1 0x1 SLOAD DUP8 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6AC DUP5 PUSH2 0x3C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCD5D767C PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72F SWAP3 SWAP2 SWAP1 PUSH2 0xBB0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x77F SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x797 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x807 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FE SWAP1 PUSH2 0xBF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x810 DUP2 PUSH2 0x8BD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x821 SWAP2 SWAP1 PUSH2 0xC91 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x837 SWAP2 SWAP1 PUSH2 0xC60 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x847 PUSH2 0x981 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x865 PUSH2 0x39E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B2 SWAP1 PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x998 DUP2 PUSH2 0xE0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9AD DUP2 PUSH2 0xE25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x9C2 DUP2 PUSH2 0xE25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9DE JUMPI PUSH2 0x9DD PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9EC DUP5 DUP3 DUP6 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA0C JUMPI PUSH2 0xA0B PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA1A DUP6 DUP3 DUP7 ADD PUSH2 0x989 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA2B DUP6 DUP3 DUP7 ADD PUSH2 0x99E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA4B JUMPI PUSH2 0xA4A PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA59 DUP5 DUP3 DUP6 ADD PUSH2 0x99E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA78 JUMPI PUSH2 0xA77 PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA86 DUP5 DUP3 DUP6 ADD PUSH2 0x9B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAA6 JUMPI PUSH2 0xAA5 PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAB4 DUP6 DUP3 DUP7 ADD PUSH2 0x99E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAC5 DUP6 DUP3 DUP7 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xAE8 JUMPI PUSH2 0xAE7 PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAF6 DUP7 DUP3 DUP8 ADD PUSH2 0x99E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB07 DUP7 DUP3 DUP8 ADD PUSH2 0x99E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB18 DUP7 DUP3 DUP8 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xB2B DUP2 PUSH2 0xCEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB3A DUP2 PUSH2 0xCFD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB4D PUSH1 0x26 DUP4 PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP PUSH2 0xB58 DUP3 PUSH2 0xD96 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB70 PUSH1 0x20 DUP4 PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP PUSH2 0xB7B DUP3 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8F DUP2 PUSH2 0xD29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBAA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB22 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBC5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xB22 JUMP JUMPDEST PUSH2 0xBD2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB22 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBEE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC0D DUP2 PUSH2 0xB40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC2D DUP2 PUSH2 0xB63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC49 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC6B DUP3 PUSH2 0xD29 JUMP JUMPDEST SWAP2 POP PUSH2 0xC76 DUP4 PUSH2 0xD29 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xC86 JUMPI PUSH2 0xC85 PUSH2 0xD62 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9C DUP3 PUSH2 0xD29 JUMP JUMPDEST SWAP2 POP PUSH2 0xCA7 DUP4 PUSH2 0xD29 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xCE0 JUMPI PUSH2 0xCDF PUSH2 0xD33 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF6 DUP3 PUSH2 0xD09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xE17 DUP2 PUSH2 0xCEB JUMP JUMPDEST DUP2 EQ PUSH2 0xE22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xE2E DUP2 PUSH2 0xD29 JUMP JUMPDEST DUP2 EQ PUSH2 0xE39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xD1 0x49 INVALID 0xAC BALANCE 0xCA PUSH2 0x81AA PUSH21 0xEF42FA26528AC6A06652324CD03EFE3E2A3BDBFD27 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"382:2965:6:-:0;;;1009:8;990:27;;1067:42;1024:86;;;;;;;;;;;;;;;;;;;;1172:42;1142:73;;;;;;;;;;;;;;;;;;;;1298:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:1;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1376:20:6;1351:9;;:46;;;;;;;;;;;;;;;;;;1298:107;382:2965;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2433:187:1:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;7:143:9:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;382:2965:6:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_100":{"entryPoint":2111,"id":100,"parameterSlots":0,"returnSlots":0},"@_msgSender_170":{"entryPoint":2433,"id":170,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_157":{"entryPoint":2237,"id":157,"parameterSlots":1,"returnSlots":0},"@aDAI_2594":{"entryPoint":550,"id":2594,"parameterSlots":0,"returnSlots":0},"@amountTokensToDeduct_2738":{"entryPoint":1405,"id":2738,"parameterSlots":2,"returnSlots":1},"@amountaDAIToDeduct_2701":{"entryPoint":967,"id":2701,"parameterSlots":1,"returnSlots":1},"@calculateFees_2666":{"entryPoint":588,"id":2666,"parameterSlots":3,"returnSlots":1},"@checkSufficientaDAI_2766":{"entryPoint":1696,"id":2766,"parameterSlots":2,"returnSlots":1},"@daiToken_2588":{"entryPoint":1658,"id":2588,"parameterSlots":0,"returnSlots":0},"@div_401":{"entryPoint":2089,"id":401,"parameterSlots":2,"returnSlots":1},"@mul_386":{"entryPoint":2067,"id":386,"parameterSlots":2,"returnSlots":1},"@owner_86":{"entryPoint":926,"id":86,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_114":{"entryPoint":906,"id":114,"parameterSlots":0,"returnSlots":0},"@setPriceCheckerAddress_2794":{"entryPoint":1329,"id":2794,"parameterSlots":1,"returnSlots":0},"@setWalletAddress_2780":{"entryPoint":1253,"id":2780,"parameterSlots":1,"returnSlots":0},"@transferOwnership_137":{"entryPoint":1935,"id":137,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":2441,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2462,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":2483,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2504,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2549,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":2613,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":2658,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":2703,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_address":{"entryPoint":2767,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2850,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2865,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":2880,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":2915,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2950,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2965,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":2992,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3033,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3060,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3092,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3124,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3151,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":3168,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":3217,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3307,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3325,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3337,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3369,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3379,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":3426,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3473,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":3478,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":3557,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3598,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3621,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8529:9","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:9","statements":[{"nodeType":"YulAssignment","src":"69:29:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:9"},"nodeType":"YulFunctionCall","src":"78:20:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:9"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:9"},"nodeType":"YulFunctionCall","src":"107:33:9"},"nodeType":"YulExpressionStatement","src":"107:33:9"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:9","type":""}],"src":"7:139:9"},{"body":{"nodeType":"YulBlock","src":"204:87:9","statements":[{"nodeType":"YulAssignment","src":"214:29:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"236:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"223:12:9"},"nodeType":"YulFunctionCall","src":"223:20:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"214:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"279:5:9"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"252:26:9"},"nodeType":"YulFunctionCall","src":"252:33:9"},"nodeType":"YulExpressionStatement","src":"252:33:9"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"182:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"190:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"198:5:9","type":""}],"src":"152:139:9"},{"body":{"nodeType":"YulBlock","src":"360:80:9","statements":[{"nodeType":"YulAssignment","src":"370:22:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"385:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"379:5:9"},"nodeType":"YulFunctionCall","src":"379:13:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"370:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"428:5:9"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"401:26:9"},"nodeType":"YulFunctionCall","src":"401:33:9"},"nodeType":"YulExpressionStatement","src":"401:33:9"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"338:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"346:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"354:5:9","type":""}],"src":"297:143:9"},{"body":{"nodeType":"YulBlock","src":"512:263:9","statements":[{"body":{"nodeType":"YulBlock","src":"558:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"560:77:9"},"nodeType":"YulFunctionCall","src":"560:79:9"},"nodeType":"YulExpressionStatement","src":"560:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"533:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"542:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"529:3:9"},"nodeType":"YulFunctionCall","src":"529:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"554:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"525:3:9"},"nodeType":"YulFunctionCall","src":"525:32:9"},"nodeType":"YulIf","src":"522:119:9"},{"nodeType":"YulBlock","src":"651:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"666:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"680:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"670:6:9","type":""}]},{"nodeType":"YulAssignment","src":"695:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"730:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"741:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"726:3:9"},"nodeType":"YulFunctionCall","src":"726:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"750:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"705:20:9"},"nodeType":"YulFunctionCall","src":"705:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"695:6:9"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"482:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"493:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"505:6:9","type":""}],"src":"446:329:9"},{"body":{"nodeType":"YulBlock","src":"864:391:9","statements":[{"body":{"nodeType":"YulBlock","src":"910:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"912:77:9"},"nodeType":"YulFunctionCall","src":"912:79:9"},"nodeType":"YulExpressionStatement","src":"912:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"885:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"894:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"881:3:9"},"nodeType":"YulFunctionCall","src":"881:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"906:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"877:3:9"},"nodeType":"YulFunctionCall","src":"877:32:9"},"nodeType":"YulIf","src":"874:119:9"},{"nodeType":"YulBlock","src":"1003:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1018:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1032:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1022:6:9","type":""}]},{"nodeType":"YulAssignment","src":"1047:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1082:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1093:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1078:3:9"},"nodeType":"YulFunctionCall","src":"1078:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1102:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1057:20:9"},"nodeType":"YulFunctionCall","src":"1057:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1047:6:9"}]}]},{"nodeType":"YulBlock","src":"1130:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1145:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1159:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1149:6:9","type":""}]},{"nodeType":"YulAssignment","src":"1175:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1210:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1221:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1206:3:9"},"nodeType":"YulFunctionCall","src":"1206:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1230:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1185:20:9"},"nodeType":"YulFunctionCall","src":"1185:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1175:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"826:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"837:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"849:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"857:6:9","type":""}],"src":"781:474:9"},{"body":{"nodeType":"YulBlock","src":"1327:263:9","statements":[{"body":{"nodeType":"YulBlock","src":"1373:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1375:77:9"},"nodeType":"YulFunctionCall","src":"1375:79:9"},"nodeType":"YulExpressionStatement","src":"1375:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1348:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"1357:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1344:3:9"},"nodeType":"YulFunctionCall","src":"1344:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"1369:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1340:3:9"},"nodeType":"YulFunctionCall","src":"1340:32:9"},"nodeType":"YulIf","src":"1337:119:9"},{"nodeType":"YulBlock","src":"1466:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1481:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1495:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1485:6:9","type":""}]},{"nodeType":"YulAssignment","src":"1510:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1545:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1556:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1541:3:9"},"nodeType":"YulFunctionCall","src":"1541:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1565:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1520:20:9"},"nodeType":"YulFunctionCall","src":"1520:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1510:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1297:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1308:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1320:6:9","type":""}],"src":"1261:329:9"},{"body":{"nodeType":"YulBlock","src":"1673:274:9","statements":[{"body":{"nodeType":"YulBlock","src":"1719:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1721:77:9"},"nodeType":"YulFunctionCall","src":"1721:79:9"},"nodeType":"YulExpressionStatement","src":"1721:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1694:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"1703:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1690:3:9"},"nodeType":"YulFunctionCall","src":"1690:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"1715:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1686:3:9"},"nodeType":"YulFunctionCall","src":"1686:32:9"},"nodeType":"YulIf","src":"1683:119:9"},{"nodeType":"YulBlock","src":"1812:128:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1827:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1841:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1831:6:9","type":""}]},{"nodeType":"YulAssignment","src":"1856:74:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1902:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1913:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1898:3:9"},"nodeType":"YulFunctionCall","src":"1898:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1922:7:9"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"1866:31:9"},"nodeType":"YulFunctionCall","src":"1866:64:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1856:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1643:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1654:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1666:6:9","type":""}],"src":"1596:351:9"},{"body":{"nodeType":"YulBlock","src":"2036:391:9","statements":[{"body":{"nodeType":"YulBlock","src":"2082:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2084:77:9"},"nodeType":"YulFunctionCall","src":"2084:79:9"},"nodeType":"YulExpressionStatement","src":"2084:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2057:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"2066:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2053:3:9"},"nodeType":"YulFunctionCall","src":"2053:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"2078:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2049:3:9"},"nodeType":"YulFunctionCall","src":"2049:32:9"},"nodeType":"YulIf","src":"2046:119:9"},{"nodeType":"YulBlock","src":"2175:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2190:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2204:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2194:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2219:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2254:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2265:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2250:3:9"},"nodeType":"YulFunctionCall","src":"2250:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2274:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2229:20:9"},"nodeType":"YulFunctionCall","src":"2229:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2219:6:9"}]}]},{"nodeType":"YulBlock","src":"2302:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2317:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2331:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2321:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2347:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2382:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2393:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2378:3:9"},"nodeType":"YulFunctionCall","src":"2378:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2402:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2357:20:9"},"nodeType":"YulFunctionCall","src":"2357:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2347:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1998:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2009:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2021:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2029:6:9","type":""}],"src":"1953:474:9"},{"body":{"nodeType":"YulBlock","src":"2533:519:9","statements":[{"body":{"nodeType":"YulBlock","src":"2579:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2581:77:9"},"nodeType":"YulFunctionCall","src":"2581:79:9"},"nodeType":"YulExpressionStatement","src":"2581:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2554:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"2563:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2550:3:9"},"nodeType":"YulFunctionCall","src":"2550:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"2575:2:9","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2546:3:9"},"nodeType":"YulFunctionCall","src":"2546:32:9"},"nodeType":"YulIf","src":"2543:119:9"},{"nodeType":"YulBlock","src":"2672:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2687:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2701:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2691:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2716:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2751:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2762:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2747:3:9"},"nodeType":"YulFunctionCall","src":"2747:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2771:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2726:20:9"},"nodeType":"YulFunctionCall","src":"2726:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2716:6:9"}]}]},{"nodeType":"YulBlock","src":"2799:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2814:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2828:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2818:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2844:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2879:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2890:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2875:3:9"},"nodeType":"YulFunctionCall","src":"2875:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2899:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2854:20:9"},"nodeType":"YulFunctionCall","src":"2854:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2844:6:9"}]}]},{"nodeType":"YulBlock","src":"2927:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2942:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2956:2:9","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2946:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2972:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3007:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"3018:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3003:3:9"},"nodeType":"YulFunctionCall","src":"3003:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3027:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2982:20:9"},"nodeType":"YulFunctionCall","src":"2982:53:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2972:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2487:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2498:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2510:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2518:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2526:6:9","type":""}],"src":"2433:619:9"},{"body":{"nodeType":"YulBlock","src":"3123:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3140:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3163:5:9"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3145:17:9"},"nodeType":"YulFunctionCall","src":"3145:24:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3133:6:9"},"nodeType":"YulFunctionCall","src":"3133:37:9"},"nodeType":"YulExpressionStatement","src":"3133:37:9"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3111:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3118:3:9","type":""}],"src":"3058:118:9"},{"body":{"nodeType":"YulBlock","src":"3241:50:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3258:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3278:5:9"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3263:14:9"},"nodeType":"YulFunctionCall","src":"3263:21:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3251:6:9"},"nodeType":"YulFunctionCall","src":"3251:34:9"},"nodeType":"YulExpressionStatement","src":"3251:34:9"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3229:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3236:3:9","type":""}],"src":"3182:109:9"},{"body":{"nodeType":"YulBlock","src":"3443:220:9","statements":[{"nodeType":"YulAssignment","src":"3453:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3519:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"3524:2:9","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3460:58:9"},"nodeType":"YulFunctionCall","src":"3460:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3453:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3625:3:9"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"3536:88:9"},"nodeType":"YulFunctionCall","src":"3536:93:9"},"nodeType":"YulExpressionStatement","src":"3536:93:9"},{"nodeType":"YulAssignment","src":"3638:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3649:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"3654:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3645:3:9"},"nodeType":"YulFunctionCall","src":"3645:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3638:3:9"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3431:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3439:3:9","type":""}],"src":"3297:366:9"},{"body":{"nodeType":"YulBlock","src":"3815:220:9","statements":[{"nodeType":"YulAssignment","src":"3825:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3891:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"3896:2:9","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3832:58:9"},"nodeType":"YulFunctionCall","src":"3832:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3825:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3997:3:9"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"3908:88:9"},"nodeType":"YulFunctionCall","src":"3908:93:9"},"nodeType":"YulExpressionStatement","src":"3908:93:9"},{"nodeType":"YulAssignment","src":"4010:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4021:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"4026:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4017:3:9"},"nodeType":"YulFunctionCall","src":"4017:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4010:3:9"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3803:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3811:3:9","type":""}],"src":"3669:366:9"},{"body":{"nodeType":"YulBlock","src":"4106:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4123:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4146:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4128:17:9"},"nodeType":"YulFunctionCall","src":"4128:24:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4116:6:9"},"nodeType":"YulFunctionCall","src":"4116:37:9"},"nodeType":"YulExpressionStatement","src":"4116:37:9"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4094:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4101:3:9","type":""}],"src":"4041:118:9"},{"body":{"nodeType":"YulBlock","src":"4263:124:9","statements":[{"nodeType":"YulAssignment","src":"4273:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4285:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4296:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4281:3:9"},"nodeType":"YulFunctionCall","src":"4281:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4273:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4353:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4366:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4377:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4362:3:9"},"nodeType":"YulFunctionCall","src":"4362:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4309:43:9"},"nodeType":"YulFunctionCall","src":"4309:71:9"},"nodeType":"YulExpressionStatement","src":"4309:71:9"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4235:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4247:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4258:4:9","type":""}],"src":"4165:222:9"},{"body":{"nodeType":"YulBlock","src":"4519:206:9","statements":[{"nodeType":"YulAssignment","src":"4529:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4541:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4552:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4537:3:9"},"nodeType":"YulFunctionCall","src":"4537:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4529:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4609:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4622:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4633:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4618:3:9"},"nodeType":"YulFunctionCall","src":"4618:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4565:43:9"},"nodeType":"YulFunctionCall","src":"4565:71:9"},"nodeType":"YulExpressionStatement","src":"4565:71:9"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4690:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4703:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4714:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4699:3:9"},"nodeType":"YulFunctionCall","src":"4699:18:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4646:43:9"},"nodeType":"YulFunctionCall","src":"4646:72:9"},"nodeType":"YulExpressionStatement","src":"4646:72:9"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4483:9:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4495:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4503:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4514:4:9","type":""}],"src":"4393:332:9"},{"body":{"nodeType":"YulBlock","src":"4823:118:9","statements":[{"nodeType":"YulAssignment","src":"4833:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4845:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4856:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4841:3:9"},"nodeType":"YulFunctionCall","src":"4841:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4833:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4907:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4920:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4931:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4916:3:9"},"nodeType":"YulFunctionCall","src":"4916:17:9"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"4869:37:9"},"nodeType":"YulFunctionCall","src":"4869:65:9"},"nodeType":"YulExpressionStatement","src":"4869:65:9"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4795:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4807:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4818:4:9","type":""}],"src":"4731:210:9"},{"body":{"nodeType":"YulBlock","src":"5118:248:9","statements":[{"nodeType":"YulAssignment","src":"5128:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5140:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5151:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5136:3:9"},"nodeType":"YulFunctionCall","src":"5136:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5128:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5175:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5186:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5171:3:9"},"nodeType":"YulFunctionCall","src":"5171:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5194:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"5200:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5190:3:9"},"nodeType":"YulFunctionCall","src":"5190:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5164:6:9"},"nodeType":"YulFunctionCall","src":"5164:47:9"},"nodeType":"YulExpressionStatement","src":"5164:47:9"},{"nodeType":"YulAssignment","src":"5220:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5354:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5228:124:9"},"nodeType":"YulFunctionCall","src":"5228:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5220:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5098:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5113:4:9","type":""}],"src":"4947:419:9"},{"body":{"nodeType":"YulBlock","src":"5543:248:9","statements":[{"nodeType":"YulAssignment","src":"5553:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5565:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5576:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5561:3:9"},"nodeType":"YulFunctionCall","src":"5561:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5553:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5600:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5611:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5596:3:9"},"nodeType":"YulFunctionCall","src":"5596:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5619:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"5625:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5615:3:9"},"nodeType":"YulFunctionCall","src":"5615:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5589:6:9"},"nodeType":"YulFunctionCall","src":"5589:47:9"},"nodeType":"YulExpressionStatement","src":"5589:47:9"},{"nodeType":"YulAssignment","src":"5645:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5779:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5653:124:9"},"nodeType":"YulFunctionCall","src":"5653:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5645:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5523:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5538:4:9","type":""}],"src":"5372:419:9"},{"body":{"nodeType":"YulBlock","src":"5895:124:9","statements":[{"nodeType":"YulAssignment","src":"5905:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5917:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5928:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5913:3:9"},"nodeType":"YulFunctionCall","src":"5913:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5905:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5985:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5998:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"6009:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5994:3:9"},"nodeType":"YulFunctionCall","src":"5994:17:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5941:43:9"},"nodeType":"YulFunctionCall","src":"5941:71:9"},"nodeType":"YulExpressionStatement","src":"5941:71:9"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5867:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5879:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5890:4:9","type":""}],"src":"5797:222:9"},{"body":{"nodeType":"YulBlock","src":"6065:35:9","statements":[{"nodeType":"YulAssignment","src":"6075:19:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6091:2:9","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6085:5:9"},"nodeType":"YulFunctionCall","src":"6085:9:9"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6075:6:9"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6058:6:9","type":""}],"src":"6025:75:9"},{"body":{"nodeType":"YulBlock","src":"6202:73:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6219:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"6224:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6212:6:9"},"nodeType":"YulFunctionCall","src":"6212:19:9"},"nodeType":"YulExpressionStatement","src":"6212:19:9"},{"nodeType":"YulAssignment","src":"6240:29:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6259:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"6264:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6255:3:9"},"nodeType":"YulFunctionCall","src":"6255:14:9"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6240:11:9"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6174:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"6179:6:9","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6190:11:9","type":""}],"src":"6106:169:9"},{"body":{"nodeType":"YulBlock","src":"6323:143:9","statements":[{"nodeType":"YulAssignment","src":"6333:25:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6356:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6338:17:9"},"nodeType":"YulFunctionCall","src":"6338:20:9"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6333:1:9"}]},{"nodeType":"YulAssignment","src":"6367:25:9","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6390:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6372:17:9"},"nodeType":"YulFunctionCall","src":"6372:20:9"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6367:1:9"}]},{"body":{"nodeType":"YulBlock","src":"6414:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"6416:16:9"},"nodeType":"YulFunctionCall","src":"6416:18:9"},"nodeType":"YulExpressionStatement","src":"6416:18:9"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6411:1:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6404:6:9"},"nodeType":"YulFunctionCall","src":"6404:9:9"},"nodeType":"YulIf","src":"6401:35:9"},{"nodeType":"YulAssignment","src":"6446:14:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6455:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"6458:1:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6451:3:9"},"nodeType":"YulFunctionCall","src":"6451:9:9"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6446:1:9"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6312:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"6315:1:9","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"6321:1:9","type":""}],"src":"6281:185:9"},{"body":{"nodeType":"YulBlock","src":"6520:300:9","statements":[{"nodeType":"YulAssignment","src":"6530:25:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6553:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6535:17:9"},"nodeType":"YulFunctionCall","src":"6535:20:9"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6530:1:9"}]},{"nodeType":"YulAssignment","src":"6564:25:9","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6587:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6569:17:9"},"nodeType":"YulFunctionCall","src":"6569:20:9"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6564:1:9"}]},{"body":{"nodeType":"YulBlock","src":"6762:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6764:16:9"},"nodeType":"YulFunctionCall","src":"6764:18:9"},"nodeType":"YulExpressionStatement","src":"6764:18:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6674:1:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6667:6:9"},"nodeType":"YulFunctionCall","src":"6667:9:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6660:6:9"},"nodeType":"YulFunctionCall","src":"6660:17:9"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6682:1:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6689:66:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"6757:1:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6685:3:9"},"nodeType":"YulFunctionCall","src":"6685:74:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6679:2:9"},"nodeType":"YulFunctionCall","src":"6679:81:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6656:3:9"},"nodeType":"YulFunctionCall","src":"6656:105:9"},"nodeType":"YulIf","src":"6653:131:9"},{"nodeType":"YulAssignment","src":"6794:20:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6809:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"6812:1:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6805:3:9"},"nodeType":"YulFunctionCall","src":"6805:9:9"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"6794:7:9"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6503:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"6506:1:9","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"6512:7:9","type":""}],"src":"6472:348:9"},{"body":{"nodeType":"YulBlock","src":"6871:51:9","statements":[{"nodeType":"YulAssignment","src":"6881:35:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6910:5:9"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"6892:17:9"},"nodeType":"YulFunctionCall","src":"6892:24:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6881:7:9"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6853:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6863:7:9","type":""}],"src":"6826:96:9"},{"body":{"nodeType":"YulBlock","src":"6970:48:9","statements":[{"nodeType":"YulAssignment","src":"6980:32:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7005:5:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6998:6:9"},"nodeType":"YulFunctionCall","src":"6998:13:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6991:6:9"},"nodeType":"YulFunctionCall","src":"6991:21:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6980:7:9"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6952:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6962:7:9","type":""}],"src":"6928:90:9"},{"body":{"nodeType":"YulBlock","src":"7069:81:9","statements":[{"nodeType":"YulAssignment","src":"7079:65:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7094:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"7101:42:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7090:3:9"},"nodeType":"YulFunctionCall","src":"7090:54:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7079:7:9"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7051:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7061:7:9","type":""}],"src":"7024:126:9"},{"body":{"nodeType":"YulBlock","src":"7201:32:9","statements":[{"nodeType":"YulAssignment","src":"7211:16:9","value":{"name":"value","nodeType":"YulIdentifier","src":"7222:5:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7211:7:9"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7183:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7193:7:9","type":""}],"src":"7156:77:9"},{"body":{"nodeType":"YulBlock","src":"7267:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7284:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7287:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7277:6:9"},"nodeType":"YulFunctionCall","src":"7277:88:9"},"nodeType":"YulExpressionStatement","src":"7277:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7381:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7384:4:9","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7374:6:9"},"nodeType":"YulFunctionCall","src":"7374:15:9"},"nodeType":"YulExpressionStatement","src":"7374:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7405:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7408:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7398:6:9"},"nodeType":"YulFunctionCall","src":"7398:15:9"},"nodeType":"YulExpressionStatement","src":"7398:15:9"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"7239:180:9"},{"body":{"nodeType":"YulBlock","src":"7453:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7470:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7473:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7463:6:9"},"nodeType":"YulFunctionCall","src":"7463:88:9"},"nodeType":"YulExpressionStatement","src":"7463:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7567:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7570:4:9","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7560:6:9"},"nodeType":"YulFunctionCall","src":"7560:15:9"},"nodeType":"YulExpressionStatement","src":"7560:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7591:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7594:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7584:6:9"},"nodeType":"YulFunctionCall","src":"7584:15:9"},"nodeType":"YulExpressionStatement","src":"7584:15:9"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"7425:180:9"},{"body":{"nodeType":"YulBlock","src":"7700:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7717:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7720:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7710:6:9"},"nodeType":"YulFunctionCall","src":"7710:12:9"},"nodeType":"YulExpressionStatement","src":"7710:12:9"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"7611:117:9"},{"body":{"nodeType":"YulBlock","src":"7823:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7840:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7843:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7833:6:9"},"nodeType":"YulFunctionCall","src":"7833:12:9"},"nodeType":"YulExpressionStatement","src":"7833:12:9"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"7734:117:9"},{"body":{"nodeType":"YulBlock","src":"7963:119:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7985:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"7993:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7981:3:9"},"nodeType":"YulFunctionCall","src":"7981:14:9"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"7997:34:9","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7974:6:9"},"nodeType":"YulFunctionCall","src":"7974:58:9"},"nodeType":"YulExpressionStatement","src":"7974:58:9"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8053:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"8061:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8049:3:9"},"nodeType":"YulFunctionCall","src":"8049:15:9"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"8066:8:9","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8042:6:9"},"nodeType":"YulFunctionCall","src":"8042:33:9"},"nodeType":"YulExpressionStatement","src":"8042:33:9"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7955:6:9","type":""}],"src":"7857:225:9"},{"body":{"nodeType":"YulBlock","src":"8194:76:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8216:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"8224:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8212:3:9"},"nodeType":"YulFunctionCall","src":"8212:14:9"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"8228:34:9","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8205:6:9"},"nodeType":"YulFunctionCall","src":"8205:58:9"},"nodeType":"YulExpressionStatement","src":"8205:58:9"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8186:6:9","type":""}],"src":"8088:182:9"},{"body":{"nodeType":"YulBlock","src":"8319:79:9","statements":[{"body":{"nodeType":"YulBlock","src":"8376:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8385:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8388:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8378:6:9"},"nodeType":"YulFunctionCall","src":"8378:12:9"},"nodeType":"YulExpressionStatement","src":"8378:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8342:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8367:5:9"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8349:17:9"},"nodeType":"YulFunctionCall","src":"8349:24:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8339:2:9"},"nodeType":"YulFunctionCall","src":"8339:35:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8332:6:9"},"nodeType":"YulFunctionCall","src":"8332:43:9"},"nodeType":"YulIf","src":"8329:63:9"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8312:5:9","type":""}],"src":"8276:122:9"},{"body":{"nodeType":"YulBlock","src":"8447:79:9","statements":[{"body":{"nodeType":"YulBlock","src":"8504:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8513:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8516:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8506:6:9"},"nodeType":"YulFunctionCall","src":"8506:12:9"},"nodeType":"YulExpressionStatement","src":"8506:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8470:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8495:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8477:17:9"},"nodeType":"YulFunctionCall","src":"8477:24:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8467:2:9"},"nodeType":"YulFunctionCall","src":"8467:35:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8460:6:9"},"nodeType":"YulFunctionCall","src":"8460:43:9"},"nodeType":"YulIf","src":"8457:63:9"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8440:5:9","type":""}],"src":"8404:122:9"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":9,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c8063ac1a386a11610071578063ac1a386a14610154578063b136e39a14610170578063b98ee4191461018c578063be22f546146101bc578063ca8963f1146101da578063f2fde38b1461020a576100a9565b80631a38a4fb146100ae578063513ffedd146100cc578063715018a6146100fc5780638da5cb5b14610106578063a42963e914610124575b600080fd5b6100b6610226565b6040516100c39190610b95565b60405180910390f35b6100e660048036038101906100e19190610acf565b61024c565b6040516100f39190610c34565b60405180910390f35b61010461038a565b005b61010e61039e565b60405161011b9190610b95565b60405180910390f35b61013e60048036038101906101399190610a35565b6103c7565b60405161014b9190610c34565b60405180910390f35b61016e600480360381019061016991906109c8565b6104e5565b005b61018a600480360381019061018591906109c8565b610531565b005b6101a660048036038101906101a191906109f5565b61057d565b6040516101b39190610c34565b60405180910390f35b6101c461067a565b6040516101d19190610b95565b60405180910390f35b6101f460048036038101906101ef9190610a8f565b6106a0565b6040516102019190610bd9565b60405180910390f35b610224600480360381019061021f91906109c8565b61078f565b005b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09846040518263ffffffff1660e01b81526004016102aa9190610b95565b60206040518083038186803b1580156102c257600080fd5b505afa1580156102d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fa9190610a62565b9050600061036260015461035461031f6402540be4008661081390919063ffffffff16565b6103466001546103388b8d61081390919063ffffffff16565b61082990919063ffffffff16565b61081390919063ffffffff16565b61082990919063ffffffff16565b9050600061037b6127108361082990919063ffffffff16565b90508093505050509392505050565b61039261083f565b61039c60006108bd565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016104479190610b95565b60206040518083038186803b15801561045f57600080fd5b505afa158015610473573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104979190610a62565b905060006104d96104b66402540be4008461081390919063ffffffff16565b6104cb6001548761081390919063ffffffff16565b61082990919063ffffffff16565b90508092505050919050565b6104ed61083f565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61053961083f565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09856040518263ffffffff1660e01b81526004016105db9190610b95565b60206040518083038186803b1580156105f357600080fd5b505afa158015610607573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062b9190610a62565b9050600061066d61064a6402540be4008461081390919063ffffffff16565b61065f6001548761081390919063ffffffff16565b61082990919063ffffffff16565b9050809250505092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106ac846103c7565b90506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cd5d767c600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518363ffffffff1660e01b815260040161072f929190610bb0565b60206040518083038186803b15801561074757600080fd5b505afa15801561075b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077f9190610a62565b9050818110159250505092915050565b61079761083f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610807576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fe90610bf4565b60405180910390fd5b610810816108bd565b50565b600081836108219190610c91565b905092915050565b600081836108379190610c60565b905092915050565b610847610981565b73ffffffffffffffffffffffffffffffffffffffff1661086561039e565b73ffffffffffffffffffffffffffffffffffffffff16146108bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b290610c14565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60008135905061099881610e0e565b92915050565b6000813590506109ad81610e25565b92915050565b6000815190506109c281610e25565b92915050565b6000602082840312156109de576109dd610d91565b5b60006109ec84828501610989565b91505092915050565b60008060408385031215610a0c57610a0b610d91565b5b6000610a1a85828601610989565b9250506020610a2b8582860161099e565b9150509250929050565b600060208284031215610a4b57610a4a610d91565b5b6000610a598482850161099e565b91505092915050565b600060208284031215610a7857610a77610d91565b5b6000610a86848285016109b3565b91505092915050565b60008060408385031215610aa657610aa5610d91565b5b6000610ab48582860161099e565b9250506020610ac585828601610989565b9150509250929050565b600080600060608486031215610ae857610ae7610d91565b5b6000610af68682870161099e565b9350506020610b078682870161099e565b9250506040610b1886828701610989565b9150509250925092565b610b2b81610ceb565b82525050565b610b3a81610cfd565b82525050565b6000610b4d602683610c4f565b9150610b5882610d96565b604082019050919050565b6000610b70602083610c4f565b9150610b7b82610de5565b602082019050919050565b610b8f81610d29565b82525050565b6000602082019050610baa6000830184610b22565b92915050565b6000604082019050610bc56000830185610b22565b610bd26020830184610b22565b9392505050565b6000602082019050610bee6000830184610b31565b92915050565b60006020820190508181036000830152610c0d81610b40565b9050919050565b60006020820190508181036000830152610c2d81610b63565b9050919050565b6000602082019050610c496000830184610b86565b92915050565b600082825260208201905092915050565b6000610c6b82610d29565b9150610c7683610d29565b925082610c8657610c85610d62565b5b828204905092915050565b6000610c9c82610d29565b9150610ca783610d29565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ce057610cdf610d33565b5b828202905092915050565b6000610cf682610d09565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610e1781610ceb565b8114610e2257600080fd5b50565b610e2e81610d29565b8114610e3957600080fd5b5056fea26469706673582212202cd149feac31ca6181aa74ef42fa26528ac6a06652324cd03efe3e2a3bdbfd2764736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAC1A386A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xAC1A386A EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xB136E39A EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0xB98EE419 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xBE22F546 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0xCA8963F1 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x20A JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x1A38A4FB EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x513FFEDD EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xA42963E9 EQ PUSH2 0x124 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x226 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xACF JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x38A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10E PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11B SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x139 SWAP2 SWAP1 PUSH2 0xA35 JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x201 SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x78F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x362 PUSH1 0x1 SLOAD PUSH2 0x354 PUSH2 0x31F PUSH5 0x2540BE400 DUP7 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x346 PUSH1 0x1 SLOAD PUSH2 0x338 DUP12 DUP14 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x37B PUSH2 0x2710 DUP4 PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x392 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x39C PUSH1 0x0 PUSH2 0x8BD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x447 SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x473 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x497 SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4D9 PUSH2 0x4B6 PUSH5 0x2540BE400 DUP5 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4CB PUSH1 0x1 SLOAD DUP8 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4ED PUSH2 0x83F JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x539 PUSH2 0x83F JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x607 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62B SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x66D PUSH2 0x64A PUSH5 0x2540BE400 DUP5 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x65F PUSH1 0x1 SLOAD DUP8 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6AC DUP5 PUSH2 0x3C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCD5D767C PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72F SWAP3 SWAP2 SWAP1 PUSH2 0xBB0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x77F SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x797 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x807 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FE SWAP1 PUSH2 0xBF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x810 DUP2 PUSH2 0x8BD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x821 SWAP2 SWAP1 PUSH2 0xC91 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x837 SWAP2 SWAP1 PUSH2 0xC60 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x847 PUSH2 0x981 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x865 PUSH2 0x39E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B2 SWAP1 PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x998 DUP2 PUSH2 0xE0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9AD DUP2 PUSH2 0xE25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x9C2 DUP2 PUSH2 0xE25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9DE JUMPI PUSH2 0x9DD PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9EC DUP5 DUP3 DUP6 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA0C JUMPI PUSH2 0xA0B PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA1A DUP6 DUP3 DUP7 ADD PUSH2 0x989 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA2B DUP6 DUP3 DUP7 ADD PUSH2 0x99E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA4B JUMPI PUSH2 0xA4A PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA59 DUP5 DUP3 DUP6 ADD PUSH2 0x99E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA78 JUMPI PUSH2 0xA77 PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA86 DUP5 DUP3 DUP6 ADD PUSH2 0x9B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAA6 JUMPI PUSH2 0xAA5 PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAB4 DUP6 DUP3 DUP7 ADD PUSH2 0x99E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAC5 DUP6 DUP3 DUP7 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xAE8 JUMPI PUSH2 0xAE7 PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAF6 DUP7 DUP3 DUP8 ADD PUSH2 0x99E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB07 DUP7 DUP3 DUP8 ADD PUSH2 0x99E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB18 DUP7 DUP3 DUP8 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xB2B DUP2 PUSH2 0xCEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB3A DUP2 PUSH2 0xCFD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB4D PUSH1 0x26 DUP4 PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP PUSH2 0xB58 DUP3 PUSH2 0xD96 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB70 PUSH1 0x20 DUP4 PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP PUSH2 0xB7B DUP3 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8F DUP2 PUSH2 0xD29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBAA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB22 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBC5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xB22 JUMP JUMPDEST PUSH2 0xBD2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB22 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBEE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC0D DUP2 PUSH2 0xB40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC2D DUP2 PUSH2 0xB63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC49 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC6B DUP3 PUSH2 0xD29 JUMP JUMPDEST SWAP2 POP PUSH2 0xC76 DUP4 PUSH2 0xD29 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xC86 JUMPI PUSH2 0xC85 PUSH2 0xD62 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9C DUP3 PUSH2 0xD29 JUMP JUMPDEST SWAP2 POP PUSH2 0xCA7 DUP4 PUSH2 0xD29 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xCE0 JUMPI PUSH2 0xCDF PUSH2 0xD33 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF6 DUP3 PUSH2 0xD09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xE17 DUP2 PUSH2 0xCEB JUMP JUMPDEST DUP2 EQ PUSH2 0xE22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xE2E DUP2 PUSH2 0xD29 JUMP JUMPDEST DUP2 EQ PUSH2 0xE39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xD1 0x49 INVALID 0xAC BALANCE 0xCA PUSH2 0x81AA PUSH21 0xEF42FA26528AC6A06652324CD03EFE3E2A3BDBFD27 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"382:2965:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1142:73;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1413:680;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:1;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2142:272:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3059:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3184:160;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2466:311;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1024:86;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2785:266;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1142:73:6;;;;;;;;;;;;;:::o;1413:680::-;1542:7;1789:20;1812:9;;;;;;;;;;;:18;;;1831:9;1812:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1789:52;;1872:13;1888:108;1987:8;;1903:68;1944:26;1961:8;1944:12;:16;;:26;;;;:::i;:::-;1904:34;1929:8;;1905:18;1917:5;1905:7;:11;;:18;;;;:::i;:::-;1904:24;;:34;;;;:::i;:::-;1903:40;;:68;;;;:::i;:::-;1888:98;;:108;;;;:::i;:::-;1872:124;;2007:12;2022:18;2032:7;2022:5;:9;;:18;;;;:::i;:::-;2007:33;;2060:4;2053:11;;;;;1413:680;;;;;:::o;1831:101:1:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2142:272:6:-;2206:7;2226:18;2247:9;;;;;;;;;;;:18;;;2266:8;;;;;;;;;;;2247:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2226:49;;2313:11;2327:49;2351:24;2366:8;2351:10;:14;;:24;;;;:::i;:::-;2327:19;2337:8;;2327:5;:9;;:19;;;;:::i;:::-;:23;;:49;;;;:::i;:::-;2313:63;;2402:3;2387:19;;;;2142:272;;;:::o;3059:117::-;1094:13:1;:11;:13::i;:::-;3153:14:6::1;3137:6;;:31;;;;;;;;;;;;;;;;;;3059:117:::0;:::o;3184:160::-;1094:13:1;:11;:13::i;:::-;3315:20:6::1;3290:9;;:46;;;;;;;;;;;;;;;;;;3184:160:::0;:::o;2466:311::-;2576:7;2596:20;2619:9;;;;;;;;;;;:18;;;2638:9;2619:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2596:52;;2674:11;2688:51;2712:26;2729:8;2712:12;:16;;:26;;;;:::i;:::-;2688:19;2698:8;;2688:5;:9;;:19;;;;:::i;:::-;:23;;:51;;;;:::i;:::-;2674:65;;2765:3;2750:19;;;;2466:311;;;;:::o;1024:86::-;;;;;;;;;;;;;:::o;2785:266::-;2890:4;2907:14;2924:25;2943:5;2924:18;:25::i;:::-;2907:42;;2960:15;2978:6;;;;;;;;;;;:15;;;2994:4;;;;;;;;;;;3000:5;2978:28;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2960:46;;3037:6;3026:7;:17;;3019:24;;;;2785:266;;;;:::o;2081:198:1:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;3465:96:3:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;1359:130:1:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;7:139:9:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:143::-;354:5;385:6;379:13;370:22;;401:33;428:5;401:33;:::i;:::-;297:143;;;;:::o;446:329::-;505:6;554:2;542:9;533:7;529:23;525:32;522:119;;;560:79;;:::i;:::-;522:119;680:1;705:53;750:7;741:6;730:9;726:22;705:53;:::i;:::-;695:63;;651:117;446:329;;;;:::o;781:474::-;849:6;857;906:2;894:9;885:7;881:23;877:32;874:119;;;912:79;;:::i;:::-;874:119;1032:1;1057:53;1102:7;1093:6;1082:9;1078:22;1057:53;:::i;:::-;1047:63;;1003:117;1159:2;1185:53;1230:7;1221:6;1210:9;1206:22;1185:53;:::i;:::-;1175:63;;1130:118;781:474;;;;;:::o;1261:329::-;1320:6;1369:2;1357:9;1348:7;1344:23;1340:32;1337:119;;;1375:79;;:::i;:::-;1337:119;1495:1;1520:53;1565:7;1556:6;1545:9;1541:22;1520:53;:::i;:::-;1510:63;;1466:117;1261:329;;;;:::o;1596:351::-;1666:6;1715:2;1703:9;1694:7;1690:23;1686:32;1683:119;;;1721:79;;:::i;:::-;1683:119;1841:1;1866:64;1922:7;1913:6;1902:9;1898:22;1866:64;:::i;:::-;1856:74;;1812:128;1596:351;;;;:::o;1953:474::-;2021:6;2029;2078:2;2066:9;2057:7;2053:23;2049:32;2046:119;;;2084:79;;:::i;:::-;2046:119;2204:1;2229:53;2274:7;2265:6;2254:9;2250:22;2229:53;:::i;:::-;2219:63;;2175:117;2331:2;2357:53;2402:7;2393:6;2382:9;2378:22;2357:53;:::i;:::-;2347:63;;2302:118;1953:474;;;;;:::o;2433:619::-;2510:6;2518;2526;2575:2;2563:9;2554:7;2550:23;2546:32;2543:119;;;2581:79;;:::i;:::-;2543:119;2701:1;2726:53;2771:7;2762:6;2751:9;2747:22;2726:53;:::i;:::-;2716:63;;2672:117;2828:2;2854:53;2899:7;2890:6;2879:9;2875:22;2854:53;:::i;:::-;2844:63;;2799:118;2956:2;2982:53;3027:7;3018:6;3007:9;3003:22;2982:53;:::i;:::-;2972:63;;2927:118;2433:619;;;;;:::o;3058:118::-;3145:24;3163:5;3145:24;:::i;:::-;3140:3;3133:37;3058:118;;:::o;3182:109::-;3263:21;3278:5;3263:21;:::i;:::-;3258:3;3251:34;3182:109;;:::o;3297:366::-;3439:3;3460:67;3524:2;3519:3;3460:67;:::i;:::-;3453:74;;3536:93;3625:3;3536:93;:::i;:::-;3654:2;3649:3;3645:12;3638:19;;3297:366;;;:::o;3669:::-;3811:3;3832:67;3896:2;3891:3;3832:67;:::i;:::-;3825:74;;3908:93;3997:3;3908:93;:::i;:::-;4026:2;4021:3;4017:12;4010:19;;3669:366;;;:::o;4041:118::-;4128:24;4146:5;4128:24;:::i;:::-;4123:3;4116:37;4041:118;;:::o;4165:222::-;4258:4;4296:2;4285:9;4281:18;4273:26;;4309:71;4377:1;4366:9;4362:17;4353:6;4309:71;:::i;:::-;4165:222;;;;:::o;4393:332::-;4514:4;4552:2;4541:9;4537:18;4529:26;;4565:71;4633:1;4622:9;4618:17;4609:6;4565:71;:::i;:::-;4646:72;4714:2;4703:9;4699:18;4690:6;4646:72;:::i;:::-;4393:332;;;;;:::o;4731:210::-;4818:4;4856:2;4845:9;4841:18;4833:26;;4869:65;4931:1;4920:9;4916:17;4907:6;4869:65;:::i;:::-;4731:210;;;;:::o;4947:419::-;5113:4;5151:2;5140:9;5136:18;5128:26;;5200:9;5194:4;5190:20;5186:1;5175:9;5171:17;5164:47;5228:131;5354:4;5228:131;:::i;:::-;5220:139;;4947:419;;;:::o;5372:::-;5538:4;5576:2;5565:9;5561:18;5553:26;;5625:9;5619:4;5615:20;5611:1;5600:9;5596:17;5589:47;5653:131;5779:4;5653:131;:::i;:::-;5645:139;;5372:419;;;:::o;5797:222::-;5890:4;5928:2;5917:9;5913:18;5905:26;;5941:71;6009:1;5998:9;5994:17;5985:6;5941:71;:::i;:::-;5797:222;;;;:::o;6106:169::-;6190:11;6224:6;6219:3;6212:19;6264:4;6259:3;6255:14;6240:29;;6106:169;;;;:::o;6281:185::-;6321:1;6338:20;6356:1;6338:20;:::i;:::-;6333:25;;6372:20;6390:1;6372:20;:::i;:::-;6367:25;;6411:1;6401:35;;6416:18;;:::i;:::-;6401:35;6458:1;6455;6451:9;6446:14;;6281:185;;;;:::o;6472:348::-;6512:7;6535:20;6553:1;6535:20;:::i;:::-;6530:25;;6569:20;6587:1;6569:20;:::i;:::-;6564:25;;6757:1;6689:66;6685:74;6682:1;6679:81;6674:1;6667:9;6660:17;6656:105;6653:131;;;6764:18;;:::i;:::-;6653:131;6812:1;6809;6805:9;6794:20;;6472:348;;;;:::o;6826:96::-;6863:7;6892:24;6910:5;6892:24;:::i;:::-;6881:35;;6826:96;;;:::o;6928:90::-;6962:7;7005:5;6998:13;6991:21;6980:32;;6928:90;;;:::o;7024:126::-;7061:7;7101:42;7094:5;7090:54;7079:65;;7024:126;;;:::o;7156:77::-;7193:7;7222:5;7211:16;;7156:77;;;:::o;7239:180::-;7287:77;7284:1;7277:88;7384:4;7381:1;7374:15;7408:4;7405:1;7398:15;7425:180;7473:77;7470:1;7463:88;7570:4;7567:1;7560:15;7594:4;7591:1;7584:15;7734:117;7843:1;7840;7833:12;7857:225;7997:34;7993:1;7985:6;7981:14;7974:58;8066:8;8061:2;8053:6;8049:15;8042:33;7857:225;:::o;8088:182::-;8228:34;8224:1;8216:6;8212:14;8205:58;8088:182;:::o;8276:122::-;8349:24;8367:5;8349:24;:::i;:::-;8342:5;8339:35;8329:63;;8388:1;8385;8378:12;8329:63;8276:122;:::o;8404:::-;8477:24;8495:5;8477:24;:::i;:::-;8470:5;8467:35;8457:63;;8516:1;8513;8506:12;8457:63;8404:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"739600","executionCost":"infinite","totalCost":"infinite"},"external":{"aDAI()":"2515","amountTokensToDeduct(address,uint256)":"infinite","amountaDAIToDeduct(uint256)":"infinite","calculateFees(uint256,uint256,address)":"infinite","checkSufficientaDAI(uint256,address)":"infinite","daiToken()":"2580","owner()":"2589","renounceOwnership()":"30443","setPriceCheckerAddress(address)":"27008","setWalletAddress(address)":"26986","transferOwnership(address)":"30857"}},"methodIdentifiers":{"aDAI()":"1a38a4fb","amountTokensToDeduct(address,uint256)":"b98ee419","amountaDAIToDeduct(uint256)":"a42963e9","calculateFees(uint256,uint256,address)":"513ffedd","checkSufficientaDAI(uint256,address)":"ca8963f1","daiToken()":"be22f546","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setPriceCheckerAddress(address)":"b136e39a","setWalletAddress(address)":"ac1a386a","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceCheckerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"aDAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_refToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fees\",\"type\":\"uint256\"}],\"name\":\"amountTokensToDeduct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fees\",\"type\":\"uint256\"}],\"name\":\"amountaDAIToDeduct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_refToken\",\"type\":\"address\"}],\"name\":\"calculateFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fees\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"checkSufficientaDAI\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daiToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_PriceCheckeraddress\",\"type\":\"address\"}],\"name\":\"setPriceCheckerAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Walletaddress\",\"type\":\"address\"}],\"name\":\"setWalletAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TradingFees.sol\":\"TradingFees\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/Exchange.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./PriceChecker.sol\\\";\\r\\nimport \\\"./TradingFees.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Exchange is Ownable {\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n    PriceChecker priceChecker;\\r\\n    TradingFees tradingFees;\\r\\n    Wallet wallet;\\r\\n\\r\\n    uint256 decimals = 10 ** 18;\\r\\n    address public ethToken = address(0);\\r\\n\\r\\n    //Token Address List available in DEX\\r\\n    _tokenInfo[] public tokenList;\\r\\n\\r\\n    //s_orderBook mappping: tokenA Address -> tokenB Address -> Side -> Order Array\\r\\n    mapping(address => mapping( address => mapping(uint256 => _Order[]))) public s_orderBook;\\r\\n\\r\\n    mapping(address => mapping(uint256 => _filledOrder[]))\\r\\n        public s_filledOrders;\\r\\n\\r\\n    uint256 public s_orderId = 0;\\r\\n    bool private s_isManual = true;\\r\\n\\r\\n    struct _tokenInfo {\\r\\n        address add;\\r\\n        uint256 decimals;\\r\\n    }\\r\\n\\r\\n    struct _fillOrderValues {\\r\\n        uint256 rate;\\r\\n        uint256 amount;\\r\\n    }\\r\\n\\r\\n    //Structs representing an order that has unique id, user and amounts to give and get between two tokens to exchange\\r\\n    struct _Order {\\r\\n        uint256 id;\\r\\n        Side side;\\r\\n        address user;\\r\\n        address tokenA;\\r\\n        uint256 amountA;\\r\\n        address tokenB;\\r\\n        uint256 amountB;\\r\\n        uint256 rate; // TokenB/TokenA = price in terms of TokenB\\r\\n        uint256 originalAmountA;\\r\\n        uint256 originalAmountB;\\r\\n        bool waiveFees;\\r\\n    }\\r\\n\\r\\n    //For any order that is filled even if it is partially filled or fully filled\\r\\n    struct _filledOrder {\\r\\n        uint256 id;\\r\\n        Side side;\\r\\n        address user;\\r\\n        address tokenA;\\r\\n        address tokenB;\\r\\n        uint256 amountFilled;\\r\\n        uint256 fillRate;\\r\\n        uint256 originalRate;\\r\\n        uint256 originalAmountA;\\r\\n        uint256 originalAmountB;\\r\\n        bool feesWaived;\\r\\n        uint256 feesPaid; //in terms of ETH\\r\\n    }\\r\\n\\r\\n    enum Side {\\r\\n        BUY,\\r\\n        SELL\\r\\n    }\\r\\n\\r\\n    //add events\\r\\n    /// @notice Event when an order is placed on an exchange\\r\\n    event Order(\\r\\n        uint256 id,\\r\\n        Side side,\\r\\n        address user,\\r\\n        address tokenA,\\r\\n        uint256 amountA,\\r\\n        address tokenB,\\r\\n        uint256 amountB,\\r\\n        uint256 rate,\\r\\n        uint256 originalAmountA,\\r\\n        uint256 originalAmountB,\\r\\n        bool waiveFees\\r\\n    );\\r\\n\\r\\n    /// @notice Event when an order is cancelled\\r\\n    event Cancel(\\r\\n        uint256 id,\\r\\n        Side side,\\r\\n        address user,\\r\\n        address tokenA,\\r\\n        uint256 amountA,\\r\\n        address tokenB,\\r\\n        uint256 amountB,\\r\\n        uint256 rate,\\r\\n        uint256 originalAmountA,\\r\\n        uint256 originalAmountB,\\r\\n        bool waiveFees\\r\\n    );\\r\\n\\r\\n    event fillBuyOrder(\\r\\n        _Order remainingOrder,\\r\\n        uint256 amountBought,\\r\\n        uint256 fillBuyRate,\\r\\n        bool feesWaived,\\r\\n        uint256 feesPaid\\r\\n    );\\r\\n\\r\\n    event fillSellOrder(\\r\\n        _Order remainingOrder,\\r\\n        uint256 amountSold,\\r\\n        uint256 fillSellRate,\\r\\n        bool feesWaived,\\r\\n        uint256 feesPaid\\r\\n    );\\r\\n\\r\\n    constructor(address _wallet, address _fees, address _priceChecker) {\\r\\n        wallet = Wallet(_wallet);\\r\\n        tradingFees = TradingFees(_fees);\\r\\n        priceChecker = PriceChecker(_priceChecker);\\r\\n    }\\r\\n\\r\\n    function createLimitBuyOrder(\\r\\n        // TokenA/TokenB\\r\\n        address _tokenA,\\r\\n        uint256 _amountA,\\r\\n        address _tokenB,\\r\\n        uint256 _amountB,\\r\\n        uint256 _rate,\\r\\n        bool _waiveFees\\r\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\r\\n        //Amount user has deposited in the DEX must be >= value he wants to buy\\r\\n        require(\\r\\n            wallet.balanceOf(_tokenB, msg.sender).sub(\\r\\n                wallet.getlockedFunds(msg.sender, _tokenB)\\r\\n            ) >= _amountB,\\r\\n            \\\"Insufficient Funds\\\"\\r\\n        );\\r\\n\\r\\n        wallet.updateLockedFunds(msg.sender, _tokenB, _amountB, true);\\r\\n\\r\\n        s_orderBook[_tokenA][_tokenB][uint256(Side.BUY)].push(\\r\\n            _Order(\\r\\n                s_orderId,\\r\\n                Side.BUY,\\r\\n                msg.sender,\\r\\n                _tokenA,\\r\\n                _amountA,\\r\\n                _tokenB,\\r\\n                _amountB,\\r\\n                _rate,\\r\\n                _amountA,\\r\\n                _amountB,\\r\\n                _waiveFees\\r\\n            )\\r\\n        );\\r\\n\\r\\n        emit Order(\\r\\n            s_orderId,\\r\\n            Side.BUY,\\r\\n            msg.sender,\\r\\n            _tokenA,\\r\\n            _amountA,\\r\\n            _tokenB,\\r\\n            _amountB,\\r\\n            _rate,\\r\\n            _amountA,\\r\\n            _amountB,\\r\\n            _waiveFees\\r\\n        );\\r\\n\\r\\n        s_orderId = s_orderId.add(1);\\r\\n    }\\r\\n\\r\\n    function createLimitSellOrder(\\r\\n        address _tokenA,\\r\\n        uint256 _amountA,\\r\\n        address _tokenB,\\r\\n        uint256 _amountB,\\r\\n        uint256 _rate,\\r\\n        bool _waiveFees\\r\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\r\\n        //Amount of tokens user deposit in DEX must be >= the amount of tokens they want to sell\\r\\n        require(\\r\\n            wallet.balanceOf(_tokenA, msg.sender).sub(\\r\\n                wallet.getlockedFunds(msg.sender, _tokenA)\\r\\n            ) >= _amountA,\\r\\n            \\\"Insufficient Funds\\\"\\r\\n        );\\r\\n\\r\\n        //Lock the funds (tokens) in the wallet\\r\\n        wallet.updateLockedFunds(msg.sender, _tokenA, _amountA, true);\\r\\n\\r\\n        s_orderBook[_tokenA][_tokenB][uint256(Side.SELL)].push(\\r\\n            _Order(\\r\\n                s_orderId,\\r\\n                Side.SELL,\\r\\n                msg.sender,\\r\\n                _tokenA,\\r\\n                _amountA,\\r\\n                _tokenB,\\r\\n                _amountB,\\r\\n                _rate,\\r\\n                _amountA,\\r\\n                _amountB,\\r\\n                _waiveFees\\r\\n            )\\r\\n        );\\r\\n\\r\\n        emit Order(\\r\\n            s_orderId,\\r\\n            Side.SELL,\\r\\n            msg.sender,\\r\\n            _tokenA,\\r\\n            _amountA,\\r\\n            _tokenB,\\r\\n            _amountB,\\r\\n            _rate,\\r\\n            _amountA,\\r\\n            _amountB,\\r\\n            _waiveFees\\r\\n        );\\r\\n\\r\\n        s_orderId = s_orderId.add(1);\\r\\n    }\\r\\n\\r\\n    function cancelOrder(\\r\\n        Side side,\\r\\n        uint256 _id,\\r\\n        address _tokenA,\\r\\n        address _tokenB\\r\\n    ) public validOrder(_id, side, _tokenA, _tokenB) validToken(_tokenA) validToken(_tokenB) {\\r\\n        uint256 _side = uint256(side);\\r\\n        _Order[] storage _order = s_orderBook[_tokenA][_tokenB][_side];\\r\\n        uint256 size = _order.length;\\r\\n        _Order memory order;\\r\\n\\r\\n        uint256 index;\\r\\n        for (uint256 i = 0; i < size; i++) {\\r\\n            if (_order[i].id == _id) {\\r\\n                index = i;\\r\\n                order = _order[i];\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        //Manual cancellation of orders\\r\\n        if (s_isManual) {\\r\\n            require(msg.sender == order.user, \\\"Not Owner\\\");\\r\\n\\r\\n            //Unlock funds\\r\\n            if (side == Side.BUY) {\\r\\n                wallet.updateLockedFunds(\\r\\n                    msg.sender,\\r\\n                    order.tokenB,\\r\\n                    order.amountB,\\r\\n                    false\\r\\n                );\\r\\n            } else if (side == Side.SELL) {\\r\\n                wallet.updateLockedFunds(\\r\\n                    msg.sender,\\r\\n                    order.tokenA,\\r\\n                    order.amountA,\\r\\n                    false\\r\\n                );\\r\\n            }\\r\\n        }\\r\\n\\r\\n        for (uint256 j = index; j < size - 1; j++) {\\r\\n            _order[j] = _order[j.add(1)];\\r\\n        }\\r\\n        delete _order[size.sub(1)];\\r\\n        _order.pop();\\r\\n\\r\\n        s_orderBook[_tokenA][_tokenB][_side] = _order;\\r\\n\\r\\n        emit Cancel(\\r\\n            _id,\\r\\n            order.side,\\r\\n            order.user,\\r\\n            order.tokenA,\\r\\n            order.amountA,\\r\\n            order.tokenB,\\r\\n            order.amountB,\\r\\n            order.rate,\\r\\n            order.originalAmountA,\\r\\n            order.originalAmountB,\\r\\n            order.waiveFees\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function fillOrder(\\r\\n        Side side,\\r\\n        uint256 _id,\\r\\n        address _tokenA,\\r\\n        address _tokenB,\\r\\n        _fillOrderValues memory a\\r\\n    ) internal validOrder(_id, side, _tokenA, _tokenB) validToken(_tokenA) validToken(_tokenB) {\\r\\n        uint256 _side = uint256(side);\\r\\n        (_Order memory order, uint256 index) = getOrderFromArray(\\r\\n            _tokenA,\\r\\n            _tokenB,\\r\\n            _side,\\r\\n            _id\\r\\n        );\\r\\n\\r\\n        require(order.amountA >= a.amount, \\\"Invalid Order Amount to fill\\\");\\r\\n\\r\\n        order.amountA = order.amountA.sub(a.amount);\\r\\n        order.amountB = order.amountB.sub(\\r\\n            order.rate.mul(a.amount).div(decimals)\\r\\n        );\\r\\n        s_orderBook[_tokenA][_tokenB][_side][index].amountA = order.amountA;\\r\\n        s_orderBook[_tokenA][_tokenB][_side][index].amountB = order.amountB;\\r\\n\\r\\n        uint256 fees = tradingFees.calculateFees(\\r\\n            a.amount,\\r\\n            a.rate,\\r\\n            order.tokenB\\r\\n        ); \\r\\n        bool feesWaived = order.waiveFees &&\\r\\n            tradingFees.checkSufficientaDAI(fees, order.user);\\r\\n\\r\\n        if (side == Side.BUY) {\\r\\n            fillBuyOrders(order, a.amount, a.rate, feesWaived, fees);\\r\\n            emit fillBuyOrder(order, a.amount, a.rate, feesWaived, fees);\\r\\n        } else if (side == Side.SELL) {\\r\\n            fillSellOrders(order, a.amount, a.rate, feesWaived, fees);\\r\\n            emit fillSellOrder(order, a.amount, a.rate, feesWaived, fees);\\r\\n        }\\r\\n\\r\\n        if (order.amountA == 0) {\\r\\n            s_isManual = false;\\r\\n            cancelOrder(side, order.id, order.tokenA, order.tokenB); //remove filled orders \\r\\n            s_isManual = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function fillBuyOrders(\\r\\n        _Order memory order,\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        bool feesWaived,\\r\\n        uint256 fees\\r\\n    ) internal {\\r\\n        if (feesWaived) {\\r\\n            //Deduct aDAI\\r\\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\\r\\n            wallet.updateBalance(\\r\\n                tradingFees.aDAI(),\\r\\n                order.user,\\r\\n                aDAIToDeduct,\\r\\n                false\\r\\n            );\\r\\n            //Credit Bought tokens\\r\\n            wallet.updateBalance(order.tokenA, order.user, _amount, true);\\r\\n        } else {\\r\\n            uint256 amountTokenToDeduct = tradingFees.amountTokensToDeduct(\\r\\n                order.tokenA,\\r\\n                fees\\r\\n            );\\r\\n            //Credit Bought tokens after minusing fees\\r\\n            wallet.updateBalance(\\r\\n                order.tokenA,\\r\\n                order.user,\\r\\n                _amount.sub(amountTokenToDeduct),\\r\\n                true\\r\\n            );\\r\\n        }\\r\\n\\r\\n        //Original Locked Funds unlocked\\r\\n        wallet.updateLockedFunds(\\r\\n            order.user,\\r\\n            order.tokenB,\\r\\n            (order.rate.mul(_amount)).div(decimals),\\r\\n            false\\r\\n        );\\r\\n\\r\\n        //buyer update\\r\\n        //Buyer balance deducted from what he paid\\r\\n        wallet.updateBalance(\\r\\n            order.tokenB,\\r\\n            order.user,\\r\\n            (_rate.mul(_amount)).div(decimals),\\r\\n            false\\r\\n        );\\r\\n        \\r\\n        s_filledOrders[order.user][0].push(\\r\\n            _filledOrder(\\r\\n                order.id,\\r\\n                order.side,\\r\\n                order.user,\\r\\n                order.tokenA,\\r\\n                order.tokenB,\\r\\n                _amount,\\r\\n                _rate,\\r\\n                order.rate,\\r\\n                order.originalAmountA,\\r\\n                order.originalAmountB,\\r\\n                feesWaived,\\r\\n                fees\\r\\n            )\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function fillSellOrders(\\r\\n        _Order memory order,\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        bool feesWaived,\\r\\n        uint256 fees\\r\\n    ) internal {\\r\\n        if (feesWaived) {\\r\\n            //Deduct aDAI\\r\\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\\r\\n            wallet.updateBalance(tradingFees.aDAI(), order.user, aDAIToDeduct, false);\\r\\n            //Credit Earned tokens\\r\\n            wallet.updateBalance(\\r\\n                order.tokenB,\\r\\n                order.user,\\r\\n                (_rate.mul(_amount)).div(decimals),\\r\\n                true\\r\\n            );\\r\\n        } else {\\r\\n            uint256 amountTokensToDeduct = tradingFees.amountTokensToDeduct(\\r\\n                order.tokenB,\\r\\n                fees\\r\\n            );\\r\\n            //Credit Earned tokens after minusing fees\\r\\n            wallet.updateBalance(\\r\\n                order.tokenB,\\r\\n                order.user,\\r\\n                (_rate.mul(_amount)).div(decimals).sub(amountTokensToDeduct),\\r\\n                true\\r\\n            );\\r\\n        }\\r\\n\\r\\n        wallet.updateLockedFunds(order.user, order.tokenA, _amount, false);\\r\\n        //seller update\\r\\n        wallet.updateBalance(order.tokenA, order.user, _amount, false);\\r\\n\\r\\n         s_filledOrders[order.user][1].push(\\r\\n            _filledOrder(\\r\\n                order.id,\\r\\n                order.side,\\r\\n                order.user,\\r\\n                order.tokenA,\\r\\n                order.tokenB,\\r\\n                _amount,\\r\\n                _rate,\\r\\n                order.rate,\\r\\n                order.originalAmountA,\\r\\n                order.originalAmountB,\\r\\n                feesWaived,\\r\\n                fees\\r\\n            )\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function matchOrders(\\r\\n        address _tokenA,\\r\\n        address _tokenB,\\r\\n        uint256 _id,\\r\\n        Side side\\r\\n    ) internal validOrder(_id, side, _tokenA, _tokenB) validToken(_tokenA) validToken(_tokenB){\\r\\n        uint256 saleTokenAmt;\\r\\n\\r\\n        if (side == Side.BUY) {\\r\\n            //Retrieve sell order to match\\r\\n            _Order[] memory _sellOrder = s_orderBook[_tokenA][_tokenB][1];\\r\\n            for (uint256 i = 0; i < _sellOrder.length; i++) {\\r\\n                //Retrieve buy order to be filled\\r\\n                (_Order memory buyOrderToFill, ) = getOrderFromArray(\\r\\n                    _tokenA,\\r\\n                    _tokenB,\\r\\n                    uint8(side),\\r\\n                    _id\\r\\n                );\\r\\n                //sell order hit buyer's limit price & tokenB matches\\r\\n                if (\\r\\n                    _sellOrder[i].rate <= buyOrderToFill.rate &&\\r\\n                    buyOrderToFill.user != _sellOrder[i].user\\r\\n                    \\r\\n                ) {\\r\\n                    _Order memory sellOrder = _sellOrder[i];\\r\\n                    //if buyer's amount to buy > seller's amount to sell\\r\\n                    if (buyOrderToFill.amountA > sellOrder.amountA) {\\r\\n                        saleTokenAmt = sellOrder.amountA;\\r\\n                    }\\r\\n                    //if seller's amount to sell >= buyer's amount to buy\\r\\n                    else if (buyOrderToFill.amountA <= sellOrder.amountA) {\\r\\n                        saleTokenAmt = buyOrderToFill.amountA;\\r\\n                    }\\r\\n\\r\\n                    //Verify current balance\\r\\n                    require(\\r\\n                        wallet.balanceOf(\\r\\n                            buyOrderToFill.tokenB,\\r\\n                            buyOrderToFill.user\\r\\n                        ) >= (saleTokenAmt.mul(sellOrder.rate)).div(decimals),\\r\\n                        \\\"Insufficient Buyer Token Balance\\\"\\r\\n                    );\\r\\n                    require(\\r\\n                        wallet.balanceOf(_tokenA, sellOrder.user) >=\\r\\n                            saleTokenAmt,\\r\\n                        \\\"Insufficient Seller Token Balance\\\"\\r\\n                    );\\r\\n\\r\\n                    //update orders\\r\\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\\r\\n                        sellOrder.rate,\\r\\n                        saleTokenAmt\\r\\n                    );\\r\\n                    fillOrder(Side.BUY, _id, _tokenA, _tokenB, fillOrderValues);\\r\\n                    fillOrder(Side.SELL, sellOrder.id, _tokenA, _tokenB, fillOrderValues);\\r\\n                }\\r\\n\\r\\n                bool orderExist = orderExists(_id, side, _tokenA, _tokenB);\\r\\n                if (!orderExist) break;\\r\\n            }\\r\\n        } else if (side == Side.SELL) {\\r\\n            //Retrieve buy order to match\\r\\n            _Order[] memory _buyOrder = s_orderBook[_tokenA][_tokenB][0];\\r\\n            for (uint256 i = 0; i < _buyOrder.length; i++) {\\r\\n                //Retrieve sell order to be filled\\r\\n                (_Order memory sellOrderToFill, ) = getOrderFromArray(\\r\\n                    _tokenA,\\r\\n                    _tokenB,\\r\\n                    1,\\r\\n                    _id\\r\\n                );\\r\\n                //sell order hit buyer's limit price\\r\\n                if (\\r\\n                    _buyOrder[i].rate >= sellOrderToFill.rate &&\\r\\n                    _buyOrder[i].user != sellOrderToFill.user\\r\\n                ) {\\r\\n                    _Order memory order = _buyOrder[i];\\r\\n\\r\\n                    //if seller's amount to sell > buyer's amount to buy\\r\\n                    if (sellOrderToFill.amountA > order.amountA) {\\r\\n                        saleTokenAmt = order.amountA;\\r\\n                    }\\r\\n                    //if buyer's amount to buy > seller's amount to sell\\r\\n                    else if (sellOrderToFill.amountA <= order.amountA) {\\r\\n                        saleTokenAmt = sellOrderToFill.amountA;\\r\\n                    }\\r\\n                    //Verify current balance\\r\\n                    require(\\r\\n                        wallet.balanceOf(_tokenA, sellOrderToFill.user) >=\\r\\n                            saleTokenAmt,\\r\\n                        \\\"Insufficient Seller Token Balance\\\"\\r\\n                    );\\r\\n                    require(\\r\\n                        wallet.balanceOf(order.tokenB, order.user) >=\\r\\n                            (saleTokenAmt.mul(order.rate)).div(decimals),\\r\\n                        \\\"Insufficient Buyer Token Balance\\\"\\r\\n                    );\\r\\n\\r\\n                    //update orders\\r\\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\\r\\n                        order.rate,\\r\\n                        saleTokenAmt\\r\\n                    );\\r\\n                    fillOrder(Side.SELL, _id, _tokenA, _tokenB, fillOrderValues);\\r\\n                    fillOrder(Side.BUY, order.id, _tokenA, _tokenB, fillOrderValues);\\r\\n                }\\r\\n                bool orderExist = orderExists(_id, side, _tokenA, _tokenB);\\r\\n                if (!orderExist) break;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getOrderLength(\\r\\n        Side side,\\r\\n        address _tokenA,\\r\\n        address _tokenB\\r\\n    ) public view returns (uint256) {\\r\\n        return s_orderBook[_tokenA][_tokenB][uint256(side)].length;\\r\\n    }\\r\\n\\r\\n    function getOrder(\\r\\n        address _tokenA,\\r\\n        address _tokenB,\\r\\n        uint256 index,\\r\\n        Side side\\r\\n    )\\r\\n        public\\r\\n        view\\r\\n        returns (\\r\\n            _Order memory\\r\\n        )\\r\\n    {\\r\\n        _Order memory order = s_orderBook[_tokenA][_tokenB][uint256(side)][index];\\r\\n        return (\\r\\n            order\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getFilledOrderLength(\\r\\n        address _user,\\r\\n        Side side\\r\\n    ) public view returns (uint256) {\\r\\n        return s_filledOrders[_user][uint256(side)].length;\\r\\n    }\\r\\n\\r\\n    function getFilledOrder(\\r\\n        address _user,\\r\\n        Side side,\\r\\n        uint256 index\\r\\n    )\\r\\n        public\\r\\n        view\\r\\n        returns (\\r\\n            _filledOrder memory\\r\\n        )\\r\\n    {\\r\\n        _filledOrder memory filledOrder = s_filledOrders[_user][uint256(side)][\\r\\n            index\\r\\n        ];\\r\\n        return (\\r\\n            filledOrder\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getOrderFromArray(\\r\\n        address _tokenA,\\r\\n        address _tokenB,\\r\\n        uint256 side,\\r\\n        uint256 _id\\r\\n    ) public view returns (_Order memory, uint256) {\\r\\n        uint256 i = 0;\\r\\n        _Order[] memory _order = s_orderBook[_tokenA][_tokenB][side];\\r\\n        _Order memory order;\\r\\n        for (i; i < _order.length; i++) {\\r\\n            if (_order[i].id == _id) {\\r\\n                order = _order[i];\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        return (order, i);\\r\\n    }\\r\\n\\r\\n    function orderExists(\\r\\n        uint256 _id,\\r\\n        Side side,\\r\\n        address _tokenA,\\r\\n        address _tokenB\\r\\n    ) public view returns (bool) {\\r\\n        _Order[] memory orders = s_orderBook[_tokenA][_tokenB][uint256(side)];\\r\\n\\r\\n        for (uint256 i = 0; i < orders.length; i++) {\\r\\n            if (orders[i].id == _id) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function addToken(address _token, uint256 _decimals) public onlyOwner {\\r\\n        require(!isVerifiedToken(_token), \\\"Token already verified\\\");\\r\\n        tokenList.push(_tokenInfo(_token, _decimals));\\r\\n    }\\r\\n\\r\\n    function isVerifiedToken(address _token) public view returns (bool) {\\r\\n        //uint256 size = tokenList.length;\\r\\n\\r\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\r\\n            if (tokenList[i].add == _token) return true;\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function getTokenInfo(address _token) public view returns (uint256) {\\r\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\r\\n            if (tokenList[i].add == _token) {\\r\\n                return tokenList[i].decimals;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\\r\\n        wallet = Wallet(_Walletaddress);\\r\\n    }\\r\\n\\r\\n    function setPriceCheckerAddress(\\r\\n        address _PriceCheckeraddress\\r\\n    ) public onlyOwner {\\r\\n        priceChecker = PriceChecker(_PriceCheckeraddress);\\r\\n    }\\r\\n\\r\\n    function setTradingFees(address _tradingFees) public onlyOwner {\\r\\n        tradingFees = TradingFees(_tradingFees);\\r\\n    }\\r\\n\\r\\n    modifier validOrder(\\r\\n        uint256 _id,\\r\\n        Side side,\\r\\n        address _tokenA,\\r\\n        address _tokenB\\r\\n    ) {\\r\\n        require(orderExists(_id, side, _tokenA, _tokenB), \\\"Invalid Order ID\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier validToken(address _token) {\\r\\n        require(isVerifiedToken(_token), \\\"Token unavailable in DEX\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xe64f0bda5d0f32d897ccc59e310e3bd08369c8954ea7a1aeec4239aded44dbb0\",\"license\":\"MIT\"},\"contracts/PriceChecker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract PriceChecker is Ownable {\\r\\n    _priceFeed[] public priceFeeds;\\r\\n\\r\\n    struct _priceFeed {\\r\\n        string name;\\r\\n        address token;\\r\\n        AggregatorV3Interface priceFeed;\\r\\n    }\\r\\n\\r\\n    //only using PriceFeeds pegged to USD\\r\\n    function addPriceFeed(\\r\\n        string memory _name,\\r\\n        address _token,\\r\\n        address _address\\r\\n    ) external onlyOwner {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n        bool isAdded = false;\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (\\r\\n                keccak256(abi.encodePacked(_name)) ==\\r\\n                keccak256(abi.encodePacked(pricefeed[i].name))\\r\\n            ) {\\r\\n                isAdded = true;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        require(!isAdded, \\\"Price Feed already added\\\");\\r\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(_address);\\r\\n        priceFeeds.push(_priceFeed(_name, _token, priceFeed));\\r\\n    }\\r\\n\\r\\n    function getPriceFeed(\\r\\n        address _token\\r\\n    ) internal view returns (AggregatorV3Interface priceFeed) {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (_token == pricefeed[i].token) {\\r\\n                return pricefeed[i].priceFeed;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getPrice(address _address) external view returns (uint256) {\\r\\n        AggregatorV3Interface priceFeed = getPriceFeed(_address);\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(answer);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf1e1d97a9c555133c6a90fdc333e79e819ffaffd68d9c9579684b49413dda07c\",\"license\":\"MIT\"},\"contracts/TradingFees.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./PriceChecker.sol\\\";\\r\\nimport \\\"./Wallet.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract TradingFees is Ownable {\\r\\n    //When trading, have an option toggle to waive trading fees or not using deposited aETH\\r\\n    //Users have to first deposit aETH tokens into the Exchange contract to waive, aETH tokens are not for trading\\r\\n    //When a trade order goes through, trading fees of the trade fulfilled  = trade amount x trade price x 0.01,\\r\\n    //contract checks how much aETH is deposited and what is the value of aETH, if sufficient to waive fees fully, deduct balance in deposit\\r\\n    //and waive trading fees\\r\\n\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n\\r\\n    uint256 decimals = 10 ** 18;\\r\\n    address public daiToken =\\r\\n        address(0xBa8DCeD3512925e52FE67b1b5329187589072A55); //based on Aave contract\\r\\n    address public aDAI = address(0xADD98B0342e4094Ec32f3b67Ccfd3242C876ff7a); //based on Aave contract\\r\\n    PriceChecker priceFeed;\\r\\n    Wallet wallet;\\r\\n\\r\\n    constructor(address _priceCheckerAddress) {\\r\\n        priceFeed = PriceChecker(_priceCheckerAddress);\\r\\n    }\\r\\n\\r\\n    function calculateFees(\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        address _refToken\\r\\n    ) public view returns (uint256) {\\r\\n        //Calculated based on TokenB price, require actual price in 18dp\\r\\n        //trading fees is 0.1% of trade = 0.001\\r\\n        //moving up 18dp is 0.001 x 10**18 = 10**14\\r\\n        //have to fetch tokenPrice from PriceFeed\\r\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8dp originally\\r\\n        uint256 value = (\\r\\n            ((_amount.mul(_rate)).div(decimals)).mul(priceOfToken.mul(10 ** 10))\\r\\n        ).div(decimals);\\r\\n        uint256 fees = value.div(10 ** 4);\\r\\n\\r\\n        return fees; //based on USD value\\r\\n    }\\r\\n\\r\\n    //Amount of DAI to deduct from fees\\r\\n    function amountaDAIToDeduct(uint256 _fees) public view returns (uint256) {\\r\\n        uint256 aDAI_Price = priceFeed.getPrice(daiToken); // in 8 decimals initially\\r\\n        uint256 amt = _fees.mul(decimals).div(aDAI_Price.mul(10 ** 10));\\r\\n        return uint256(amt);\\r\\n    }\\r\\n\\r\\n    //Amount of Tokens to deduct from fees\\r\\n    function amountTokensToDeduct(\\r\\n        address _refToken,\\r\\n        uint256 _fees\\r\\n    ) public view returns (uint256) {\\r\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8decimals\\r\\n        uint256 amt = _fees.mul(decimals).div(priceOfToken.mul(10 ** 10));\\r\\n        return uint256(amt);\\r\\n    }\\r\\n\\r\\n    function checkSufficientaDAI(\\r\\n        uint256 _fees,\\r\\n        address _user\\r\\n    ) public view returns (bool) {\\r\\n        uint256 amtDAI = amountaDAIToDeduct(_fees);\\r\\n        uint256 balance = wallet.s_tokens(aDAI, _user);\\r\\n\\r\\n        return balance >= amtDAI;\\r\\n    }\\r\\n\\r\\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\\r\\n        wallet = Wallet(_Walletaddress);\\r\\n    }\\r\\n\\r\\n    function setPriceCheckerAddress(\\r\\n        address _PriceCheckeraddress\\r\\n    ) public onlyOwner {\\r\\n        priceFeed = PriceChecker(_PriceCheckeraddress);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x570e96da947a0e3017464615810b58bca9033d9fd045ff00077aa59313ee1d66\",\"license\":\"MIT\"},\"contracts/Wallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./interface/IERC20.sol\\\";\\r\\nimport \\\"./Exchange.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Wallet is Ownable {\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n\\r\\n    address public immutable Owner;\\r\\n\\r\\n    //For prevention of reentrancy\\r\\n    bool private locked;\\r\\n\\r\\n    address public ethToken = address(0);\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) public s_tokens; //tokenAdress -> msg.sender -> tokenAmt\\r\\n    mapping(address => mapping(address => uint256)) public lockedFunds;\\r\\n\\r\\n    Exchange exchange;\\r\\n    IERC20 token;\\r\\n\\r\\n    event Deposit(address token, address user, uint256 amount, uint256 balance);\\r\\n\\r\\n    /// @notice Event when amount withdrawn exchange\\r\\n    event Withdraw(\\r\\n        address token,\\r\\n        address user,\\r\\n        uint256 amount,\\r\\n        uint256 balance\\r\\n    );\\r\\n\\r\\n    constructor() {\\r\\n        Owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    function depositETH() external payable {\\r\\n        updateBalance(ethToken, msg.sender, msg.value, true);\\r\\n\\r\\n        emit Deposit(\\r\\n            ethToken,\\r\\n            msg.sender,\\r\\n            msg.value,\\r\\n            balanceOf(ethToken, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdrawETH(uint256 _amount) external {\\r\\n        require(\\r\\n            balanceOf(ethToken, msg.sender).sub(\\r\\n                getlockedFunds(msg.sender, ethToken)\\r\\n            ) >= _amount,\\r\\n            \\\"Insufficient balance ETH to withdraw\\\"\\r\\n        );\\r\\n        require(!locked, \\\"Reentrant call detected!\\\");\\r\\n        locked = true;\\r\\n        updateBalance(ethToken, msg.sender, _amount, false);\\r\\n        locked = false;\\r\\n        (bool success, ) = msg.sender.call{value: _amount}(\\\"\\\");\\r\\n        require(success, \\\"failed to send amount\\\");\\r\\n\\r\\n        emit Withdraw(\\r\\n            ethToken,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(ethToken, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    //from and transferFrom is from ERC20 contract\\r\\n    //_token should be an ERC20 token\\r\\n    function depositToken(\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        uint256 _decimals\\r\\n    ) external {\\r\\n        require(_token != ethToken);\\r\\n        require(\\r\\n            exchange.isVerifiedToken(_token),\\r\\n            \\\"Token not verified on Exchange\\\"\\r\\n        );\\r\\n        //need to add a check to prove that it is an ERC20 token\\r\\n        token = IERC20(_token);\\r\\n\\r\\n        //Requires approval first\\r\\n        require(\\r\\n            token.transferFrom(msg.sender, address(this), _amount),\\r\\n            \\\"No Approval yet\\\"\\r\\n        );\\r\\n        uint256 decimals = 18;\\r\\n        if (_decimals == 18) {\\r\\n            updateBalance(_token, msg.sender, _amount, true);\\r\\n        } else\\r\\n            updateBalance(\\r\\n                _token,\\r\\n                msg.sender,\\r\\n                _amount.mul(10 ** decimals.sub(_decimals)),\\r\\n                true\\r\\n            );\\r\\n\\r\\n        emit Deposit(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(_token, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdrawToken(\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        uint256 _decimals\\r\\n    ) external {\\r\\n        require(_token != ethToken);\\r\\n        require(\\r\\n            exchange.isVerifiedToken(_token),\\r\\n            \\\"Token not verified on Exchange\\\"\\r\\n        );\\r\\n\\r\\n        require(\\r\\n            balanceOf(_token, msg.sender).sub(\\r\\n                getlockedFunds(msg.sender, _token)\\r\\n            ) >= _amount,\\r\\n            \\\"Insufficient Tokens to withdraw\\\"\\r\\n        );\\r\\n        require(!locked, \\\"Reentrant call detected!\\\");\\r\\n        locked = true;\\r\\n\\r\\n        token = IERC20(_token);\\r\\n        uint256 decimals = 18;\\r\\n        if (_decimals == 18) {\\r\\n            updateBalance(_token, msg.sender, _amount, false);\\r\\n            require(token.transfer(msg.sender, _amount));\\r\\n        } else {\\r\\n            updateBalance(\\r\\n                _token,\\r\\n                msg.sender,\\r\\n                _amount.mul(10 ** decimals.sub(_decimals)),\\r\\n                false\\r\\n            );\\r\\n            require(\\r\\n                token.transfer(\\r\\n                    msg.sender,\\r\\n                    _amount.div(10 ** decimals.sub(_decimals))\\r\\n                )\\r\\n            );\\r\\n        }\\r\\n\\r\\n        locked = false;\\r\\n        emit Withdraw(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(_token, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getlockedFunds(\\r\\n        address _user,\\r\\n        address _token\\r\\n    ) public view returns (uint256) {\\r\\n        return lockedFunds[_user][_token];\\r\\n    }\\r\\n\\r\\n    function updateLockedFunds(\\r\\n        address _user,\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) public isAuthorised {\\r\\n        if (isAdd) {\\r\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].add(\\r\\n                _amount\\r\\n            );\\r\\n        } else if (!isAdd) {\\r\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].sub(\\r\\n                _amount\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //balance of specific tokens in the dex owned by specific user\\r\\n    function balanceOf(\\r\\n        address _token,\\r\\n        address _user\\r\\n    ) public view returns (uint256) {\\r\\n        return s_tokens[_token][_user];\\r\\n    }\\r\\n\\r\\n    function updateBalance(\\r\\n        address _token,\\r\\n        address _user,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) public isAuthorised {\\r\\n        if (isAdd) {\\r\\n            s_tokens[_token][_user] = s_tokens[_token][_user].add(_amount);\\r\\n        } else if (!isAdd) {\\r\\n            s_tokens[_token][_user] = s_tokens[_token][_user].sub(_amount);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function updateExchangeAddress(address _exchangeAddress) public onlyOwner {\\r\\n        exchange = Exchange(_exchangeAddress);\\r\\n    }\\r\\n\\r\\n    modifier isAuthorised() {\\r\\n        require(\\r\\n            msg.sender == address(this) || msg.sender == address(exchange),\\r\\n            \\\"Unauthorised Function Call\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf57179a3c0d338a6d94c7dadc3ee6873838e3af70c690754689b9c1c00aea67c\",\"license\":\"MIT\"},\"contracts/interface/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IERC20 {\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256 remaining);\\r\\n\\r\\n    function approve(\\r\\n        address spender,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function balanceOf(address owner) external view returns (uint256 balance);\\r\\n\\r\\n    function decimals() external view returns (uint8 decimalPlaces);\\r\\n\\r\\n    function decreaseApproval(\\r\\n        address spender,\\r\\n        uint256 subtractedValue\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function increaseApproval(\\r\\n        address spender,\\r\\n        uint256 addedValue\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function name() external view returns (string memory tokenName);\\r\\n\\r\\n    function symbol() external view returns (string memory tokenSymbol);\\r\\n\\r\\n    function totalSupply() external view returns (uint256 totalTokensIssued);\\r\\n\\r\\n    function transfer(\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n}\\r\\n\",\"keccak256\":\"0xef48d46afc4efefcd6d7f1799f25aee5d8fcd588e2aaa80a84af726128194326\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":53,"contract":"contracts/TradingFees.sol:TradingFees","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":2582,"contract":"contracts/TradingFees.sol:TradingFees","label":"decimals","offset":0,"slot":"1","type":"t_uint256"},{"astId":2588,"contract":"contracts/TradingFees.sol:TradingFees","label":"daiToken","offset":0,"slot":"2","type":"t_address"},{"astId":2594,"contract":"contracts/TradingFees.sol:TradingFees","label":"aDAI","offset":0,"slot":"3","type":"t_address"},{"astId":2597,"contract":"contracts/TradingFees.sol:TradingFees","label":"priceFeed","offset":0,"slot":"4","type":"t_contract(PriceChecker)2565"},{"astId":2600,"contract":"contracts/TradingFees.sol:TradingFees","label":"wallet","offset":0,"slot":"5","type":"t_contract(Wallet)3359"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(PriceChecker)2565":{"encoding":"inplace","label":"contract PriceChecker","numberOfBytes":"20"},"t_contract(Wallet)3359":{"encoding":"inplace","label":"contract Wallet","numberOfBytes":"20"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Wallet.sol":{"Wallet":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"balance","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"balance","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"Owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_user","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"depositETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_decimals","type":"uint256"}],"name":"depositToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"ethToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"address","name":"_token","type":"address"}],"name":"getlockedFunds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"lockedFunds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"s_tokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_user","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bool","name":"isAdd","type":"bool"}],"name":"updateBalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_exchangeAddress","type":"address"}],"name":"updateExchangeAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bool","name":"isAdd","type":"bool"}],"name":"updateLockedFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdrawETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_decimals","type":"uint256"}],"name":"withdrawToken","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2865":{"entryPoint":null,"id":2865,"parameterSlots":0,"returnSlots":0},"@_69":{"entryPoint":null,"id":69,"parameterSlots":0,"returnSlots":0},"@_msgSender_170":{"entryPoint":171,"id":170,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_157":{"entryPoint":179,"id":157,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"60a06040526000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005257600080fd5b5061006f6100646100ab60201b60201c565b6100b360201b60201c565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050610177565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60805160601c61241e620001966000396000610fe4015261241e6000f3fe6080604052600436106100f35760003560e01c806399c6d2de1161008a578063f14210a611610059578063f14210a614610314578063f2fde38b1461033d578063f6326fb314610366578063f7888aec14610370576100f3565b806399c6d2de1461025a578063b4a99a4e14610283578063c5ab4602146102ae578063cd5d767c146102d7576100f3565b8063715018a6116100c6578063715018a6146101c45780637bf1a627146101db5780638da5cb5b1461020657806396c0ec5514610231576100f3565b806331415a65146100f857806346a8f820146101215780634bdde1cf1461014a5780634fc121db14610187575b600080fd5b34801561010457600080fd5b5061011f600480360381019061011a919061197c565b6103ad565b005b34801561012d57600080fd5b50610148600480360381019061014391906119e9565b6103f9565b005b34801561015657600080fd5b50610171600480360381019061016c91906119a9565b6106f5565b60405161017e9190611e6e565b60405180910390f35b34801561019357600080fd5b506101ae60048036038101906101a991906119a9565b61071a565b6040516101bb9190611e6e565b60405180910390f35b3480156101d057600080fd5b506101d96107a1565b005b3480156101e757600080fd5b506101f06107b5565b6040516101fd9190611c8e565b60405180910390f35b34801561021257600080fd5b5061021b6107db565b6040516102289190611c8e565b60405180910390f35b34801561023d57600080fd5b5061025860048036038101906102539190611a50565b610804565b005b34801561026657600080fd5b50610281600480360381019061027c9190611a50565b610cc1565b005b34801561028f57600080fd5b50610298610fe2565b6040516102a59190611c8e565b60405180910390f35b3480156102ba57600080fd5b506102d560048036038101906102d091906119e9565b611006565b005b3480156102e357600080fd5b506102fe60048036038101906102f991906119a9565b611302565b60405161030b9190611e6e565b60405180910390f35b34801561032057600080fd5b5061033b60048036038101906103369190611ad0565b611327565b005b34801561034957600080fd5b50610364600480360381019061035f919061197c565b6115c0565b005b61036e611644565b005b34801561037c57600080fd5b50610397600480360381019061039291906119a9565b6116ff565b6040516103a49190611e6e565b60405180910390f35b6103b5611786565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806104805750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6104bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b690611e2e565b60405180910390fd5b80156105d95761055482600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461180490919063ffffffff16565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506106ef565b806106ee5761066d82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461181a90919063ffffffff16565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b50505050565b6003602052816000526040600020602052806000526040600020600091509150505481565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6107a9611786565b6107b36000611830565b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561085f57600080fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631027b219846040518263ffffffff1660e01b81526004016108ba9190611c8e565b60206040518083038186803b1580156108d257600080fd5b505afa1580156108e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090a9190611aa3565b610949576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094090611dce565b60405180910390fd5b8161096f610957338661071a565b61096186336116ff565b61181a90919063ffffffff16565b10156109b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a790611e0e565b60405180910390fd5b600060149054906101000a900460ff1615610a00576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f790611d4e565b60405180910390fd5b6001600060146101000a81548160ff02191690831515021790555082600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000601290506012821415610b3557610a788433856000611006565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610ad5929190611d25565b602060405180830381600087803b158015610aef57600080fd5b505af1158015610b03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b279190611aa3565b610b3057600080fd5b610c5b565b610b728433610b6b610b50868661181a90919063ffffffff16565b600a610b5c9190611f7f565b876118f490919063ffffffff16565b6000611006565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33610be2610bc7868661181a90919063ffffffff16565b600a610bd39190611f7f565b8761190a90919063ffffffff16565b6040518363ffffffff1660e01b8152600401610bff929190611d25565b602060405180830381600087803b158015610c1957600080fd5b505af1158015610c2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c519190611aa3565b610c5a57600080fd5b5b60008060146101000a81548160ff0219169083151502179055507ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567843385610ca388336116ff565b604051610cb39493929190611ce0565b60405180910390a150505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d1c57600080fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631027b219846040518263ffffffff1660e01b8152600401610d779190611c8e565b60206040518083038186803b158015610d8f57600080fd5b505afa158015610da3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc79190611aa3565b610e06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfd90611dce565b60405180910390fd5b82600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610ea693929190611ca9565b602060405180830381600087803b158015610ec057600080fd5b505af1158015610ed4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef89190611aa3565b610f37576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2e90611e4e565b60405180910390fd5b6000601290506012821415610f5857610f538433856001611006565b610f96565b610f958433610f8e610f73868661181a90919063ffffffff16565b600a610f7f9190611f7f565b876118f490919063ffffffff16565b6001611006565b5b7fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7843385610fc488336116ff565b604051610fd49493929190611ce0565b60405180910390a150505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061108d5750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6110cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110c390611e2e565b60405180910390fd5b80156111e65761116182600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461180490919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506112fc565b806112fb5761127a82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461181a90919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b50505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b8061139161135733600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661071a565b611383600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336116ff565b61181a90919063ffffffff16565b10156113d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c990611dae565b60405180910390fd5b600060149054906101000a900460ff1615611422576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141990611d4e565b60405180910390fd5b6001600060146101000a81548160ff02191690831515021790555061146c600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633836000611006565b60008060146101000a81548160ff02191690831515021790555060003373ffffffffffffffffffffffffffffffffffffffff16826040516114ac90611c79565b60006040518083038185875af1925050503d80600081146114e9576040519150601f19603f3d011682016040523d82523d6000602084013e6114ee565b606091505b5050905080611532576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152990611d8e565b60405180910390fd5b7ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633846115a4600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336116ff565b6040516115b49493929190611ce0565b60405180910390a15050565b6115c8611786565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611638576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162f90611d6e565b60405180910390fd5b61164181611830565b50565b611673600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633346001611006565b7fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633346116e5600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336116ff565b6040516116f59493929190611ce0565b60405180910390a1565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61178e611920565b73ffffffffffffffffffffffffffffffffffffffff166117ac6107db565b73ffffffffffffffffffffffffffffffffffffffff1614611802576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f990611dee565b60405180910390fd5b565b600081836118129190611ea5565b905092915050565b6000818361182891906120f7565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008183611902919061209d565b905092915050565b600081836119189190611efb565b905092915050565b600033905090565b600081359050611937816123a3565b92915050565b60008135905061194c816123ba565b92915050565b600081519050611961816123ba565b92915050565b600081359050611976816123d1565b92915050565b600060208284031215611992576119916121d1565b5b60006119a084828501611928565b91505092915050565b600080604083850312156119c0576119bf6121d1565b5b60006119ce85828601611928565b92505060206119df85828601611928565b9150509250929050565b60008060008060808587031215611a0357611a026121d1565b5b6000611a1187828801611928565b9450506020611a2287828801611928565b9350506040611a3387828801611967565b9250506060611a448782880161193d565b91505092959194509250565b600080600060608486031215611a6957611a686121d1565b5b6000611a7786828701611928565b9350506020611a8886828701611967565b9250506040611a9986828701611967565b9150509250925092565b600060208284031215611ab957611ab86121d1565b5b6000611ac784828501611952565b91505092915050565b600060208284031215611ae657611ae56121d1565b5b6000611af484828501611967565b91505092915050565b611b068161212b565b82525050565b6000611b19601883611e94565b9150611b24826121e3565b602082019050919050565b6000611b3c602683611e94565b9150611b478261220c565b604082019050919050565b6000611b5f601583611e94565b9150611b6a8261225b565b602082019050919050565b6000611b82602483611e94565b9150611b8d82612284565b604082019050919050565b6000611ba5601e83611e94565b9150611bb0826122d3565b602082019050919050565b6000611bc8602083611e94565b9150611bd3826122fc565b602082019050919050565b6000611beb601f83611e94565b9150611bf682612325565b602082019050919050565b6000611c0e601a83611e94565b9150611c198261234e565b602082019050919050565b6000611c31600083611e89565b9150611c3c82612377565b600082019050919050565b6000611c54600f83611e94565b9150611c5f8261237a565b602082019050919050565b611c7381612169565b82525050565b6000611c8482611c24565b9150819050919050565b6000602082019050611ca36000830184611afd565b92915050565b6000606082019050611cbe6000830186611afd565b611ccb6020830185611afd565b611cd86040830184611c6a565b949350505050565b6000608082019050611cf56000830187611afd565b611d026020830186611afd565b611d0f6040830185611c6a565b611d1c6060830184611c6a565b95945050505050565b6000604082019050611d3a6000830185611afd565b611d476020830184611c6a565b9392505050565b60006020820190508181036000830152611d6781611b0c565b9050919050565b60006020820190508181036000830152611d8781611b2f565b9050919050565b60006020820190508181036000830152611da781611b52565b9050919050565b60006020820190508181036000830152611dc781611b75565b9050919050565b60006020820190508181036000830152611de781611b98565b9050919050565b60006020820190508181036000830152611e0781611bbb565b9050919050565b60006020820190508181036000830152611e2781611bde565b9050919050565b60006020820190508181036000830152611e4781611c01565b9050919050565b60006020820190508181036000830152611e6781611c47565b9050919050565b6000602082019050611e836000830184611c6a565b92915050565b600081905092915050565b600082825260208201905092915050565b6000611eb082612169565b9150611ebb83612169565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611ef057611eef612173565b5b828201905092915050565b6000611f0682612169565b9150611f1183612169565b925082611f2157611f206121a2565b5b828204905092915050565b6000808291508390505b6001851115611f7657808604811115611f5257611f51612173565b5b6001851615611f615780820291505b8081029050611f6f856121d6565b9450611f36565b94509492505050565b6000611f8a82612169565b9150611f9583612169565b9250611fc27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611fca565b905092915050565b600082611fda5760019050612096565b81611fe85760009050612096565b8160018114611ffe576002811461200857612037565b6001915050612096565b60ff84111561201a57612019612173565b5b8360020a91508482111561203157612030612173565b5b50612096565b5060208310610133831016604e8410600b841016171561206c5782820a90508381111561206757612066612173565b5b612096565b6120798484846001611f2c565b925090508184048111156120905761208f612173565b5b81810290505b9392505050565b60006120a882612169565b91506120b383612169565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156120ec576120eb612173565b5b828202905092915050565b600061210282612169565b915061210d83612169565b9250828210156121205761211f612173565b5b828203905092915050565b600061213682612149565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b60008160011c9050919050565b7f5265656e7472616e742063616c6c206465746563746564210000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f6661696c656420746f2073656e6420616d6f756e740000000000000000000000600082015250565b7f496e73756666696369656e742062616c616e63652045544820746f207769746860008201527f6472617700000000000000000000000000000000000000000000000000000000602082015250565b7f546f6b656e206e6f74207665726966696564206f6e2045786368616e67650000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e73756666696369656e7420546f6b656e7320746f20776974686472617700600082015250565b7f556e617574686f72697365642046756e6374696f6e2043616c6c000000000000600082015250565b50565b7f4e6f20417070726f76616c207965740000000000000000000000000000000000600082015250565b6123ac8161212b565b81146123b757600080fd5b50565b6123c38161213d565b81146123ce57600080fd5b50565b6123da81612169565b81146123e557600080fd5b5056fea2646970667358221220b83a26728c3933f1452b67bce05e41a305136821edfabe256228fcbc1226f96764736f6c63430008070033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x64 PUSH2 0xAB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xB3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP PUSH2 0x177 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x241E PUSH3 0x196 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0xFE4 ADD MSTORE PUSH2 0x241E PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x99C6D2DE GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xF14210A6 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xF14210A6 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xF6326FB3 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xF7888AEC EQ PUSH2 0x370 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x99C6D2DE EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xB4A99A4E EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0xC5AB4602 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0xCD5D767C EQ PUSH2 0x2D7 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x7BF1A627 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x96C0EC55 EQ PUSH2 0x231 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x31415A65 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x46A8F820 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x4BDDE1CF EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x4FC121DB EQ PUSH2 0x187 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x3AD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x19E9 JUMP JUMPDEST PUSH2 0x3F9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0x71A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x7A1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21B PUSH2 0x7DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x1A50 JUMP JUMPDEST PUSH2 0x804 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x1A50 JUMP JUMPDEST PUSH2 0xCC1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x298 PUSH2 0xFE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x19E9 JUMP JUMPDEST PUSH2 0x1006 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x1E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x1AD0 JUMP JUMPDEST PUSH2 0x1327 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x15C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36E PUSH2 0x1644 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x397 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x1E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B5 PUSH2 0x1786 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x480 JUMPI POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x5D9 JUMPI PUSH2 0x554 DUP3 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1804 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x6EF JUMP JUMPDEST DUP1 PUSH2 0x6EE JUMPI PUSH2 0x66D DUP3 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7A9 PUSH2 0x1786 JUMP JUMPDEST PUSH2 0x7B3 PUSH1 0x0 PUSH2 0x1830 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x85F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1027B219 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BA SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x90A SWAP2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST PUSH2 0x949 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x940 SWAP1 PUSH2 0x1DCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x96F PUSH2 0x957 CALLER DUP7 PUSH2 0x71A JUMP JUMPDEST PUSH2 0x961 DUP7 CALLER PUSH2 0x16FF JUMP JUMPDEST PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x9B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A7 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F7 SWAP1 PUSH2 0x1D4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x12 SWAP1 POP PUSH1 0x12 DUP3 EQ ISZERO PUSH2 0xB35 JUMPI PUSH2 0xA78 DUP5 CALLER DUP6 PUSH1 0x0 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD5 SWAP3 SWAP2 SWAP1 PUSH2 0x1D25 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB03 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB27 SWAP2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST PUSH2 0xB30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC5B JUMP JUMPDEST PUSH2 0xB72 DUP5 CALLER PUSH2 0xB6B PUSH2 0xB50 DUP7 DUP7 PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0xB5C SWAP2 SWAP1 PUSH2 0x1F7F JUMP JUMPDEST DUP8 PUSH2 0x18F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH2 0xBE2 PUSH2 0xBC7 DUP7 DUP7 PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0xBD3 SWAP2 SWAP1 PUSH2 0x1F7F JUMP JUMPDEST DUP8 PUSH2 0x190A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBFF SWAP3 SWAP2 SWAP1 PUSH2 0x1D25 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC2D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC51 SWAP2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST PUSH2 0xC5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xF341246ADAAC6F497BC2A656F546AB9E182111D630394F0C57C710A59A2CB567 DUP5 CALLER DUP6 PUSH2 0xCA3 DUP9 CALLER PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1027B219 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD77 SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDA3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDC7 SWAP2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST PUSH2 0xE06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDFD SWAP1 PUSH2 0x1DCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CA9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xED4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEF8 SWAP2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST PUSH2 0xF37 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2E SWAP1 PUSH2 0x1E4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP PUSH1 0x12 DUP3 EQ ISZERO PUSH2 0xF58 JUMPI PUSH2 0xF53 DUP5 CALLER DUP6 PUSH1 0x1 PUSH2 0x1006 JUMP JUMPDEST PUSH2 0xF96 JUMP JUMPDEST PUSH2 0xF95 DUP5 CALLER PUSH2 0xF8E PUSH2 0xF73 DUP7 DUP7 PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0xF7F SWAP2 SWAP1 PUSH2 0x1F7F JUMP JUMPDEST DUP8 PUSH2 0x18F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1006 JUMP JUMPDEST JUMPDEST PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP5 CALLER DUP6 PUSH2 0xFC4 DUP9 CALLER PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFD4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x108D JUMPI POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x10CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C3 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x11E6 JUMPI PUSH2 0x1161 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1804 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x12FC JUMP JUMPDEST DUP1 PUSH2 0x12FB JUMPI PUSH2 0x127A DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH2 0x1391 PUSH2 0x1357 CALLER PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x71A JUMP JUMPDEST PUSH2 0x1383 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x16FF JUMP JUMPDEST PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x13D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C9 SWAP1 PUSH2 0x1DAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1422 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1419 SWAP1 PUSH2 0x1D4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x146C PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH1 0x0 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x14AC SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14E9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1532 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1529 SWAP1 PUSH2 0x1D8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xF341246ADAAC6F497BC2A656F546AB9E182111D630394F0C57C710A59A2CB567 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP5 PUSH2 0x15A4 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x15C8 PUSH2 0x1786 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1638 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x162F SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1641 DUP2 PUSH2 0x1830 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1673 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER CALLVALUE PUSH1 0x1 PUSH2 0x1006 JUMP JUMPDEST PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER CALLVALUE PUSH2 0x16E5 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x178E PUSH2 0x1920 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17AC PUSH2 0x7DB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1802 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17F9 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1812 SWAP2 SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1828 SWAP2 SWAP1 PUSH2 0x20F7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1902 SWAP2 SWAP1 PUSH2 0x209D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1918 SWAP2 SWAP1 PUSH2 0x1EFB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1937 DUP2 PUSH2 0x23A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x194C DUP2 PUSH2 0x23BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1961 DUP2 PUSH2 0x23BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1976 DUP2 PUSH2 0x23D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1992 JUMPI PUSH2 0x1991 PUSH2 0x21D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19A0 DUP5 DUP3 DUP6 ADD PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19C0 JUMPI PUSH2 0x19BF PUSH2 0x21D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19CE DUP6 DUP3 DUP7 ADD PUSH2 0x1928 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19DF DUP6 DUP3 DUP7 ADD PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1A03 JUMPI PUSH2 0x1A02 PUSH2 0x21D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A11 DUP8 DUP3 DUP9 ADD PUSH2 0x1928 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1A22 DUP8 DUP3 DUP9 ADD PUSH2 0x1928 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1A33 DUP8 DUP3 DUP9 ADD PUSH2 0x1967 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1A44 DUP8 DUP3 DUP9 ADD PUSH2 0x193D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A69 JUMPI PUSH2 0x1A68 PUSH2 0x21D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A77 DUP7 DUP3 DUP8 ADD PUSH2 0x1928 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A88 DUP7 DUP3 DUP8 ADD PUSH2 0x1967 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A99 DUP7 DUP3 DUP8 ADD PUSH2 0x1967 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AB9 JUMPI PUSH2 0x1AB8 PUSH2 0x21D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AC7 DUP5 DUP3 DUP6 ADD PUSH2 0x1952 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AE6 JUMPI PUSH2 0x1AE5 PUSH2 0x21D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AF4 DUP5 DUP3 DUP6 ADD PUSH2 0x1967 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B06 DUP2 PUSH2 0x212B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B19 PUSH1 0x18 DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B24 DUP3 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B3C PUSH1 0x26 DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B47 DUP3 PUSH2 0x220C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B5F PUSH1 0x15 DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B6A DUP3 PUSH2 0x225B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B82 PUSH1 0x24 DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B8D DUP3 PUSH2 0x2284 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BA5 PUSH1 0x1E DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB0 DUP3 PUSH2 0x22D3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC8 PUSH1 0x20 DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD3 DUP3 PUSH2 0x22FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BEB PUSH1 0x1F DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF6 DUP3 PUSH2 0x2325 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0E PUSH1 0x1A DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C19 DUP3 PUSH2 0x234E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C31 PUSH1 0x0 DUP4 PUSH2 0x1E89 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C3C DUP3 PUSH2 0x2377 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C54 PUSH1 0xF DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C5F DUP3 PUSH2 0x237A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C73 DUP2 PUSH2 0x2169 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C84 DUP3 PUSH2 0x1C24 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CA3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1CBE PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x1CCB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x1CD8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C6A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1CF5 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x1D02 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x1D0F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C6A JUMP JUMPDEST PUSH2 0x1D1C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1C6A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D3A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x1D47 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C6A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D67 DUP2 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D87 DUP2 PUSH2 0x1B2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DA7 DUP2 PUSH2 0x1B52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DC7 DUP2 PUSH2 0x1B75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DE7 DUP2 PUSH2 0x1B98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E07 DUP2 PUSH2 0x1BBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E27 DUP2 PUSH2 0x1BDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E47 DUP2 PUSH2 0x1C01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E67 DUP2 PUSH2 0x1C47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E83 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB0 DUP3 PUSH2 0x2169 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EBB DUP4 PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1EF0 JUMPI PUSH2 0x1EEF PUSH2 0x2173 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F06 DUP3 PUSH2 0x2169 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F11 DUP4 PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F21 JUMPI PUSH2 0x1F20 PUSH2 0x21A2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1F76 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1F52 JUMPI PUSH2 0x1F51 PUSH2 0x2173 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1F61 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1F6F DUP6 PUSH2 0x21D6 JUMP JUMPDEST SWAP5 POP PUSH2 0x1F36 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F8A DUP3 PUSH2 0x2169 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F95 DUP4 PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP PUSH2 0x1FC2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1FCA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1FDA JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2096 JUMP JUMPDEST DUP2 PUSH2 0x1FE8 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2096 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1FFE JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2008 JUMPI PUSH2 0x2037 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2096 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x201A JUMPI PUSH2 0x2019 PUSH2 0x2173 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x2031 JUMPI PUSH2 0x2030 PUSH2 0x2173 JUMP JUMPDEST JUMPDEST POP PUSH2 0x2096 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x206C JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x2067 JUMPI PUSH2 0x2066 PUSH2 0x2173 JUMP JUMPDEST JUMPDEST PUSH2 0x2096 JUMP JUMPDEST PUSH2 0x2079 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1F2C JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x2090 JUMPI PUSH2 0x208F PUSH2 0x2173 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A8 DUP3 PUSH2 0x2169 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B3 DUP4 PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x20EC JUMPI PUSH2 0x20EB PUSH2 0x2173 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2102 DUP3 PUSH2 0x2169 JUMP JUMPDEST SWAP2 POP PUSH2 0x210D DUP4 PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2120 JUMPI PUSH2 0x211F PUSH2 0x2173 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2136 DUP3 PUSH2 0x2149 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E742063616C6C206465746563746564210000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6661696C656420746F2073656E6420616D6F756E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E63652045544820746F2077697468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472617700000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E206E6F74207665726966696564206F6E2045786368616E67650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420546F6B656E7320746F20776974686472617700 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x556E617574686F72697365642046756E6374696F6E2043616C6C000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x4E6F20417070726F76616C207965740000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x23AC DUP2 PUSH2 0x212B JUMP JUMPDEST DUP2 EQ PUSH2 0x23B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x23C3 DUP2 PUSH2 0x213D JUMP JUMPDEST DUP2 EQ PUSH2 0x23CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x23DA DUP2 PUSH2 0x2169 JUMP JUMPDEST DUP2 EQ PUSH2 0x23E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 GASPRICE 0x26 PUSH19 0x8C3933F1452B67BCE05E41A305136821EDFABE 0x25 PUSH3 0x28FCBC SLT 0x26 0xF9 PUSH8 0x64736F6C63430008 SMOD STOP CALLER ","sourceMap":"388:5862:7:-:0;;;631:1;597:36;;;;;;;;;;;;;;;;;;;;1138:51;;;;;;;;;;936:32:1;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1171:10:7;1163:18;;;;;;;;;;;;388:5862;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2433:187:1:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;388:5862:7:-;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@Owner_2809":{"entryPoint":4066,"id":2809,"parameterSlots":0,"returnSlots":0},"@_checkOwner_100":{"entryPoint":6022,"id":100,"parameterSlots":0,"returnSlots":0},"@_msgSender_170":{"entryPoint":6432,"id":170,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_157":{"entryPoint":6192,"id":157,"parameterSlots":1,"returnSlots":0},"@add_356":{"entryPoint":6148,"id":356,"parameterSlots":2,"returnSlots":1},"@balanceOf_3270":{"entryPoint":5887,"id":3270,"parameterSlots":2,"returnSlots":1},"@depositETH_2891":{"entryPoint":5700,"id":2891,"parameterSlots":0,"returnSlots":0},"@depositToken_3053":{"entryPoint":3265,"id":3053,"parameterSlots":3,"returnSlots":0},"@div_401":{"entryPoint":6410,"id":401,"parameterSlots":2,"returnSlots":1},"@ethToken_2817":{"entryPoint":1973,"id":2817,"parameterSlots":0,"returnSlots":0},"@getlockedFunds_3203":{"entryPoint":1818,"id":3203,"parameterSlots":2,"returnSlots":1},"@lockedFunds_2829":{"entryPoint":1781,"id":2829,"parameterSlots":0,"returnSlots":0},"@mul_386":{"entryPoint":6388,"id":386,"parameterSlots":2,"returnSlots":1},"@owner_86":{"entryPoint":2011,"id":86,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_114":{"entryPoint":1953,"id":114,"parameterSlots":0,"returnSlots":0},"@s_tokens_2823":{"entryPoint":4866,"id":2823,"parameterSlots":0,"returnSlots":0},"@sub_371":{"entryPoint":6170,"id":371,"parameterSlots":2,"returnSlots":1},"@transferOwnership_137":{"entryPoint":5568,"id":137,"parameterSlots":1,"returnSlots":0},"@updateBalance_3321":{"entryPoint":4102,"id":3321,"parameterSlots":4,"returnSlots":0},"@updateExchangeAddress_3335":{"entryPoint":941,"id":3335,"parameterSlots":1,"returnSlots":0},"@updateLockedFunds_3254":{"entryPoint":1017,"id":3254,"parameterSlots":4,"returnSlots":0},"@withdrawETH_2964":{"entryPoint":4903,"id":2964,"parameterSlots":1,"returnSlots":0},"@withdrawToken_3187":{"entryPoint":2052,"id":3187,"parameterSlots":3,"returnSlots":0},"abi_decode_t_address":{"entryPoint":6440,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":6461,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":6482,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6503,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6524,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6569,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256t_bool":{"entryPoint":6633,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":6736,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":6819,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6864,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6909,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210_to_t_string_memory_ptr_fromStack":{"entryPoint":6924,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":6959,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4_to_t_string_memory_ptr_fromStack":{"entryPoint":6994,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4_to_t_string_memory_ptr_fromStack":{"entryPoint":7029,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a_to_t_string_memory_ptr_fromStack":{"entryPoint":7064,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":7099,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9_to_t_string_memory_ptr_fromStack":{"entryPoint":7134,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1_to_t_string_memory_ptr_fromStack":{"entryPoint":7169,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7204,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba_to_t_string_memory_ptr_fromStack":{"entryPoint":7239,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7274,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7289,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7310,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":7337,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":7392,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":7461,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7502,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7534,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7566,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7598,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7630,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7662,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7694,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7726,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7758,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7790,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7817,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7828,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7845,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":7931,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":7980,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":8063,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":8138,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":8349,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":8439,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":8491,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":8509,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":8521,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":8553,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":8563,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":8610,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":8657,"id":null,"parameterSlots":0,"returnSlots":0},"shift_right_1_unsigned":{"entryPoint":8662,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210":{"entryPoint":8675,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":8716,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4":{"entryPoint":8795,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4":{"entryPoint":8836,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a":{"entryPoint":8915,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":8956,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9":{"entryPoint":8997,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1":{"entryPoint":9038,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":9079,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba":{"entryPoint":9082,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":9123,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":9146,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":9169,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:20532:9","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:9","statements":[{"nodeType":"YulAssignment","src":"69:29:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:9"},"nodeType":"YulFunctionCall","src":"78:20:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:9"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:9"},"nodeType":"YulFunctionCall","src":"107:33:9"},"nodeType":"YulExpressionStatement","src":"107:33:9"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:9","type":""}],"src":"7:139:9"},{"body":{"nodeType":"YulBlock","src":"201:84:9","statements":[{"nodeType":"YulAssignment","src":"211:29:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"233:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"220:12:9"},"nodeType":"YulFunctionCall","src":"220:20:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"211:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"273:5:9"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"249:23:9"},"nodeType":"YulFunctionCall","src":"249:30:9"},"nodeType":"YulExpressionStatement","src":"249:30:9"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"179:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"187:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"195:5:9","type":""}],"src":"152:133:9"},{"body":{"nodeType":"YulBlock","src":"351:77:9","statements":[{"nodeType":"YulAssignment","src":"361:22:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"376:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"370:5:9"},"nodeType":"YulFunctionCall","src":"370:13:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"361:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"416:5:9"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"392:23:9"},"nodeType":"YulFunctionCall","src":"392:30:9"},"nodeType":"YulExpressionStatement","src":"392:30:9"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"329:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"337:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"345:5:9","type":""}],"src":"291:137:9"},{"body":{"nodeType":"YulBlock","src":"486:87:9","statements":[{"nodeType":"YulAssignment","src":"496:29:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"518:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"505:12:9"},"nodeType":"YulFunctionCall","src":"505:20:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"496:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"561:5:9"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"534:26:9"},"nodeType":"YulFunctionCall","src":"534:33:9"},"nodeType":"YulExpressionStatement","src":"534:33:9"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"464:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"472:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"480:5:9","type":""}],"src":"434:139:9"},{"body":{"nodeType":"YulBlock","src":"645:263:9","statements":[{"body":{"nodeType":"YulBlock","src":"691:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"693:77:9"},"nodeType":"YulFunctionCall","src":"693:79:9"},"nodeType":"YulExpressionStatement","src":"693:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"666:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"675:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"662:3:9"},"nodeType":"YulFunctionCall","src":"662:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"687:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"658:3:9"},"nodeType":"YulFunctionCall","src":"658:32:9"},"nodeType":"YulIf","src":"655:119:9"},{"nodeType":"YulBlock","src":"784:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"799:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"813:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"803:6:9","type":""}]},{"nodeType":"YulAssignment","src":"828:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"863:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"874:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"859:3:9"},"nodeType":"YulFunctionCall","src":"859:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"883:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"838:20:9"},"nodeType":"YulFunctionCall","src":"838:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"828:6:9"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"615:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"626:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"638:6:9","type":""}],"src":"579:329:9"},{"body":{"nodeType":"YulBlock","src":"997:391:9","statements":[{"body":{"nodeType":"YulBlock","src":"1043:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1045:77:9"},"nodeType":"YulFunctionCall","src":"1045:79:9"},"nodeType":"YulExpressionStatement","src":"1045:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1018:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"1027:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1014:3:9"},"nodeType":"YulFunctionCall","src":"1014:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"1039:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1010:3:9"},"nodeType":"YulFunctionCall","src":"1010:32:9"},"nodeType":"YulIf","src":"1007:119:9"},{"nodeType":"YulBlock","src":"1136:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1151:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1165:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1155:6:9","type":""}]},{"nodeType":"YulAssignment","src":"1180:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1215:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1226:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1211:3:9"},"nodeType":"YulFunctionCall","src":"1211:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1235:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1190:20:9"},"nodeType":"YulFunctionCall","src":"1190:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1180:6:9"}]}]},{"nodeType":"YulBlock","src":"1263:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1278:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1292:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1282:6:9","type":""}]},{"nodeType":"YulAssignment","src":"1308:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1343:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1354:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1339:3:9"},"nodeType":"YulFunctionCall","src":"1339:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1363:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1318:20:9"},"nodeType":"YulFunctionCall","src":"1318:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1308:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"959:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"970:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"982:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"990:6:9","type":""}],"src":"914:474:9"},{"body":{"nodeType":"YulBlock","src":"1508:645:9","statements":[{"body":{"nodeType":"YulBlock","src":"1555:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1557:77:9"},"nodeType":"YulFunctionCall","src":"1557:79:9"},"nodeType":"YulExpressionStatement","src":"1557:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1529:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"1538:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1525:3:9"},"nodeType":"YulFunctionCall","src":"1525:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"1550:3:9","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1521:3:9"},"nodeType":"YulFunctionCall","src":"1521:33:9"},"nodeType":"YulIf","src":"1518:120:9"},{"nodeType":"YulBlock","src":"1648:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1663:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1677:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1667:6:9","type":""}]},{"nodeType":"YulAssignment","src":"1692:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1727:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1738:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1723:3:9"},"nodeType":"YulFunctionCall","src":"1723:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1747:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1702:20:9"},"nodeType":"YulFunctionCall","src":"1702:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1692:6:9"}]}]},{"nodeType":"YulBlock","src":"1775:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1790:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1804:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1794:6:9","type":""}]},{"nodeType":"YulAssignment","src":"1820:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1855:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1866:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1851:3:9"},"nodeType":"YulFunctionCall","src":"1851:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1875:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1830:20:9"},"nodeType":"YulFunctionCall","src":"1830:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1820:6:9"}]}]},{"nodeType":"YulBlock","src":"1903:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1918:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1932:2:9","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1922:6:9","type":""}]},{"nodeType":"YulAssignment","src":"1948:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1983:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1994:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:9"},"nodeType":"YulFunctionCall","src":"1979:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2003:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1958:20:9"},"nodeType":"YulFunctionCall","src":"1958:53:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1948:6:9"}]}]},{"nodeType":"YulBlock","src":"2031:115:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2046:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2060:2:9","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2050:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2076:60:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2108:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2119:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2104:3:9"},"nodeType":"YulFunctionCall","src":"2104:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2128:7:9"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"2086:17:9"},"nodeType":"YulFunctionCall","src":"2086:50:9"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2076:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1454:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1465:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1477:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1485:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1493:6:9","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1501:6:9","type":""}],"src":"1394:759:9"},{"body":{"nodeType":"YulBlock","src":"2259:519:9","statements":[{"body":{"nodeType":"YulBlock","src":"2305:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2307:77:9"},"nodeType":"YulFunctionCall","src":"2307:79:9"},"nodeType":"YulExpressionStatement","src":"2307:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2280:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"2289:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2276:3:9"},"nodeType":"YulFunctionCall","src":"2276:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"2301:2:9","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2272:3:9"},"nodeType":"YulFunctionCall","src":"2272:32:9"},"nodeType":"YulIf","src":"2269:119:9"},{"nodeType":"YulBlock","src":"2398:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2413:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2427:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2417:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2442:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2477:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2488:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2473:3:9"},"nodeType":"YulFunctionCall","src":"2473:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2497:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2452:20:9"},"nodeType":"YulFunctionCall","src":"2452:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2442:6:9"}]}]},{"nodeType":"YulBlock","src":"2525:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2540:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2554:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2544:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2570:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2605:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2616:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2601:3:9"},"nodeType":"YulFunctionCall","src":"2601:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2625:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2580:20:9"},"nodeType":"YulFunctionCall","src":"2580:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2570:6:9"}]}]},{"nodeType":"YulBlock","src":"2653:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2668:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2682:2:9","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2672:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2698:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2733:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2744:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2729:3:9"},"nodeType":"YulFunctionCall","src":"2729:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2753:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2708:20:9"},"nodeType":"YulFunctionCall","src":"2708:53:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2698:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2213:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2224:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2236:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2244:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2252:6:9","type":""}],"src":"2159:619:9"},{"body":{"nodeType":"YulBlock","src":"2858:271:9","statements":[{"body":{"nodeType":"YulBlock","src":"2904:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2906:77:9"},"nodeType":"YulFunctionCall","src":"2906:79:9"},"nodeType":"YulExpressionStatement","src":"2906:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2879:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2875:3:9"},"nodeType":"YulFunctionCall","src":"2875:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"2900:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2871:3:9"},"nodeType":"YulFunctionCall","src":"2871:32:9"},"nodeType":"YulIf","src":"2868:119:9"},{"nodeType":"YulBlock","src":"2997:125:9","statements":[{"nodeType":"YulVariableDeclaration","src":"3012:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"3026:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3016:6:9","type":""}]},{"nodeType":"YulAssignment","src":"3041:71:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3084:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"3095:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3080:3:9"},"nodeType":"YulFunctionCall","src":"3080:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3104:7:9"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"3051:28:9"},"nodeType":"YulFunctionCall","src":"3051:61:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3041:6:9"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2828:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2839:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2851:6:9","type":""}],"src":"2784:345:9"},{"body":{"nodeType":"YulBlock","src":"3201:263:9","statements":[{"body":{"nodeType":"YulBlock","src":"3247:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3249:77:9"},"nodeType":"YulFunctionCall","src":"3249:79:9"},"nodeType":"YulExpressionStatement","src":"3249:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3222:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"3231:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3218:3:9"},"nodeType":"YulFunctionCall","src":"3218:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"3243:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3214:3:9"},"nodeType":"YulFunctionCall","src":"3214:32:9"},"nodeType":"YulIf","src":"3211:119:9"},{"nodeType":"YulBlock","src":"3340:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"3355:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"3369:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3359:6:9","type":""}]},{"nodeType":"YulAssignment","src":"3384:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"3430:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:9"},"nodeType":"YulFunctionCall","src":"3415:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3439:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3394:20:9"},"nodeType":"YulFunctionCall","src":"3394:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3384:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3171:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3182:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3194:6:9","type":""}],"src":"3135:329:9"},{"body":{"nodeType":"YulBlock","src":"3535:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3552:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3575:5:9"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3557:17:9"},"nodeType":"YulFunctionCall","src":"3557:24:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3545:6:9"},"nodeType":"YulFunctionCall","src":"3545:37:9"},"nodeType":"YulExpressionStatement","src":"3545:37:9"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3523:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3530:3:9","type":""}],"src":"3470:118:9"},{"body":{"nodeType":"YulBlock","src":"3740:220:9","statements":[{"nodeType":"YulAssignment","src":"3750:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3816:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"3821:2:9","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3757:58:9"},"nodeType":"YulFunctionCall","src":"3757:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3750:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3922:3:9"}],"functionName":{"name":"store_literal_in_memory_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","nodeType":"YulIdentifier","src":"3833:88:9"},"nodeType":"YulFunctionCall","src":"3833:93:9"},"nodeType":"YulExpressionStatement","src":"3833:93:9"},{"nodeType":"YulAssignment","src":"3935:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3946:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"3951:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3942:3:9"},"nodeType":"YulFunctionCall","src":"3942:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3935:3:9"}]}]},"name":"abi_encode_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3728:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3736:3:9","type":""}],"src":"3594:366:9"},{"body":{"nodeType":"YulBlock","src":"4112:220:9","statements":[{"nodeType":"YulAssignment","src":"4122:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4188:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"4193:2:9","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4129:58:9"},"nodeType":"YulFunctionCall","src":"4129:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4122:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4294:3:9"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"4205:88:9"},"nodeType":"YulFunctionCall","src":"4205:93:9"},"nodeType":"YulExpressionStatement","src":"4205:93:9"},{"nodeType":"YulAssignment","src":"4307:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4318:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"4323:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4314:3:9"},"nodeType":"YulFunctionCall","src":"4314:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4307:3:9"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4100:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4108:3:9","type":""}],"src":"3966:366:9"},{"body":{"nodeType":"YulBlock","src":"4484:220:9","statements":[{"nodeType":"YulAssignment","src":"4494:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4560:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"4565:2:9","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4501:58:9"},"nodeType":"YulFunctionCall","src":"4501:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4494:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4666:3:9"}],"functionName":{"name":"store_literal_in_memory_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4","nodeType":"YulIdentifier","src":"4577:88:9"},"nodeType":"YulFunctionCall","src":"4577:93:9"},"nodeType":"YulExpressionStatement","src":"4577:93:9"},{"nodeType":"YulAssignment","src":"4679:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4690:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"4695:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4686:3:9"},"nodeType":"YulFunctionCall","src":"4686:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4679:3:9"}]}]},"name":"abi_encode_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4472:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4480:3:9","type":""}],"src":"4338:366:9"},{"body":{"nodeType":"YulBlock","src":"4856:220:9","statements":[{"nodeType":"YulAssignment","src":"4866:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4932:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"4937:2:9","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4873:58:9"},"nodeType":"YulFunctionCall","src":"4873:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4866:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5038:3:9"}],"functionName":{"name":"store_literal_in_memory_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4","nodeType":"YulIdentifier","src":"4949:88:9"},"nodeType":"YulFunctionCall","src":"4949:93:9"},"nodeType":"YulExpressionStatement","src":"4949:93:9"},{"nodeType":"YulAssignment","src":"5051:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5062:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"5067:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5058:3:9"},"nodeType":"YulFunctionCall","src":"5058:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5051:3:9"}]}]},"name":"abi_encode_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4844:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4852:3:9","type":""}],"src":"4710:366:9"},{"body":{"nodeType":"YulBlock","src":"5228:220:9","statements":[{"nodeType":"YulAssignment","src":"5238:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5304:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"5309:2:9","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5245:58:9"},"nodeType":"YulFunctionCall","src":"5245:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5238:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5410:3:9"}],"functionName":{"name":"store_literal_in_memory_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a","nodeType":"YulIdentifier","src":"5321:88:9"},"nodeType":"YulFunctionCall","src":"5321:93:9"},"nodeType":"YulExpressionStatement","src":"5321:93:9"},{"nodeType":"YulAssignment","src":"5423:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5434:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"5439:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5430:3:9"},"nodeType":"YulFunctionCall","src":"5430:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5423:3:9"}]}]},"name":"abi_encode_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5216:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5224:3:9","type":""}],"src":"5082:366:9"},{"body":{"nodeType":"YulBlock","src":"5600:220:9","statements":[{"nodeType":"YulAssignment","src":"5610:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5676:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"5681:2:9","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5617:58:9"},"nodeType":"YulFunctionCall","src":"5617:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5610:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5782:3:9"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"5693:88:9"},"nodeType":"YulFunctionCall","src":"5693:93:9"},"nodeType":"YulExpressionStatement","src":"5693:93:9"},{"nodeType":"YulAssignment","src":"5795:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5806:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"5811:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5802:3:9"},"nodeType":"YulFunctionCall","src":"5802:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5795:3:9"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5588:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5596:3:9","type":""}],"src":"5454:366:9"},{"body":{"nodeType":"YulBlock","src":"5972:220:9","statements":[{"nodeType":"YulAssignment","src":"5982:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6048:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"6053:2:9","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5989:58:9"},"nodeType":"YulFunctionCall","src":"5989:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5982:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6154:3:9"}],"functionName":{"name":"store_literal_in_memory_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9","nodeType":"YulIdentifier","src":"6065:88:9"},"nodeType":"YulFunctionCall","src":"6065:93:9"},"nodeType":"YulExpressionStatement","src":"6065:93:9"},{"nodeType":"YulAssignment","src":"6167:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6178:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"6183:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6174:3:9"},"nodeType":"YulFunctionCall","src":"6174:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6167:3:9"}]}]},"name":"abi_encode_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5960:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5968:3:9","type":""}],"src":"5826:366:9"},{"body":{"nodeType":"YulBlock","src":"6344:220:9","statements":[{"nodeType":"YulAssignment","src":"6354:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6420:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"6425:2:9","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6361:58:9"},"nodeType":"YulFunctionCall","src":"6361:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6354:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6526:3:9"}],"functionName":{"name":"store_literal_in_memory_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1","nodeType":"YulIdentifier","src":"6437:88:9"},"nodeType":"YulFunctionCall","src":"6437:93:9"},"nodeType":"YulExpressionStatement","src":"6437:93:9"},{"nodeType":"YulAssignment","src":"6539:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6550:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"6555:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6546:3:9"},"nodeType":"YulFunctionCall","src":"6546:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6539:3:9"}]}]},"name":"abi_encode_t_stringliteral_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6332:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6340:3:9","type":""}],"src":"6198:366:9"},{"body":{"nodeType":"YulBlock","src":"6733:235:9","statements":[{"nodeType":"YulAssignment","src":"6743:90:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6826:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"6831:1:9","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"6750:75:9"},"nodeType":"YulFunctionCall","src":"6750:83:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6743:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6931:3:9"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"6842:88:9"},"nodeType":"YulFunctionCall","src":"6842:93:9"},"nodeType":"YulExpressionStatement","src":"6842:93:9"},{"nodeType":"YulAssignment","src":"6944:18:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6955:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"6960:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6951:3:9"},"nodeType":"YulFunctionCall","src":"6951:11:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6944:3:9"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6721:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6729:3:9","type":""}],"src":"6570:398:9"},{"body":{"nodeType":"YulBlock","src":"7120:220:9","statements":[{"nodeType":"YulAssignment","src":"7130:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7196:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"7201:2:9","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7137:58:9"},"nodeType":"YulFunctionCall","src":"7137:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7130:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7302:3:9"}],"functionName":{"name":"store_literal_in_memory_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba","nodeType":"YulIdentifier","src":"7213:88:9"},"nodeType":"YulFunctionCall","src":"7213:93:9"},"nodeType":"YulExpressionStatement","src":"7213:93:9"},{"nodeType":"YulAssignment","src":"7315:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7326:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"7331:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7322:3:9"},"nodeType":"YulFunctionCall","src":"7322:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7315:3:9"}]}]},"name":"abi_encode_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7108:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7116:3:9","type":""}],"src":"6974:366:9"},{"body":{"nodeType":"YulBlock","src":"7411:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7428:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7451:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7433:17:9"},"nodeType":"YulFunctionCall","src":"7433:24:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7421:6:9"},"nodeType":"YulFunctionCall","src":"7421:37:9"},"nodeType":"YulExpressionStatement","src":"7421:37:9"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7399:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7406:3:9","type":""}],"src":"7346:118:9"},{"body":{"nodeType":"YulBlock","src":"7658:191:9","statements":[{"nodeType":"YulAssignment","src":"7669:154:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7819:3:9"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"7676:141:9"},"nodeType":"YulFunctionCall","src":"7676:147:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7669:3:9"}]},{"nodeType":"YulAssignment","src":"7833:10:9","value":{"name":"pos","nodeType":"YulIdentifier","src":"7840:3:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7833:3:9"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7645:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7654:3:9","type":""}],"src":"7470:379:9"},{"body":{"nodeType":"YulBlock","src":"7953:124:9","statements":[{"nodeType":"YulAssignment","src":"7963:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7975:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7986:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7971:3:9"},"nodeType":"YulFunctionCall","src":"7971:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7963:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8043:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8056:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8067:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8052:3:9"},"nodeType":"YulFunctionCall","src":"8052:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7999:43:9"},"nodeType":"YulFunctionCall","src":"7999:71:9"},"nodeType":"YulExpressionStatement","src":"7999:71:9"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7925:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7937:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7948:4:9","type":""}],"src":"7855:222:9"},{"body":{"nodeType":"YulBlock","src":"8237:288:9","statements":[{"nodeType":"YulAssignment","src":"8247:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8259:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8270:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8255:3:9"},"nodeType":"YulFunctionCall","src":"8255:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8247:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8327:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8340:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8351:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8336:3:9"},"nodeType":"YulFunctionCall","src":"8336:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8283:43:9"},"nodeType":"YulFunctionCall","src":"8283:71:9"},"nodeType":"YulExpressionStatement","src":"8283:71:9"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8408:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8421:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8432:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8417:3:9"},"nodeType":"YulFunctionCall","src":"8417:18:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8364:43:9"},"nodeType":"YulFunctionCall","src":"8364:72:9"},"nodeType":"YulExpressionStatement","src":"8364:72:9"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8490:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8503:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8514:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8499:3:9"},"nodeType":"YulFunctionCall","src":"8499:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8446:43:9"},"nodeType":"YulFunctionCall","src":"8446:72:9"},"nodeType":"YulExpressionStatement","src":"8446:72:9"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8193:9:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8205:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8213:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8221:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8232:4:9","type":""}],"src":"8083:442:9"},{"body":{"nodeType":"YulBlock","src":"8713:371:9","statements":[{"nodeType":"YulAssignment","src":"8723:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8735:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8746:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8731:3:9"},"nodeType":"YulFunctionCall","src":"8731:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8723:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8804:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8817:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8828:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8813:3:9"},"nodeType":"YulFunctionCall","src":"8813:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8760:43:9"},"nodeType":"YulFunctionCall","src":"8760:71:9"},"nodeType":"YulExpressionStatement","src":"8760:71:9"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8885:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8898:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8909:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8894:3:9"},"nodeType":"YulFunctionCall","src":"8894:18:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8841:43:9"},"nodeType":"YulFunctionCall","src":"8841:72:9"},"nodeType":"YulExpressionStatement","src":"8841:72:9"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8967:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8980:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8991:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8976:3:9"},"nodeType":"YulFunctionCall","src":"8976:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8923:43:9"},"nodeType":"YulFunctionCall","src":"8923:72:9"},"nodeType":"YulExpressionStatement","src":"8923:72:9"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"9049:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9062:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9073:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9058:3:9"},"nodeType":"YulFunctionCall","src":"9058:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9005:43:9"},"nodeType":"YulFunctionCall","src":"9005:72:9"},"nodeType":"YulExpressionStatement","src":"9005:72:9"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8661:9:9","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8673:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8681:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8689:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8697:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8708:4:9","type":""}],"src":"8531:553:9"},{"body":{"nodeType":"YulBlock","src":"9216:206:9","statements":[{"nodeType":"YulAssignment","src":"9226:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9238:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9249:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9234:3:9"},"nodeType":"YulFunctionCall","src":"9234:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9226:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9306:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9319:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9315:3:9"},"nodeType":"YulFunctionCall","src":"9315:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9262:43:9"},"nodeType":"YulFunctionCall","src":"9262:71:9"},"nodeType":"YulExpressionStatement","src":"9262:71:9"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9387:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9400:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9411:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9396:3:9"},"nodeType":"YulFunctionCall","src":"9396:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9343:43:9"},"nodeType":"YulFunctionCall","src":"9343:72:9"},"nodeType":"YulExpressionStatement","src":"9343:72:9"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9180:9:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9192:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9200:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9211:4:9","type":""}],"src":"9090:332:9"},{"body":{"nodeType":"YulBlock","src":"9599:248:9","statements":[{"nodeType":"YulAssignment","src":"9609:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9621:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9632:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9617:3:9"},"nodeType":"YulFunctionCall","src":"9617:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9609:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9656:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9667:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9652:3:9"},"nodeType":"YulFunctionCall","src":"9652:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9675:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"9681:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9671:3:9"},"nodeType":"YulFunctionCall","src":"9671:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9645:6:9"},"nodeType":"YulFunctionCall","src":"9645:47:9"},"nodeType":"YulExpressionStatement","src":"9645:47:9"},{"nodeType":"YulAssignment","src":"9701:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9835:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9709:124:9"},"nodeType":"YulFunctionCall","src":"9709:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9701:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9579:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9594:4:9","type":""}],"src":"9428:419:9"},{"body":{"nodeType":"YulBlock","src":"10024:248:9","statements":[{"nodeType":"YulAssignment","src":"10034:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10046:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10057:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10042:3:9"},"nodeType":"YulFunctionCall","src":"10042:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10034:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10081:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10092:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10077:3:9"},"nodeType":"YulFunctionCall","src":"10077:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10100:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"10106:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10096:3:9"},"nodeType":"YulFunctionCall","src":"10096:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10070:6:9"},"nodeType":"YulFunctionCall","src":"10070:47:9"},"nodeType":"YulExpressionStatement","src":"10070:47:9"},{"nodeType":"YulAssignment","src":"10126:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10260:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10134:124:9"},"nodeType":"YulFunctionCall","src":"10134:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10126:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10004:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10019:4:9","type":""}],"src":"9853:419:9"},{"body":{"nodeType":"YulBlock","src":"10449:248:9","statements":[{"nodeType":"YulAssignment","src":"10459:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10471:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10482:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10467:3:9"},"nodeType":"YulFunctionCall","src":"10467:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10459:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10506:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10517:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10502:3:9"},"nodeType":"YulFunctionCall","src":"10502:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10525:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"10531:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10521:3:9"},"nodeType":"YulFunctionCall","src":"10521:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10495:6:9"},"nodeType":"YulFunctionCall","src":"10495:47:9"},"nodeType":"YulExpressionStatement","src":"10495:47:9"},{"nodeType":"YulAssignment","src":"10551:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10685:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10559:124:9"},"nodeType":"YulFunctionCall","src":"10559:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10551:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10429:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10444:4:9","type":""}],"src":"10278:419:9"},{"body":{"nodeType":"YulBlock","src":"10874:248:9","statements":[{"nodeType":"YulAssignment","src":"10884:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10896:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10907:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10892:3:9"},"nodeType":"YulFunctionCall","src":"10892:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10884:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10931:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10942:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10927:3:9"},"nodeType":"YulFunctionCall","src":"10927:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10950:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"10956:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10946:3:9"},"nodeType":"YulFunctionCall","src":"10946:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10920:6:9"},"nodeType":"YulFunctionCall","src":"10920:47:9"},"nodeType":"YulExpressionStatement","src":"10920:47:9"},{"nodeType":"YulAssignment","src":"10976:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11110:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10984:124:9"},"nodeType":"YulFunctionCall","src":"10984:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10976:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10854:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10869:4:9","type":""}],"src":"10703:419:9"},{"body":{"nodeType":"YulBlock","src":"11299:248:9","statements":[{"nodeType":"YulAssignment","src":"11309:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11321:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11332:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11317:3:9"},"nodeType":"YulFunctionCall","src":"11317:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11309:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11356:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11367:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11352:3:9"},"nodeType":"YulFunctionCall","src":"11352:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11375:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"11381:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11371:3:9"},"nodeType":"YulFunctionCall","src":"11371:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11345:6:9"},"nodeType":"YulFunctionCall","src":"11345:47:9"},"nodeType":"YulExpressionStatement","src":"11345:47:9"},{"nodeType":"YulAssignment","src":"11401:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11535:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11409:124:9"},"nodeType":"YulFunctionCall","src":"11409:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11401:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11279:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11294:4:9","type":""}],"src":"11128:419:9"},{"body":{"nodeType":"YulBlock","src":"11724:248:9","statements":[{"nodeType":"YulAssignment","src":"11734:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11746:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11757:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11742:3:9"},"nodeType":"YulFunctionCall","src":"11742:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11734:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11781:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11792:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11777:3:9"},"nodeType":"YulFunctionCall","src":"11777:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11800:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"11806:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11796:3:9"},"nodeType":"YulFunctionCall","src":"11796:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11770:6:9"},"nodeType":"YulFunctionCall","src":"11770:47:9"},"nodeType":"YulExpressionStatement","src":"11770:47:9"},{"nodeType":"YulAssignment","src":"11826:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11960:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11834:124:9"},"nodeType":"YulFunctionCall","src":"11834:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11826:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11704:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11719:4:9","type":""}],"src":"11553:419:9"},{"body":{"nodeType":"YulBlock","src":"12149:248:9","statements":[{"nodeType":"YulAssignment","src":"12159:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12171:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12182:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12167:3:9"},"nodeType":"YulFunctionCall","src":"12167:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12159:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12206:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12217:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12202:3:9"},"nodeType":"YulFunctionCall","src":"12202:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12225:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"12231:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12221:3:9"},"nodeType":"YulFunctionCall","src":"12221:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12195:6:9"},"nodeType":"YulFunctionCall","src":"12195:47:9"},"nodeType":"YulExpressionStatement","src":"12195:47:9"},{"nodeType":"YulAssignment","src":"12251:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12385:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12259:124:9"},"nodeType":"YulFunctionCall","src":"12259:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12251:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12129:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12144:4:9","type":""}],"src":"11978:419:9"},{"body":{"nodeType":"YulBlock","src":"12574:248:9","statements":[{"nodeType":"YulAssignment","src":"12584:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12596:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12607:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12592:3:9"},"nodeType":"YulFunctionCall","src":"12592:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12584:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12631:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12642:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12627:3:9"},"nodeType":"YulFunctionCall","src":"12627:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12650:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"12656:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12646:3:9"},"nodeType":"YulFunctionCall","src":"12646:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12620:6:9"},"nodeType":"YulFunctionCall","src":"12620:47:9"},"nodeType":"YulExpressionStatement","src":"12620:47:9"},{"nodeType":"YulAssignment","src":"12676:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12810:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12684:124:9"},"nodeType":"YulFunctionCall","src":"12684:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12676:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12554:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12569:4:9","type":""}],"src":"12403:419:9"},{"body":{"nodeType":"YulBlock","src":"12999:248:9","statements":[{"nodeType":"YulAssignment","src":"13009:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13021:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13032:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13017:3:9"},"nodeType":"YulFunctionCall","src":"13017:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13009:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13056:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13067:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13052:3:9"},"nodeType":"YulFunctionCall","src":"13052:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13075:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"13081:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13071:3:9"},"nodeType":"YulFunctionCall","src":"13071:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13045:6:9"},"nodeType":"YulFunctionCall","src":"13045:47:9"},"nodeType":"YulExpressionStatement","src":"13045:47:9"},{"nodeType":"YulAssignment","src":"13101:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13235:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13109:124:9"},"nodeType":"YulFunctionCall","src":"13109:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13101:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12979:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12994:4:9","type":""}],"src":"12828:419:9"},{"body":{"nodeType":"YulBlock","src":"13351:124:9","statements":[{"nodeType":"YulAssignment","src":"13361:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13373:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13384:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13369:3:9"},"nodeType":"YulFunctionCall","src":"13369:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13361:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13441:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13454:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13465:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13450:3:9"},"nodeType":"YulFunctionCall","src":"13450:17:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13397:43:9"},"nodeType":"YulFunctionCall","src":"13397:71:9"},"nodeType":"YulExpressionStatement","src":"13397:71:9"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13323:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13335:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13346:4:9","type":""}],"src":"13253:222:9"},{"body":{"nodeType":"YulBlock","src":"13521:35:9","statements":[{"nodeType":"YulAssignment","src":"13531:19:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13547:2:9","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13541:5:9"},"nodeType":"YulFunctionCall","src":"13541:9:9"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13531:6:9"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"13514:6:9","type":""}],"src":"13481:75:9"},{"body":{"nodeType":"YulBlock","src":"13675:34:9","statements":[{"nodeType":"YulAssignment","src":"13685:18:9","value":{"name":"pos","nodeType":"YulIdentifier","src":"13700:3:9"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13685:11:9"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13647:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"13652:6:9","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13663:11:9","type":""}],"src":"13562:147:9"},{"body":{"nodeType":"YulBlock","src":"13811:73:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13828:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"13833:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13821:6:9"},"nodeType":"YulFunctionCall","src":"13821:19:9"},"nodeType":"YulExpressionStatement","src":"13821:19:9"},{"nodeType":"YulAssignment","src":"13849:29:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13868:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"13873:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13864:3:9"},"nodeType":"YulFunctionCall","src":"13864:14:9"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13849:11:9"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13783:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"13788:6:9","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13799:11:9","type":""}],"src":"13715:169:9"},{"body":{"nodeType":"YulBlock","src":"13934:261:9","statements":[{"nodeType":"YulAssignment","src":"13944:25:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13967:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13949:17:9"},"nodeType":"YulFunctionCall","src":"13949:20:9"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"13944:1:9"}]},{"nodeType":"YulAssignment","src":"13978:25:9","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14001:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13983:17:9"},"nodeType":"YulFunctionCall","src":"13983:20:9"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"13978:1:9"}]},{"body":{"nodeType":"YulBlock","src":"14141:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14143:16:9"},"nodeType":"YulFunctionCall","src":"14143:18:9"},"nodeType":"YulExpressionStatement","src":"14143:18:9"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14062:1:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14069:66:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"14137:1:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14065:3:9"},"nodeType":"YulFunctionCall","src":"14065:74:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14059:2:9"},"nodeType":"YulFunctionCall","src":"14059:81:9"},"nodeType":"YulIf","src":"14056:107:9"},{"nodeType":"YulAssignment","src":"14173:16:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14184:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"14187:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14180:3:9"},"nodeType":"YulFunctionCall","src":"14180:9:9"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"14173:3:9"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13921:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"13924:1:9","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"13930:3:9","type":""}],"src":"13890:305:9"},{"body":{"nodeType":"YulBlock","src":"14243:143:9","statements":[{"nodeType":"YulAssignment","src":"14253:25:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14276:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14258:17:9"},"nodeType":"YulFunctionCall","src":"14258:20:9"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"14253:1:9"}]},{"nodeType":"YulAssignment","src":"14287:25:9","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14310:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14292:17:9"},"nodeType":"YulFunctionCall","src":"14292:20:9"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"14287:1:9"}]},{"body":{"nodeType":"YulBlock","src":"14334:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"14336:16:9"},"nodeType":"YulFunctionCall","src":"14336:18:9"},"nodeType":"YulExpressionStatement","src":"14336:18:9"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14331:1:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14324:6:9"},"nodeType":"YulFunctionCall","src":"14324:9:9"},"nodeType":"YulIf","src":"14321:35:9"},{"nodeType":"YulAssignment","src":"14366:14:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14375:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"14378:1:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"14371:3:9"},"nodeType":"YulFunctionCall","src":"14371:9:9"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"14366:1:9"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14232:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"14235:1:9","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"14241:1:9","type":""}],"src":"14201:185:9"},{"body":{"nodeType":"YulBlock","src":"14465:775:9","statements":[{"nodeType":"YulAssignment","src":"14475:15:9","value":{"name":"_power","nodeType":"YulIdentifier","src":"14484:6:9"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"14475:5:9"}]},{"nodeType":"YulAssignment","src":"14499:14:9","value":{"name":"_base","nodeType":"YulIdentifier","src":"14508:5:9"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"14499:4:9"}]},{"body":{"nodeType":"YulBlock","src":"14557:677:9","statements":[{"body":{"nodeType":"YulBlock","src":"14645:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14647:16:9"},"nodeType":"YulFunctionCall","src":"14647:18:9"},"nodeType":"YulExpressionStatement","src":"14647:18:9"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"14623:4:9"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"14633:3:9"},{"name":"base","nodeType":"YulIdentifier","src":"14638:4:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"14629:3:9"},"nodeType":"YulFunctionCall","src":"14629:14:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14620:2:9"},"nodeType":"YulFunctionCall","src":"14620:24:9"},"nodeType":"YulIf","src":"14617:50:9"},{"body":{"nodeType":"YulBlock","src":"14712:419:9","statements":[{"nodeType":"YulAssignment","src":"15092:25:9","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"15105:5:9"},{"name":"base","nodeType":"YulIdentifier","src":"15112:4:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15101:3:9"},"nodeType":"YulFunctionCall","src":"15101:16:9"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"15092:5:9"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"14687:8:9"},{"kind":"number","nodeType":"YulLiteral","src":"14697:1:9","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14683:3:9"},"nodeType":"YulFunctionCall","src":"14683:16:9"},"nodeType":"YulIf","src":"14680:451:9"},{"nodeType":"YulAssignment","src":"15144:23:9","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"15156:4:9"},{"name":"base","nodeType":"YulIdentifier","src":"15162:4:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15152:3:9"},"nodeType":"YulFunctionCall","src":"15152:15:9"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"15144:4:9"}]},{"nodeType":"YulAssignment","src":"15180:44:9","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"15215:8:9"}],"functionName":{"name":"shift_right_1_unsigned","nodeType":"YulIdentifier","src":"15192:22:9"},"nodeType":"YulFunctionCall","src":"15192:32:9"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"15180:8:9"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"14533:8:9"},{"kind":"number","nodeType":"YulLiteral","src":"14543:1:9","type":"","value":"1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14530:2:9"},"nodeType":"YulFunctionCall","src":"14530:15:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14546:2:9","statements":[]},"pre":{"nodeType":"YulBlock","src":"14526:3:9","statements":[]},"src":"14522:712:9"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nodeType":"YulTypedName","src":"14420:6:9","type":""},{"name":"_base","nodeType":"YulTypedName","src":"14428:5:9","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"14435:8:9","type":""},{"name":"max","nodeType":"YulTypedName","src":"14445:3:9","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"14453:5:9","type":""},{"name":"base","nodeType":"YulTypedName","src":"14460:4:9","type":""}],"src":"14392:848:9"},{"body":{"nodeType":"YulBlock","src":"15312:219:9","statements":[{"nodeType":"YulAssignment","src":"15322:31:9","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"15348:4:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15330:17:9"},"nodeType":"YulFunctionCall","src":"15330:23:9"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"15322:4:9"}]},{"nodeType":"YulAssignment","src":"15362:39:9","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"15392:8:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15374:17:9"},"nodeType":"YulFunctionCall","src":"15374:27:9"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"15362:8:9"}]},{"nodeType":"YulAssignment","src":"15411:113:9","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"15441:4:9"},{"name":"exponent","nodeType":"YulIdentifier","src":"15447:8:9"},{"kind":"number","nodeType":"YulLiteral","src":"15457:66:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"15420:20:9"},"nodeType":"YulFunctionCall","src":"15420:104:9"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"15411:5:9"}]}]},"name":"checked_exp_t_uint256_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"15287:4:9","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"15293:8:9","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"15306:5:9","type":""}],"src":"15246:285:9"},{"body":{"nodeType":"YulBlock","src":"15597:1013:9","statements":[{"body":{"nodeType":"YulBlock","src":"15792:20:9","statements":[{"nodeType":"YulAssignment","src":"15794:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"15803:1:9","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"15794:5:9"}]},{"nodeType":"YulLeave","src":"15805:5:9"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"15782:8:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15775:6:9"},"nodeType":"YulFunctionCall","src":"15775:16:9"},"nodeType":"YulIf","src":"15772:40:9"},{"body":{"nodeType":"YulBlock","src":"15837:20:9","statements":[{"nodeType":"YulAssignment","src":"15839:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"15848:1:9","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"15839:5:9"}]},{"nodeType":"YulLeave","src":"15850:5:9"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"15831:4:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15824:6:9"},"nodeType":"YulFunctionCall","src":"15824:12:9"},"nodeType":"YulIf","src":"15821:36:9"},{"cases":[{"body":{"nodeType":"YulBlock","src":"15967:20:9","statements":[{"nodeType":"YulAssignment","src":"15969:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"15978:1:9","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"15969:5:9"}]},{"nodeType":"YulLeave","src":"15980:5:9"}]},"nodeType":"YulCase","src":"15960:27:9","value":{"kind":"number","nodeType":"YulLiteral","src":"15965:1:9","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"16011:176:9","statements":[{"body":{"nodeType":"YulBlock","src":"16046:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16048:16:9"},"nodeType":"YulFunctionCall","src":"16048:18:9"},"nodeType":"YulExpressionStatement","src":"16048:18:9"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"16031:8:9"},{"kind":"number","nodeType":"YulLiteral","src":"16041:3:9","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16028:2:9"},"nodeType":"YulFunctionCall","src":"16028:17:9"},"nodeType":"YulIf","src":"16025:43:9"},{"nodeType":"YulAssignment","src":"16081:25:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16094:1:9","type":"","value":"2"},{"name":"exponent","nodeType":"YulIdentifier","src":"16097:8:9"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"16090:3:9"},"nodeType":"YulFunctionCall","src":"16090:16:9"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"16081:5:9"}]},{"body":{"nodeType":"YulBlock","src":"16137:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16139:16:9"},"nodeType":"YulFunctionCall","src":"16139:18:9"},"nodeType":"YulExpressionStatement","src":"16139:18:9"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"16125:5:9"},{"name":"max","nodeType":"YulIdentifier","src":"16132:3:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16122:2:9"},"nodeType":"YulFunctionCall","src":"16122:14:9"},"nodeType":"YulIf","src":"16119:40:9"},{"nodeType":"YulLeave","src":"16172:5:9"}]},"nodeType":"YulCase","src":"15996:191:9","value":{"kind":"number","nodeType":"YulLiteral","src":"16001:1:9","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"15917:4:9"},"nodeType":"YulSwitch","src":"15910:277:9"},{"body":{"nodeType":"YulBlock","src":"16319:123:9","statements":[{"nodeType":"YulAssignment","src":"16333:28:9","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"16346:4:9"},{"name":"exponent","nodeType":"YulIdentifier","src":"16352:8:9"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"16342:3:9"},"nodeType":"YulFunctionCall","src":"16342:19:9"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"16333:5:9"}]},{"body":{"nodeType":"YulBlock","src":"16392:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16394:16:9"},"nodeType":"YulFunctionCall","src":"16394:18:9"},"nodeType":"YulExpressionStatement","src":"16394:18:9"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"16380:5:9"},{"name":"max","nodeType":"YulIdentifier","src":"16387:3:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16377:2:9"},"nodeType":"YulFunctionCall","src":"16377:14:9"},"nodeType":"YulIf","src":"16374:40:9"},{"nodeType":"YulLeave","src":"16427:5:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"16222:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"16228:2:9","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16219:2:9"},"nodeType":"YulFunctionCall","src":"16219:12:9"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"16236:8:9"},{"kind":"number","nodeType":"YulLiteral","src":"16246:2:9","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16233:2:9"},"nodeType":"YulFunctionCall","src":"16233:16:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16215:3:9"},"nodeType":"YulFunctionCall","src":"16215:35:9"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"16271:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"16277:3:9","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16268:2:9"},"nodeType":"YulFunctionCall","src":"16268:13:9"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"16286:8:9"},{"kind":"number","nodeType":"YulLiteral","src":"16296:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16283:2:9"},"nodeType":"YulFunctionCall","src":"16283:16:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16264:3:9"},"nodeType":"YulFunctionCall","src":"16264:36:9"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"16199:2:9"},"nodeType":"YulFunctionCall","src":"16199:111:9"},"nodeType":"YulIf","src":"16196:246:9"},{"nodeType":"YulAssignment","src":"16452:57:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16486:1:9","type":"","value":"1"},{"name":"base","nodeType":"YulIdentifier","src":"16489:4:9"},{"name":"exponent","nodeType":"YulIdentifier","src":"16495:8:9"},{"name":"max","nodeType":"YulIdentifier","src":"16505:3:9"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"16467:18:9"},"nodeType":"YulFunctionCall","src":"16467:42:9"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"16452:5:9"},{"name":"base","nodeType":"YulIdentifier","src":"16459:4:9"}]},{"body":{"nodeType":"YulBlock","src":"16548:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16550:16:9"},"nodeType":"YulFunctionCall","src":"16550:18:9"},"nodeType":"YulExpressionStatement","src":"16550:18:9"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"16525:5:9"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"16536:3:9"},{"name":"base","nodeType":"YulIdentifier","src":"16541:4:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16532:3:9"},"nodeType":"YulFunctionCall","src":"16532:14:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16522:2:9"},"nodeType":"YulFunctionCall","src":"16522:25:9"},"nodeType":"YulIf","src":"16519:51:9"},{"nodeType":"YulAssignment","src":"16579:25:9","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"16592:5:9"},{"name":"base","nodeType":"YulIdentifier","src":"16599:4:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16588:3:9"},"nodeType":"YulFunctionCall","src":"16588:16:9"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"16579:5:9"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"15567:4:9","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"15573:8:9","type":""},{"name":"max","nodeType":"YulTypedName","src":"15583:3:9","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"15591:5:9","type":""}],"src":"15537:1073:9"},{"body":{"nodeType":"YulBlock","src":"16664:300:9","statements":[{"nodeType":"YulAssignment","src":"16674:25:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16697:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16679:17:9"},"nodeType":"YulFunctionCall","src":"16679:20:9"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"16674:1:9"}]},{"nodeType":"YulAssignment","src":"16708:25:9","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16731:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16713:17:9"},"nodeType":"YulFunctionCall","src":"16713:20:9"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16708:1:9"}]},{"body":{"nodeType":"YulBlock","src":"16906:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16908:16:9"},"nodeType":"YulFunctionCall","src":"16908:18:9"},"nodeType":"YulExpressionStatement","src":"16908:18:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16818:1:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16811:6:9"},"nodeType":"YulFunctionCall","src":"16811:9:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16804:6:9"},"nodeType":"YulFunctionCall","src":"16804:17:9"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16826:1:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16833:66:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"16901:1:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16829:3:9"},"nodeType":"YulFunctionCall","src":"16829:74:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16823:2:9"},"nodeType":"YulFunctionCall","src":"16823:81:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16800:3:9"},"nodeType":"YulFunctionCall","src":"16800:105:9"},"nodeType":"YulIf","src":"16797:131:9"},{"nodeType":"YulAssignment","src":"16938:20:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16953:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"16956:1:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16949:3:9"},"nodeType":"YulFunctionCall","src":"16949:9:9"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"16938:7:9"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16647:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"16650:1:9","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"16656:7:9","type":""}],"src":"16616:348:9"},{"body":{"nodeType":"YulBlock","src":"17015:146:9","statements":[{"nodeType":"YulAssignment","src":"17025:25:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17048:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17030:17:9"},"nodeType":"YulFunctionCall","src":"17030:20:9"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17025:1:9"}]},{"nodeType":"YulAssignment","src":"17059:25:9","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17082:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17064:17:9"},"nodeType":"YulFunctionCall","src":"17064:20:9"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17059:1:9"}]},{"body":{"nodeType":"YulBlock","src":"17106:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17108:16:9"},"nodeType":"YulFunctionCall","src":"17108:18:9"},"nodeType":"YulExpressionStatement","src":"17108:18:9"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17100:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"17103:1:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17097:2:9"},"nodeType":"YulFunctionCall","src":"17097:8:9"},"nodeType":"YulIf","src":"17094:34:9"},{"nodeType":"YulAssignment","src":"17138:17:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17150:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"17153:1:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17146:3:9"},"nodeType":"YulFunctionCall","src":"17146:9:9"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"17138:4:9"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17001:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"17004:1:9","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"17010:4:9","type":""}],"src":"16970:191:9"},{"body":{"nodeType":"YulBlock","src":"17212:51:9","statements":[{"nodeType":"YulAssignment","src":"17222:35:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17251:5:9"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"17233:17:9"},"nodeType":"YulFunctionCall","src":"17233:24:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17222:7:9"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17194:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17204:7:9","type":""}],"src":"17167:96:9"},{"body":{"nodeType":"YulBlock","src":"17311:48:9","statements":[{"nodeType":"YulAssignment","src":"17321:32:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17346:5:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17339:6:9"},"nodeType":"YulFunctionCall","src":"17339:13:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17332:6:9"},"nodeType":"YulFunctionCall","src":"17332:21:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17321:7:9"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17293:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17303:7:9","type":""}],"src":"17269:90:9"},{"body":{"nodeType":"YulBlock","src":"17410:81:9","statements":[{"nodeType":"YulAssignment","src":"17420:65:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17435:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"17442:42:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17431:3:9"},"nodeType":"YulFunctionCall","src":"17431:54:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17420:7:9"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17392:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17402:7:9","type":""}],"src":"17365:126:9"},{"body":{"nodeType":"YulBlock","src":"17542:32:9","statements":[{"nodeType":"YulAssignment","src":"17552:16:9","value":{"name":"value","nodeType":"YulIdentifier","src":"17563:5:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17552:7:9"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17524:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17534:7:9","type":""}],"src":"17497:77:9"},{"body":{"nodeType":"YulBlock","src":"17608:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17625:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17628:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17618:6:9"},"nodeType":"YulFunctionCall","src":"17618:88:9"},"nodeType":"YulExpressionStatement","src":"17618:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17722:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17725:4:9","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17715:6:9"},"nodeType":"YulFunctionCall","src":"17715:15:9"},"nodeType":"YulExpressionStatement","src":"17715:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17746:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17749:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17739:6:9"},"nodeType":"YulFunctionCall","src":"17739:15:9"},"nodeType":"YulExpressionStatement","src":"17739:15:9"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"17580:180:9"},{"body":{"nodeType":"YulBlock","src":"17794:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17811:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17814:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17804:6:9"},"nodeType":"YulFunctionCall","src":"17804:88:9"},"nodeType":"YulExpressionStatement","src":"17804:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17908:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17911:4:9","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17901:6:9"},"nodeType":"YulFunctionCall","src":"17901:15:9"},"nodeType":"YulExpressionStatement","src":"17901:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17932:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17935:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17925:6:9"},"nodeType":"YulFunctionCall","src":"17925:15:9"},"nodeType":"YulExpressionStatement","src":"17925:15:9"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"17766:180:9"},{"body":{"nodeType":"YulBlock","src":"18041:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18058:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18061:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18051:6:9"},"nodeType":"YulFunctionCall","src":"18051:12:9"},"nodeType":"YulExpressionStatement","src":"18051:12:9"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"17952:117:9"},{"body":{"nodeType":"YulBlock","src":"18164:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18181:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18184:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18174:6:9"},"nodeType":"YulFunctionCall","src":"18174:12:9"},"nodeType":"YulExpressionStatement","src":"18174:12:9"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"18075:117:9"},{"body":{"nodeType":"YulBlock","src":"18249:51:9","statements":[{"nodeType":"YulAssignment","src":"18259:34:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18284:1:9","type":"","value":"1"},{"name":"value","nodeType":"YulIdentifier","src":"18287:5:9"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18280:3:9"},"nodeType":"YulFunctionCall","src":"18280:13:9"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"18259:8:9"}]}]},"name":"shift_right_1_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18230:5:9","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"18240:8:9","type":""}],"src":"18198:102:9"},{"body":{"nodeType":"YulBlock","src":"18412:68:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18434:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"18442:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18430:3:9"},"nodeType":"YulFunctionCall","src":"18430:14:9"},{"hexValue":"5265656e7472616e742063616c6c20646574656374656421","kind":"string","nodeType":"YulLiteral","src":"18446:26:9","type":"","value":"Reentrant call detected!"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18423:6:9"},"nodeType":"YulFunctionCall","src":"18423:50:9"},"nodeType":"YulExpressionStatement","src":"18423:50:9"}]},"name":"store_literal_in_memory_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18404:6:9","type":""}],"src":"18306:174:9"},{"body":{"nodeType":"YulBlock","src":"18592:119:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18614:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"18622:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18610:3:9"},"nodeType":"YulFunctionCall","src":"18610:14:9"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"18626:34:9","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18603:6:9"},"nodeType":"YulFunctionCall","src":"18603:58:9"},"nodeType":"YulExpressionStatement","src":"18603:58:9"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18682:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"18690:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18678:3:9"},"nodeType":"YulFunctionCall","src":"18678:15:9"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"18695:8:9","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18671:6:9"},"nodeType":"YulFunctionCall","src":"18671:33:9"},"nodeType":"YulExpressionStatement","src":"18671:33:9"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18584:6:9","type":""}],"src":"18486:225:9"},{"body":{"nodeType":"YulBlock","src":"18823:65:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18845:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"18853:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18841:3:9"},"nodeType":"YulFunctionCall","src":"18841:14:9"},{"hexValue":"6661696c656420746f2073656e6420616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"18857:23:9","type":"","value":"failed to send amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18834:6:9"},"nodeType":"YulFunctionCall","src":"18834:47:9"},"nodeType":"YulExpressionStatement","src":"18834:47:9"}]},"name":"store_literal_in_memory_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18815:6:9","type":""}],"src":"18717:171:9"},{"body":{"nodeType":"YulBlock","src":"19000:117:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19022:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"19030:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19018:3:9"},"nodeType":"YulFunctionCall","src":"19018:14:9"},{"hexValue":"496e73756666696369656e742062616c616e63652045544820746f2077697468","kind":"string","nodeType":"YulLiteral","src":"19034:34:9","type":"","value":"Insufficient balance ETH to with"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19011:6:9"},"nodeType":"YulFunctionCall","src":"19011:58:9"},"nodeType":"YulExpressionStatement","src":"19011:58:9"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19090:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"19098:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19086:3:9"},"nodeType":"YulFunctionCall","src":"19086:15:9"},{"hexValue":"64726177","kind":"string","nodeType":"YulLiteral","src":"19103:6:9","type":"","value":"draw"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19079:6:9"},"nodeType":"YulFunctionCall","src":"19079:31:9"},"nodeType":"YulExpressionStatement","src":"19079:31:9"}]},"name":"store_literal_in_memory_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18992:6:9","type":""}],"src":"18894:223:9"},{"body":{"nodeType":"YulBlock","src":"19229:74:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19251:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"19259:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19247:3:9"},"nodeType":"YulFunctionCall","src":"19247:14:9"},{"hexValue":"546f6b656e206e6f74207665726966696564206f6e2045786368616e6765","kind":"string","nodeType":"YulLiteral","src":"19263:32:9","type":"","value":"Token not verified on Exchange"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19240:6:9"},"nodeType":"YulFunctionCall","src":"19240:56:9"},"nodeType":"YulExpressionStatement","src":"19240:56:9"}]},"name":"store_literal_in_memory_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19221:6:9","type":""}],"src":"19123:180:9"},{"body":{"nodeType":"YulBlock","src":"19415:76:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19437:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"19445:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19433:3:9"},"nodeType":"YulFunctionCall","src":"19433:14:9"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"19449:34:9","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19426:6:9"},"nodeType":"YulFunctionCall","src":"19426:58:9"},"nodeType":"YulExpressionStatement","src":"19426:58:9"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19407:6:9","type":""}],"src":"19309:182:9"},{"body":{"nodeType":"YulBlock","src":"19603:75:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19625:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"19633:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19621:3:9"},"nodeType":"YulFunctionCall","src":"19621:14:9"},{"hexValue":"496e73756666696369656e7420546f6b656e7320746f207769746864726177","kind":"string","nodeType":"YulLiteral","src":"19637:33:9","type":"","value":"Insufficient Tokens to withdraw"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19614:6:9"},"nodeType":"YulFunctionCall","src":"19614:57:9"},"nodeType":"YulExpressionStatement","src":"19614:57:9"}]},"name":"store_literal_in_memory_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19595:6:9","type":""}],"src":"19497:181:9"},{"body":{"nodeType":"YulBlock","src":"19790:70:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19812:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"19820:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19808:3:9"},"nodeType":"YulFunctionCall","src":"19808:14:9"},{"hexValue":"556e617574686f72697365642046756e6374696f6e2043616c6c","kind":"string","nodeType":"YulLiteral","src":"19824:28:9","type":"","value":"Unauthorised Function Call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19801:6:9"},"nodeType":"YulFunctionCall","src":"19801:52:9"},"nodeType":"YulExpressionStatement","src":"19801:52:9"}]},"name":"store_literal_in_memory_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19782:6:9","type":""}],"src":"19684:176:9"},{"body":{"nodeType":"YulBlock","src":"19972:8:9","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19964:6:9","type":""}],"src":"19866:114:9"},{"body":{"nodeType":"YulBlock","src":"20092:59:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20114:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"20122:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20110:3:9"},"nodeType":"YulFunctionCall","src":"20110:14:9"},{"hexValue":"4e6f20417070726f76616c20796574","kind":"string","nodeType":"YulLiteral","src":"20126:17:9","type":"","value":"No Approval yet"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20103:6:9"},"nodeType":"YulFunctionCall","src":"20103:41:9"},"nodeType":"YulExpressionStatement","src":"20103:41:9"}]},"name":"store_literal_in_memory_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20084:6:9","type":""}],"src":"19986:165:9"},{"body":{"nodeType":"YulBlock","src":"20200:79:9","statements":[{"body":{"nodeType":"YulBlock","src":"20257:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20266:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20269:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20259:6:9"},"nodeType":"YulFunctionCall","src":"20259:12:9"},"nodeType":"YulExpressionStatement","src":"20259:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20223:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20248:5:9"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"20230:17:9"},"nodeType":"YulFunctionCall","src":"20230:24:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20220:2:9"},"nodeType":"YulFunctionCall","src":"20220:35:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20213:6:9"},"nodeType":"YulFunctionCall","src":"20213:43:9"},"nodeType":"YulIf","src":"20210:63:9"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20193:5:9","type":""}],"src":"20157:122:9"},{"body":{"nodeType":"YulBlock","src":"20325:76:9","statements":[{"body":{"nodeType":"YulBlock","src":"20379:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20388:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20391:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20381:6:9"},"nodeType":"YulFunctionCall","src":"20381:12:9"},"nodeType":"YulExpressionStatement","src":"20381:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20348:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20370:5:9"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"20355:14:9"},"nodeType":"YulFunctionCall","src":"20355:21:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20345:2:9"},"nodeType":"YulFunctionCall","src":"20345:32:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20338:6:9"},"nodeType":"YulFunctionCall","src":"20338:40:9"},"nodeType":"YulIf","src":"20335:60:9"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20318:5:9","type":""}],"src":"20285:116:9"},{"body":{"nodeType":"YulBlock","src":"20450:79:9","statements":[{"body":{"nodeType":"YulBlock","src":"20507:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20516:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20519:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20509:6:9"},"nodeType":"YulFunctionCall","src":"20509:12:9"},"nodeType":"YulExpressionStatement","src":"20509:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20473:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20498:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20480:17:9"},"nodeType":"YulFunctionCall","src":"20480:24:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20470:2:9"},"nodeType":"YulFunctionCall","src":"20470:35:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20463:6:9"},"nodeType":"YulFunctionCall","src":"20463:43:9"},"nodeType":"YulIf","src":"20460:63:9"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20443:5:9","type":""}],"src":"20407:122:9"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bool(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function store_literal_in_memory_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reentrant call detected!\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"failed to send amount\")\n\n    }\n\n    function store_literal_in_memory_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance ETH to with\")\n\n        mstore(add(memPtr, 32), \"draw\")\n\n    }\n\n    function store_literal_in_memory_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token not verified on Exchange\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient Tokens to withdraw\")\n\n    }\n\n    function store_literal_in_memory_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Unauthorised Function Call\")\n\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function store_literal_in_memory_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba(memPtr) {\n\n        mstore(add(memPtr, 0), \"No Approval yet\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":9,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2809":[{"length":32,"start":4068}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x99C6D2DE GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xF14210A6 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xF14210A6 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xF6326FB3 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xF7888AEC EQ PUSH2 0x370 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x99C6D2DE EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xB4A99A4E EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0xC5AB4602 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0xCD5D767C EQ PUSH2 0x2D7 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x7BF1A627 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x96C0EC55 EQ PUSH2 0x231 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x31415A65 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x46A8F820 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x4BDDE1CF EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x4FC121DB EQ PUSH2 0x187 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x3AD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x19E9 JUMP JUMPDEST PUSH2 0x3F9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0x71A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x7A1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21B PUSH2 0x7DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x1A50 JUMP JUMPDEST PUSH2 0x804 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x1A50 JUMP JUMPDEST PUSH2 0xCC1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x298 PUSH2 0xFE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x19E9 JUMP JUMPDEST PUSH2 0x1006 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x1E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x1AD0 JUMP JUMPDEST PUSH2 0x1327 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x15C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36E PUSH2 0x1644 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x397 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x1E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B5 PUSH2 0x1786 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x480 JUMPI POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x5D9 JUMPI PUSH2 0x554 DUP3 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1804 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x6EF JUMP JUMPDEST DUP1 PUSH2 0x6EE JUMPI PUSH2 0x66D DUP3 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7A9 PUSH2 0x1786 JUMP JUMPDEST PUSH2 0x7B3 PUSH1 0x0 PUSH2 0x1830 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x85F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1027B219 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BA SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x90A SWAP2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST PUSH2 0x949 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x940 SWAP1 PUSH2 0x1DCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x96F PUSH2 0x957 CALLER DUP7 PUSH2 0x71A JUMP JUMPDEST PUSH2 0x961 DUP7 CALLER PUSH2 0x16FF JUMP JUMPDEST PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x9B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A7 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F7 SWAP1 PUSH2 0x1D4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x12 SWAP1 POP PUSH1 0x12 DUP3 EQ ISZERO PUSH2 0xB35 JUMPI PUSH2 0xA78 DUP5 CALLER DUP6 PUSH1 0x0 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD5 SWAP3 SWAP2 SWAP1 PUSH2 0x1D25 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB03 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB27 SWAP2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST PUSH2 0xB30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC5B JUMP JUMPDEST PUSH2 0xB72 DUP5 CALLER PUSH2 0xB6B PUSH2 0xB50 DUP7 DUP7 PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0xB5C SWAP2 SWAP1 PUSH2 0x1F7F JUMP JUMPDEST DUP8 PUSH2 0x18F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH2 0xBE2 PUSH2 0xBC7 DUP7 DUP7 PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0xBD3 SWAP2 SWAP1 PUSH2 0x1F7F JUMP JUMPDEST DUP8 PUSH2 0x190A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBFF SWAP3 SWAP2 SWAP1 PUSH2 0x1D25 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC2D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC51 SWAP2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST PUSH2 0xC5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xF341246ADAAC6F497BC2A656F546AB9E182111D630394F0C57C710A59A2CB567 DUP5 CALLER DUP6 PUSH2 0xCA3 DUP9 CALLER PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1027B219 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD77 SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDA3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDC7 SWAP2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST PUSH2 0xE06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDFD SWAP1 PUSH2 0x1DCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CA9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xED4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEF8 SWAP2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST PUSH2 0xF37 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2E SWAP1 PUSH2 0x1E4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP PUSH1 0x12 DUP3 EQ ISZERO PUSH2 0xF58 JUMPI PUSH2 0xF53 DUP5 CALLER DUP6 PUSH1 0x1 PUSH2 0x1006 JUMP JUMPDEST PUSH2 0xF96 JUMP JUMPDEST PUSH2 0xF95 DUP5 CALLER PUSH2 0xF8E PUSH2 0xF73 DUP7 DUP7 PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0xF7F SWAP2 SWAP1 PUSH2 0x1F7F JUMP JUMPDEST DUP8 PUSH2 0x18F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1006 JUMP JUMPDEST JUMPDEST PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP5 CALLER DUP6 PUSH2 0xFC4 DUP9 CALLER PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFD4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x108D JUMPI POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x10CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C3 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x11E6 JUMPI PUSH2 0x1161 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1804 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x12FC JUMP JUMPDEST DUP1 PUSH2 0x12FB JUMPI PUSH2 0x127A DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH2 0x1391 PUSH2 0x1357 CALLER PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x71A JUMP JUMPDEST PUSH2 0x1383 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x16FF JUMP JUMPDEST PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x13D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C9 SWAP1 PUSH2 0x1DAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1422 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1419 SWAP1 PUSH2 0x1D4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x146C PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH1 0x0 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x14AC SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14E9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1532 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1529 SWAP1 PUSH2 0x1D8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xF341246ADAAC6F497BC2A656F546AB9E182111D630394F0C57C710A59A2CB567 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP5 PUSH2 0x15A4 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x15C8 PUSH2 0x1786 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1638 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x162F SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1641 DUP2 PUSH2 0x1830 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1673 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER CALLVALUE PUSH1 0x1 PUSH2 0x1006 JUMP JUMPDEST PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER CALLVALUE PUSH2 0x16E5 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x178E PUSH2 0x1920 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17AC PUSH2 0x7DB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1802 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17F9 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1812 SWAP2 SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1828 SWAP2 SWAP1 PUSH2 0x20F7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1902 SWAP2 SWAP1 PUSH2 0x209D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1918 SWAP2 SWAP1 PUSH2 0x1EFB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1937 DUP2 PUSH2 0x23A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x194C DUP2 PUSH2 0x23BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1961 DUP2 PUSH2 0x23BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1976 DUP2 PUSH2 0x23D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1992 JUMPI PUSH2 0x1991 PUSH2 0x21D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19A0 DUP5 DUP3 DUP6 ADD PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19C0 JUMPI PUSH2 0x19BF PUSH2 0x21D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19CE DUP6 DUP3 DUP7 ADD PUSH2 0x1928 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19DF DUP6 DUP3 DUP7 ADD PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1A03 JUMPI PUSH2 0x1A02 PUSH2 0x21D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A11 DUP8 DUP3 DUP9 ADD PUSH2 0x1928 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1A22 DUP8 DUP3 DUP9 ADD PUSH2 0x1928 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1A33 DUP8 DUP3 DUP9 ADD PUSH2 0x1967 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1A44 DUP8 DUP3 DUP9 ADD PUSH2 0x193D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A69 JUMPI PUSH2 0x1A68 PUSH2 0x21D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A77 DUP7 DUP3 DUP8 ADD PUSH2 0x1928 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A88 DUP7 DUP3 DUP8 ADD PUSH2 0x1967 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A99 DUP7 DUP3 DUP8 ADD PUSH2 0x1967 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AB9 JUMPI PUSH2 0x1AB8 PUSH2 0x21D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AC7 DUP5 DUP3 DUP6 ADD PUSH2 0x1952 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AE6 JUMPI PUSH2 0x1AE5 PUSH2 0x21D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AF4 DUP5 DUP3 DUP6 ADD PUSH2 0x1967 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B06 DUP2 PUSH2 0x212B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B19 PUSH1 0x18 DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B24 DUP3 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B3C PUSH1 0x26 DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B47 DUP3 PUSH2 0x220C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B5F PUSH1 0x15 DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B6A DUP3 PUSH2 0x225B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B82 PUSH1 0x24 DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B8D DUP3 PUSH2 0x2284 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BA5 PUSH1 0x1E DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB0 DUP3 PUSH2 0x22D3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC8 PUSH1 0x20 DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD3 DUP3 PUSH2 0x22FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BEB PUSH1 0x1F DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF6 DUP3 PUSH2 0x2325 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0E PUSH1 0x1A DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C19 DUP3 PUSH2 0x234E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C31 PUSH1 0x0 DUP4 PUSH2 0x1E89 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C3C DUP3 PUSH2 0x2377 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C54 PUSH1 0xF DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C5F DUP3 PUSH2 0x237A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C73 DUP2 PUSH2 0x2169 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C84 DUP3 PUSH2 0x1C24 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CA3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1CBE PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x1CCB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x1CD8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C6A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1CF5 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x1D02 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x1D0F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C6A JUMP JUMPDEST PUSH2 0x1D1C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1C6A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D3A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x1D47 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C6A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D67 DUP2 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D87 DUP2 PUSH2 0x1B2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DA7 DUP2 PUSH2 0x1B52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DC7 DUP2 PUSH2 0x1B75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DE7 DUP2 PUSH2 0x1B98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E07 DUP2 PUSH2 0x1BBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E27 DUP2 PUSH2 0x1BDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E47 DUP2 PUSH2 0x1C01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E67 DUP2 PUSH2 0x1C47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E83 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB0 DUP3 PUSH2 0x2169 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EBB DUP4 PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1EF0 JUMPI PUSH2 0x1EEF PUSH2 0x2173 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F06 DUP3 PUSH2 0x2169 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F11 DUP4 PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F21 JUMPI PUSH2 0x1F20 PUSH2 0x21A2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1F76 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1F52 JUMPI PUSH2 0x1F51 PUSH2 0x2173 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1F61 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1F6F DUP6 PUSH2 0x21D6 JUMP JUMPDEST SWAP5 POP PUSH2 0x1F36 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F8A DUP3 PUSH2 0x2169 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F95 DUP4 PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP PUSH2 0x1FC2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1FCA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1FDA JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2096 JUMP JUMPDEST DUP2 PUSH2 0x1FE8 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2096 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1FFE JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2008 JUMPI PUSH2 0x2037 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2096 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x201A JUMPI PUSH2 0x2019 PUSH2 0x2173 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x2031 JUMPI PUSH2 0x2030 PUSH2 0x2173 JUMP JUMPDEST JUMPDEST POP PUSH2 0x2096 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x206C JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x2067 JUMPI PUSH2 0x2066 PUSH2 0x2173 JUMP JUMPDEST JUMPDEST PUSH2 0x2096 JUMP JUMPDEST PUSH2 0x2079 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1F2C JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x2090 JUMPI PUSH2 0x208F PUSH2 0x2173 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A8 DUP3 PUSH2 0x2169 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B3 DUP4 PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x20EC JUMPI PUSH2 0x20EB PUSH2 0x2173 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2102 DUP3 PUSH2 0x2169 JUMP JUMPDEST SWAP2 POP PUSH2 0x210D DUP4 PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2120 JUMPI PUSH2 0x211F PUSH2 0x2173 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2136 DUP3 PUSH2 0x2149 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E742063616C6C206465746563746564210000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6661696C656420746F2073656E6420616D6F756E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E63652045544820746F2077697468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472617700000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E206E6F74207665726966696564206F6E2045786368616E67650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420546F6B656E7320746F20776974686472617700 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x556E617574686F72697365642046756E6374696F6E2043616C6C000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x4E6F20417070726F76616C207965740000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x23AC DUP2 PUSH2 0x212B JUMP JUMPDEST DUP2 EQ PUSH2 0x23B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x23C3 DUP2 PUSH2 0x213D JUMP JUMPDEST DUP2 EQ PUSH2 0x23CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x23DA DUP2 PUSH2 0x2169 JUMP JUMPDEST DUP2 EQ PUSH2 0x23E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 GASPRICE 0x26 PUSH19 0x8C3933F1452B67BCE05E41A305136821EDFABE 0x25 PUSH3 0x28FCBC SLT 0x26 0xF9 PUSH8 0x64736F6C63430008 SMOD STOP CALLER ","sourceMap":"388:5862:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5916:130;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4848:451;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;752:66;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4678:162;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:1;;;;;;;;;;;;;:::i;:::-;;597:36:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3304:1366:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2272:1024;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;494:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5537:371;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;642:63;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1469:704;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1197:264:7;;;:::i;:::-;;5375:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5916:130;1094:13:1;:11;:13::i;:::-;6021:16:7::1;6001:8;;:37;;;;;;;;;;;;;;;;;;5916:130:::0;:::o;4848:451::-;6133:4;6111:27;;:10;:27;;;:62;;;;6164:8;;;;;;;;;;;6142:31;;:10;:31;;;6111:62;6089:138;;;;;;;;;;;;:::i;:::-;;;;;;;;;5013:5:::1;5009:283;;;5064:71;5113:7;5064:11;:18;5076:5;5064:18;;;;;;;;;;;;;;;:26;5083:6;5064:26;;;;;;;;;;;;;;;;:30;;:71;;;;:::i;:::-;5035:11;:18;5047:5;5035:18;;;;;;;;;;;;;;;:26;5054:6;5035:26;;;;;;;;;;;;;;;:100;;;;5009:283;;;5158:5;5153:139;;5209:71;5258:7;5209:11;:18;5221:5;5209:18;;;;;;;;;;;;;;;:26;5228:6;5209:26;;;;;;;;;;;;;;;;:30;;:71;;;;:::i;:::-;5180:11;:18;5192:5;5180:18;;;;;;;;;;;;;;;:26;5199:6;5180:26;;;;;;;;;;;;;;;:100;;;;5153:139;5009:283;4848:451:::0;;;;:::o;752:66::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4678:162::-;4779:7;4806:11;:18;4818:5;4806:18;;;;;;;;;;;;;;;:26;4825:6;4806:26;;;;;;;;;;;;;;;;4799:33;;4678:162;;;;:::o;1831:101:1:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;597:36:7:-;;;;;;;;;;;;;:::o;1201:85:1:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;3304:1366:7:-;3451:8;;;;;;;;;;;3441:18;;:6;:18;;;;3433:27;;;;;;3493:8;;;;;;;;;;;:24;;;3518:6;3493:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3471:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;3723:7;3618:101;3670:34;3685:10;3697:6;3670:14;:34::i;:::-;3618:29;3628:6;3636:10;3618:9;:29::i;:::-;:33;;:101;;;;:::i;:::-;:112;;3596:193;;;;;;;;;;;;:::i;:::-;;;;;;;;;3809:6;;;;;;;;;;;3808:7;3800:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;3864:4;3855:6;;:13;;;;;;;;;;;;;;;;;;3896:6;3881:5;;:22;;;;;;;;;;;;;;;;;;3914:16;3933:2;3914:21;;3963:2;3950:9;:15;3946:543;;;3982:49;3996:6;4004:10;4016:7;4025:5;3982:13;:49::i;:::-;4054:5;;;;;;;;;;;:14;;;4069:10;4081:7;4054:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4046:44;;;;;;3946:543;;;4123:167;4155:6;4180:10;4209:42;4227:23;4240:9;4227:8;:12;;:23;;;;:::i;:::-;4221:2;:29;;;;:::i;:::-;4209:7;:11;;:42;;;;:::i;:::-;4270:5;4123:13;:167::i;:::-;4331:5;;;;;;;;;;;:14;;;4368:10;4401:42;4419:23;4432:9;4419:8;:12;;:23;;;;:::i;:::-;4413:2;:29;;;;:::i;:::-;4401:7;:11;;:42;;;;:::i;:::-;4331:131;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4305:172;;;;;;3946:543;4510:5;4501:6;;:14;;;;;;;;;;;;;;;;;;4531:131;4554:6;4575:10;4600:7;4622:29;4632:6;4640:10;4622:9;:29::i;:::-;4531:131;;;;;;;;;:::i;:::-;;;;;;;;3422:1248;3304:1366;;;:::o;2272:1024::-;2418:8;;;;;;;;;;;2408:18;;:6;:18;;;;2400:27;;;;;;2460:8;;;;;;;;;;;:24;;;2485:6;2460:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2438:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;2642:6;2627:5;;:22;;;;;;;;;;;;;;;;;;2719:5;;;;;;;;;;;:18;;;2738:10;2758:4;2765:7;2719:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2697:119;;;;;;;;;;;;:::i;:::-;;;;;;;;;2827:16;2846:2;2827:21;;2876:2;2863:9;:15;2859:281;;;2895:48;2909:6;2917:10;2929:7;2938:4;2895:13;:48::i;:::-;2859:281;;;2974:166;3006:6;3031:10;3060:42;3078:23;3091:9;3078:8;:12;;:23;;;;:::i;:::-;3072:2;:29;;;;:::i;:::-;3060:7;:11;;:42;;;;:::i;:::-;3121:4;2974:13;:166::i;:::-;2859:281;3158:130;3180:6;3201:10;3226:7;3248:29;3258:6;3266:10;3248:9;:29::i;:::-;3158:130;;;;;;;;;:::i;:::-;;;;;;;;2389:907;2272:1024;;;:::o;494:30::-;;;:::o;5537:371::-;6133:4;6111:27;;:10;:27;;;:62;;;;6164:8;;;;;;;;;;;6142:31;;:10;:31;;;6111:62;6089:138;;;;;;;;;;;;:::i;:::-;;;;;;;;;5698:5:::1;5694:207;;;5746:36;5774:7;5746:8;:16;5755:6;5746:16;;;;;;;;;;;;;;;:23;5763:5;5746:23;;;;;;;;;;;;;;;;:27;;:36;;;;:::i;:::-;5720:8;:16;5729:6;5720:16;;;;;;;;;;;;;;;:23;5737:5;5720:23;;;;;;;;;;;;;;;:62;;;;5694:207;;;5805:5;5800:101;;5853:36;5881:7;5853:8;:16;5862:6;5853:16;;;;;;;;;;;;;;;:23;5870:5;5853:23;;;;;;;;;;;;;;;;:27;;:36;;;;:::i;:::-;5827:8;:16;5836:6;5827:16;;;;;;;;;;;;;;;:23;5844:5;5827:23;;;;;;;;;;;;;;;:62;;;;5800:101;5694:207;5537:371:::0;;;;:::o;642:63::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1469:704::-;1658:7;1549:105;1603:36;1618:10;1630:8;;;;;;;;;;;1603:14;:36::i;:::-;1549:31;1559:8;;;;;;;;;;;1569:10;1549:9;:31::i;:::-;:35;;:105;;;;:::i;:::-;:116;;1527:202;;;;;;;;;;;;:::i;:::-;;;;;;;;;1749:6;;;;;;;;;;;1748:7;1740:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;1804:4;1795:6;;:13;;;;;;;;;;;;;;;;;;1819:51;1833:8;;;;;;;;;;;1843:10;1855:7;1864:5;1819:13;:51::i;:::-;1890:5;1881:6;;:14;;;;;;;;;;;;;;;;;;1907:12;1925:10;:15;;1948:7;1925:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1906:54;;;1979:7;1971:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2030:135;2053:8;;;;;;;;;;;2076:10;2101:7;2123:31;2133:8;;;;;;;;;;;2143:10;2123:9;:31::i;:::-;2030:135;;;;;;;;;:::i;:::-;;;;;;;;1516:657;1469:704;:::o;2081:198:1:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1197:264:7:-;1247:52;1261:8;;;;;;;;;;;1271:10;1283:9;1294:4;1247:13;:52::i;:::-;1317:136;1339:8;;;;;;;;;;;1362:10;1387:9;1411:31;1421:8;;;;;;;;;;;1431:10;1411:9;:31::i;:::-;1317:136;;;;;;;;;:::i;:::-;;;;;;;;1197:264::o;5375:154::-;5471:7;5498:8;:16;5507:6;5498:16;;;;;;;;;;;;;;;:23;5515:5;5498:23;;;;;;;;;;;;;;;;5491:30;;5375:154;;;;:::o;1359:130:1:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2755:96:3:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3122:::-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;2433:187:1:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;3465:96:3:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;640::2:-;693:7;719:10;712:17;;640:96;:::o;7:139:9:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:133::-;195:5;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;152:133;;;;:::o;291:137::-;345:5;376:6;370:13;361:22;;392:30;416:5;392:30;:::i;:::-;291:137;;;;:::o;434:139::-;480:5;518:6;505:20;496:29;;534:33;561:5;534:33;:::i;:::-;434:139;;;;:::o;579:329::-;638:6;687:2;675:9;666:7;662:23;658:32;655:119;;;693:79;;:::i;:::-;655:119;813:1;838:53;883:7;874:6;863:9;859:22;838:53;:::i;:::-;828:63;;784:117;579:329;;;;:::o;914:474::-;982:6;990;1039:2;1027:9;1018:7;1014:23;1010:32;1007:119;;;1045:79;;:::i;:::-;1007:119;1165:1;1190:53;1235:7;1226:6;1215:9;1211:22;1190:53;:::i;:::-;1180:63;;1136:117;1292:2;1318:53;1363:7;1354:6;1343:9;1339:22;1318:53;:::i;:::-;1308:63;;1263:118;914:474;;;;;:::o;1394:759::-;1477:6;1485;1493;1501;1550:3;1538:9;1529:7;1525:23;1521:33;1518:120;;;1557:79;;:::i;:::-;1518:120;1677:1;1702:53;1747:7;1738:6;1727:9;1723:22;1702:53;:::i;:::-;1692:63;;1648:117;1804:2;1830:53;1875:7;1866:6;1855:9;1851:22;1830:53;:::i;:::-;1820:63;;1775:118;1932:2;1958:53;2003:7;1994:6;1983:9;1979:22;1958:53;:::i;:::-;1948:63;;1903:118;2060:2;2086:50;2128:7;2119:6;2108:9;2104:22;2086:50;:::i;:::-;2076:60;;2031:115;1394:759;;;;;;;:::o;2159:619::-;2236:6;2244;2252;2301:2;2289:9;2280:7;2276:23;2272:32;2269:119;;;2307:79;;:::i;:::-;2269:119;2427:1;2452:53;2497:7;2488:6;2477:9;2473:22;2452:53;:::i;:::-;2442:63;;2398:117;2554:2;2580:53;2625:7;2616:6;2605:9;2601:22;2580:53;:::i;:::-;2570:63;;2525:118;2682:2;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2653:118;2159:619;;;;;:::o;2784:345::-;2851:6;2900:2;2888:9;2879:7;2875:23;2871:32;2868:119;;;2906:79;;:::i;:::-;2868:119;3026:1;3051:61;3104:7;3095:6;3084:9;3080:22;3051:61;:::i;:::-;3041:71;;2997:125;2784:345;;;;:::o;3135:329::-;3194:6;3243:2;3231:9;3222:7;3218:23;3214:32;3211:119;;;3249:79;;:::i;:::-;3211:119;3369:1;3394:53;3439:7;3430:6;3419:9;3415:22;3394:53;:::i;:::-;3384:63;;3340:117;3135:329;;;;:::o;3470:118::-;3557:24;3575:5;3557:24;:::i;:::-;3552:3;3545:37;3470:118;;:::o;3594:366::-;3736:3;3757:67;3821:2;3816:3;3757:67;:::i;:::-;3750:74;;3833:93;3922:3;3833:93;:::i;:::-;3951:2;3946:3;3942:12;3935:19;;3594:366;;;:::o;3966:::-;4108:3;4129:67;4193:2;4188:3;4129:67;:::i;:::-;4122:74;;4205:93;4294:3;4205:93;:::i;:::-;4323:2;4318:3;4314:12;4307:19;;3966:366;;;:::o;4338:::-;4480:3;4501:67;4565:2;4560:3;4501:67;:::i;:::-;4494:74;;4577:93;4666:3;4577:93;:::i;:::-;4695:2;4690:3;4686:12;4679:19;;4338:366;;;:::o;4710:::-;4852:3;4873:67;4937:2;4932:3;4873:67;:::i;:::-;4866:74;;4949:93;5038:3;4949:93;:::i;:::-;5067:2;5062:3;5058:12;5051:19;;4710:366;;;:::o;5082:::-;5224:3;5245:67;5309:2;5304:3;5245:67;:::i;:::-;5238:74;;5321:93;5410:3;5321:93;:::i;:::-;5439:2;5434:3;5430:12;5423:19;;5082:366;;;:::o;5454:::-;5596:3;5617:67;5681:2;5676:3;5617:67;:::i;:::-;5610:74;;5693:93;5782:3;5693:93;:::i;:::-;5811:2;5806:3;5802:12;5795:19;;5454:366;;;:::o;5826:::-;5968:3;5989:67;6053:2;6048:3;5989:67;:::i;:::-;5982:74;;6065:93;6154:3;6065:93;:::i;:::-;6183:2;6178:3;6174:12;6167:19;;5826:366;;;:::o;6198:::-;6340:3;6361:67;6425:2;6420:3;6361:67;:::i;:::-;6354:74;;6437:93;6526:3;6437:93;:::i;:::-;6555:2;6550:3;6546:12;6539:19;;6198:366;;;:::o;6570:398::-;6729:3;6750:83;6831:1;6826:3;6750:83;:::i;:::-;6743:90;;6842:93;6931:3;6842:93;:::i;:::-;6960:1;6955:3;6951:11;6944:18;;6570:398;;;:::o;6974:366::-;7116:3;7137:67;7201:2;7196:3;7137:67;:::i;:::-;7130:74;;7213:93;7302:3;7213:93;:::i;:::-;7331:2;7326:3;7322:12;7315:19;;6974:366;;;:::o;7346:118::-;7433:24;7451:5;7433:24;:::i;:::-;7428:3;7421:37;7346:118;;:::o;7470:379::-;7654:3;7676:147;7819:3;7676:147;:::i;:::-;7669:154;;7840:3;7833:10;;7470:379;;;:::o;7855:222::-;7948:4;7986:2;7975:9;7971:18;7963:26;;7999:71;8067:1;8056:9;8052:17;8043:6;7999:71;:::i;:::-;7855:222;;;;:::o;8083:442::-;8232:4;8270:2;8259:9;8255:18;8247:26;;8283:71;8351:1;8340:9;8336:17;8327:6;8283:71;:::i;:::-;8364:72;8432:2;8421:9;8417:18;8408:6;8364:72;:::i;:::-;8446;8514:2;8503:9;8499:18;8490:6;8446:72;:::i;:::-;8083:442;;;;;;:::o;8531:553::-;8708:4;8746:3;8735:9;8731:19;8723:27;;8760:71;8828:1;8817:9;8813:17;8804:6;8760:71;:::i;:::-;8841:72;8909:2;8898:9;8894:18;8885:6;8841:72;:::i;:::-;8923;8991:2;8980:9;8976:18;8967:6;8923:72;:::i;:::-;9005;9073:2;9062:9;9058:18;9049:6;9005:72;:::i;:::-;8531:553;;;;;;;:::o;9090:332::-;9211:4;9249:2;9238:9;9234:18;9226:26;;9262:71;9330:1;9319:9;9315:17;9306:6;9262:71;:::i;:::-;9343:72;9411:2;9400:9;9396:18;9387:6;9343:72;:::i;:::-;9090:332;;;;;:::o;9428:419::-;9594:4;9632:2;9621:9;9617:18;9609:26;;9681:9;9675:4;9671:20;9667:1;9656:9;9652:17;9645:47;9709:131;9835:4;9709:131;:::i;:::-;9701:139;;9428:419;;;:::o;9853:::-;10019:4;10057:2;10046:9;10042:18;10034:26;;10106:9;10100:4;10096:20;10092:1;10081:9;10077:17;10070:47;10134:131;10260:4;10134:131;:::i;:::-;10126:139;;9853:419;;;:::o;10278:::-;10444:4;10482:2;10471:9;10467:18;10459:26;;10531:9;10525:4;10521:20;10517:1;10506:9;10502:17;10495:47;10559:131;10685:4;10559:131;:::i;:::-;10551:139;;10278:419;;;:::o;10703:::-;10869:4;10907:2;10896:9;10892:18;10884:26;;10956:9;10950:4;10946:20;10942:1;10931:9;10927:17;10920:47;10984:131;11110:4;10984:131;:::i;:::-;10976:139;;10703:419;;;:::o;11128:::-;11294:4;11332:2;11321:9;11317:18;11309:26;;11381:9;11375:4;11371:20;11367:1;11356:9;11352:17;11345:47;11409:131;11535:4;11409:131;:::i;:::-;11401:139;;11128:419;;;:::o;11553:::-;11719:4;11757:2;11746:9;11742:18;11734:26;;11806:9;11800:4;11796:20;11792:1;11781:9;11777:17;11770:47;11834:131;11960:4;11834:131;:::i;:::-;11826:139;;11553:419;;;:::o;11978:::-;12144:4;12182:2;12171:9;12167:18;12159:26;;12231:9;12225:4;12221:20;12217:1;12206:9;12202:17;12195:47;12259:131;12385:4;12259:131;:::i;:::-;12251:139;;11978:419;;;:::o;12403:::-;12569:4;12607:2;12596:9;12592:18;12584:26;;12656:9;12650:4;12646:20;12642:1;12631:9;12627:17;12620:47;12684:131;12810:4;12684:131;:::i;:::-;12676:139;;12403:419;;;:::o;12828:::-;12994:4;13032:2;13021:9;13017:18;13009:26;;13081:9;13075:4;13071:20;13067:1;13056:9;13052:17;13045:47;13109:131;13235:4;13109:131;:::i;:::-;13101:139;;12828:419;;;:::o;13253:222::-;13346:4;13384:2;13373:9;13369:18;13361:26;;13397:71;13465:1;13454:9;13450:17;13441:6;13397:71;:::i;:::-;13253:222;;;;:::o;13562:147::-;13663:11;13700:3;13685:18;;13562:147;;;;:::o;13715:169::-;13799:11;13833:6;13828:3;13821:19;13873:4;13868:3;13864:14;13849:29;;13715:169;;;;:::o;13890:305::-;13930:3;13949:20;13967:1;13949:20;:::i;:::-;13944:25;;13983:20;14001:1;13983:20;:::i;:::-;13978:25;;14137:1;14069:66;14065:74;14062:1;14059:81;14056:107;;;14143:18;;:::i;:::-;14056:107;14187:1;14184;14180:9;14173:16;;13890:305;;;;:::o;14201:185::-;14241:1;14258:20;14276:1;14258:20;:::i;:::-;14253:25;;14292:20;14310:1;14292:20;:::i;:::-;14287:25;;14331:1;14321:35;;14336:18;;:::i;:::-;14321:35;14378:1;14375;14371:9;14366:14;;14201:185;;;;:::o;14392:848::-;14453:5;14460:4;14484:6;14475:15;;14508:5;14499:14;;14522:712;14543:1;14533:8;14530:15;14522:712;;;14638:4;14633:3;14629:14;14623:4;14620:24;14617:50;;;14647:18;;:::i;:::-;14617:50;14697:1;14687:8;14683:16;14680:451;;;15112:4;15105:5;15101:16;15092:25;;14680:451;15162:4;15156;15152:15;15144:23;;15192:32;15215:8;15192:32;:::i;:::-;15180:44;;14522:712;;;14392:848;;;;;;;:::o;15246:285::-;15306:5;15330:23;15348:4;15330:23;:::i;:::-;15322:31;;15374:27;15392:8;15374:27;:::i;:::-;15362:39;;15420:104;15457:66;15447:8;15441:4;15420:104;:::i;:::-;15411:113;;15246:285;;;;:::o;15537:1073::-;15591:5;15782:8;15772:40;;15803:1;15794:10;;15805:5;;15772:40;15831:4;15821:36;;15848:1;15839:10;;15850:5;;15821:36;15917:4;15965:1;15960:27;;;;16001:1;15996:191;;;;15910:277;;15960:27;15978:1;15969:10;;15980:5;;;15996:191;16041:3;16031:8;16028:17;16025:43;;;16048:18;;:::i;:::-;16025:43;16097:8;16094:1;16090:16;16081:25;;16132:3;16125:5;16122:14;16119:40;;;16139:18;;:::i;:::-;16119:40;16172:5;;;15910:277;;16296:2;16286:8;16283:16;16277:3;16271:4;16268:13;16264:36;16246:2;16236:8;16233:16;16228:2;16222:4;16219:12;16215:35;16199:111;16196:246;;;16352:8;16346:4;16342:19;16333:28;;16387:3;16380:5;16377:14;16374:40;;;16394:18;;:::i;:::-;16374:40;16427:5;;16196:246;16467:42;16505:3;16495:8;16489:4;16486:1;16467:42;:::i;:::-;16452:57;;;;16541:4;16536:3;16532:14;16525:5;16522:25;16519:51;;;16550:18;;:::i;:::-;16519:51;16599:4;16592:5;16588:16;16579:25;;15537:1073;;;;;;:::o;16616:348::-;16656:7;16679:20;16697:1;16679:20;:::i;:::-;16674:25;;16713:20;16731:1;16713:20;:::i;:::-;16708:25;;16901:1;16833:66;16829:74;16826:1;16823:81;16818:1;16811:9;16804:17;16800:105;16797:131;;;16908:18;;:::i;:::-;16797:131;16956:1;16953;16949:9;16938:20;;16616:348;;;;:::o;16970:191::-;17010:4;17030:20;17048:1;17030:20;:::i;:::-;17025:25;;17064:20;17082:1;17064:20;:::i;:::-;17059:25;;17103:1;17100;17097:8;17094:34;;;17108:18;;:::i;:::-;17094:34;17153:1;17150;17146:9;17138:17;;16970:191;;;;:::o;17167:96::-;17204:7;17233:24;17251:5;17233:24;:::i;:::-;17222:35;;17167:96;;;:::o;17269:90::-;17303:7;17346:5;17339:13;17332:21;17321:32;;17269:90;;;:::o;17365:126::-;17402:7;17442:42;17435:5;17431:54;17420:65;;17365:126;;;:::o;17497:77::-;17534:7;17563:5;17552:16;;17497:77;;;:::o;17580:180::-;17628:77;17625:1;17618:88;17725:4;17722:1;17715:15;17749:4;17746:1;17739:15;17766:180;17814:77;17811:1;17804:88;17911:4;17908:1;17901:15;17935:4;17932:1;17925:15;18075:117;18184:1;18181;18174:12;18198:102;18240:8;18287:5;18284:1;18280:13;18259:34;;18198:102;;;:::o;18306:174::-;18446:26;18442:1;18434:6;18430:14;18423:50;18306:174;:::o;18486:225::-;18626:34;18622:1;18614:6;18610:14;18603:58;18695:8;18690:2;18682:6;18678:15;18671:33;18486:225;:::o;18717:171::-;18857:23;18853:1;18845:6;18841:14;18834:47;18717:171;:::o;18894:223::-;19034:34;19030:1;19022:6;19018:14;19011:58;19103:6;19098:2;19090:6;19086:15;19079:31;18894:223;:::o;19123:180::-;19263:32;19259:1;19251:6;19247:14;19240:56;19123:180;:::o;19309:182::-;19449:34;19445:1;19437:6;19433:14;19426:58;19309:182;:::o;19497:181::-;19637:33;19633:1;19625:6;19621:14;19614:57;19497:181;:::o;19684:176::-;19824:28;19820:1;19812:6;19808:14;19801:52;19684:176;:::o;19866:114::-;;:::o;19986:165::-;20126:17;20122:1;20114:6;20110:14;20103:41;19986:165;:::o;20157:122::-;20230:24;20248:5;20230:24;:::i;:::-;20223:5;20220:35;20210:63;;20269:1;20266;20259:12;20210:63;20157:122;:::o;20285:116::-;20355:21;20370:5;20355:21;:::i;:::-;20348:5;20345:32;20335:60;;20391:1;20388;20381:12;20335:60;20285:116;:::o;20407:122::-;20480:24;20498:5;20480:24;:::i;:::-;20473:5;20470:35;20460:63;;20519:1;20516;20509:12;20460:63;20407:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1849200","executionCost":"infinite","totalCost":"infinite"},"external":{"Owner()":"infinite","balanceOf(address,address)":"infinite","depositETH()":"infinite","depositToken(address,uint256,uint256)":"infinite","ethToken()":"2559","getlockedFunds(address,address)":"infinite","lockedFunds(address,address)":"infinite","owner()":"2589","renounceOwnership()":"30421","s_tokens(address,address)":"infinite","transferOwnership(address)":"30791","updateBalance(address,address,uint256,bool)":"infinite","updateExchangeAddress(address)":"27010","updateLockedFunds(address,address,uint256,bool)":"infinite","withdrawETH(uint256)":"infinite","withdrawToken(address,uint256,uint256)":"infinite"}},"methodIdentifiers":{"Owner()":"b4a99a4e","balanceOf(address,address)":"f7888aec","depositETH()":"f6326fb3","depositToken(address,uint256,uint256)":"99c6d2de","ethToken()":"7bf1a627","getlockedFunds(address,address)":"4fc121db","lockedFunds(address,address)":"4bdde1cf","owner()":"8da5cb5b","renounceOwnership()":"715018a6","s_tokens(address,address)":"cd5d767c","transferOwnership(address)":"f2fde38b","updateBalance(address,address,uint256,bool)":"c5ab4602","updateExchangeAddress(address)":"31415a65","updateLockedFunds(address,address,uint256,bool)":"46a8f820","withdrawETH(uint256)":"f14210a6","withdrawToken(address,uint256,uint256)":"96c0ec55"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getlockedFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_tokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAdd\",\"type\":\"bool\"}],\"name\":\"updateBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_exchangeAddress\",\"type\":\"address\"}],\"name\":\"updateExchangeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAdd\",\"type\":\"bool\"}],\"name\":\"updateLockedFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Withdraw(address,address,uint256,uint256)\":{\"notice\":\"Event when amount withdrawn exchange\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Wallet.sol\":\"Wallet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/Exchange.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./PriceChecker.sol\\\";\\r\\nimport \\\"./TradingFees.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Exchange is Ownable {\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n    PriceChecker priceChecker;\\r\\n    TradingFees tradingFees;\\r\\n    Wallet wallet;\\r\\n\\r\\n    uint256 decimals = 10 ** 18;\\r\\n    address public ethToken = address(0);\\r\\n\\r\\n    //Token Address List available in DEX\\r\\n    _tokenInfo[] public tokenList;\\r\\n\\r\\n    //s_orderBook mappping: tokenA Address -> tokenB Address -> Side -> Order Array\\r\\n    mapping(address => mapping( address => mapping(uint256 => _Order[]))) public s_orderBook;\\r\\n\\r\\n    mapping(address => mapping(uint256 => _filledOrder[]))\\r\\n        public s_filledOrders;\\r\\n\\r\\n    uint256 public s_orderId = 0;\\r\\n    bool private s_isManual = true;\\r\\n\\r\\n    struct _tokenInfo {\\r\\n        address add;\\r\\n        uint256 decimals;\\r\\n    }\\r\\n\\r\\n    struct _fillOrderValues {\\r\\n        uint256 rate;\\r\\n        uint256 amount;\\r\\n    }\\r\\n\\r\\n    //Structs representing an order that has unique id, user and amounts to give and get between two tokens to exchange\\r\\n    struct _Order {\\r\\n        uint256 id;\\r\\n        Side side;\\r\\n        address user;\\r\\n        address tokenA;\\r\\n        uint256 amountA;\\r\\n        address tokenB;\\r\\n        uint256 amountB;\\r\\n        uint256 rate; // TokenB/TokenA = price in terms of TokenB\\r\\n        uint256 originalAmountA;\\r\\n        uint256 originalAmountB;\\r\\n        bool waiveFees;\\r\\n    }\\r\\n\\r\\n    //For any order that is filled even if it is partially filled or fully filled\\r\\n    struct _filledOrder {\\r\\n        uint256 id;\\r\\n        Side side;\\r\\n        address user;\\r\\n        address tokenA;\\r\\n        address tokenB;\\r\\n        uint256 amountFilled;\\r\\n        uint256 fillRate;\\r\\n        uint256 originalRate;\\r\\n        uint256 originalAmountA;\\r\\n        uint256 originalAmountB;\\r\\n        bool feesWaived;\\r\\n        uint256 feesPaid; //in terms of ETH\\r\\n    }\\r\\n\\r\\n    enum Side {\\r\\n        BUY,\\r\\n        SELL\\r\\n    }\\r\\n\\r\\n    //add events\\r\\n    /// @notice Event when an order is placed on an exchange\\r\\n    event Order(\\r\\n        uint256 id,\\r\\n        Side side,\\r\\n        address user,\\r\\n        address tokenA,\\r\\n        uint256 amountA,\\r\\n        address tokenB,\\r\\n        uint256 amountB,\\r\\n        uint256 rate,\\r\\n        uint256 originalAmountA,\\r\\n        uint256 originalAmountB,\\r\\n        bool waiveFees\\r\\n    );\\r\\n\\r\\n    /// @notice Event when an order is cancelled\\r\\n    event Cancel(\\r\\n        uint256 id,\\r\\n        Side side,\\r\\n        address user,\\r\\n        address tokenA,\\r\\n        uint256 amountA,\\r\\n        address tokenB,\\r\\n        uint256 amountB,\\r\\n        uint256 rate,\\r\\n        uint256 originalAmountA,\\r\\n        uint256 originalAmountB,\\r\\n        bool waiveFees\\r\\n    );\\r\\n\\r\\n    event fillBuyOrder(\\r\\n        _Order remainingOrder,\\r\\n        uint256 amountBought,\\r\\n        uint256 fillBuyRate,\\r\\n        bool feesWaived,\\r\\n        uint256 feesPaid\\r\\n    );\\r\\n\\r\\n    event fillSellOrder(\\r\\n        _Order remainingOrder,\\r\\n        uint256 amountSold,\\r\\n        uint256 fillSellRate,\\r\\n        bool feesWaived,\\r\\n        uint256 feesPaid\\r\\n    );\\r\\n\\r\\n    constructor(address _wallet, address _fees, address _priceChecker) {\\r\\n        wallet = Wallet(_wallet);\\r\\n        tradingFees = TradingFees(_fees);\\r\\n        priceChecker = PriceChecker(_priceChecker);\\r\\n    }\\r\\n\\r\\n    function createLimitBuyOrder(\\r\\n        // TokenA/TokenB\\r\\n        address _tokenA,\\r\\n        uint256 _amountA,\\r\\n        address _tokenB,\\r\\n        uint256 _amountB,\\r\\n        uint256 _rate,\\r\\n        bool _waiveFees\\r\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\r\\n        //Amount user has deposited in the DEX must be >= value he wants to buy\\r\\n        require(\\r\\n            wallet.balanceOf(_tokenB, msg.sender).sub(\\r\\n                wallet.getlockedFunds(msg.sender, _tokenB)\\r\\n            ) >= _amountB,\\r\\n            \\\"Insufficient Funds\\\"\\r\\n        );\\r\\n\\r\\n        wallet.updateLockedFunds(msg.sender, _tokenB, _amountB, true);\\r\\n\\r\\n        s_orderBook[_tokenA][_tokenB][uint256(Side.BUY)].push(\\r\\n            _Order(\\r\\n                s_orderId,\\r\\n                Side.BUY,\\r\\n                msg.sender,\\r\\n                _tokenA,\\r\\n                _amountA,\\r\\n                _tokenB,\\r\\n                _amountB,\\r\\n                _rate,\\r\\n                _amountA,\\r\\n                _amountB,\\r\\n                _waiveFees\\r\\n            )\\r\\n        );\\r\\n\\r\\n        emit Order(\\r\\n            s_orderId,\\r\\n            Side.BUY,\\r\\n            msg.sender,\\r\\n            _tokenA,\\r\\n            _amountA,\\r\\n            _tokenB,\\r\\n            _amountB,\\r\\n            _rate,\\r\\n            _amountA,\\r\\n            _amountB,\\r\\n            _waiveFees\\r\\n        );\\r\\n\\r\\n        s_orderId = s_orderId.add(1);\\r\\n    }\\r\\n\\r\\n    function createLimitSellOrder(\\r\\n        address _tokenA,\\r\\n        uint256 _amountA,\\r\\n        address _tokenB,\\r\\n        uint256 _amountB,\\r\\n        uint256 _rate,\\r\\n        bool _waiveFees\\r\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\r\\n        //Amount of tokens user deposit in DEX must be >= the amount of tokens they want to sell\\r\\n        require(\\r\\n            wallet.balanceOf(_tokenA, msg.sender).sub(\\r\\n                wallet.getlockedFunds(msg.sender, _tokenA)\\r\\n            ) >= _amountA,\\r\\n            \\\"Insufficient Funds\\\"\\r\\n        );\\r\\n\\r\\n        //Lock the funds (tokens) in the wallet\\r\\n        wallet.updateLockedFunds(msg.sender, _tokenA, _amountA, true);\\r\\n\\r\\n        s_orderBook[_tokenA][_tokenB][uint256(Side.SELL)].push(\\r\\n            _Order(\\r\\n                s_orderId,\\r\\n                Side.SELL,\\r\\n                msg.sender,\\r\\n                _tokenA,\\r\\n                _amountA,\\r\\n                _tokenB,\\r\\n                _amountB,\\r\\n                _rate,\\r\\n                _amountA,\\r\\n                _amountB,\\r\\n                _waiveFees\\r\\n            )\\r\\n        );\\r\\n\\r\\n        emit Order(\\r\\n            s_orderId,\\r\\n            Side.SELL,\\r\\n            msg.sender,\\r\\n            _tokenA,\\r\\n            _amountA,\\r\\n            _tokenB,\\r\\n            _amountB,\\r\\n            _rate,\\r\\n            _amountA,\\r\\n            _amountB,\\r\\n            _waiveFees\\r\\n        );\\r\\n\\r\\n        s_orderId = s_orderId.add(1);\\r\\n    }\\r\\n\\r\\n    function cancelOrder(\\r\\n        Side side,\\r\\n        uint256 _id,\\r\\n        address _tokenA,\\r\\n        address _tokenB\\r\\n    ) public validOrder(_id, side, _tokenA, _tokenB) validToken(_tokenA) validToken(_tokenB) {\\r\\n        uint256 _side = uint256(side);\\r\\n        _Order[] storage _order = s_orderBook[_tokenA][_tokenB][_side];\\r\\n        uint256 size = _order.length;\\r\\n        _Order memory order;\\r\\n\\r\\n        uint256 index;\\r\\n        for (uint256 i = 0; i < size; i++) {\\r\\n            if (_order[i].id == _id) {\\r\\n                index = i;\\r\\n                order = _order[i];\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        //Manual cancellation of orders\\r\\n        if (s_isManual) {\\r\\n            require(msg.sender == order.user, \\\"Not Owner\\\");\\r\\n\\r\\n            //Unlock funds\\r\\n            if (side == Side.BUY) {\\r\\n                wallet.updateLockedFunds(\\r\\n                    msg.sender,\\r\\n                    order.tokenB,\\r\\n                    order.amountB,\\r\\n                    false\\r\\n                );\\r\\n            } else if (side == Side.SELL) {\\r\\n                wallet.updateLockedFunds(\\r\\n                    msg.sender,\\r\\n                    order.tokenA,\\r\\n                    order.amountA,\\r\\n                    false\\r\\n                );\\r\\n            }\\r\\n        }\\r\\n\\r\\n        for (uint256 j = index; j < size - 1; j++) {\\r\\n            _order[j] = _order[j.add(1)];\\r\\n        }\\r\\n        delete _order[size.sub(1)];\\r\\n        _order.pop();\\r\\n\\r\\n        s_orderBook[_tokenA][_tokenB][_side] = _order;\\r\\n\\r\\n        emit Cancel(\\r\\n            _id,\\r\\n            order.side,\\r\\n            order.user,\\r\\n            order.tokenA,\\r\\n            order.amountA,\\r\\n            order.tokenB,\\r\\n            order.amountB,\\r\\n            order.rate,\\r\\n            order.originalAmountA,\\r\\n            order.originalAmountB,\\r\\n            order.waiveFees\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function fillOrder(\\r\\n        Side side,\\r\\n        uint256 _id,\\r\\n        address _tokenA,\\r\\n        address _tokenB,\\r\\n        _fillOrderValues memory a\\r\\n    ) internal validOrder(_id, side, _tokenA, _tokenB) validToken(_tokenA) validToken(_tokenB) {\\r\\n        uint256 _side = uint256(side);\\r\\n        (_Order memory order, uint256 index) = getOrderFromArray(\\r\\n            _tokenA,\\r\\n            _tokenB,\\r\\n            _side,\\r\\n            _id\\r\\n        );\\r\\n\\r\\n        require(order.amountA >= a.amount, \\\"Invalid Order Amount to fill\\\");\\r\\n\\r\\n        order.amountA = order.amountA.sub(a.amount);\\r\\n        order.amountB = order.amountB.sub(\\r\\n            order.rate.mul(a.amount).div(decimals)\\r\\n        );\\r\\n        s_orderBook[_tokenA][_tokenB][_side][index].amountA = order.amountA;\\r\\n        s_orderBook[_tokenA][_tokenB][_side][index].amountB = order.amountB;\\r\\n\\r\\n        uint256 fees = tradingFees.calculateFees(\\r\\n            a.amount,\\r\\n            a.rate,\\r\\n            order.tokenB\\r\\n        ); \\r\\n        bool feesWaived = order.waiveFees &&\\r\\n            tradingFees.checkSufficientaDAI(fees, order.user);\\r\\n\\r\\n        if (side == Side.BUY) {\\r\\n            fillBuyOrders(order, a.amount, a.rate, feesWaived, fees);\\r\\n            emit fillBuyOrder(order, a.amount, a.rate, feesWaived, fees);\\r\\n        } else if (side == Side.SELL) {\\r\\n            fillSellOrders(order, a.amount, a.rate, feesWaived, fees);\\r\\n            emit fillSellOrder(order, a.amount, a.rate, feesWaived, fees);\\r\\n        }\\r\\n\\r\\n        if (order.amountA == 0) {\\r\\n            s_isManual = false;\\r\\n            cancelOrder(side, order.id, order.tokenA, order.tokenB); //remove filled orders \\r\\n            s_isManual = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function fillBuyOrders(\\r\\n        _Order memory order,\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        bool feesWaived,\\r\\n        uint256 fees\\r\\n    ) internal {\\r\\n        if (feesWaived) {\\r\\n            //Deduct aDAI\\r\\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\\r\\n            wallet.updateBalance(\\r\\n                tradingFees.aDAI(),\\r\\n                order.user,\\r\\n                aDAIToDeduct,\\r\\n                false\\r\\n            );\\r\\n            //Credit Bought tokens\\r\\n            wallet.updateBalance(order.tokenA, order.user, _amount, true);\\r\\n        } else {\\r\\n            uint256 amountTokenToDeduct = tradingFees.amountTokensToDeduct(\\r\\n                order.tokenA,\\r\\n                fees\\r\\n            );\\r\\n            //Credit Bought tokens after minusing fees\\r\\n            wallet.updateBalance(\\r\\n                order.tokenA,\\r\\n                order.user,\\r\\n                _amount.sub(amountTokenToDeduct),\\r\\n                true\\r\\n            );\\r\\n        }\\r\\n\\r\\n        //Original Locked Funds unlocked\\r\\n        wallet.updateLockedFunds(\\r\\n            order.user,\\r\\n            order.tokenB,\\r\\n            (order.rate.mul(_amount)).div(decimals),\\r\\n            false\\r\\n        );\\r\\n\\r\\n        //buyer update\\r\\n        //Buyer balance deducted from what he paid\\r\\n        wallet.updateBalance(\\r\\n            order.tokenB,\\r\\n            order.user,\\r\\n            (_rate.mul(_amount)).div(decimals),\\r\\n            false\\r\\n        );\\r\\n        \\r\\n        s_filledOrders[order.user][0].push(\\r\\n            _filledOrder(\\r\\n                order.id,\\r\\n                order.side,\\r\\n                order.user,\\r\\n                order.tokenA,\\r\\n                order.tokenB,\\r\\n                _amount,\\r\\n                _rate,\\r\\n                order.rate,\\r\\n                order.originalAmountA,\\r\\n                order.originalAmountB,\\r\\n                feesWaived,\\r\\n                fees\\r\\n            )\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function fillSellOrders(\\r\\n        _Order memory order,\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        bool feesWaived,\\r\\n        uint256 fees\\r\\n    ) internal {\\r\\n        if (feesWaived) {\\r\\n            //Deduct aDAI\\r\\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\\r\\n            wallet.updateBalance(tradingFees.aDAI(), order.user, aDAIToDeduct, false);\\r\\n            //Credit Earned tokens\\r\\n            wallet.updateBalance(\\r\\n                order.tokenB,\\r\\n                order.user,\\r\\n                (_rate.mul(_amount)).div(decimals),\\r\\n                true\\r\\n            );\\r\\n        } else {\\r\\n            uint256 amountTokensToDeduct = tradingFees.amountTokensToDeduct(\\r\\n                order.tokenB,\\r\\n                fees\\r\\n            );\\r\\n            //Credit Earned tokens after minusing fees\\r\\n            wallet.updateBalance(\\r\\n                order.tokenB,\\r\\n                order.user,\\r\\n                (_rate.mul(_amount)).div(decimals).sub(amountTokensToDeduct),\\r\\n                true\\r\\n            );\\r\\n        }\\r\\n\\r\\n        wallet.updateLockedFunds(order.user, order.tokenA, _amount, false);\\r\\n        //seller update\\r\\n        wallet.updateBalance(order.tokenA, order.user, _amount, false);\\r\\n\\r\\n         s_filledOrders[order.user][1].push(\\r\\n            _filledOrder(\\r\\n                order.id,\\r\\n                order.side,\\r\\n                order.user,\\r\\n                order.tokenA,\\r\\n                order.tokenB,\\r\\n                _amount,\\r\\n                _rate,\\r\\n                order.rate,\\r\\n                order.originalAmountA,\\r\\n                order.originalAmountB,\\r\\n                feesWaived,\\r\\n                fees\\r\\n            )\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function matchOrders(\\r\\n        address _tokenA,\\r\\n        address _tokenB,\\r\\n        uint256 _id,\\r\\n        Side side\\r\\n    ) internal validOrder(_id, side, _tokenA, _tokenB) validToken(_tokenA) validToken(_tokenB){\\r\\n        uint256 saleTokenAmt;\\r\\n\\r\\n        if (side == Side.BUY) {\\r\\n            //Retrieve sell order to match\\r\\n            _Order[] memory _sellOrder = s_orderBook[_tokenA][_tokenB][1];\\r\\n            for (uint256 i = 0; i < _sellOrder.length; i++) {\\r\\n                //Retrieve buy order to be filled\\r\\n                (_Order memory buyOrderToFill, ) = getOrderFromArray(\\r\\n                    _tokenA,\\r\\n                    _tokenB,\\r\\n                    uint8(side),\\r\\n                    _id\\r\\n                );\\r\\n                //sell order hit buyer's limit price & tokenB matches\\r\\n                if (\\r\\n                    _sellOrder[i].rate <= buyOrderToFill.rate &&\\r\\n                    buyOrderToFill.user != _sellOrder[i].user\\r\\n                    \\r\\n                ) {\\r\\n                    _Order memory sellOrder = _sellOrder[i];\\r\\n                    //if buyer's amount to buy > seller's amount to sell\\r\\n                    if (buyOrderToFill.amountA > sellOrder.amountA) {\\r\\n                        saleTokenAmt = sellOrder.amountA;\\r\\n                    }\\r\\n                    //if seller's amount to sell >= buyer's amount to buy\\r\\n                    else if (buyOrderToFill.amountA <= sellOrder.amountA) {\\r\\n                        saleTokenAmt = buyOrderToFill.amountA;\\r\\n                    }\\r\\n\\r\\n                    //Verify current balance\\r\\n                    require(\\r\\n                        wallet.balanceOf(\\r\\n                            buyOrderToFill.tokenB,\\r\\n                            buyOrderToFill.user\\r\\n                        ) >= (saleTokenAmt.mul(sellOrder.rate)).div(decimals),\\r\\n                        \\\"Insufficient Buyer Token Balance\\\"\\r\\n                    );\\r\\n                    require(\\r\\n                        wallet.balanceOf(_tokenA, sellOrder.user) >=\\r\\n                            saleTokenAmt,\\r\\n                        \\\"Insufficient Seller Token Balance\\\"\\r\\n                    );\\r\\n\\r\\n                    //update orders\\r\\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\\r\\n                        sellOrder.rate,\\r\\n                        saleTokenAmt\\r\\n                    );\\r\\n                    fillOrder(Side.BUY, _id, _tokenA, _tokenB, fillOrderValues);\\r\\n                    fillOrder(Side.SELL, sellOrder.id, _tokenA, _tokenB, fillOrderValues);\\r\\n                }\\r\\n\\r\\n                bool orderExist = orderExists(_id, side, _tokenA, _tokenB);\\r\\n                if (!orderExist) break;\\r\\n            }\\r\\n        } else if (side == Side.SELL) {\\r\\n            //Retrieve buy order to match\\r\\n            _Order[] memory _buyOrder = s_orderBook[_tokenA][_tokenB][0];\\r\\n            for (uint256 i = 0; i < _buyOrder.length; i++) {\\r\\n                //Retrieve sell order to be filled\\r\\n                (_Order memory sellOrderToFill, ) = getOrderFromArray(\\r\\n                    _tokenA,\\r\\n                    _tokenB,\\r\\n                    1,\\r\\n                    _id\\r\\n                );\\r\\n                //sell order hit buyer's limit price\\r\\n                if (\\r\\n                    _buyOrder[i].rate >= sellOrderToFill.rate &&\\r\\n                    _buyOrder[i].user != sellOrderToFill.user\\r\\n                ) {\\r\\n                    _Order memory order = _buyOrder[i];\\r\\n\\r\\n                    //if seller's amount to sell > buyer's amount to buy\\r\\n                    if (sellOrderToFill.amountA > order.amountA) {\\r\\n                        saleTokenAmt = order.amountA;\\r\\n                    }\\r\\n                    //if buyer's amount to buy > seller's amount to sell\\r\\n                    else if (sellOrderToFill.amountA <= order.amountA) {\\r\\n                        saleTokenAmt = sellOrderToFill.amountA;\\r\\n                    }\\r\\n                    //Verify current balance\\r\\n                    require(\\r\\n                        wallet.balanceOf(_tokenA, sellOrderToFill.user) >=\\r\\n                            saleTokenAmt,\\r\\n                        \\\"Insufficient Seller Token Balance\\\"\\r\\n                    );\\r\\n                    require(\\r\\n                        wallet.balanceOf(order.tokenB, order.user) >=\\r\\n                            (saleTokenAmt.mul(order.rate)).div(decimals),\\r\\n                        \\\"Insufficient Buyer Token Balance\\\"\\r\\n                    );\\r\\n\\r\\n                    //update orders\\r\\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\\r\\n                        order.rate,\\r\\n                        saleTokenAmt\\r\\n                    );\\r\\n                    fillOrder(Side.SELL, _id, _tokenA, _tokenB, fillOrderValues);\\r\\n                    fillOrder(Side.BUY, order.id, _tokenA, _tokenB, fillOrderValues);\\r\\n                }\\r\\n                bool orderExist = orderExists(_id, side, _tokenA, _tokenB);\\r\\n                if (!orderExist) break;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getOrderLength(\\r\\n        Side side,\\r\\n        address _tokenA,\\r\\n        address _tokenB\\r\\n    ) public view returns (uint256) {\\r\\n        return s_orderBook[_tokenA][_tokenB][uint256(side)].length;\\r\\n    }\\r\\n\\r\\n    function getOrder(\\r\\n        address _tokenA,\\r\\n        address _tokenB,\\r\\n        uint256 index,\\r\\n        Side side\\r\\n    )\\r\\n        public\\r\\n        view\\r\\n        returns (\\r\\n            _Order memory\\r\\n        )\\r\\n    {\\r\\n        _Order memory order = s_orderBook[_tokenA][_tokenB][uint256(side)][index];\\r\\n        return (\\r\\n            order\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getFilledOrderLength(\\r\\n        address _user,\\r\\n        Side side\\r\\n    ) public view returns (uint256) {\\r\\n        return s_filledOrders[_user][uint256(side)].length;\\r\\n    }\\r\\n\\r\\n    function getFilledOrder(\\r\\n        address _user,\\r\\n        Side side,\\r\\n        uint256 index\\r\\n    )\\r\\n        public\\r\\n        view\\r\\n        returns (\\r\\n            _filledOrder memory\\r\\n        )\\r\\n    {\\r\\n        _filledOrder memory filledOrder = s_filledOrders[_user][uint256(side)][\\r\\n            index\\r\\n        ];\\r\\n        return (\\r\\n            filledOrder\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getOrderFromArray(\\r\\n        address _tokenA,\\r\\n        address _tokenB,\\r\\n        uint256 side,\\r\\n        uint256 _id\\r\\n    ) public view returns (_Order memory, uint256) {\\r\\n        uint256 i = 0;\\r\\n        _Order[] memory _order = s_orderBook[_tokenA][_tokenB][side];\\r\\n        _Order memory order;\\r\\n        for (i; i < _order.length; i++) {\\r\\n            if (_order[i].id == _id) {\\r\\n                order = _order[i];\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        return (order, i);\\r\\n    }\\r\\n\\r\\n    function orderExists(\\r\\n        uint256 _id,\\r\\n        Side side,\\r\\n        address _tokenA,\\r\\n        address _tokenB\\r\\n    ) public view returns (bool) {\\r\\n        _Order[] memory orders = s_orderBook[_tokenA][_tokenB][uint256(side)];\\r\\n\\r\\n        for (uint256 i = 0; i < orders.length; i++) {\\r\\n            if (orders[i].id == _id) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function addToken(address _token, uint256 _decimals) public onlyOwner {\\r\\n        require(!isVerifiedToken(_token), \\\"Token already verified\\\");\\r\\n        tokenList.push(_tokenInfo(_token, _decimals));\\r\\n    }\\r\\n\\r\\n    function isVerifiedToken(address _token) public view returns (bool) {\\r\\n        //uint256 size = tokenList.length;\\r\\n\\r\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\r\\n            if (tokenList[i].add == _token) return true;\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function getTokenInfo(address _token) public view returns (uint256) {\\r\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\r\\n            if (tokenList[i].add == _token) {\\r\\n                return tokenList[i].decimals;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\\r\\n        wallet = Wallet(_Walletaddress);\\r\\n    }\\r\\n\\r\\n    function setPriceCheckerAddress(\\r\\n        address _PriceCheckeraddress\\r\\n    ) public onlyOwner {\\r\\n        priceChecker = PriceChecker(_PriceCheckeraddress);\\r\\n    }\\r\\n\\r\\n    function setTradingFees(address _tradingFees) public onlyOwner {\\r\\n        tradingFees = TradingFees(_tradingFees);\\r\\n    }\\r\\n\\r\\n    modifier validOrder(\\r\\n        uint256 _id,\\r\\n        Side side,\\r\\n        address _tokenA,\\r\\n        address _tokenB\\r\\n    ) {\\r\\n        require(orderExists(_id, side, _tokenA, _tokenB), \\\"Invalid Order ID\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier validToken(address _token) {\\r\\n        require(isVerifiedToken(_token), \\\"Token unavailable in DEX\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xe64f0bda5d0f32d897ccc59e310e3bd08369c8954ea7a1aeec4239aded44dbb0\",\"license\":\"MIT\"},\"contracts/PriceChecker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract PriceChecker is Ownable {\\r\\n    _priceFeed[] public priceFeeds;\\r\\n\\r\\n    struct _priceFeed {\\r\\n        string name;\\r\\n        address token;\\r\\n        AggregatorV3Interface priceFeed;\\r\\n    }\\r\\n\\r\\n    //only using PriceFeeds pegged to USD\\r\\n    function addPriceFeed(\\r\\n        string memory _name,\\r\\n        address _token,\\r\\n        address _address\\r\\n    ) external onlyOwner {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n        bool isAdded = false;\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (\\r\\n                keccak256(abi.encodePacked(_name)) ==\\r\\n                keccak256(abi.encodePacked(pricefeed[i].name))\\r\\n            ) {\\r\\n                isAdded = true;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        require(!isAdded, \\\"Price Feed already added\\\");\\r\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(_address);\\r\\n        priceFeeds.push(_priceFeed(_name, _token, priceFeed));\\r\\n    }\\r\\n\\r\\n    function getPriceFeed(\\r\\n        address _token\\r\\n    ) internal view returns (AggregatorV3Interface priceFeed) {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (_token == pricefeed[i].token) {\\r\\n                return pricefeed[i].priceFeed;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getPrice(address _address) external view returns (uint256) {\\r\\n        AggregatorV3Interface priceFeed = getPriceFeed(_address);\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(answer);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf1e1d97a9c555133c6a90fdc333e79e819ffaffd68d9c9579684b49413dda07c\",\"license\":\"MIT\"},\"contracts/TradingFees.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./PriceChecker.sol\\\";\\r\\nimport \\\"./Wallet.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract TradingFees is Ownable {\\r\\n    //When trading, have an option toggle to waive trading fees or not using deposited aETH\\r\\n    //Users have to first deposit aETH tokens into the Exchange contract to waive, aETH tokens are not for trading\\r\\n    //When a trade order goes through, trading fees of the trade fulfilled  = trade amount x trade price x 0.01,\\r\\n    //contract checks how much aETH is deposited and what is the value of aETH, if sufficient to waive fees fully, deduct balance in deposit\\r\\n    //and waive trading fees\\r\\n\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n\\r\\n    uint256 decimals = 10 ** 18;\\r\\n    address public daiToken =\\r\\n        address(0xBa8DCeD3512925e52FE67b1b5329187589072A55); //based on Aave contract\\r\\n    address public aDAI = address(0xADD98B0342e4094Ec32f3b67Ccfd3242C876ff7a); //based on Aave contract\\r\\n    PriceChecker priceFeed;\\r\\n    Wallet wallet;\\r\\n\\r\\n    constructor(address _priceCheckerAddress) {\\r\\n        priceFeed = PriceChecker(_priceCheckerAddress);\\r\\n    }\\r\\n\\r\\n    function calculateFees(\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        address _refToken\\r\\n    ) public view returns (uint256) {\\r\\n        //Calculated based on TokenB price, require actual price in 18dp\\r\\n        //trading fees is 0.1% of trade = 0.001\\r\\n        //moving up 18dp is 0.001 x 10**18 = 10**14\\r\\n        //have to fetch tokenPrice from PriceFeed\\r\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8dp originally\\r\\n        uint256 value = (\\r\\n            ((_amount.mul(_rate)).div(decimals)).mul(priceOfToken.mul(10 ** 10))\\r\\n        ).div(decimals);\\r\\n        uint256 fees = value.div(10 ** 4);\\r\\n\\r\\n        return fees; //based on USD value\\r\\n    }\\r\\n\\r\\n    //Amount of DAI to deduct from fees\\r\\n    function amountaDAIToDeduct(uint256 _fees) public view returns (uint256) {\\r\\n        uint256 aDAI_Price = priceFeed.getPrice(daiToken); // in 8 decimals initially\\r\\n        uint256 amt = _fees.mul(decimals).div(aDAI_Price.mul(10 ** 10));\\r\\n        return uint256(amt);\\r\\n    }\\r\\n\\r\\n    //Amount of Tokens to deduct from fees\\r\\n    function amountTokensToDeduct(\\r\\n        address _refToken,\\r\\n        uint256 _fees\\r\\n    ) public view returns (uint256) {\\r\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8decimals\\r\\n        uint256 amt = _fees.mul(decimals).div(priceOfToken.mul(10 ** 10));\\r\\n        return uint256(amt);\\r\\n    }\\r\\n\\r\\n    function checkSufficientaDAI(\\r\\n        uint256 _fees,\\r\\n        address _user\\r\\n    ) public view returns (bool) {\\r\\n        uint256 amtDAI = amountaDAIToDeduct(_fees);\\r\\n        uint256 balance = wallet.s_tokens(aDAI, _user);\\r\\n\\r\\n        return balance >= amtDAI;\\r\\n    }\\r\\n\\r\\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\\r\\n        wallet = Wallet(_Walletaddress);\\r\\n    }\\r\\n\\r\\n    function setPriceCheckerAddress(\\r\\n        address _PriceCheckeraddress\\r\\n    ) public onlyOwner {\\r\\n        priceFeed = PriceChecker(_PriceCheckeraddress);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x570e96da947a0e3017464615810b58bca9033d9fd045ff00077aa59313ee1d66\",\"license\":\"MIT\"},\"contracts/Wallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./interface/IERC20.sol\\\";\\r\\nimport \\\"./Exchange.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Wallet is Ownable {\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n\\r\\n    address public immutable Owner;\\r\\n\\r\\n    //For prevention of reentrancy\\r\\n    bool private locked;\\r\\n\\r\\n    address public ethToken = address(0);\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) public s_tokens; //tokenAdress -> msg.sender -> tokenAmt\\r\\n    mapping(address => mapping(address => uint256)) public lockedFunds;\\r\\n\\r\\n    Exchange exchange;\\r\\n    IERC20 token;\\r\\n\\r\\n    event Deposit(address token, address user, uint256 amount, uint256 balance);\\r\\n\\r\\n    /// @notice Event when amount withdrawn exchange\\r\\n    event Withdraw(\\r\\n        address token,\\r\\n        address user,\\r\\n        uint256 amount,\\r\\n        uint256 balance\\r\\n    );\\r\\n\\r\\n    constructor() {\\r\\n        Owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    function depositETH() external payable {\\r\\n        updateBalance(ethToken, msg.sender, msg.value, true);\\r\\n\\r\\n        emit Deposit(\\r\\n            ethToken,\\r\\n            msg.sender,\\r\\n            msg.value,\\r\\n            balanceOf(ethToken, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdrawETH(uint256 _amount) external {\\r\\n        require(\\r\\n            balanceOf(ethToken, msg.sender).sub(\\r\\n                getlockedFunds(msg.sender, ethToken)\\r\\n            ) >= _amount,\\r\\n            \\\"Insufficient balance ETH to withdraw\\\"\\r\\n        );\\r\\n        require(!locked, \\\"Reentrant call detected!\\\");\\r\\n        locked = true;\\r\\n        updateBalance(ethToken, msg.sender, _amount, false);\\r\\n        locked = false;\\r\\n        (bool success, ) = msg.sender.call{value: _amount}(\\\"\\\");\\r\\n        require(success, \\\"failed to send amount\\\");\\r\\n\\r\\n        emit Withdraw(\\r\\n            ethToken,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(ethToken, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    //from and transferFrom is from ERC20 contract\\r\\n    //_token should be an ERC20 token\\r\\n    function depositToken(\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        uint256 _decimals\\r\\n    ) external {\\r\\n        require(_token != ethToken);\\r\\n        require(\\r\\n            exchange.isVerifiedToken(_token),\\r\\n            \\\"Token not verified on Exchange\\\"\\r\\n        );\\r\\n        //need to add a check to prove that it is an ERC20 token\\r\\n        token = IERC20(_token);\\r\\n\\r\\n        //Requires approval first\\r\\n        require(\\r\\n            token.transferFrom(msg.sender, address(this), _amount),\\r\\n            \\\"No Approval yet\\\"\\r\\n        );\\r\\n        uint256 decimals = 18;\\r\\n        if (_decimals == 18) {\\r\\n            updateBalance(_token, msg.sender, _amount, true);\\r\\n        } else\\r\\n            updateBalance(\\r\\n                _token,\\r\\n                msg.sender,\\r\\n                _amount.mul(10 ** decimals.sub(_decimals)),\\r\\n                true\\r\\n            );\\r\\n\\r\\n        emit Deposit(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(_token, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdrawToken(\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        uint256 _decimals\\r\\n    ) external {\\r\\n        require(_token != ethToken);\\r\\n        require(\\r\\n            exchange.isVerifiedToken(_token),\\r\\n            \\\"Token not verified on Exchange\\\"\\r\\n        );\\r\\n\\r\\n        require(\\r\\n            balanceOf(_token, msg.sender).sub(\\r\\n                getlockedFunds(msg.sender, _token)\\r\\n            ) >= _amount,\\r\\n            \\\"Insufficient Tokens to withdraw\\\"\\r\\n        );\\r\\n        require(!locked, \\\"Reentrant call detected!\\\");\\r\\n        locked = true;\\r\\n\\r\\n        token = IERC20(_token);\\r\\n        uint256 decimals = 18;\\r\\n        if (_decimals == 18) {\\r\\n            updateBalance(_token, msg.sender, _amount, false);\\r\\n            require(token.transfer(msg.sender, _amount));\\r\\n        } else {\\r\\n            updateBalance(\\r\\n                _token,\\r\\n                msg.sender,\\r\\n                _amount.mul(10 ** decimals.sub(_decimals)),\\r\\n                false\\r\\n            );\\r\\n            require(\\r\\n                token.transfer(\\r\\n                    msg.sender,\\r\\n                    _amount.div(10 ** decimals.sub(_decimals))\\r\\n                )\\r\\n            );\\r\\n        }\\r\\n\\r\\n        locked = false;\\r\\n        emit Withdraw(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(_token, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getlockedFunds(\\r\\n        address _user,\\r\\n        address _token\\r\\n    ) public view returns (uint256) {\\r\\n        return lockedFunds[_user][_token];\\r\\n    }\\r\\n\\r\\n    function updateLockedFunds(\\r\\n        address _user,\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) public isAuthorised {\\r\\n        if (isAdd) {\\r\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].add(\\r\\n                _amount\\r\\n            );\\r\\n        } else if (!isAdd) {\\r\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].sub(\\r\\n                _amount\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //balance of specific tokens in the dex owned by specific user\\r\\n    function balanceOf(\\r\\n        address _token,\\r\\n        address _user\\r\\n    ) public view returns (uint256) {\\r\\n        return s_tokens[_token][_user];\\r\\n    }\\r\\n\\r\\n    function updateBalance(\\r\\n        address _token,\\r\\n        address _user,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) public isAuthorised {\\r\\n        if (isAdd) {\\r\\n            s_tokens[_token][_user] = s_tokens[_token][_user].add(_amount);\\r\\n        } else if (!isAdd) {\\r\\n            s_tokens[_token][_user] = s_tokens[_token][_user].sub(_amount);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function updateExchangeAddress(address _exchangeAddress) public onlyOwner {\\r\\n        exchange = Exchange(_exchangeAddress);\\r\\n    }\\r\\n\\r\\n    modifier isAuthorised() {\\r\\n        require(\\r\\n            msg.sender == address(this) || msg.sender == address(exchange),\\r\\n            \\\"Unauthorised Function Call\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf57179a3c0d338a6d94c7dadc3ee6873838e3af70c690754689b9c1c00aea67c\",\"license\":\"MIT\"},\"contracts/interface/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IERC20 {\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256 remaining);\\r\\n\\r\\n    function approve(\\r\\n        address spender,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function balanceOf(address owner) external view returns (uint256 balance);\\r\\n\\r\\n    function decimals() external view returns (uint8 decimalPlaces);\\r\\n\\r\\n    function decreaseApproval(\\r\\n        address spender,\\r\\n        uint256 subtractedValue\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function increaseApproval(\\r\\n        address spender,\\r\\n        uint256 addedValue\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function name() external view returns (string memory tokenName);\\r\\n\\r\\n    function symbol() external view returns (string memory tokenSymbol);\\r\\n\\r\\n    function totalSupply() external view returns (uint256 totalTokensIssued);\\r\\n\\r\\n    function transfer(\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n}\\r\\n\",\"keccak256\":\"0xef48d46afc4efefcd6d7f1799f25aee5d8fcd588e2aaa80a84af726128194326\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":53,"contract":"contracts/Wallet.sol:Wallet","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":2811,"contract":"contracts/Wallet.sol:Wallet","label":"locked","offset":20,"slot":"0","type":"t_bool"},{"astId":2817,"contract":"contracts/Wallet.sol:Wallet","label":"ethToken","offset":0,"slot":"1","type":"t_address"},{"astId":2823,"contract":"contracts/Wallet.sol:Wallet","label":"s_tokens","offset":0,"slot":"2","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":2829,"contract":"contracts/Wallet.sol:Wallet","label":"lockedFunds","offset":0,"slot":"3","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":2832,"contract":"contracts/Wallet.sol:Wallet","label":"exchange","offset":0,"slot":"4","type":"t_contract(Exchange)2396"},{"astId":2835,"contract":"contracts/Wallet.sol:Wallet","label":"token","offset":0,"slot":"5","type":"t_contract(IERC20)3445"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(Exchange)2396":{"encoding":"inplace","label":"contract Exchange","numberOfBytes":"20"},"t_contract(IERC20)3445":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"events":{"Withdraw(address,address,uint256,uint256)":{"notice":"Event when amount withdrawn exchange"}},"kind":"user","methods":{},"version":1}}},"contracts/interface/IERC20.sol":{"IERC20":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"remaining","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"decimalPlaces","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseApproval","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseApproval","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"tokenName","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"tokenSymbol","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"totalTokensIssued","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseApproval(address,uint256)":"66188463","increaseApproval(address,uint256)":"d73dd623","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimalPlaces\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokensIssued\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IERC20 {\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256 remaining);\\r\\n\\r\\n    function approve(\\r\\n        address spender,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function balanceOf(address owner) external view returns (uint256 balance);\\r\\n\\r\\n    function decimals() external view returns (uint8 decimalPlaces);\\r\\n\\r\\n    function decreaseApproval(\\r\\n        address spender,\\r\\n        uint256 subtractedValue\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function increaseApproval(\\r\\n        address spender,\\r\\n        uint256 addedValue\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function name() external view returns (string memory tokenName);\\r\\n\\r\\n    function symbol() external view returns (string memory tokenSymbol);\\r\\n\\r\\n    function totalSupply() external view returns (uint256 totalTokensIssued);\\r\\n\\r\\n    function transfer(\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n}\\r\\n\",\"keccak256\":\"0xef48d46afc4efefcd6d7f1799f25aee5d8fcd588e2aaa80a84af726128194326\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}
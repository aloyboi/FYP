{"id":"04a13f26e2b6b1e7af00b7ed405290b7","_format":"hh-sol-build-info-1","solcVersion":"0.8.7","solcLongVersion":"0.8.7+commit.e28d00a7","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"contracts/Exchange.sol":{"content":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./PriceChecker.sol\";\r\nimport \"./TradingFees.sol\";\r\n\r\n/// @notice Library SafeMath used to prevent overflows and underflows\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract Exchange is Ownable {\r\n    using SafeMath for uint256; //for prevention of integer overflow\r\n    PriceChecker priceChecker;\r\n    TradingFees tradingFees;\r\n    Wallet wallet;\r\n\r\n    uint256 decimals = 10 ** 18;\r\n    address public ethToken = address(0);\r\n\r\n    //Token Address List available in DEX\r\n    _tokenInfo[] public tokenList;\r\n\r\n    //s_orderBook mappping: tokenAddress -> Side -> Order Array\r\n    mapping(address => mapping(uint256 => _Order[])) public s_orderBook;\r\n\r\n    mapping(address => mapping(uint256 => _filledOrder[]))\r\n        public s_filledOrders;\r\n\r\n    uint256 public s_orderId = 0;\r\n    bool private s_isManual = true;\r\n\r\n    struct _tokenInfo {\r\n        address add;\r\n        uint256 decimals;\r\n    }\r\n\r\n    struct _fillOrderValues {\r\n        uint256 rate;\r\n        uint256 amount;\r\n    }\r\n\r\n    //Structs representing an order that has unique id, user and amounts to give and get between two tokens to exchange\r\n    struct _Order {\r\n        uint256 id;\r\n        Side side;\r\n        address user;\r\n        address tokenA;\r\n        uint256 amountA;\r\n        address tokenB;\r\n        uint256 amountB;\r\n        uint256 rate; // TokenB/TokenA = price in terms of TokenB\r\n        uint256 originalAmountA;\r\n        uint256 originalAmountB;\r\n        bool waiveFees;\r\n    }\r\n\r\n    //For any order that is filled even if it is partially filled or fully filled\r\n    struct _filledOrder {\r\n        uint256 id;\r\n        Side side;\r\n        address user;\r\n        address tokenA;\r\n        address tokenB;\r\n        uint256 amountFilled;\r\n        uint256 fillRate;\r\n        uint256 originalRate;\r\n        uint256 originalAmountA;\r\n        uint256 originalAmountB;\r\n        bool feesWaived;\r\n        uint256 feesPaid; //in terms of ETH\r\n    }\r\n\r\n    enum Side {\r\n        BUY,\r\n        SELL\r\n    }\r\n\r\n    //add events\r\n    /// @notice Event when an order is placed on an exchange\r\n    event Order(\r\n        uint256 id,\r\n        Side side,\r\n        address user,\r\n        address tokenA,\r\n        uint256 amountA,\r\n        address tokenB,\r\n        uint256 amountB,\r\n        uint256 rate,\r\n        uint256 originalAmountA,\r\n        uint256 originalAmountB,\r\n        bool waiveFees\r\n    );\r\n\r\n    /// @notice Event when an order is cancelled\r\n    event Cancel(\r\n        uint256 id,\r\n        Side side,\r\n        address user,\r\n        address tokenA,\r\n        uint256 amountA,\r\n        address tokenB,\r\n        uint256 amountB,\r\n        uint256 rate,\r\n        uint256 originalAmountA,\r\n        uint256 originalAmountB,\r\n        bool waiveFees\r\n    );\r\n\r\n    event fillBuyOrder(\r\n        _Order remainingOrder,\r\n        uint256 amountBought,\r\n        uint256 fillBuyRate,\r\n        bool feesWaived,\r\n        uint256 feesPaid\r\n    );\r\n\r\n    event fillSellOrder(\r\n        _Order remainingOrder,\r\n        uint256 amountSold,\r\n        uint256 fillSellRate,\r\n        bool feesWaived,\r\n        uint256 feesPaid\r\n    );\r\n\r\n    constructor(address _wallet, address _fees, address _priceChecker) {\r\n        wallet = Wallet(_wallet);\r\n        tradingFees = TradingFees(_fees);\r\n        priceChecker = PriceChecker(_priceChecker);\r\n    }\r\n\r\n    function createLimitBuyOrder(\r\n        // TokenA/TokenB\r\n        address _tokenA,\r\n        uint256 _amountA,\r\n        address _tokenB,\r\n        uint256 _amountB,\r\n        uint256 _rate,\r\n        bool _waiveFees\r\n    ) external validToken(_tokenA) validToken(_tokenB) {\r\n        //Amount user has deposited in the DEX must be >= value he wants to buy\r\n        require(\r\n            wallet.balanceOf(_tokenB, msg.sender).sub(\r\n                wallet.getlockedFunds(msg.sender, _tokenB)\r\n            ) >= _amountB,\r\n            \"Insufficient Funds\"\r\n        );\r\n\r\n        wallet.updateLockedFunds(msg.sender, _tokenB, _amountB, true);\r\n\r\n        s_orderBook[_tokenA][uint256(Side.BUY)].push(\r\n            _Order(\r\n                s_orderId,\r\n                Side.BUY,\r\n                msg.sender,\r\n                _tokenA,\r\n                _amountA,\r\n                _tokenB,\r\n                _amountB,\r\n                _rate,\r\n                _amountA,\r\n                _amountB,\r\n                _waiveFees\r\n            )\r\n        );\r\n\r\n        emit Order(\r\n            s_orderId,\r\n            Side.BUY,\r\n            msg.sender,\r\n            _tokenA,\r\n            _amountA,\r\n            _tokenB,\r\n            _amountB,\r\n            _rate,\r\n            _amountA,\r\n            _amountB,\r\n            _waiveFees\r\n        );\r\n\r\n        s_orderId = s_orderId.add(1);\r\n    }\r\n\r\n    function createLimitSellOrder(\r\n        address _tokenA,\r\n        uint256 _amountA,\r\n        address _tokenB,\r\n        uint256 _amountB,\r\n        uint256 _rate,\r\n        bool _waiveFees\r\n    ) external validToken(_tokenA) validToken(_tokenB) {\r\n        //Amount of tokens user deposit in DEX must be >= the amount of tokens they want to sell\r\n        require(\r\n            wallet.balanceOf(_tokenA, msg.sender).sub(\r\n                wallet.getlockedFunds(msg.sender, _tokenA)\r\n            ) >= _amountA,\r\n            \"Insufficient Funds\"\r\n        );\r\n\r\n        //Lock the funds (tokens) in the wallet\r\n        wallet.updateLockedFunds(msg.sender, _tokenA, _amountA, true);\r\n\r\n        s_orderBook[_tokenA][uint256(Side.SELL)].push(\r\n            _Order(\r\n                s_orderId,\r\n                Side.SELL,\r\n                msg.sender,\r\n                _tokenA,\r\n                _amountA,\r\n                _tokenB,\r\n                _amountB,\r\n                _rate,\r\n                _amountA,\r\n                _amountB,\r\n                _waiveFees\r\n            )\r\n        );\r\n\r\n        emit Order(\r\n            s_orderId,\r\n            Side.SELL,\r\n            msg.sender,\r\n            _tokenA,\r\n            _amountA,\r\n            _tokenB,\r\n            _amountB,\r\n            _rate,\r\n            _amountA,\r\n            _amountB,\r\n            _waiveFees\r\n        );\r\n\r\n        s_orderId = s_orderId.add(1);\r\n    }\r\n\r\n    function cancelOrder(\r\n        Side side,\r\n        uint256 _id,\r\n        address _token\r\n    ) public validOrder(_id, side, _token) validToken(_token) {\r\n        _Order[] storage _order = s_orderBook[_token][uint256(side)];\r\n        uint256 size = _order.length;\r\n        _Order memory order;\r\n\r\n        uint256 index;\r\n        for (uint256 i = 0; i < size; i++) {\r\n            if (_order[i].id == _id) {\r\n                index = i;\r\n                order = _order[i];\r\n                break;\r\n            }\r\n        }\r\n\r\n        //Manual cancellation of orders\r\n        if (s_isManual) {\r\n            require(msg.sender == order.user, \"Not Owner\");\r\n\r\n            //Unlock funds\r\n            if (side == Side.BUY) {\r\n                wallet.updateLockedFunds(\r\n                    msg.sender,\r\n                    order.tokenB,\r\n                    order.amountB,\r\n                    false\r\n                );\r\n            } else if (side == Side.SELL) {\r\n                wallet.updateLockedFunds(\r\n                    msg.sender,\r\n                    order.tokenA,\r\n                    order.amountA,\r\n                    false\r\n                );\r\n            }\r\n        }\r\n\r\n        for (uint256 j = index; j < size - 1; j++) {\r\n            _order[j] = _order[j.add(1)];\r\n        }\r\n        delete _order[size.sub(1)];\r\n        _order.pop();\r\n\r\n        s_orderBook[_token][uint256(side)] = _order;\r\n\r\n        emit Cancel(\r\n            _id,\r\n            order.side,\r\n            order.user,\r\n            order.tokenA,\r\n            order.amountA,\r\n            order.tokenB,\r\n            order.amountB,\r\n            order.rate,\r\n            order.originalAmountA,\r\n            order.originalAmountB,\r\n            order.waiveFees\r\n        );\r\n    }\r\n\r\n    function fillOrder(\r\n        Side side,\r\n        uint256 _id,\r\n        address _token,\r\n        _fillOrderValues memory a\r\n    ) internal validOrder(_id, side, _token) validToken(_token) {\r\n        uint256 _side = uint256(side);\r\n        (_Order memory order, uint256 index) = getOrderFromArray(\r\n            _token,\r\n            _side,\r\n            _id\r\n        );\r\n\r\n        require(order.amountA >= a.amount, \"Invalid Order Amount to fill\");\r\n\r\n        order.amountA = order.amountA.sub(a.amount);\r\n        order.amountB = order.amountB.sub(\r\n            order.rate.mul(a.amount).div(decimals)\r\n        );\r\n        s_orderBook[_token][_side][index].amountA = order.amountA;\r\n        s_orderBook[_token][_side][index].amountB = order.amountB;\r\n\r\n        uint256 fees = tradingFees.calculateFees(\r\n            a.amount,\r\n            a.rate,\r\n            order.tokenB\r\n        ); //fees in terms of USD value 18dp\r\n        bool feesWaived = order.waiveFees &&\r\n            tradingFees.checkSufficientaDAI(fees, order.user);\r\n\r\n        if (side == Side.BUY) {\r\n            fillBuyOrders(order, a.amount, a.rate, feesWaived, fees);\r\n            emit fillBuyOrder(order, a.amount, a.rate, feesWaived, fees);\r\n        } else if (side == Side.SELL) {\r\n            fillSellOrders(order, a.amount, a.rate, feesWaived, fees);\r\n            emit fillSellOrder(order, a.amount, a.rate, feesWaived, fees);\r\n        }\r\n\r\n        if (order.amountA == 0) {\r\n            s_isManual = false;\r\n            cancelOrder(side, order.id, order.tokenA); //remove filled orders\r\n            s_isManual = true;\r\n        }\r\n    }\r\n\r\n    function fillBuyOrders(\r\n        _Order memory order,\r\n        uint256 _amount,\r\n        uint256 _rate,\r\n        bool feesWaived,\r\n        uint256 fees\r\n    ) internal {\r\n        if (feesWaived) {\r\n            //Deduct aDAI\r\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\r\n            wallet.updateBalance(\r\n                tradingFees.aDAI(),\r\n                order.user,\r\n                aDAIToDeduct,\r\n                false\r\n            );\r\n            //Credit Bought tokens\r\n            wallet.updateBalance(order.tokenA, order.user, _amount, true);\r\n        } else {\r\n            uint256 amountTokenToDeduct = tradingFees.amountTokensToDeduct(\r\n                order.tokenA,\r\n                fees\r\n            );\r\n            //Credit Bought tokens after minusing fees\r\n            wallet.updateBalance(\r\n                order.tokenA,\r\n                order.user,\r\n                _amount.sub(amountTokenToDeduct),\r\n                true\r\n            );\r\n        }\r\n\r\n        //Original Locked Funds unlocked\r\n        wallet.updateLockedFunds(\r\n            order.user,\r\n            order.tokenB,\r\n            (order.rate.mul(_amount)).div(decimals),\r\n            false\r\n        );\r\n\r\n        //buyer update\r\n        //Buyer balance deducted from what he paid\r\n        wallet.updateBalance(\r\n            order.tokenB,\r\n            order.user,\r\n            (_rate.mul(_amount)).div(decimals),\r\n            false\r\n        );\r\n\r\n        s_filledOrders[order.user][0].push(\r\n            _filledOrder(\r\n                order.id,\r\n                order.side,\r\n                order.user,\r\n                order.tokenA,\r\n                order.tokenB,\r\n                _amount,\r\n                _rate,\r\n                order.rate,\r\n                order.originalAmountA,\r\n                order.originalAmountB,\r\n                feesWaived,\r\n                fees\r\n            )\r\n        );\r\n    }\r\n\r\n    function fillSellOrders(\r\n        _Order memory order,\r\n        uint256 _amount,\r\n        uint256 _rate,\r\n        bool feesWaived,\r\n        uint256 fees\r\n    ) internal {\r\n        if (feesWaived) {\r\n            //Deduct aDAI\r\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\r\n            wallet.updateBalance(tradingFees.aDAI(), order.user, aDAIToDeduct, false);\r\n            //Credit Earned tokens\r\n            wallet.updateBalance(\r\n                order.tokenB,\r\n                order.user,\r\n                (_rate.mul(_amount)).div(decimals),\r\n                true\r\n            );\r\n        } else {\r\n            uint256 amountTokensToDeduct = tradingFees.amountTokensToDeduct(\r\n                order.tokenB,\r\n                fees\r\n            );\r\n            //Credit Earned tokens after minusing fees\r\n            wallet.updateBalance(\r\n                order.tokenB,\r\n                order.user,\r\n                (_rate.mul(_amount)).div(decimals).sub(amountTokensToDeduct),\r\n                true\r\n            );\r\n        }\r\n\r\n        wallet.updateLockedFunds(order.user, order.tokenA, _amount, false);\r\n        //seller update\r\n        wallet.updateBalance(order.tokenA, order.user, _amount, false);\r\n    }\r\n\r\n    function matchOrders(\r\n        address _token,\r\n        uint256 _id,\r\n        Side side\r\n    ) internal validOrder(_id, side, _token) validToken(_token) {\r\n        uint256 saleTokenAmt;\r\n\r\n        if (side == Side.BUY) {\r\n            //Retrieve sell order to match\r\n            _Order[] memory _sellOrder = s_orderBook[_token][1];\r\n            for (uint256 i = 0; i < _sellOrder.length; i++) {\r\n                //Retrieve buy order to be filled\r\n                (_Order memory buyOrderToFill, ) = getOrderFromArray(\r\n                    _token,\r\n                    uint8(side),\r\n                    _id\r\n                );\r\n                //sell order hit buyer's limit price & tokenB matches\r\n                if (\r\n                    _sellOrder[i].rate <= buyOrderToFill.rate &&\r\n                    buyOrderToFill.tokenB == _sellOrder[i].tokenB\r\n                ) {\r\n                    _Order memory sellOrder = _sellOrder[i];\r\n                    //if buyer's amount to buy > seller's amount to sell\r\n                    if (buyOrderToFill.amountA > sellOrder.amountA) {\r\n                        saleTokenAmt = sellOrder.amountA;\r\n                    }\r\n                    //if seller's amount to sell >= buyer's amount to buy\r\n                    else if (buyOrderToFill.amountA <= sellOrder.amountA) {\r\n                        saleTokenAmt = buyOrderToFill.amountA;\r\n                    }\r\n\r\n                    //Verify current balance\r\n                    require(\r\n                        wallet.balanceOf(\r\n                            buyOrderToFill.tokenB,\r\n                            buyOrderToFill.user\r\n                        ) >= (saleTokenAmt.mul(sellOrder.rate)).div(decimals),\r\n                        \"Insufficient Buyer Token Balance\"\r\n                    );\r\n                    require(\r\n                        wallet.balanceOf(_token, sellOrder.user) >=\r\n                            saleTokenAmt,\r\n                        \"Insufficient Seller Token Balance\"\r\n                    );\r\n\r\n                    //update orders\r\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\r\n                        sellOrder.rate,\r\n                        saleTokenAmt\r\n                    );\r\n                    fillOrder(Side.BUY, _id, _token, fillOrderValues);\r\n                    fillOrder(Side.SELL, sellOrder.id, _token, fillOrderValues);\r\n                }\r\n\r\n                bool orderExist = orderExists(_id, side, _token);\r\n                if (!orderExist) break;\r\n            }\r\n        } else if (side == Side.SELL) {\r\n            //Retrieve buy order to match\r\n            _Order[] memory _buyOrder = s_orderBook[_token][0];\r\n            for (uint256 i = 0; i < _buyOrder.length; i++) {\r\n                //Retrieve sell order to be filled\r\n                (_Order memory sellOrderToFill, ) = getOrderFromArray(\r\n                    _token,\r\n                    1,\r\n                    _id\r\n                );\r\n                //sell order hit buyer's limit price\r\n                if (\r\n                    _buyOrder[i].rate >= sellOrderToFill.rate &&\r\n                    _buyOrder[i].tokenB == sellOrderToFill.tokenB\r\n                ) {\r\n                    _Order memory order = _buyOrder[i];\r\n\r\n                    //if seller's amount to sell > buyer's amount to buy\r\n                    if (sellOrderToFill.amountA > order.amountA) {\r\n                        saleTokenAmt = order.amountA;\r\n                    }\r\n                    //if buyer's amount to buy > seller's amount to sell\r\n                    else if (sellOrderToFill.amountA <= order.amountA) {\r\n                        saleTokenAmt = sellOrderToFill.amountA;\r\n                    }\r\n                    //Verify current balance\r\n                    require(\r\n                        wallet.balanceOf(_token, sellOrderToFill.user) >=\r\n                            saleTokenAmt,\r\n                        \"Insufficient Seller Token Balance\"\r\n                    );\r\n                    require(\r\n                        wallet.balanceOf(order.tokenB, order.user) >=\r\n                            (saleTokenAmt.mul(order.rate)).div(decimals),\r\n                        \"Insufficient Buyer Token Balance\"\r\n                    );\r\n\r\n                    //update orders\r\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\r\n                        order.rate,\r\n                        saleTokenAmt\r\n                    );\r\n                    fillOrder(Side.SELL, _id, _token, fillOrderValues);\r\n                    fillOrder(Side.BUY, order.id, _token, fillOrderValues);\r\n                }\r\n                bool orderExist = orderExists(_id, side, _token);\r\n                if (!orderExist) break;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getOrderLength(\r\n        Side side,\r\n        address _token\r\n    ) public view returns (uint256) {\r\n        return s_orderBook[_token][uint256(side)].length;\r\n    }\r\n\r\n    // function getOrder(\r\n    //     address _token,\r\n    //     uint256 index,\r\n    //     Side side\r\n    // )\r\n    //     public\r\n    //     view\r\n    //     returns (\r\n    //         uint256, //id\r\n    //         uint256, //Side\r\n    //         address, //user\r\n    //         address, //tokenA\r\n    //         uint256, //amountA\r\n    //         address, //tokenB\r\n    //         uint256, //amountB\r\n    //         uint256, //rate -> TokenB/TokenA\r\n    //         uint256, //originalAmountA\r\n    //         uint256, //originalAmountB\r\n    //         bool //feesWaived enabled\r\n    //     )\r\n    // {\r\n    //     _Order memory order = s_orderBook[_token][uint256(side)][index];\r\n    //     return (\r\n    //         order.id,\r\n    //         uint256(order.side),\r\n    //         order.user,\r\n    //         order.tokenA,\r\n    //         order.amountA,\r\n    //         order.tokenB,\r\n    //         order.amountB,\r\n    //         order.rate,\r\n    //         order.originalAmountA,\r\n    //         order.originalAmountB,\r\n    //         order.waiveFees\r\n    //     );\r\n    // }\r\n\r\n    function getFilledOrderLength(\r\n        address _user,\r\n        Side side\r\n    ) public view returns (uint256) {\r\n        return s_filledOrders[_user][uint256(side)].length;\r\n    }\r\n\r\n    // function getFilledOrder(\r\n    //     address _user,\r\n    //     Side side,\r\n    //     uint256 index\r\n    // )\r\n    //     public\r\n    //     view\r\n    //     returns (\r\n    //         uint256, //id\r\n    //         uint256, //side\r\n    //         address, //user\r\n    //         address, //tokenA\r\n    //         address, //tokenB\r\n    //         uint256, //amountFilled\r\n    //         uint256, //fillRate\r\n    //         uint256, //originalRate\r\n    //         uint256, //originalAmountA\r\n    //         uint256, //originalAmountB\r\n    //         bool, //feesWaived\r\n    //         uint256 //feesPaid\r\n    //     )\r\n    // {\r\n    //     _filledOrder memory filledOrder = s_filledOrders[_user][uint256(side)][\r\n    //         index\r\n    //     ];\r\n    //     return (\r\n    //         filledOrder.id,\r\n    //         uint256(filledOrder.side),\r\n    //         filledOrder.user,\r\n    //         filledOrder.tokenA,\r\n    //         filledOrder.tokenB,\r\n    //         filledOrder.amountFilled,\r\n    //         filledOrder.fillRate,\r\n    //         filledOrder.originalRate,\r\n    //         filledOrder.originalAmountA,\r\n    //         filledOrder.originalAmountB,\r\n    //         filledOrder.feesWaived,\r\n    //         filledOrder.feesPaid\r\n    //     );\r\n    // }\r\n\r\n    function getOrderFromArray(\r\n        address _token,\r\n        uint256 side,\r\n        uint256 _id\r\n    ) public view returns (_Order memory, uint256) {\r\n        uint256 i = 0;\r\n        _Order[] memory _order = s_orderBook[_token][side];\r\n        _Order memory order;\r\n        for (i; i < _order.length; i++) {\r\n            if (_order[i].id == _id) {\r\n                order = _order[i];\r\n                break;\r\n            }\r\n        }\r\n        return (order, i);\r\n    }\r\n\r\n    function orderExists(\r\n        uint256 _id,\r\n        Side side,\r\n        address _token\r\n    ) public view returns (bool) {\r\n        _Order[] memory orders = s_orderBook[_token][uint256(side)];\r\n\r\n        for (uint256 i = 0; i < orders.length; i++) {\r\n            if (orders[i].id == _id) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function addToken(address _token, uint256 _decimals) public onlyOwner {\r\n        require(!isVerifiedToken(_token), \"Token already verified\");\r\n        tokenList.push(_tokenInfo(_token, _decimals));\r\n    }\r\n\r\n    function isVerifiedToken(address _token) public view returns (bool) {\r\n        //uint256 size = tokenList.length;\r\n\r\n        for (uint256 i = 0; i < tokenList.length; i++) {\r\n            if (tokenList[i].add == _token) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function getTokenInfo(address _token) public view returns (uint256) {\r\n        for (uint256 i = 0; i < tokenList.length; i++) {\r\n            if (tokenList[i].add == _token) {\r\n                return tokenList[i].decimals;\r\n            }\r\n        }\r\n    }\r\n\r\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\r\n        wallet = Wallet(_Walletaddress);\r\n    }\r\n\r\n    function setPriceCheckerAddress(\r\n        address _PriceCheckeraddress\r\n    ) public onlyOwner {\r\n        priceChecker = PriceChecker(_PriceCheckeraddress);\r\n    }\r\n\r\n    function setTradingFees(address _tradingFees) public onlyOwner {\r\n        tradingFees = TradingFees(_tradingFees);\r\n    }\r\n\r\n    modifier validOrder(\r\n        uint256 _id,\r\n        Side side,\r\n        address _token\r\n    ) {\r\n        require(orderExists(_id, side, _token), \"Invalid Order ID\");\r\n        _;\r\n    }\r\n\r\n    modifier validToken(address _token) {\r\n        require(isVerifiedToken(_token), \"Token unavailable in DEX\");\r\n        _;\r\n    }\r\n}\r\n"},"contracts/interface/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    function allowance(\r\n        address owner,\r\n        address spender\r\n    ) external view returns (uint256 remaining);\r\n\r\n    function approve(\r\n        address spender,\r\n        uint256 value\r\n    ) external returns (bool success);\r\n\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    function decimals() external view returns (uint8 decimalPlaces);\r\n\r\n    function decreaseApproval(\r\n        address spender,\r\n        uint256 subtractedValue\r\n    ) external returns (bool success);\r\n\r\n    function increaseApproval(\r\n        address spender,\r\n        uint256 addedValue\r\n    ) external returns (bool success);\r\n\r\n    function name() external view returns (string memory tokenName);\r\n\r\n    function symbol() external view returns (string memory tokenSymbol);\r\n\r\n    function totalSupply() external view returns (uint256 totalTokensIssued);\r\n\r\n    function transfer(\r\n        address to,\r\n        uint256 value\r\n    ) external returns (bool success);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) external returns (bool success);\r\n}\r\n"},"contracts/PriceChecker.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract PriceChecker is Ownable {\r\n    _priceFeed[] public priceFeeds;\r\n\r\n    struct _priceFeed {\r\n        string name;\r\n        address token;\r\n        AggregatorV3Interface priceFeed;\r\n    }\r\n\r\n    //only using PriceFeeds pegged to USD\r\n    function addPriceFeed(\r\n        string memory _name,\r\n        address _token,\r\n        address _address\r\n    ) external onlyOwner {\r\n        _priceFeed[] memory pricefeed = priceFeeds;\r\n        bool isAdded = false;\r\n        for (uint256 i = 0; i < pricefeed.length; i++) {\r\n            if (\r\n                keccak256(abi.encodePacked(_name)) ==\r\n                keccak256(abi.encodePacked(pricefeed[i].name))\r\n            ) {\r\n                isAdded = true;\r\n                break;\r\n            }\r\n        }\r\n        require(!isAdded, \"Price Feed already added\");\r\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(_address);\r\n        priceFeeds.push(_priceFeed(_name, _token, priceFeed));\r\n    }\r\n\r\n    function getPriceFeed(\r\n        address _token\r\n    ) internal view returns (AggregatorV3Interface priceFeed) {\r\n        _priceFeed[] memory pricefeed = priceFeeds;\r\n\r\n        for (uint256 i = 0; i < pricefeed.length; i++) {\r\n            if (_token == pricefeed[i].token) {\r\n                return pricefeed[i].priceFeed;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getPrice(address _address) external view returns (uint256) {\r\n        AggregatorV3Interface priceFeed = getPriceFeed(_address);\r\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\r\n        return uint256(answer);\r\n    }\r\n}\r\n"},"contracts/TradingFees.sol":{"content":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./PriceChecker.sol\";\r\nimport \"./Wallet.sol\";\r\n\r\n/// @notice Library SafeMath used to prevent overflows and underflows\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract TradingFees is Ownable {\r\n    //When trading, have an option toggle to waive trading fees or not using deposited aETH\r\n    //Users have to first deposit aETH tokens into the Exchange contract to waive, aETH tokens are not for trading\r\n    //When a trade order goes through, trading fees of the trade fulfilled  = trade amount x trade price x 0.01,\r\n    //contract checks how much aETH is deposited and what is the value of aETH, if sufficient to waive fees fully, deduct balance in deposit\r\n    //and waive trading fees\r\n\r\n    using SafeMath for uint256; //for prevention of integer overflow\r\n\r\n    uint256 decimals = 10 ** 18;\r\n    address public daiToken =\r\n        address(0xBa8DCeD3512925e52FE67b1b5329187589072A55); //based on Aave contract\r\n    address public aDAI = address(0xADD98B0342e4094Ec32f3b67Ccfd3242C876ff7a); //based on Aave contract\r\n    PriceChecker priceFeed;\r\n    Wallet wallet;\r\n\r\n    constructor(address _priceCheckerAddress) {\r\n        priceFeed = PriceChecker(_priceCheckerAddress);\r\n    }\r\n\r\n    function calculateFees(\r\n        uint256 _amount,\r\n        uint256 _rate,\r\n        address _refToken\r\n    ) public view returns (uint256) {\r\n        //Calculated based on TokenB price, require actual price in 18dp\r\n        //trading fees is 0.1% of trade = 0.001\r\n        //moving up 18dp is 0.001 x 10**18 = 10**14\r\n        //have to fetch tokenPrice from PriceFeed\r\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8dp originally\r\n        uint256 value = (\r\n            ((_amount.mul(_rate)).div(decimals)).mul(priceOfToken.mul(10 ** 10))\r\n        ).div(decimals);\r\n        uint256 fees = value.div(10 ** 4);\r\n\r\n        return fees; //based on USD value\r\n    }\r\n\r\n    //Amount of DAI to deduct from fees\r\n    function amountaDAIToDeduct(uint256 _fees) public view returns (uint256) {\r\n        uint256 aDAI_Price = priceFeed.getPrice(daiToken); // in 8 decimals initially\r\n        uint256 amt = _fees.mul(decimals).div(aDAI_Price.mul(10 ** 10));\r\n        return uint256(amt);\r\n    }\r\n\r\n    //Amount of Tokens to deduct from fees\r\n    function amountTokensToDeduct(\r\n        address _refToken,\r\n        uint256 _fees\r\n    ) public view returns (uint256) {\r\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8decimals\r\n        uint256 amt = _fees.mul(decimals).div(priceOfToken.mul(10 ** 10));\r\n        return uint256(amt);\r\n    }\r\n\r\n    function checkSufficientaDAI(\r\n        uint256 _fees,\r\n        address _user\r\n    ) public view returns (bool) {\r\n        uint256 amtDAI = amountaDAIToDeduct(_fees);\r\n        uint256 balance = wallet.s_tokens(aDAI, _user);\r\n\r\n        return balance >= amtDAI;\r\n    }\r\n\r\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\r\n        wallet = Wallet(_Walletaddress);\r\n    }\r\n\r\n    function setPriceCheckerAddress(\r\n        address _PriceCheckeraddress\r\n    ) public onlyOwner {\r\n        priceFeed = PriceChecker(_PriceCheckeraddress);\r\n    }\r\n}\r\n"},"contracts/Wallet.sol":{"content":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./interface/IERC20.sol\";\r\nimport \"./Exchange.sol\";\r\n\r\n/// @notice Library SafeMath used to prevent overflows and underflows\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract Wallet is Ownable {\r\n    using SafeMath for uint256; //for prevention of integer overflow\r\n\r\n    address public immutable Owner;\r\n\r\n    //For prevention of reentrancy\r\n    bool private locked;\r\n\r\n    address public ethToken = address(0);\r\n\r\n    mapping(address => mapping(address => uint256)) public s_tokens; //tokenAdress -> msg.sender -> tokenAmt\r\n    mapping(address => mapping(address => uint256)) public lockedFunds;\r\n\r\n    Exchange exchange;\r\n    IERC20 token;\r\n\r\n    event Deposit(address token, address user, uint256 amount, uint256 balance);\r\n\r\n    /// @notice Event when amount withdrawn exchange\r\n    event Withdraw(\r\n        address token,\r\n        address user,\r\n        uint256 amount,\r\n        uint256 balance\r\n    );\r\n\r\n    constructor() {\r\n        Owner = msg.sender;\r\n    }\r\n\r\n    function depositETH() external payable {\r\n        updateBalance(ethToken, msg.sender, msg.value, true);\r\n\r\n        emit Deposit(\r\n            ethToken,\r\n            msg.sender,\r\n            msg.value,\r\n            balanceOf(ethToken, msg.sender)\r\n        );\r\n    }\r\n\r\n    function withdrawETH(uint256 _amount) external {\r\n        require(\r\n            balanceOf(ethToken, msg.sender).sub(\r\n                getlockedFunds(msg.sender, ethToken)\r\n            ) >= _amount,\r\n            \"Insufficient balance ETH to withdraw\"\r\n        );\r\n        require(!locked, \"Reentrant call detected!\");\r\n        locked = true;\r\n        updateBalance(ethToken, msg.sender, _amount, false);\r\n        locked = false;\r\n        (bool success, ) = msg.sender.call{value: _amount}(\"\");\r\n        require(success, \"failed to send amount\");\r\n\r\n        emit Withdraw(\r\n            ethToken,\r\n            msg.sender,\r\n            _amount,\r\n            balanceOf(ethToken, msg.sender)\r\n        );\r\n    }\r\n\r\n    //from and transferFrom is from ERC20 contract\r\n    //_token should be an ERC20 token\r\n    function depositToken(\r\n        address _token,\r\n        uint256 _amount,\r\n        uint256 _decimals\r\n    ) external {\r\n        require(_token != ethToken);\r\n        require(\r\n            exchange.isVerifiedToken(_token),\r\n            \"Token not verified on Exchange\"\r\n        );\r\n        //need to add a check to prove that it is an ERC20 token\r\n        token = IERC20(_token);\r\n\r\n        //Requires approval first\r\n        require(\r\n            token.transferFrom(msg.sender, address(this), _amount),\r\n            \"No Approval yet\"\r\n        );\r\n        uint256 decimals = 18;\r\n        if (_decimals == 18) {\r\n            updateBalance(_token, msg.sender, _amount, true);\r\n        } else\r\n            updateBalance(\r\n                _token,\r\n                msg.sender,\r\n                _amount.mul(10 ** decimals.sub(_decimals)),\r\n                true\r\n            );\r\n\r\n        emit Deposit(\r\n            _token,\r\n            msg.sender,\r\n            _amount,\r\n            balanceOf(_token, msg.sender)\r\n        );\r\n    }\r\n\r\n    function withdrawToken(\r\n        address _token,\r\n        uint256 _amount,\r\n        uint256 _decimals\r\n    ) external {\r\n        require(_token != ethToken);\r\n        require(\r\n            exchange.isVerifiedToken(_token),\r\n            \"Token not verified on Exchange\"\r\n        );\r\n\r\n        require(\r\n            balanceOf(_token, msg.sender).sub(\r\n                getlockedFunds(msg.sender, _token)\r\n            ) >= _amount,\r\n            \"Insufficient Tokens to withdraw\"\r\n        );\r\n        require(!locked, \"Reentrant call detected!\");\r\n        locked = true;\r\n\r\n        token = IERC20(_token);\r\n        uint256 decimals = 18;\r\n        if (_decimals == 18) {\r\n            updateBalance(_token, msg.sender, _amount, false);\r\n            require(token.transfer(msg.sender, _amount));\r\n        } else {\r\n            updateBalance(\r\n                _token,\r\n                msg.sender,\r\n                _amount.mul(10 ** decimals.sub(_decimals)),\r\n                false\r\n            );\r\n            require(\r\n                token.transfer(\r\n                    msg.sender,\r\n                    _amount.div(10 ** decimals.sub(_decimals))\r\n                )\r\n            );\r\n        }\r\n\r\n        locked = false;\r\n        emit Withdraw(\r\n            _token,\r\n            msg.sender,\r\n            _amount,\r\n            balanceOf(_token, msg.sender)\r\n        );\r\n    }\r\n\r\n    function getlockedFunds(\r\n        address _user,\r\n        address _token\r\n    ) public view returns (uint256) {\r\n        return lockedFunds[_user][_token];\r\n    }\r\n\r\n    function updateLockedFunds(\r\n        address _user,\r\n        address _token,\r\n        uint256 _amount,\r\n        bool isAdd\r\n    ) public isAuthorised {\r\n        if (isAdd) {\r\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].add(\r\n                _amount\r\n            );\r\n        } else if (!isAdd) {\r\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].sub(\r\n                _amount\r\n            );\r\n        }\r\n    }\r\n\r\n    //balance of specific tokens in the dex owned by specific user\r\n    function balanceOf(\r\n        address _token,\r\n        address _user\r\n    ) public view returns (uint256) {\r\n        return s_tokens[_token][_user];\r\n    }\r\n\r\n    function updateBalance(\r\n        address _token,\r\n        address _user,\r\n        uint256 _amount,\r\n        bool isAdd\r\n    ) public isAuthorised {\r\n        if (isAdd) {\r\n            s_tokens[_token][_user] = s_tokens[_token][_user].add(_amount);\r\n        } else if (!isAdd) {\r\n            s_tokens[_token][_user] = s_tokens[_token][_user].sub(_amount);\r\n        }\r\n    }\r\n\r\n    function updateExchangeAddress(address _exchangeAddress) public onlyOwner {\r\n        exchange = Exchange(_exchangeAddress);\r\n    }\r\n\r\n    modifier isAuthorised() {\r\n        require(\r\n            msg.sender == address(this) || msg.sender == address(exchange),\r\n            \"Unauthorised Function Call\"\r\n        );\r\n        _;\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"6321","formattedMessage":"Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> contracts/Exchange.sol:696:64:\n    |\n696 |     function getTokenInfo(address _token) public view returns (uint256) {\n    |                                                                ^^^^^^^\n\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":21791,"file":"contracts/Exchange.sol","start":21784},"type":"Warning"}],"sources":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","exportedSymbols":{"AggregatorV3Interface":[45]},"id":46,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":45,"linearizedBaseContracts":[45],"name":"AggregatorV3Interface","nameLocation":"67:21:0","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":6,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"102:8:0","nodeType":"FunctionDefinition","parameters":{"id":2,"nodeType":"ParameterList","parameters":[],"src":"110:2:0"},"returnParameters":{"id":5,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6,"src":"136:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3,"name":"uint8","nodeType":"ElementaryTypeName","src":"136:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"135:7:0"},"scope":45,"src":"93:50:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7284e416","id":11,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"156:11:0","nodeType":"FunctionDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[],"src":"167:2:0"},"returnParameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11,"src":"193:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8,"name":"string","nodeType":"ElementaryTypeName","src":"193:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"192:15:0"},"scope":45,"src":"147:61:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":16,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"221:7:0","nodeType":"FunctionDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"228:2:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16,"src":"254:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"254:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"253:9:0"},"scope":45,"src":"212:51:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a6fc8f5","id":31,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"276:12:0","nodeType":"FunctionDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18,"mutability":"mutable","name":"_roundId","nameLocation":"296:8:0","nodeType":"VariableDeclaration","scope":31,"src":"289:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":17,"name":"uint80","nodeType":"ElementaryTypeName","src":"289:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"288:17:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"roundId","nameLocation":"355:7:0","nodeType":"VariableDeclaration","scope":31,"src":"348:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":20,"name":"uint80","nodeType":"ElementaryTypeName","src":"348:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":23,"mutability":"mutable","name":"answer","nameLocation":"377:6:0","nodeType":"VariableDeclaration","scope":31,"src":"370:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":22,"name":"int256","nodeType":"ElementaryTypeName","src":"370:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25,"mutability":"mutable","name":"startedAt","nameLocation":"399:9:0","nodeType":"VariableDeclaration","scope":31,"src":"391:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24,"name":"uint256","nodeType":"ElementaryTypeName","src":"391:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"updatedAt","nameLocation":"424:9:0","nodeType":"VariableDeclaration","scope":31,"src":"416:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26,"name":"uint256","nodeType":"ElementaryTypeName","src":"416:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29,"mutability":"mutable","name":"answeredInRound","nameLocation":"448:15:0","nodeType":"VariableDeclaration","scope":31,"src":"441:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":28,"name":"uint80","nodeType":"ElementaryTypeName","src":"441:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"340:129:0"},"scope":45,"src":"267:203:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":44,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"483:15:0","nodeType":"FunctionDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[],"src":"498:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"roundId","nameLocation":"550:7:0","nodeType":"VariableDeclaration","scope":44,"src":"543:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":33,"name":"uint80","nodeType":"ElementaryTypeName","src":"543:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":36,"mutability":"mutable","name":"answer","nameLocation":"572:6:0","nodeType":"VariableDeclaration","scope":44,"src":"565:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":35,"name":"int256","nodeType":"ElementaryTypeName","src":"565:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":38,"mutability":"mutable","name":"startedAt","nameLocation":"594:9:0","nodeType":"VariableDeclaration","scope":44,"src":"586:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37,"name":"uint256","nodeType":"ElementaryTypeName","src":"586:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":40,"mutability":"mutable","name":"updatedAt","nameLocation":"619:9:0","nodeType":"VariableDeclaration","scope":44,"src":"611:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39,"name":"uint256","nodeType":"ElementaryTypeName","src":"611:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42,"mutability":"mutable","name":"answeredInRound","nameLocation":"643:15:0","nodeType":"VariableDeclaration","scope":44,"src":"636:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":41,"name":"uint80","nodeType":"ElementaryTypeName","src":"636:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"535:129:0"},"scope":45,"src":"474:191:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":46,"src":"57:610:0","usedErrors":[]}],"src":"32:636:0"},"id":0},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[180],"Ownable":[158]},"id":159,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":47,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":48,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":159,"sourceUnit":181,"src":"127:30:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":50,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":180,"src":"683:7:1"},"id":51,"nodeType":"InheritanceSpecifier","src":"683:7:1"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":49,"nodeType":"StructuredDocumentation","src":"159:494:1","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":158,"linearizedBaseContracts":[158,180],"name":"Ownable","nameLocation":"672:7:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":53,"mutability":"mutable","name":"_owner","nameLocation":"713:6:1","nodeType":"VariableDeclaration","scope":158,"src":"697:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":52,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":59,"name":"OwnershipTransferred","nameLocation":"732:20:1","nodeType":"EventDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:1","nodeType":"VariableDeclaration","scope":59,"src":"753:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":54,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":57,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:1","nodeType":"VariableDeclaration","scope":59,"src":"784:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:1"},"src":"726:84:1"},{"body":{"id":68,"nodeType":"Block","src":"926:49:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":64,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"955:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":63,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"936:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":67,"nodeType":"ExpressionStatement","src":"936:32:1"}]},"documentation":{"id":60,"nodeType":"StructuredDocumentation","src":"816:91:1","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":69,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":61,"nodeType":"ParameterList","parameters":[],"src":"923:2:1"},"returnParameters":{"id":62,"nodeType":"ParameterList","parameters":[],"src":"926:0:1"},"scope":158,"src":"912:63:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":76,"nodeType":"Block","src":"1084:41:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":72,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"1094:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":73,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":74,"nodeType":"ExpressionStatement","src":"1094:13:1"},{"id":75,"nodeType":"PlaceholderStatement","src":"1117:1:1"}]},"documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"981:77:1","text":" @dev Throws if called by any account other than the owner."},"id":77,"name":"onlyOwner","nameLocation":"1072:9:1","nodeType":"ModifierDefinition","parameters":{"id":71,"nodeType":"ParameterList","parameters":[],"src":"1081:2:1"},"src":"1063:62:1","virtual":false,"visibility":"internal"},{"body":{"id":85,"nodeType":"Block","src":"1256:30:1","statements":[{"expression":{"id":83,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"1273:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":82,"id":84,"nodeType":"Return","src":"1266:13:1"}]},"documentation":{"id":78,"nodeType":"StructuredDocumentation","src":"1131:65:1","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":86,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:1","nodeType":"FunctionDefinition","parameters":{"id":79,"nodeType":"ParameterList","parameters":[],"src":"1215:2:1"},"returnParameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":86,"src":"1247:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":80,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:1"},"scope":158,"src":"1201:85:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":99,"nodeType":"Block","src":"1404:85:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":91,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"1422:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":92,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":93,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"1433:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":94,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":96,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":90,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":97,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":98,"nodeType":"ExpressionStatement","src":"1414:68:1"}]},"documentation":{"id":87,"nodeType":"StructuredDocumentation","src":"1292:62:1","text":" @dev Throws if the sender is not the owner."},"id":100,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:1","nodeType":"FunctionDefinition","parameters":{"id":88,"nodeType":"ParameterList","parameters":[],"src":"1379:2:1"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"1404:0:1"},"scope":158,"src":"1359:130:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":113,"nodeType":"Block","src":"1885:47:1","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:1","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":106,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"1895:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":112,"nodeType":"ExpressionStatement","src":"1895:30:1"}]},"documentation":{"id":101,"nodeType":"StructuredDocumentation","src":"1495:331:1","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":114,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"1875:9:1"},"nodeType":"ModifierInvocation","src":"1875:9:1"}],"name":"renounceOwnership","nameLocation":"1840:17:1","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[],"src":"1857:2:1"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"1885:0:1"},"scope":158,"src":"1831:101:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":136,"nodeType":"Block","src":"2151:128:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":123,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2169:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":124,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:1","typeDescriptions":{}}},"id":127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":122,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":131,"nodeType":"ExpressionStatement","src":"2161:73:1"},{"expression":{"arguments":[{"id":133,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2263:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":132,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2244:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":135,"nodeType":"ExpressionStatement","src":"2244:28:1"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"1938:138:1","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":137,"implemented":true,"kind":"function","modifiers":[{"id":120,"kind":"modifierInvocation","modifierName":{"id":119,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"2141:9:1"},"nodeType":"ModifierInvocation","src":"2141:9:1"}],"name":"transferOwnership","nameLocation":"2090:17:1","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:1","nodeType":"VariableDeclaration","scope":137,"src":"2108:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":116,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:1"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[],"src":"2151:0:1"},"scope":158,"src":"2081:198:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":156,"nodeType":"Block","src":"2496:124:1","statements":[{"assignments":[144],"declarations":[{"constant":false,"id":144,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:1","nodeType":"VariableDeclaration","scope":156,"src":"2506:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":146,"initialValue":{"id":145,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"2525:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:1"},{"expression":{"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":147,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"2541:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":148,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2550:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":150,"nodeType":"ExpressionStatement","src":"2541:17:1"},{"eventCall":{"arguments":[{"id":152,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"2594:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":153,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2604:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":151,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"2573:20:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":155,"nodeType":"EmitStatement","src":"2568:45:1"}]},"documentation":{"id":138,"nodeType":"StructuredDocumentation","src":"2285:143:1","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":157,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:1","nodeType":"FunctionDefinition","parameters":{"id":141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:1","nodeType":"VariableDeclaration","scope":157,"src":"2461:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":139,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:1"},"returnParameters":{"id":142,"nodeType":"ParameterList","parameters":[],"src":"2496:0:1"},"scope":158,"src":"2433:187:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":159,"src":"654:1968:1","usedErrors":[]}],"src":"102:2521:1"},"id":1},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[180]},"id":181,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":160,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:2"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":161,"nodeType":"StructuredDocumentation","src":"111:496:2","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":180,"linearizedBaseContracts":[180],"name":"Context","nameLocation":"626:7:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":169,"nodeType":"Block","src":"702:34:2","statements":[{"expression":{"expression":{"id":166,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":165,"id":168,"nodeType":"Return","src":"712:17:2"}]},"id":170,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:2","nodeType":"FunctionDefinition","parameters":{"id":162,"nodeType":"ParameterList","parameters":[],"src":"659:2:2"},"returnParameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":170,"src":"693:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:2"},"scope":180,"src":"640:96:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":178,"nodeType":"Block","src":"809:32:2","statements":[{"expression":{"expression":{"id":175,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":174,"id":177,"nodeType":"Return","src":"819:15:2"}]},"id":179,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:2","nodeType":"FunctionDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[],"src":"759:2:2"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":179,"src":"793:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":172,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:2"},"scope":180,"src":"742:99:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":181,"src":"608:235:2","usedErrors":[]}],"src":"86:758:2"},"id":2},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","exportedSymbols":{"SafeMath":[492]},"id":493,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":182,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:3"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"285:196:3","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":492,"linearizedBaseContracts":[492],"name":"SafeMath","nameLocation":"490:8:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":214,"nodeType":"Block","src":"717:140:3","statements":[{"id":213,"nodeType":"UncheckedBlock","src":"727:124:3","statements":[{"assignments":[196],"declarations":[{"constant":false,"id":196,"mutability":"mutable","name":"c","nameLocation":"759:1:3","nodeType":"VariableDeclaration","scope":213,"src":"751:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":195,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":200,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":197,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"763:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":198,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"767:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"763:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"751:17:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":201,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"786:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":202,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"790:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"786:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":208,"nodeType":"IfStatement","src":"782:28:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"801:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"808:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":206,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"800:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":194,"id":207,"nodeType":"Return","src":"793:17:3"}},{"expression":{"components":[{"hexValue":"74727565","id":209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"832:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":210,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"838:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":211,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"831:9:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":194,"id":212,"nodeType":"Return","src":"824:16:3"}]}]},"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"505:131:3","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":215,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"650:6:3","nodeType":"FunctionDefinition","parameters":{"id":189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"a","nameLocation":"665:1:3","nodeType":"VariableDeclaration","scope":215,"src":"657:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":185,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":188,"mutability":"mutable","name":"b","nameLocation":"676:1:3","nodeType":"VariableDeclaration","scope":215,"src":"668:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":187,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:22:3"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":215,"src":"702:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":190,"name":"bool","nodeType":"ElementaryTypeName","src":"702:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":215,"src":"708:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":192,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:15:3"},"scope":492,"src":"641:216:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":242,"nodeType":"Block","src":"1078:113:3","statements":[{"id":241,"nodeType":"UncheckedBlock","src":"1088:97:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":227,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"1116:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":228,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"1120:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1116:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":234,"nodeType":"IfStatement","src":"1112:28:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1131:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":232,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1130:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":226,"id":233,"nodeType":"Return","src":"1123:17:3"}},{"expression":{"components":[{"hexValue":"74727565","id":235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1162:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":236,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"1168:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":237,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"1172:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1168:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":239,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1161:13:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":226,"id":240,"nodeType":"Return","src":"1154:20:3"}]}]},"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"863:134:3","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":243,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"1011:6:3","nodeType":"FunctionDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"a","nameLocation":"1026:1:3","nodeType":"VariableDeclaration","scope":243,"src":"1018:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":217,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":220,"mutability":"mutable","name":"b","nameLocation":"1037:1:3","nodeType":"VariableDeclaration","scope":243,"src":"1029:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":219,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:22:3"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":243,"src":"1063:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":222,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":243,"src":"1069:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1062:15:3"},"scope":492,"src":"1002:189:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":284,"nodeType":"Block","src":"1415:417:3","statements":[{"id":283,"nodeType":"UncheckedBlock","src":"1425:401:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":255,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"1683:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1683:6:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":262,"nodeType":"IfStatement","src":"1679:28:3","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1699:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1705:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":260,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1698:9:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":254,"id":261,"nodeType":"Return","src":"1691:16:3"}},{"assignments":[264],"declarations":[{"constant":false,"id":264,"mutability":"mutable","name":"c","nameLocation":"1729:1:3","nodeType":"VariableDeclaration","scope":283,"src":"1721:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":263,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":268,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":265,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"1733:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":266,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"1737:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1733:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1721:17:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":269,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"1756:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":270,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"1760:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":272,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"1765:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":278,"nodeType":"IfStatement","src":"1752:33:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1776:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":276,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1775:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":254,"id":277,"nodeType":"Return","src":"1768:17:3"}},{"expression":{"components":[{"hexValue":"74727565","id":279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1807:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":280,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"1813:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":281,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1806:9:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":254,"id":282,"nodeType":"Return","src":"1799:16:3"}]}]},"documentation":{"id":244,"nodeType":"StructuredDocumentation","src":"1197:137:3","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":285,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1348:6:3","nodeType":"FunctionDefinition","parameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":246,"mutability":"mutable","name":"a","nameLocation":"1363:1:3","nodeType":"VariableDeclaration","scope":285,"src":"1355:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":245,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":248,"mutability":"mutable","name":"b","nameLocation":"1374:1:3","nodeType":"VariableDeclaration","scope":285,"src":"1366:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":247,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:22:3"},"returnParameters":{"id":254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":285,"src":"1400:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":250,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":285,"src":"1406:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":252,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:15:3"},"scope":492,"src":"1339:493:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":312,"nodeType":"Block","src":"2057:114:3","statements":[{"id":311,"nodeType":"UncheckedBlock","src":"2067:98:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":297,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"2095:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2095:6:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":304,"nodeType":"IfStatement","src":"2091:29:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2111:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":302,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2110:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":296,"id":303,"nodeType":"Return","src":"2103:17:3"}},{"expression":{"components":[{"hexValue":"74727565","id":305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2142:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":306,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"2148:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":307,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"2152:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2148:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":309,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2141:13:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":296,"id":310,"nodeType":"Return","src":"2134:20:3"}]}]},"documentation":{"id":286,"nodeType":"StructuredDocumentation","src":"1838:138:3","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":313,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1990:6:3","nodeType":"FunctionDefinition","parameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":288,"mutability":"mutable","name":"a","nameLocation":"2005:1:3","nodeType":"VariableDeclaration","scope":313,"src":"1997:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":287,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":290,"mutability":"mutable","name":"b","nameLocation":"2016:1:3","nodeType":"VariableDeclaration","scope":313,"src":"2008:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":289,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:22:3"},"returnParameters":{"id":296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":313,"src":"2042:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":292,"name":"bool","nodeType":"ElementaryTypeName","src":"2042:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":313,"src":"2048:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":294,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2041:15:3"},"scope":492,"src":"1981:190:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":340,"nodeType":"Block","src":"2406:114:3","statements":[{"id":339,"nodeType":"UncheckedBlock","src":"2416:98:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":325,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"2444:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2449:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2444:6:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":332,"nodeType":"IfStatement","src":"2440:29:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2460:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2467:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":330,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2459:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":324,"id":331,"nodeType":"Return","src":"2452:17:3"}},{"expression":{"components":[{"hexValue":"74727565","id":333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2491:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":334,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"2497:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":335,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"2501:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2497:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":337,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2490:13:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":324,"id":338,"nodeType":"Return","src":"2483:20:3"}]}]},"documentation":{"id":314,"nodeType":"StructuredDocumentation","src":"2177:148:3","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":341,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2339:6:3","nodeType":"FunctionDefinition","parameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":316,"mutability":"mutable","name":"a","nameLocation":"2354:1:3","nodeType":"VariableDeclaration","scope":341,"src":"2346:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":315,"name":"uint256","nodeType":"ElementaryTypeName","src":"2346:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":318,"mutability":"mutable","name":"b","nameLocation":"2365:1:3","nodeType":"VariableDeclaration","scope":341,"src":"2357:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":317,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2345:22:3"},"returnParameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":341,"src":"2391:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":320,"name":"bool","nodeType":"ElementaryTypeName","src":"2391:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":341,"src":"2397:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":322,"name":"uint256","nodeType":"ElementaryTypeName","src":"2397:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2390:15:3"},"scope":492,"src":"2330:190:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":355,"nodeType":"Block","src":"2822:29:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":351,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"2839:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":352,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"2843:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":350,"id":354,"nodeType":"Return","src":"2832:12:3"}]},"documentation":{"id":342,"nodeType":"StructuredDocumentation","src":"2526:224:3","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":356,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"2764:3:3","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"a","nameLocation":"2776:1:3","nodeType":"VariableDeclaration","scope":356,"src":"2768:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":343,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":346,"mutability":"mutable","name":"b","nameLocation":"2787:1:3","nodeType":"VariableDeclaration","scope":356,"src":"2779:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":345,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2767:22:3"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":356,"src":"2813:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":348,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2812:9:3"},"scope":492,"src":"2755:96:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":370,"nodeType":"Block","src":"3189:29:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":366,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"3206:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":367,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"3210:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3206:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":365,"id":369,"nodeType":"Return","src":"3199:12:3"}]},"documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"2857:260:3","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":371,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3131:3:3","nodeType":"FunctionDefinition","parameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"a","nameLocation":"3143:1:3","nodeType":"VariableDeclaration","scope":371,"src":"3135:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":358,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":361,"mutability":"mutable","name":"b","nameLocation":"3154:1:3","nodeType":"VariableDeclaration","scope":371,"src":"3146:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":360,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3134:22:3"},"returnParameters":{"id":365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":371,"src":"3180:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":363,"name":"uint256","nodeType":"ElementaryTypeName","src":"3180:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3179:9:3"},"scope":492,"src":"3122:96:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":385,"nodeType":"Block","src":"3532:29:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":381,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"3549:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":382,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"3553:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3549:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":380,"id":384,"nodeType":"Return","src":"3542:12:3"}]},"documentation":{"id":372,"nodeType":"StructuredDocumentation","src":"3224:236:3","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":386,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"3474:3:3","nodeType":"FunctionDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"a","nameLocation":"3486:1:3","nodeType":"VariableDeclaration","scope":386,"src":"3478:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":373,"name":"uint256","nodeType":"ElementaryTypeName","src":"3478:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"b","nameLocation":"3497:1:3","nodeType":"VariableDeclaration","scope":386,"src":"3489:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":375,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3477:22:3"},"returnParameters":{"id":380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":386,"src":"3523:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":378,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:3"},"scope":492,"src":"3465:96:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":400,"nodeType":"Block","src":"3917:29:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":396,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"3934:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":397,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"3938:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3934:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":395,"id":399,"nodeType":"Return","src":"3927:12:3"}]},"documentation":{"id":387,"nodeType":"StructuredDocumentation","src":"3567:278:3","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":401,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3859:3:3","nodeType":"FunctionDefinition","parameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":389,"mutability":"mutable","name":"a","nameLocation":"3871:1:3","nodeType":"VariableDeclaration","scope":401,"src":"3863:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":388,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":391,"mutability":"mutable","name":"b","nameLocation":"3882:1:3","nodeType":"VariableDeclaration","scope":401,"src":"3874:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":390,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3862:22:3"},"returnParameters":{"id":395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":401,"src":"3908:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":393,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:9:3"},"scope":492,"src":"3850:96:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"4466:29:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":411,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"4483:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":412,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"4487:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4483:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":410,"id":414,"nodeType":"Return","src":"4476:12:3"}]},"documentation":{"id":402,"nodeType":"StructuredDocumentation","src":"3952:442:3","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"4408:3:3","nodeType":"FunctionDefinition","parameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":404,"mutability":"mutable","name":"a","nameLocation":"4420:1:3","nodeType":"VariableDeclaration","scope":416,"src":"4412:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":403,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":406,"mutability":"mutable","name":"b","nameLocation":"4431:1:3","nodeType":"VariableDeclaration","scope":416,"src":"4423:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":405,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4411:22:3"},"returnParameters":{"id":410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":416,"src":"4457:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":408,"name":"uint256","nodeType":"ElementaryTypeName","src":"4457:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4456:9:3"},"scope":492,"src":"4399:96:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":440,"nodeType":"Block","src":"5084:106:3","statements":[{"id":439,"nodeType":"UncheckedBlock","src":"5094:90:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":429,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"5126:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":430,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"5131:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5126:6:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":432,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"5134:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":428,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5118:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5118:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":434,"nodeType":"ExpressionStatement","src":"5118:29:3"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":435,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"5168:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":436,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"5172:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5168:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":427,"id":438,"nodeType":"Return","src":"5161:12:3"}]}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"4501:453:3","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":441,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"4968:3:3","nodeType":"FunctionDefinition","parameters":{"id":424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":419,"mutability":"mutable","name":"a","nameLocation":"4989:1:3","nodeType":"VariableDeclaration","scope":441,"src":"4981:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":418,"name":"uint256","nodeType":"ElementaryTypeName","src":"4981:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":421,"mutability":"mutable","name":"b","nameLocation":"5008:1:3","nodeType":"VariableDeclaration","scope":441,"src":"5000:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":420,"name":"uint256","nodeType":"ElementaryTypeName","src":"5000:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":423,"mutability":"mutable","name":"errorMessage","nameLocation":"5033:12:3","nodeType":"VariableDeclaration","scope":441,"src":"5019:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":422,"name":"string","nodeType":"ElementaryTypeName","src":"5019:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4971:80:3"},"returnParameters":{"id":427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":441,"src":"5075:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":425,"name":"uint256","nodeType":"ElementaryTypeName","src":"5075:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5074:9:3"},"scope":492,"src":"4959:231:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":465,"nodeType":"Block","src":"5799:105:3","statements":[{"id":464,"nodeType":"UncheckedBlock","src":"5809:89:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":454,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"5841:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5845:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5841:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":457,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"5848:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":453,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5833:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5833:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":459,"nodeType":"ExpressionStatement","src":"5833:28:3"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":460,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"5882:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":461,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"5886:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5882:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":452,"id":463,"nodeType":"Return","src":"5875:12:3"}]}]},"documentation":{"id":442,"nodeType":"StructuredDocumentation","src":"5196:473:3","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":466,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5683:3:3","nodeType":"FunctionDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":444,"mutability":"mutable","name":"a","nameLocation":"5704:1:3","nodeType":"VariableDeclaration","scope":466,"src":"5696:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":443,"name":"uint256","nodeType":"ElementaryTypeName","src":"5696:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":446,"mutability":"mutable","name":"b","nameLocation":"5723:1:3","nodeType":"VariableDeclaration","scope":466,"src":"5715:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":445,"name":"uint256","nodeType":"ElementaryTypeName","src":"5715:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":448,"mutability":"mutable","name":"errorMessage","nameLocation":"5748:12:3","nodeType":"VariableDeclaration","scope":466,"src":"5734:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":447,"name":"string","nodeType":"ElementaryTypeName","src":"5734:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5686:80:3"},"returnParameters":{"id":452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":466,"src":"5790:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":450,"name":"uint256","nodeType":"ElementaryTypeName","src":"5790:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5789:9:3"},"scope":492,"src":"5674:230:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":490,"nodeType":"Block","src":"6675:105:3","statements":[{"id":489,"nodeType":"UncheckedBlock","src":"6685:89:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":479,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"6717:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6721:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6717:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":482,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"6724:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":478,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6709:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6709:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":484,"nodeType":"ExpressionStatement","src":"6709:28:3"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":485,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"6758:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":486,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"6762:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6758:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":477,"id":488,"nodeType":"Return","src":"6751:12:3"}]}]},"documentation":{"id":467,"nodeType":"StructuredDocumentation","src":"5910:635:3","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":491,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"6559:3:3","nodeType":"FunctionDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":469,"mutability":"mutable","name":"a","nameLocation":"6580:1:3","nodeType":"VariableDeclaration","scope":491,"src":"6572:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":468,"name":"uint256","nodeType":"ElementaryTypeName","src":"6572:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":471,"mutability":"mutable","name":"b","nameLocation":"6599:1:3","nodeType":"VariableDeclaration","scope":491,"src":"6591:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":470,"name":"uint256","nodeType":"ElementaryTypeName","src":"6591:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":473,"mutability":"mutable","name":"errorMessage","nameLocation":"6624:12:3","nodeType":"VariableDeclaration","scope":491,"src":"6610:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":472,"name":"string","nodeType":"ElementaryTypeName","src":"6610:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6562:80:3"},"returnParameters":{"id":477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":491,"src":"6666:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":475,"name":"uint256","nodeType":"ElementaryTypeName","src":"6666:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6665:9:3"},"scope":492,"src":"6550:230:3","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":493,"src":"482:6300:3","usedErrors":[]}],"src":"107:6676:3"},"id":3},"contracts/Exchange.sol":{"ast":{"absolutePath":"contracts/Exchange.sol","exportedSymbols":{"AggregatorV3Interface":[45],"Context":[180],"Exchange":[2236],"IERC20":[3285],"Ownable":[158],"PriceChecker":[2405],"SafeMath":[492],"TradingFees":[2635],"Wallet":[3199]},"id":2237,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":494,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"35:23:4"},{"absolutePath":"contracts/PriceChecker.sol","file":"./PriceChecker.sol","id":495,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2237,"sourceUnit":2406,"src":"62:28:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/TradingFees.sol","file":"./TradingFees.sol","id":496,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2237,"sourceUnit":2636,"src":"92:27:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":497,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2237,"sourceUnit":493,"src":"194:57:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":498,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2237,"sourceUnit":46,"src":"253:76:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":499,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2237,"sourceUnit":159,"src":"331:52:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":500,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":158,"src":"408:7:4"},"id":501,"nodeType":"InheritanceSpecifier","src":"408:7:4"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2236,"linearizedBaseContracts":[2236,158,180],"name":"Exchange","nameLocation":"396:8:4","nodeType":"ContractDefinition","nodes":[{"id":504,"libraryName":{"id":502,"name":"SafeMath","nodeType":"IdentifierPath","referencedDeclaration":492,"src":"429:8:4"},"nodeType":"UsingForDirective","src":"423:27:4","typeName":{"id":503,"name":"uint256","nodeType":"ElementaryTypeName","src":"442:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":507,"mutability":"mutable","name":"priceChecker","nameLocation":"506:12:4","nodeType":"VariableDeclaration","scope":2236,"src":"493:25:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2405","typeString":"contract PriceChecker"},"typeName":{"id":506,"nodeType":"UserDefinedTypeName","pathNode":{"id":505,"name":"PriceChecker","nodeType":"IdentifierPath","referencedDeclaration":2405,"src":"493:12:4"},"referencedDeclaration":2405,"src":"493:12:4","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2405","typeString":"contract PriceChecker"}},"visibility":"internal"},{"constant":false,"id":510,"mutability":"mutable","name":"tradingFees","nameLocation":"537:11:4","nodeType":"VariableDeclaration","scope":2236,"src":"525:23:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2635","typeString":"contract TradingFees"},"typeName":{"id":509,"nodeType":"UserDefinedTypeName","pathNode":{"id":508,"name":"TradingFees","nodeType":"IdentifierPath","referencedDeclaration":2635,"src":"525:11:4"},"referencedDeclaration":2635,"src":"525:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2635","typeString":"contract TradingFees"}},"visibility":"internal"},{"constant":false,"id":513,"mutability":"mutable","name":"wallet","nameLocation":"562:6:4","nodeType":"VariableDeclaration","scope":2236,"src":"555:13:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"},"typeName":{"id":512,"nodeType":"UserDefinedTypeName","pathNode":{"id":511,"name":"Wallet","nodeType":"IdentifierPath","referencedDeclaration":3199,"src":"555:6:4"},"referencedDeclaration":3199,"src":"555:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"visibility":"internal"},{"constant":false,"id":518,"mutability":"mutable","name":"decimals","nameLocation":"585:8:4","nodeType":"VariableDeclaration","scope":2236,"src":"577:27:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":514,"name":"uint256","nodeType":"ElementaryTypeName","src":"577:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"596:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"602:2:4","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"596:8:4","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"visibility":"internal"},{"constant":false,"functionSelector":"7bf1a627","id":524,"mutability":"mutable","name":"ethToken","nameLocation":"626:8:4","nodeType":"VariableDeclaration","scope":2236,"src":"611:36:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":519,"name":"address","nodeType":"ElementaryTypeName","src":"611:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"30","id":522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"645:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"637:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":520,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:4","typeDescriptions":{}}},"id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"637:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"9ead7222","id":528,"mutability":"mutable","name":"tokenList","nameLocation":"719:9:4","nodeType":"VariableDeclaration","scope":2236,"src":"699:29:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$555_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo[]"},"typeName":{"baseType":{"id":526,"nodeType":"UserDefinedTypeName","pathNode":{"id":525,"name":"_tokenInfo","nodeType":"IdentifierPath","referencedDeclaration":555,"src":"699:10:4"},"referencedDeclaration":555,"src":"699:10:4","typeDescriptions":{"typeIdentifier":"t_struct$__tokenInfo_$555_storage_ptr","typeString":"struct Exchange._tokenInfo"}},"id":527,"nodeType":"ArrayTypeName","src":"699:12:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$555_storage_$dyn_storage_ptr","typeString":"struct Exchange._tokenInfo[]"}},"visibility":"public"},{"constant":false,"functionSelector":"f9242d9a","id":536,"mutability":"mutable","name":"s_orderBook","nameLocation":"858:11:4","nodeType":"VariableDeclaration","scope":2236,"src":"802:67:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$584_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order[]))"},"typeName":{"id":535,"keyType":{"id":529,"name":"address","nodeType":"ElementaryTypeName","src":"810:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"802:48:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$584_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order[]))"},"valueType":{"id":534,"keyType":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"829:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"821:28:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$584_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order[])"},"valueType":{"baseType":{"id":532,"nodeType":"UserDefinedTypeName","pathNode":{"id":531,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":584,"src":"840:6:4"},"referencedDeclaration":584,"src":"840:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_storage_ptr","typeString":"struct Exchange._Order"}},"id":533,"nodeType":"ArrayTypeName","src":"840:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"}}}},"visibility":"public"},{"constant":false,"functionSelector":"bd8098ec","id":544,"mutability":"mutable","name":"s_filledOrders","nameLocation":"949:14:4","nodeType":"VariableDeclaration","scope":2236,"src":"878:85:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$610_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._filledOrder[]))"},"typeName":{"id":543,"keyType":{"id":537,"name":"address","nodeType":"ElementaryTypeName","src":"886:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"878:54:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$610_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._filledOrder[]))"},"valueType":{"id":542,"keyType":{"id":538,"name":"uint256","nodeType":"ElementaryTypeName","src":"905:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"897:34:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$610_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._filledOrder[])"},"valueType":{"baseType":{"id":540,"nodeType":"UserDefinedTypeName","pathNode":{"id":539,"name":"_filledOrder","nodeType":"IdentifierPath","referencedDeclaration":610,"src":"916:12:4"},"referencedDeclaration":610,"src":"916:12:4","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$610_storage_ptr","typeString":"struct Exchange._filledOrder"}},"id":541,"nodeType":"ArrayTypeName","src":"916:14:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__filledOrder_$610_storage_$dyn_storage_ptr","typeString":"struct Exchange._filledOrder[]"}}}},"visibility":"public"},{"constant":false,"functionSelector":"9c07ce26","id":547,"mutability":"mutable","name":"s_orderId","nameLocation":"987:9:4","nodeType":"VariableDeclaration","scope":2236,"src":"972:28:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":545,"name":"uint256","nodeType":"ElementaryTypeName","src":"972:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"999:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"id":550,"mutability":"mutable","name":"s_isManual","nameLocation":"1020:10:4","nodeType":"VariableDeclaration","scope":2236,"src":"1007:30:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":548,"name":"bool","nodeType":"ElementaryTypeName","src":"1007:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":{"hexValue":"74727565","id":549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1033:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"visibility":"private"},{"canonicalName":"Exchange._tokenInfo","id":555,"members":[{"constant":false,"id":552,"mutability":"mutable","name":"add","nameLocation":"1083:3:4","nodeType":"VariableDeclaration","scope":555,"src":"1075:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":551,"name":"address","nodeType":"ElementaryTypeName","src":"1075:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":554,"mutability":"mutable","name":"decimals","nameLocation":"1105:8:4","nodeType":"VariableDeclaration","scope":555,"src":"1097:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":553,"name":"uint256","nodeType":"ElementaryTypeName","src":"1097:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"_tokenInfo","nameLocation":"1053:10:4","nodeType":"StructDefinition","scope":2236,"src":"1046:75:4","visibility":"public"},{"canonicalName":"Exchange._fillOrderValues","id":560,"members":[{"constant":false,"id":557,"mutability":"mutable","name":"rate","nameLocation":"1172:4:4","nodeType":"VariableDeclaration","scope":560,"src":"1164:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":556,"name":"uint256","nodeType":"ElementaryTypeName","src":"1164:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"amount","nameLocation":"1195:6:4","nodeType":"VariableDeclaration","scope":560,"src":"1187:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":558,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"_fillOrderValues","nameLocation":"1136:16:4","nodeType":"StructDefinition","scope":2236,"src":"1129:80:4","visibility":"public"},{"canonicalName":"Exchange._Order","id":584,"members":[{"constant":false,"id":562,"mutability":"mutable","name":"id","nameLocation":"1371:2:4","nodeType":"VariableDeclaration","scope":584,"src":"1363:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"1363:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":565,"mutability":"mutable","name":"side","nameLocation":"1389:4:4","nodeType":"VariableDeclaration","scope":584,"src":"1384:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"},"typeName":{"id":564,"nodeType":"UserDefinedTypeName","pathNode":{"id":563,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":613,"src":"1384:4:4"},"referencedDeclaration":613,"src":"1384:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":567,"mutability":"mutable","name":"user","nameLocation":"1412:4:4","nodeType":"VariableDeclaration","scope":584,"src":"1404:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"1404:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":569,"mutability":"mutable","name":"tokenA","nameLocation":"1435:6:4","nodeType":"VariableDeclaration","scope":584,"src":"1427:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":568,"name":"address","nodeType":"ElementaryTypeName","src":"1427:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":571,"mutability":"mutable","name":"amountA","nameLocation":"1460:7:4","nodeType":"VariableDeclaration","scope":584,"src":"1452:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":570,"name":"uint256","nodeType":"ElementaryTypeName","src":"1452:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":573,"mutability":"mutable","name":"tokenB","nameLocation":"1486:6:4","nodeType":"VariableDeclaration","scope":584,"src":"1478:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":572,"name":"address","nodeType":"ElementaryTypeName","src":"1478:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":575,"mutability":"mutable","name":"amountB","nameLocation":"1511:7:4","nodeType":"VariableDeclaration","scope":584,"src":"1503:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":574,"name":"uint256","nodeType":"ElementaryTypeName","src":"1503:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":577,"mutability":"mutable","name":"rate","nameLocation":"1537:4:4","nodeType":"VariableDeclaration","scope":584,"src":"1529:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":576,"name":"uint256","nodeType":"ElementaryTypeName","src":"1529:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"originalAmountA","nameLocation":"1604:15:4","nodeType":"VariableDeclaration","scope":584,"src":"1596:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":578,"name":"uint256","nodeType":"ElementaryTypeName","src":"1596:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":581,"mutability":"mutable","name":"originalAmountB","nameLocation":"1638:15:4","nodeType":"VariableDeclaration","scope":584,"src":"1630:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":580,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":583,"mutability":"mutable","name":"waiveFees","nameLocation":"1669:9:4","nodeType":"VariableDeclaration","scope":584,"src":"1664:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":582,"name":"bool","nodeType":"ElementaryTypeName","src":"1664:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"_Order","nameLocation":"1345:6:4","nodeType":"StructDefinition","scope":2236,"src":"1338:348:4","visibility":"public"},{"canonicalName":"Exchange._filledOrder","id":610,"members":[{"constant":false,"id":586,"mutability":"mutable","name":"id","nameLocation":"1816:2:4","nodeType":"VariableDeclaration","scope":610,"src":"1808:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":585,"name":"uint256","nodeType":"ElementaryTypeName","src":"1808:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"side","nameLocation":"1834:4:4","nodeType":"VariableDeclaration","scope":610,"src":"1829:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"},"typeName":{"id":588,"nodeType":"UserDefinedTypeName","pathNode":{"id":587,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":613,"src":"1829:4:4"},"referencedDeclaration":613,"src":"1829:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":591,"mutability":"mutable","name":"user","nameLocation":"1857:4:4","nodeType":"VariableDeclaration","scope":610,"src":"1849:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"1849:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":593,"mutability":"mutable","name":"tokenA","nameLocation":"1880:6:4","nodeType":"VariableDeclaration","scope":610,"src":"1872:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"1872:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":595,"mutability":"mutable","name":"tokenB","nameLocation":"1905:6:4","nodeType":"VariableDeclaration","scope":610,"src":"1897:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":594,"name":"address","nodeType":"ElementaryTypeName","src":"1897:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":597,"mutability":"mutable","name":"amountFilled","nameLocation":"1930:12:4","nodeType":"VariableDeclaration","scope":610,"src":"1922:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":596,"name":"uint256","nodeType":"ElementaryTypeName","src":"1922:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":599,"mutability":"mutable","name":"fillRate","nameLocation":"1961:8:4","nodeType":"VariableDeclaration","scope":610,"src":"1953:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":598,"name":"uint256","nodeType":"ElementaryTypeName","src":"1953:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":601,"mutability":"mutable","name":"originalRate","nameLocation":"1988:12:4","nodeType":"VariableDeclaration","scope":610,"src":"1980:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":600,"name":"uint256","nodeType":"ElementaryTypeName","src":"1980:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":603,"mutability":"mutable","name":"originalAmountA","nameLocation":"2019:15:4","nodeType":"VariableDeclaration","scope":610,"src":"2011:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":602,"name":"uint256","nodeType":"ElementaryTypeName","src":"2011:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":605,"mutability":"mutable","name":"originalAmountB","nameLocation":"2053:15:4","nodeType":"VariableDeclaration","scope":610,"src":"2045:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":604,"name":"uint256","nodeType":"ElementaryTypeName","src":"2045:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":607,"mutability":"mutable","name":"feesWaived","nameLocation":"2084:10:4","nodeType":"VariableDeclaration","scope":610,"src":"2079:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":606,"name":"bool","nodeType":"ElementaryTypeName","src":"2079:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"feesPaid","nameLocation":"2113:8:4","nodeType":"VariableDeclaration","scope":610,"src":"2105:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"_filledOrder","nameLocation":"1784:12:4","nodeType":"StructDefinition","scope":2236,"src":"1777:370:4","visibility":"public"},{"canonicalName":"Exchange.Side","id":613,"members":[{"id":611,"name":"BUY","nameLocation":"2176:3:4","nodeType":"EnumValue","src":"2176:3:4"},{"id":612,"name":"SELL","nameLocation":"2190:4:4","nodeType":"EnumValue","src":"2190:4:4"}],"name":"Side","nameLocation":"2160:4:4","nodeType":"EnumDefinition","src":"2155:46:4"},{"anonymous":false,"documentation":{"id":614,"nodeType":"StructuredDocumentation","src":"2227:56:4","text":"@notice Event when an order is placed on an exchange"},"id":639,"name":"Order","nameLocation":"2295:5:4","nodeType":"EventDefinition","parameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"2319:2:4","nodeType":"VariableDeclaration","scope":639,"src":"2311:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":615,"name":"uint256","nodeType":"ElementaryTypeName","src":"2311:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":619,"indexed":false,"mutability":"mutable","name":"side","nameLocation":"2337:4:4","nodeType":"VariableDeclaration","scope":639,"src":"2332:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"},"typeName":{"id":618,"nodeType":"UserDefinedTypeName","pathNode":{"id":617,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":613,"src":"2332:4:4"},"referencedDeclaration":613,"src":"2332:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":621,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"2360:4:4","nodeType":"VariableDeclaration","scope":639,"src":"2352:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":620,"name":"address","nodeType":"ElementaryTypeName","src":"2352:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":623,"indexed":false,"mutability":"mutable","name":"tokenA","nameLocation":"2383:6:4","nodeType":"VariableDeclaration","scope":639,"src":"2375:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":622,"name":"address","nodeType":"ElementaryTypeName","src":"2375:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":625,"indexed":false,"mutability":"mutable","name":"amountA","nameLocation":"2408:7:4","nodeType":"VariableDeclaration","scope":639,"src":"2400:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":624,"name":"uint256","nodeType":"ElementaryTypeName","src":"2400:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":627,"indexed":false,"mutability":"mutable","name":"tokenB","nameLocation":"2434:6:4","nodeType":"VariableDeclaration","scope":639,"src":"2426:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":626,"name":"address","nodeType":"ElementaryTypeName","src":"2426:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":629,"indexed":false,"mutability":"mutable","name":"amountB","nameLocation":"2459:7:4","nodeType":"VariableDeclaration","scope":639,"src":"2451:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":628,"name":"uint256","nodeType":"ElementaryTypeName","src":"2451:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":631,"indexed":false,"mutability":"mutable","name":"rate","nameLocation":"2485:4:4","nodeType":"VariableDeclaration","scope":639,"src":"2477:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":630,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":633,"indexed":false,"mutability":"mutable","name":"originalAmountA","nameLocation":"2508:15:4","nodeType":"VariableDeclaration","scope":639,"src":"2500:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":632,"name":"uint256","nodeType":"ElementaryTypeName","src":"2500:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":635,"indexed":false,"mutability":"mutable","name":"originalAmountB","nameLocation":"2542:15:4","nodeType":"VariableDeclaration","scope":639,"src":"2534:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":634,"name":"uint256","nodeType":"ElementaryTypeName","src":"2534:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":637,"indexed":false,"mutability":"mutable","name":"waiveFees","nameLocation":"2573:9:4","nodeType":"VariableDeclaration","scope":639,"src":"2568:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":636,"name":"bool","nodeType":"ElementaryTypeName","src":"2568:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2300:289:4"},"src":"2289:301:4"},{"anonymous":false,"documentation":{"id":640,"nodeType":"StructuredDocumentation","src":"2598:44:4","text":"@notice Event when an order is cancelled"},"id":665,"name":"Cancel","nameLocation":"2654:6:4","nodeType":"EventDefinition","parameters":{"id":664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"2679:2:4","nodeType":"VariableDeclaration","scope":665,"src":"2671:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":641,"name":"uint256","nodeType":"ElementaryTypeName","src":"2671:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":645,"indexed":false,"mutability":"mutable","name":"side","nameLocation":"2697:4:4","nodeType":"VariableDeclaration","scope":665,"src":"2692:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"},"typeName":{"id":644,"nodeType":"UserDefinedTypeName","pathNode":{"id":643,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":613,"src":"2692:4:4"},"referencedDeclaration":613,"src":"2692:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":647,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"2720:4:4","nodeType":"VariableDeclaration","scope":665,"src":"2712:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":649,"indexed":false,"mutability":"mutable","name":"tokenA","nameLocation":"2743:6:4","nodeType":"VariableDeclaration","scope":665,"src":"2735:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"2735:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":651,"indexed":false,"mutability":"mutable","name":"amountA","nameLocation":"2768:7:4","nodeType":"VariableDeclaration","scope":665,"src":"2760:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":650,"name":"uint256","nodeType":"ElementaryTypeName","src":"2760:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":653,"indexed":false,"mutability":"mutable","name":"tokenB","nameLocation":"2794:6:4","nodeType":"VariableDeclaration","scope":665,"src":"2786:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":652,"name":"address","nodeType":"ElementaryTypeName","src":"2786:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":655,"indexed":false,"mutability":"mutable","name":"amountB","nameLocation":"2819:7:4","nodeType":"VariableDeclaration","scope":665,"src":"2811:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":654,"name":"uint256","nodeType":"ElementaryTypeName","src":"2811:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":657,"indexed":false,"mutability":"mutable","name":"rate","nameLocation":"2845:4:4","nodeType":"VariableDeclaration","scope":665,"src":"2837:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":656,"name":"uint256","nodeType":"ElementaryTypeName","src":"2837:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":659,"indexed":false,"mutability":"mutable","name":"originalAmountA","nameLocation":"2868:15:4","nodeType":"VariableDeclaration","scope":665,"src":"2860:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":658,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":661,"indexed":false,"mutability":"mutable","name":"originalAmountB","nameLocation":"2902:15:4","nodeType":"VariableDeclaration","scope":665,"src":"2894:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"2894:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":663,"indexed":false,"mutability":"mutable","name":"waiveFees","nameLocation":"2933:9:4","nodeType":"VariableDeclaration","scope":665,"src":"2928:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":662,"name":"bool","nodeType":"ElementaryTypeName","src":"2928:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2660:289:4"},"src":"2648:302:4"},{"anonymous":false,"id":678,"name":"fillBuyOrder","nameLocation":"2964:12:4","nodeType":"EventDefinition","parameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"indexed":false,"mutability":"mutable","name":"remainingOrder","nameLocation":"2994:14:4","nodeType":"VariableDeclaration","scope":678,"src":"2987:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":667,"nodeType":"UserDefinedTypeName","pathNode":{"id":666,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":584,"src":"2987:6:4"},"referencedDeclaration":584,"src":"2987:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},{"constant":false,"id":670,"indexed":false,"mutability":"mutable","name":"amountBought","nameLocation":"3027:12:4","nodeType":"VariableDeclaration","scope":678,"src":"3019:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"3019:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":672,"indexed":false,"mutability":"mutable","name":"fillBuyRate","nameLocation":"3058:11:4","nodeType":"VariableDeclaration","scope":678,"src":"3050:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":671,"name":"uint256","nodeType":"ElementaryTypeName","src":"3050:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":674,"indexed":false,"mutability":"mutable","name":"feesWaived","nameLocation":"3085:10:4","nodeType":"VariableDeclaration","scope":678,"src":"3080:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":673,"name":"bool","nodeType":"ElementaryTypeName","src":"3080:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":676,"indexed":false,"mutability":"mutable","name":"feesPaid","nameLocation":"3114:8:4","nodeType":"VariableDeclaration","scope":678,"src":"3106:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":675,"name":"uint256","nodeType":"ElementaryTypeName","src":"3106:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2976:153:4"},"src":"2958:172:4"},{"anonymous":false,"id":691,"name":"fillSellOrder","nameLocation":"3144:13:4","nodeType":"EventDefinition","parameters":{"id":690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"indexed":false,"mutability":"mutable","name":"remainingOrder","nameLocation":"3175:14:4","nodeType":"VariableDeclaration","scope":691,"src":"3168:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":680,"nodeType":"UserDefinedTypeName","pathNode":{"id":679,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":584,"src":"3168:6:4"},"referencedDeclaration":584,"src":"3168:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},{"constant":false,"id":683,"indexed":false,"mutability":"mutable","name":"amountSold","nameLocation":"3208:10:4","nodeType":"VariableDeclaration","scope":691,"src":"3200:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":682,"name":"uint256","nodeType":"ElementaryTypeName","src":"3200:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":685,"indexed":false,"mutability":"mutable","name":"fillSellRate","nameLocation":"3237:12:4","nodeType":"VariableDeclaration","scope":691,"src":"3229:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":684,"name":"uint256","nodeType":"ElementaryTypeName","src":"3229:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":687,"indexed":false,"mutability":"mutable","name":"feesWaived","nameLocation":"3265:10:4","nodeType":"VariableDeclaration","scope":691,"src":"3260:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":686,"name":"bool","nodeType":"ElementaryTypeName","src":"3260:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":689,"indexed":false,"mutability":"mutable","name":"feesPaid","nameLocation":"3294:8:4","nodeType":"VariableDeclaration","scope":691,"src":"3286:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":688,"name":"uint256","nodeType":"ElementaryTypeName","src":"3286:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3157:152:4"},"src":"3138:172:4"},{"body":{"id":718,"nodeType":"Block","src":"3385:139:4","statements":[{"expression":{"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":700,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"3396:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":702,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"3412:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":701,"name":"Wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"3405:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Wallet_$3199_$","typeString":"type(contract Wallet)"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3405:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"src":"3396:24:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"id":705,"nodeType":"ExpressionStatement","src":"3396:24:4"},{"expression":{"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":706,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3431:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2635","typeString":"contract TradingFees"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":708,"name":"_fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"3457:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":707,"name":"TradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"3445:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TradingFees_$2635_$","typeString":"type(contract TradingFees)"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3445:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2635","typeString":"contract TradingFees"}},"src":"3431:32:4","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2635","typeString":"contract TradingFees"}},"id":711,"nodeType":"ExpressionStatement","src":"3431:32:4"},{"expression":{"id":716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":712,"name":"priceChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"3474:12:4","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2405","typeString":"contract PriceChecker"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":714,"name":"_priceChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"3502:13:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":713,"name":"PriceChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"3489:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PriceChecker_$2405_$","typeString":"type(contract PriceChecker)"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3489:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2405","typeString":"contract PriceChecker"}},"src":"3474:42:4","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2405","typeString":"contract PriceChecker"}},"id":717,"nodeType":"ExpressionStatement","src":"3474:42:4"}]},"id":719,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"_wallet","nameLocation":"3338:7:4","nodeType":"VariableDeclaration","scope":719,"src":"3330:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"3330:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"_fees","nameLocation":"3355:5:4","nodeType":"VariableDeclaration","scope":719,"src":"3347:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"3347:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"_priceChecker","nameLocation":"3370:13:4","nodeType":"VariableDeclaration","scope":719,"src":"3362:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":696,"name":"address","nodeType":"ElementaryTypeName","src":"3362:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3329:55:4"},"returnParameters":{"id":699,"nodeType":"ParameterList","parameters":[],"src":"3385:0:4"},"scope":2236,"src":"3318:206:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":820,"nodeType":"Block","src":"3799:1100:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"id":750,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3995:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3995:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":752,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"4007:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":748,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"3973:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getlockedFunds","nodeType":"MemberAccess","referencedDeclaration":3043,"src":"3973:21:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3973:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":743,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"3930:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":744,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3939:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3939:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":741,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"3913:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3110,"src":"3913:16:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3913:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":371,"src":"3913:41:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3913:117:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":755,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"4034:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3913:129:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742046756e6473","id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4057:20:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092","typeString":"literal_string \"Insufficient Funds\""},"value":"Insufficient Funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092","typeString":"literal_string \"Insufficient Funds\""}],"id":740,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3891:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3891:197:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":759,"nodeType":"ExpressionStatement","src":"3891:197:4"},{"expression":{"arguments":[{"expression":{"id":763,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4126:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4126:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":765,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"4138:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":766,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"4147:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4157:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":760,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"4101:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateLockedFunds","nodeType":"MemberAccess","referencedDeclaration":3094,"src":"4101:24:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4101:61:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":769,"nodeType":"ExpressionStatement","src":"4101:61:4"},{"expression":{"arguments":[{"arguments":[{"id":781,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"4259:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":782,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"4287:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$613_$","typeString":"type(enum Exchange.Side)"}},"id":783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":611,"src":"4287:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},{"expression":{"id":784,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4314:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4314:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":786,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"4343:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":787,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"4369:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":788,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"4396:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":789,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"4422:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":790,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"4449:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":791,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"4473:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":792,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"4500:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":793,"name":"_waiveFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"4527:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":780,"name":"_Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4234:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__Order_$584_storage_ptr_$","typeString":"type(struct Exchange._Order storage pointer)"}},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4234:318:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}],"expression":{"baseExpression":{"baseExpression":{"id":770,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"4175:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$584_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":777,"indexExpression":{"id":771,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"4187:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4175:20:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$584_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":778,"indexExpression":{"arguments":[{"expression":{"id":774,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"4204:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$613_$","typeString":"type(enum Exchange.Side)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":611,"src":"4204:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}],"id":773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4196:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":772,"name":"uint256","nodeType":"ElementaryTypeName","src":"4196:7:4","typeDescriptions":{}}},"id":776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4196:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4175:39:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"4175:44:4","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$__Order_$584_storage_$dyn_storage_ptr_$_t_struct$__Order_$584_storage_$returns$__$bound_to$_t_array$_t_struct$__Order_$584_storage_$dyn_storage_ptr_$","typeString":"function (struct Exchange._Order storage ref[] storage pointer,struct Exchange._Order storage ref)"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4175:388:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":796,"nodeType":"ExpressionStatement","src":"4175:388:4"},{"eventCall":{"arguments":[{"id":798,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"4601:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":799,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"4625:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$613_$","typeString":"type(enum Exchange.Side)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":611,"src":"4625:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},{"expression":{"id":801,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4648:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4648:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":803,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"4673:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":804,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"4695:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":805,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"4718:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":806,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"4740:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":807,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"4763:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":808,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"4783:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":809,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"4806:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":810,"name":"_waiveFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"4829:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":797,"name":"Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"4581:5:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_Side_$613_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,enum Exchange.Side,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4581:269:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":812,"nodeType":"EmitStatement","src":"4576:274:4"},{"expression":{"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":813,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"4863:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4889:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":814,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"4875:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":356,"src":"4875:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4875:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4863:28:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":819,"nodeType":"ExpressionStatement","src":"4863:28:4"}]},"functionSelector":"62c09cfa","id":821,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":734,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"3770:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":735,"kind":"modifierInvocation","modifierName":{"id":733,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":2235,"src":"3759:10:4"},"nodeType":"ModifierInvocation","src":"3759:19:4"},{"arguments":[{"id":737,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"3790:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":738,"kind":"modifierInvocation","modifierName":{"id":736,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":2235,"src":"3779:10:4"},"nodeType":"ModifierInvocation","src":"3779:19:4"}],"name":"createLimitBuyOrder","nameLocation":"3541:19:4","nodeType":"FunctionDefinition","parameters":{"id":732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":721,"mutability":"mutable","name":"_tokenA","nameLocation":"3605:7:4","nodeType":"VariableDeclaration","scope":821,"src":"3597:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"3597:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":723,"mutability":"mutable","name":"_amountA","nameLocation":"3631:8:4","nodeType":"VariableDeclaration","scope":821,"src":"3623:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":722,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":725,"mutability":"mutable","name":"_tokenB","nameLocation":"3658:7:4","nodeType":"VariableDeclaration","scope":821,"src":"3650:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"3650:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":727,"mutability":"mutable","name":"_amountB","nameLocation":"3684:8:4","nodeType":"VariableDeclaration","scope":821,"src":"3676:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":726,"name":"uint256","nodeType":"ElementaryTypeName","src":"3676:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":729,"mutability":"mutable","name":"_rate","nameLocation":"3711:5:4","nodeType":"VariableDeclaration","scope":821,"src":"3703:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":728,"name":"uint256","nodeType":"ElementaryTypeName","src":"3703:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":731,"mutability":"mutable","name":"_waiveFees","nameLocation":"3732:10:4","nodeType":"VariableDeclaration","scope":821,"src":"3727:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":730,"name":"bool","nodeType":"ElementaryTypeName","src":"3727:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3560:189:4"},"returnParameters":{"id":739,"nodeType":"ParameterList","parameters":[],"src":"3799:0:4"},"scope":2236,"src":"3532:1367:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":922,"nodeType":"Block","src":"5149:1169:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"id":852,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5362:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5362:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":854,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"5374:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":850,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"5340:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getlockedFunds","nodeType":"MemberAccess","referencedDeclaration":3043,"src":"5340:21:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5340:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":845,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"5297:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":846,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5306:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5306:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":843,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"5280:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3110,"src":"5280:16:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5280:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":371,"src":"5280:41:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5280:117:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":857,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"5401:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5280:129:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742046756e6473","id":859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5424:20:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092","typeString":"literal_string \"Insufficient Funds\""},"value":"Insufficient Funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092","typeString":"literal_string \"Insufficient Funds\""}],"id":842,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5258:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5258:197:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":861,"nodeType":"ExpressionStatement","src":"5258:197:4"},{"expression":{"arguments":[{"expression":{"id":865,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5542:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5542:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":867,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"5554:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":868,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"5563:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5573:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":862,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"5517:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateLockedFunds","nodeType":"MemberAccess","referencedDeclaration":3094,"src":"5517:24:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5517:61:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":871,"nodeType":"ExpressionStatement","src":"5517:61:4"},{"expression":{"arguments":[{"arguments":[{"id":883,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"5676:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":884,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"5704:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$613_$","typeString":"type(enum Exchange.Side)"}},"id":885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":612,"src":"5704:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},{"expression":{"id":886,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5732:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5732:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":888,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"5761:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":889,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"5787:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":890,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"5814:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":891,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"5840:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":892,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"5867:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":893,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"5891:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":894,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"5918:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":895,"name":"_waiveFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"5945:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":882,"name":"_Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"5651:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__Order_$584_storage_ptr_$","typeString":"type(struct Exchange._Order storage pointer)"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5651:319:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}],"expression":{"baseExpression":{"baseExpression":{"id":872,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"5591:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$584_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":879,"indexExpression":{"id":873,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"5603:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5591:20:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$584_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":880,"indexExpression":{"arguments":[{"expression":{"id":876,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"5620:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$613_$","typeString":"type(enum Exchange.Side)"}},"id":877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":612,"src":"5620:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}],"id":875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":874,"name":"uint256","nodeType":"ElementaryTypeName","src":"5612:7:4","typeDescriptions":{}}},"id":878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5612:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5591:40:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"5591:45:4","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$__Order_$584_storage_$dyn_storage_ptr_$_t_struct$__Order_$584_storage_$returns$__$bound_to$_t_array$_t_struct$__Order_$584_storage_$dyn_storage_ptr_$","typeString":"function (struct Exchange._Order storage ref[] storage pointer,struct Exchange._Order storage ref)"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5591:390:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":898,"nodeType":"ExpressionStatement","src":"5591:390:4"},{"eventCall":{"arguments":[{"id":900,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"6019:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":901,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"6043:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$613_$","typeString":"type(enum Exchange.Side)"}},"id":902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":612,"src":"6043:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},{"expression":{"id":903,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6067:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6067:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":905,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"6092:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":906,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"6114:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":907,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"6137:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":908,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"6159:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":909,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"6182:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":910,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"6202:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":911,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"6225:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":912,"name":"_waiveFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"6248:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":899,"name":"Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"5999:5:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_Side_$613_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,enum Exchange.Side,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5999:270:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":914,"nodeType":"EmitStatement","src":"5994:275:4"},{"expression":{"id":920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":915,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"6282:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6308:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":916,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"6294:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":356,"src":"6294:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6294:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6282:28:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":921,"nodeType":"ExpressionStatement","src":"6282:28:4"}]},"functionSelector":"6f4e410b","id":923,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":836,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"5120:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":837,"kind":"modifierInvocation","modifierName":{"id":835,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":2235,"src":"5109:10:4"},"nodeType":"ModifierInvocation","src":"5109:19:4"},{"arguments":[{"id":839,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"5140:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":840,"kind":"modifierInvocation","modifierName":{"id":838,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":2235,"src":"5129:10:4"},"nodeType":"ModifierInvocation","src":"5129:19:4"}],"name":"createLimitSellOrder","nameLocation":"4916:20:4","nodeType":"FunctionDefinition","parameters":{"id":834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":823,"mutability":"mutable","name":"_tokenA","nameLocation":"4955:7:4","nodeType":"VariableDeclaration","scope":923,"src":"4947:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":822,"name":"address","nodeType":"ElementaryTypeName","src":"4947:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":825,"mutability":"mutable","name":"_amountA","nameLocation":"4981:8:4","nodeType":"VariableDeclaration","scope":923,"src":"4973:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":824,"name":"uint256","nodeType":"ElementaryTypeName","src":"4973:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":827,"mutability":"mutable","name":"_tokenB","nameLocation":"5008:7:4","nodeType":"VariableDeclaration","scope":923,"src":"5000:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":826,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":829,"mutability":"mutable","name":"_amountB","nameLocation":"5034:8:4","nodeType":"VariableDeclaration","scope":923,"src":"5026:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":828,"name":"uint256","nodeType":"ElementaryTypeName","src":"5026:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":831,"mutability":"mutable","name":"_rate","nameLocation":"5061:5:4","nodeType":"VariableDeclaration","scope":923,"src":"5053:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":830,"name":"uint256","nodeType":"ElementaryTypeName","src":"5053:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":833,"mutability":"mutable","name":"_waiveFees","nameLocation":"5082:10:4","nodeType":"VariableDeclaration","scope":923,"src":"5077:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":832,"name":"bool","nodeType":"ElementaryTypeName","src":"5077:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4936:163:4"},"returnParameters":{"id":841,"nodeType":"ParameterList","parameters":[],"src":"5149:0:4"},"scope":2236,"src":"4907:1411:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1119,"nodeType":"Block","src":"6477:1597:4","statements":[{"assignments":[945],"declarations":[{"constant":false,"id":945,"mutability":"mutable","name":"_order","nameLocation":"6505:6:4","nodeType":"VariableDeclaration","scope":1119,"src":"6488:23:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"},"typeName":{"baseType":{"id":943,"nodeType":"UserDefinedTypeName","pathNode":{"id":942,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":584,"src":"6488:6:4"},"referencedDeclaration":584,"src":"6488:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_storage_ptr","typeString":"struct Exchange._Order"}},"id":944,"nodeType":"ArrayTypeName","src":"6488:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"}},"visibility":"internal"}],"id":954,"initialValue":{"baseExpression":{"baseExpression":{"id":946,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6514:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$584_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":948,"indexExpression":{"id":947,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"6526:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6514:19:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$584_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":953,"indexExpression":{"arguments":[{"id":951,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"6542:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}],"id":950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6534:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":949,"name":"uint256","nodeType":"ElementaryTypeName","src":"6534:7:4","typeDescriptions":{}}},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6534:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6514:34:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6488:60:4"},{"assignments":[956],"declarations":[{"constant":false,"id":956,"mutability":"mutable","name":"size","nameLocation":"6567:4:4","nodeType":"VariableDeclaration","scope":1119,"src":"6559:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":955,"name":"uint256","nodeType":"ElementaryTypeName","src":"6559:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":959,"initialValue":{"expression":{"id":957,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"6574:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6574:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6559:28:4"},{"assignments":[962],"declarations":[{"constant":false,"id":962,"mutability":"mutable","name":"order","nameLocation":"6612:5:4","nodeType":"VariableDeclaration","scope":1119,"src":"6598:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":961,"nodeType":"UserDefinedTypeName","pathNode":{"id":960,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":584,"src":"6598:6:4"},"referencedDeclaration":584,"src":"6598:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"}],"id":963,"nodeType":"VariableDeclarationStatement","src":"6598:19:4"},{"assignments":[965],"declarations":[{"constant":false,"id":965,"mutability":"mutable","name":"index","nameLocation":"6638:5:4","nodeType":"VariableDeclaration","scope":1119,"src":"6630:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":964,"name":"uint256","nodeType":"ElementaryTypeName","src":"6630:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":966,"nodeType":"VariableDeclarationStatement","src":"6630:13:4"},{"body":{"id":996,"nodeType":"Block","src":"6689:155:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":977,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"6708:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":979,"indexExpression":{"id":978,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"6715:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6708:9:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_storage","typeString":"struct Exchange._Order storage ref"}},"id":980,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":562,"src":"6708:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":981,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"6724:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6708:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":995,"nodeType":"IfStatement","src":"6704:129:4","trueBody":{"id":994,"nodeType":"Block","src":"6729:104:4","statements":[{"expression":{"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":983,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"6748:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":984,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"6756:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6748:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":986,"nodeType":"ExpressionStatement","src":"6748:9:4"},{"expression":{"id":991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":987,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"6776:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":988,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"6784:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":990,"indexExpression":{"id":989,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"6791:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6784:9:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_storage","typeString":"struct Exchange._Order storage ref"}},"src":"6776:17:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":992,"nodeType":"ExpressionStatement","src":"6776:17:4"},{"id":993,"nodeType":"Break","src":"6812:5:4"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":971,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"6674:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":972,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"6678:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6674:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":997,"initializationExpression":{"assignments":[968],"declarations":[{"constant":false,"id":968,"mutability":"mutable","name":"i","nameLocation":"6667:1:4","nodeType":"VariableDeclaration","scope":997,"src":"6659:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":967,"name":"uint256","nodeType":"ElementaryTypeName","src":"6659:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":970,"initialValue":{"hexValue":"30","id":969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6671:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6659:13:4"},"loopExpression":{"expression":{"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6684:3:4","subExpression":{"id":974,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"6684:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":976,"nodeType":"ExpressionStatement","src":"6684:3:4"},"nodeType":"ForStatement","src":"6654:190:4"},{"condition":{"id":998,"name":"s_isManual","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"6901:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1045,"nodeType":"IfStatement","src":"6897:604:4","trueBody":{"id":1044,"nodeType":"Block","src":"6913:588:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1000,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6936:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6936:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1002,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"6950:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1003,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":567,"src":"6950:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6936:24:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74204f776e6572","id":1005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6962:11:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4","typeString":"literal_string \"Not Owner\""},"value":"Not Owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4","typeString":"literal_string \"Not Owner\""}],"id":999,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6928:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6928:46:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1007,"nodeType":"ExpressionStatement","src":"6928:46:4"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1008,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"7023:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1009,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"7031:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$613_$","typeString":"type(enum Exchange.Side)"}},"id":1010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":611,"src":"7031:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},"src":"7023:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1025,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"7261:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1026,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"7269:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$613_$","typeString":"type(enum Exchange.Side)"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":612,"src":"7269:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},"src":"7261:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1042,"nodeType":"IfStatement","src":"7257:233:4","trueBody":{"id":1041,"nodeType":"Block","src":"7280:210:4","statements":[{"expression":{"arguments":[{"expression":{"id":1032,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7346:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7346:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1034,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"7379:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1035,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":569,"src":"7379:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1036,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"7414:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1037,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":571,"src":"7414:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7450:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1029,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"7299:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateLockedFunds","nodeType":"MemberAccess","referencedDeclaration":3094,"src":"7299:24:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7299:175:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1040,"nodeType":"ExpressionStatement","src":"7299:175:4"}]}},"id":1043,"nodeType":"IfStatement","src":"7019:471:4","trueBody":{"id":1024,"nodeType":"Block","src":"7041:210:4","statements":[{"expression":{"arguments":[{"expression":{"id":1015,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7107:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7107:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1017,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"7140:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1018,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":573,"src":"7140:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1019,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"7175:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1020,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountB","nodeType":"MemberAccess","referencedDeclaration":575,"src":"7175:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7211:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1012,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"7060:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateLockedFunds","nodeType":"MemberAccess","referencedDeclaration":3094,"src":"7060:24:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7060:175:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1023,"nodeType":"ExpressionStatement","src":"7060:175:4"}]}}]}},{"body":{"id":1069,"nodeType":"Block","src":"7556:55:4","statements":[{"expression":{"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1058,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"7571:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":1060,"indexExpression":{"id":1059,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"7578:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7571:9:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_storage","typeString":"struct Exchange._Order storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1061,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"7583:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":1066,"indexExpression":{"arguments":[{"hexValue":"31","id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7596:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":1062,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"7590:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":356,"src":"7590:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7590:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7583:16:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_storage","typeString":"struct Exchange._Order storage ref"}},"src":"7571:28:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_storage","typeString":"struct Exchange._Order storage ref"}},"id":1068,"nodeType":"ExpressionStatement","src":"7571:28:4"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1050,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"7537:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1051,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"7541:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7548:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7541:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7537:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1070,"initializationExpression":{"assignments":[1047],"declarations":[{"constant":false,"id":1047,"mutability":"mutable","name":"j","nameLocation":"7526:1:4","nodeType":"VariableDeclaration","scope":1070,"src":"7518:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1046,"name":"uint256","nodeType":"ElementaryTypeName","src":"7518:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1049,"initialValue":{"id":1048,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"7530:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7518:17:4"},"loopExpression":{"expression":{"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7551:3:4","subExpression":{"id":1055,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"7551:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1057,"nodeType":"ExpressionStatement","src":"7551:3:4"},"nodeType":"ForStatement","src":"7513:98:4"},{"expression":{"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"7621:26:4","subExpression":{"baseExpression":{"id":1071,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"7628:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":1076,"indexExpression":{"arguments":[{"hexValue":"31","id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":1072,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"7635:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":371,"src":"7635:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7635:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7628:19:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_storage","typeString":"struct Exchange._Order storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1078,"nodeType":"ExpressionStatement","src":"7621:26:4"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1079,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"7658:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"7658:10:4","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_struct$__Order_$584_storage_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_struct$__Order_$584_storage_$dyn_storage_ptr_$","typeString":"function (struct Exchange._Order storage ref[] storage pointer)"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7658:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1083,"nodeType":"ExpressionStatement","src":"7658:12:4"},{"expression":{"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1084,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"7683:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$584_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":1090,"indexExpression":{"id":1085,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"7695:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7683:19:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$584_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":1091,"indexExpression":{"arguments":[{"id":1088,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"7711:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}],"id":1087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7703:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1086,"name":"uint256","nodeType":"ElementaryTypeName","src":"7703:7:4","typeDescriptions":{}}},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7703:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7683:34:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1092,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"7720:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"src":"7683:43:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":1094,"nodeType":"ExpressionStatement","src":"7683:43:4"},{"eventCall":{"arguments":[{"id":1096,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"7765:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1097,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"7783:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1098,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"side","nodeType":"MemberAccess","referencedDeclaration":565,"src":"7783:10:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},{"expression":{"id":1099,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"7808:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1100,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":567,"src":"7808:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1101,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"7833:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":569,"src":"7833:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1103,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"7860:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1104,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":571,"src":"7860:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1105,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"7888:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1106,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":573,"src":"7888:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1107,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"7915:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1108,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountB","nodeType":"MemberAccess","referencedDeclaration":575,"src":"7915:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1109,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"7943:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1110,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":577,"src":"7943:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1111,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"7968:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"originalAmountA","nodeType":"MemberAccess","referencedDeclaration":579,"src":"7968:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1113,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"8004:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1114,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"originalAmountB","nodeType":"MemberAccess","referencedDeclaration":581,"src":"8004:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1115,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"8040:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1116,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"waiveFees","nodeType":"MemberAccess","referencedDeclaration":583,"src":"8040:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1095,"name":"Cancel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"7744:6:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_Side_$613_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,enum Exchange.Side,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7744:322:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1118,"nodeType":"EmitStatement","src":"7739:327:4"}]},"functionSelector":"1347d60e","id":1120,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":933,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"6439:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":934,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"6444:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},{"id":935,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"6450:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":936,"kind":"modifierInvocation","modifierName":{"id":932,"name":"validOrder","nodeType":"IdentifierPath","referencedDeclaration":2222,"src":"6428:10:4"},"nodeType":"ModifierInvocation","src":"6428:29:4"},{"arguments":[{"id":938,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"6469:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":939,"kind":"modifierInvocation","modifierName":{"id":937,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":2235,"src":"6458:10:4"},"nodeType":"ModifierInvocation","src":"6458:18:4"}],"name":"cancelOrder","nameLocation":"6335:11:4","nodeType":"FunctionDefinition","parameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":926,"mutability":"mutable","name":"side","nameLocation":"6362:4:4","nodeType":"VariableDeclaration","scope":1120,"src":"6357:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"},"typeName":{"id":925,"nodeType":"UserDefinedTypeName","pathNode":{"id":924,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":613,"src":"6357:4:4"},"referencedDeclaration":613,"src":"6357:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":928,"mutability":"mutable","name":"_id","nameLocation":"6385:3:4","nodeType":"VariableDeclaration","scope":1120,"src":"6377:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":927,"name":"uint256","nodeType":"ElementaryTypeName","src":"6377:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":930,"mutability":"mutable","name":"_token","nameLocation":"6407:6:4","nodeType":"VariableDeclaration","scope":1120,"src":"6399:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":929,"name":"address","nodeType":"ElementaryTypeName","src":"6399:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6346:74:4"},"returnParameters":{"id":940,"nodeType":"ParameterList","parameters":[],"src":"6477:0:4"},"scope":2236,"src":"6326:1748:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1319,"nodeType":"Block","src":"8269:1416:4","statements":[{"assignments":[1142],"declarations":[{"constant":false,"id":1142,"mutability":"mutable","name":"_side","nameLocation":"8288:5:4","nodeType":"VariableDeclaration","scope":1319,"src":"8280:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1141,"name":"uint256","nodeType":"ElementaryTypeName","src":"8280:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1147,"initialValue":{"arguments":[{"id":1145,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"8304:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}],"id":1144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8296:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1143,"name":"uint256","nodeType":"ElementaryTypeName","src":"8296:7:4","typeDescriptions":{}}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8296:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8280:29:4"},{"assignments":[1150,1152],"declarations":[{"constant":false,"id":1150,"mutability":"mutable","name":"order","nameLocation":"8335:5:4","nodeType":"VariableDeclaration","scope":1319,"src":"8321:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":1149,"nodeType":"UserDefinedTypeName","pathNode":{"id":1148,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":584,"src":"8321:6:4"},"referencedDeclaration":584,"src":"8321:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},{"constant":false,"id":1152,"mutability":"mutable","name":"index","nameLocation":"8350:5:4","nodeType":"VariableDeclaration","scope":1319,"src":"8342:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1151,"name":"uint256","nodeType":"ElementaryTypeName","src":"8342:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1158,"initialValue":{"arguments":[{"id":1154,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"8391:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1155,"name":"_side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"8412:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1156,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"8432:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1153,"name":"getOrderFromArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"8359:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_struct$__Order_$584_memory_ptr_$_t_uint256_$","typeString":"function (address,uint256,uint256) view returns (struct Exchange._Order memory,uint256)"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8359:87:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$__Order_$584_memory_ptr_$_t_uint256_$","typeString":"tuple(struct Exchange._Order memory,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8320:126:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1160,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"8467:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1161,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":571,"src":"8467:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1162,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"8484:1:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$560_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1163,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":559,"src":"8484:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8467:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964204f7264657220416d6f756e7420746f2066696c6c","id":1165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8494:30:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_e2a2339c54d4fc0d37a5533ccef4bf9959c39857db4a97b2323d6fa200439a73","typeString":"literal_string \"Invalid Order Amount to fill\""},"value":"Invalid Order Amount to fill"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e2a2339c54d4fc0d37a5533ccef4bf9959c39857db4a97b2323d6fa200439a73","typeString":"literal_string \"Invalid Order Amount to fill\""}],"id":1159,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8459:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8459:66:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1167,"nodeType":"ExpressionStatement","src":"8459:66:4"},{"expression":{"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1168,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"8538:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":571,"src":"8538:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1174,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"8572:1:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$560_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1175,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":559,"src":"8572:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1171,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"8554:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1172,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":571,"src":"8554:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":371,"src":"8554:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8554:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8538:43:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1178,"nodeType":"ExpressionStatement","src":"8538:43:4"},{"expression":{"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1179,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"8592:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1181,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amountB","nodeType":"MemberAccess","referencedDeclaration":575,"src":"8592:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":1192,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"8669:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1188,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"8655:1:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$560_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1189,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":559,"src":"8655:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1185,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"8640:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1186,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":577,"src":"8640:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"8640:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8640:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":401,"src":"8640:28:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8640:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1182,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"8608:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountB","nodeType":"MemberAccess","referencedDeclaration":575,"src":"8608:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":371,"src":"8608:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8608:81:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8592:97:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1196,"nodeType":"ExpressionStatement","src":"8592:97:4"},{"expression":{"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1197,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"8700:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$584_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":1201,"indexExpression":{"id":1198,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"8712:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8700:19:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$584_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":1202,"indexExpression":{"id":1199,"name":"_side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"8720:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8700:26:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":1203,"indexExpression":{"id":1200,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"8727:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8700:33:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_storage","typeString":"struct Exchange._Order storage ref"}},"id":1204,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":571,"src":"8700:41:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1205,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"8744:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":571,"src":"8744:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8700:57:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1208,"nodeType":"ExpressionStatement","src":"8700:57:4"},{"expression":{"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1209,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"8768:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$584_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":1213,"indexExpression":{"id":1210,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"8780:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8768:19:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$584_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":1214,"indexExpression":{"id":1211,"name":"_side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"8788:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8768:26:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":1215,"indexExpression":{"id":1212,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"8795:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8768:33:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_storage","typeString":"struct Exchange._Order storage ref"}},"id":1216,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amountB","nodeType":"MemberAccess","referencedDeclaration":575,"src":"8768:41:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1217,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"8812:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountB","nodeType":"MemberAccess","referencedDeclaration":575,"src":"8812:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8768:57:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1220,"nodeType":"ExpressionStatement","src":"8768:57:4"},{"assignments":[1222],"declarations":[{"constant":false,"id":1222,"mutability":"mutable","name":"fees","nameLocation":"8846:4:4","nodeType":"VariableDeclaration","scope":1319,"src":"8838:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1221,"name":"uint256","nodeType":"ElementaryTypeName","src":"8838:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1232,"initialValue":{"arguments":[{"expression":{"id":1225,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"8893:1:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$560_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1226,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":559,"src":"8893:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1227,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"8916:1:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$560_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1228,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":557,"src":"8916:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1229,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"8937:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1230,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":573,"src":"8937:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1223,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"8853:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2635","typeString":"contract TradingFees"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"calculateFees","nodeType":"MemberAccess","referencedDeclaration":2506,"src":"8853:25:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,uint256,address) view external returns (uint256)"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8853:107:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8838:122:4"},{"assignments":[1234],"declarations":[{"constant":false,"id":1234,"mutability":"mutable","name":"feesWaived","nameLocation":"9010:10:4","nodeType":"VariableDeclaration","scope":1319,"src":"9005:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1233,"name":"bool","nodeType":"ElementaryTypeName","src":"9005:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1244,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1235,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"9023:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"waiveFees","nodeType":"MemberAccess","referencedDeclaration":583,"src":"9023:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":1239,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"9087:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1240,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"9093:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1241,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":567,"src":"9093:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1237,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"9055:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2635","typeString":"contract TradingFees"}},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"checkSufficientaDAI","nodeType":"MemberAccess","referencedDeclaration":2606,"src":"9055:31:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,address) view external returns (bool)"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9055:49:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9023:81:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9005:99:4"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1245,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"9121:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1246,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"9129:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$613_$","typeString":"type(enum Exchange.Side)"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":611,"src":"9129:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},"src":"9121:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1270,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"9307:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1271,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"9315:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$613_$","typeString":"type(enum Exchange.Side)"}},"id":1272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":612,"src":"9315:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},"src":"9307:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1295,"nodeType":"IfStatement","src":"9303:183:4","trueBody":{"id":1294,"nodeType":"Block","src":"9326:160:4","statements":[{"expression":{"arguments":[{"id":1275,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"9356:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},{"expression":{"id":1276,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"9363:1:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$560_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1277,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":559,"src":"9363:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1278,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"9373:1:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$560_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1279,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":557,"src":"9373:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1280,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"9381:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1281,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"9393:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1274,"name":"fillSellOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"9341:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$__Order_$584_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (struct Exchange._Order memory,uint256,uint256,bool,uint256)"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9341:57:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1283,"nodeType":"ExpressionStatement","src":"9341:57:4"},{"eventCall":{"arguments":[{"id":1285,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"9432:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},{"expression":{"id":1286,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"9439:1:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$560_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1287,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":559,"src":"9439:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1288,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"9449:1:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$560_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":557,"src":"9449:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1290,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"9457:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1291,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"9469:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1284,"name":"fillSellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"9418:13:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_struct$__Order_$584_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (struct Exchange._Order memory,uint256,uint256,bool,uint256)"}},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9418:56:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1293,"nodeType":"EmitStatement","src":"9413:61:4"}]}},"id":1296,"nodeType":"IfStatement","src":"9117:369:4","trueBody":{"id":1269,"nodeType":"Block","src":"9139:158:4","statements":[{"expression":{"arguments":[{"id":1250,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"9168:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},{"expression":{"id":1251,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"9175:1:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$560_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1252,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":559,"src":"9175:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1253,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"9185:1:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$560_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1254,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":557,"src":"9185:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1255,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"9193:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1256,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"9205:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1249,"name":"fillBuyOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"9154:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$__Order_$584_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (struct Exchange._Order memory,uint256,uint256,bool,uint256)"}},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9154:56:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1258,"nodeType":"ExpressionStatement","src":"9154:56:4"},{"eventCall":{"arguments":[{"id":1260,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"9243:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},{"expression":{"id":1261,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"9250:1:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$560_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1262,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":559,"src":"9250:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1263,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"9260:1:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$560_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1264,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":557,"src":"9260:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1265,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"9268:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1266,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"9280:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1259,"name":"fillBuyOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"9230:12:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_struct$__Order_$584_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (struct Exchange._Order memory,uint256,uint256,bool,uint256)"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9230:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1268,"nodeType":"EmitStatement","src":"9225:60:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1297,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"9502:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":571,"src":"9502:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9519:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9502:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1318,"nodeType":"IfStatement","src":"9498:180:4","trueBody":{"id":1317,"nodeType":"Block","src":"9522:156:4","statements":[{"expression":{"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1301,"name":"s_isManual","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"9537:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9550:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"9537:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1304,"nodeType":"ExpressionStatement","src":"9537:18:4"},{"expression":{"arguments":[{"id":1306,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"9582:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},{"expression":{"id":1307,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"9588:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1308,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":562,"src":"9588:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1309,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"9598:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1310,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":569,"src":"9598:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1305,"name":"cancelOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"9570:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_Side_$613_$_t_uint256_$_t_address_$returns$__$","typeString":"function (enum Exchange.Side,uint256,address)"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9570:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1312,"nodeType":"ExpressionStatement","src":"9570:41:4"},{"expression":{"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1313,"name":"s_isManual","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"9649:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9662:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9649:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1316,"nodeType":"ExpressionStatement","src":"9649:17:4"}]}}]},"id":1320,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1133,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"8231:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1134,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"8236:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},{"id":1135,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"8242:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1136,"kind":"modifierInvocation","modifierName":{"id":1132,"name":"validOrder","nodeType":"IdentifierPath","referencedDeclaration":2222,"src":"8220:10:4"},"nodeType":"ModifierInvocation","src":"8220:29:4"},{"arguments":[{"id":1138,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"8261:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1139,"kind":"modifierInvocation","modifierName":{"id":1137,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":2235,"src":"8250:10:4"},"nodeType":"ModifierInvocation","src":"8250:18:4"}],"name":"fillOrder","nameLocation":"8091:9:4","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1123,"mutability":"mutable","name":"side","nameLocation":"8116:4:4","nodeType":"VariableDeclaration","scope":1320,"src":"8111:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"},"typeName":{"id":1122,"nodeType":"UserDefinedTypeName","pathNode":{"id":1121,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":613,"src":"8111:4:4"},"referencedDeclaration":613,"src":"8111:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":1125,"mutability":"mutable","name":"_id","nameLocation":"8139:3:4","nodeType":"VariableDeclaration","scope":1320,"src":"8131:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1124,"name":"uint256","nodeType":"ElementaryTypeName","src":"8131:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1127,"mutability":"mutable","name":"_token","nameLocation":"8161:6:4","nodeType":"VariableDeclaration","scope":1320,"src":"8153:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1126,"name":"address","nodeType":"ElementaryTypeName","src":"8153:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1130,"mutability":"mutable","name":"a","nameLocation":"8202:1:4","nodeType":"VariableDeclaration","scope":1320,"src":"8178:25:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$560_memory_ptr","typeString":"struct Exchange._fillOrderValues"},"typeName":{"id":1129,"nodeType":"UserDefinedTypeName","pathNode":{"id":1128,"name":"_fillOrderValues","nodeType":"IdentifierPath","referencedDeclaration":560,"src":"8178:16:4"},"referencedDeclaration":560,"src":"8178:16:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$560_storage_ptr","typeString":"struct Exchange._fillOrderValues"}},"visibility":"internal"}],"src":"8100:110:4"},"returnParameters":{"id":1140,"nodeType":"ParameterList","parameters":[],"src":"8269:0:4"},"scope":2236,"src":"8082:1603:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1459,"nodeType":"Block","src":"9861:1749:4","statements":[{"condition":{"id":1334,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"9876:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1389,"nodeType":"Block","src":"10290:398:4","statements":[{"assignments":[1367],"declarations":[{"constant":false,"id":1367,"mutability":"mutable","name":"amountTokenToDeduct","nameLocation":"10313:19:4","nodeType":"VariableDeclaration","scope":1389,"src":"10305:27:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1366,"name":"uint256","nodeType":"ElementaryTypeName","src":"10305:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1374,"initialValue":{"arguments":[{"expression":{"id":1370,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"10386:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1371,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":569,"src":"10386:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1372,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"10417:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1368,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"10335:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2635","typeString":"contract TradingFees"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"amountTokensToDeduct","nodeType":"MemberAccess","referencedDeclaration":2578,"src":"10335:32:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10335:101:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10305:131:4"},{"expression":{"arguments":[{"expression":{"id":1378,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"10546:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1379,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":569,"src":"10546:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1380,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"10577:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":567,"src":"10577:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1384,"name":"amountTokenToDeduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"10618:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1382,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"10606:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":371,"src":"10606:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10606:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10657:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1375,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"10507:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateBalance","nodeType":"MemberAccess","referencedDeclaration":3161,"src":"10507:20:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10507:169:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1388,"nodeType":"ExpressionStatement","src":"10507:169:4"}]},"id":1390,"nodeType":"IfStatement","src":"9872:816:4","trueBody":{"id":1365,"nodeType":"Block","src":"9888:396:4","statements":[{"assignments":[1336],"declarations":[{"constant":false,"id":1336,"mutability":"mutable","name":"aDAIToDeduct","nameLocation":"9938:12:4","nodeType":"VariableDeclaration","scope":1365,"src":"9930:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1335,"name":"uint256","nodeType":"ElementaryTypeName","src":"9930:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1341,"initialValue":{"arguments":[{"id":1339,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"9984:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1337,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"9953:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2635","typeString":"contract TradingFees"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"amountaDAIToDeduct","nodeType":"MemberAccess","referencedDeclaration":2541,"src":"9953:30:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9953:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9930:59:4"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1345,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"10043:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2635","typeString":"contract TradingFees"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"aDAI","nodeType":"MemberAccess","referencedDeclaration":2434,"src":"10043:16:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10043:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1348,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"10080:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1349,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":567,"src":"10080:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1350,"name":"aDAIToDeduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"10109:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10140:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1342,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"10004:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateBalance","nodeType":"MemberAccess","referencedDeclaration":3161,"src":"10004:20:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10004:156:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1353,"nodeType":"ExpressionStatement","src":"10004:156:4"},{"expression":{"arguments":[{"expression":{"id":1357,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"10232:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":569,"src":"10232:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1359,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"10246:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1360,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":567,"src":"10246:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1361,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"10258:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10267:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1354,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"10211:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateBalance","nodeType":"MemberAccess","referencedDeclaration":3161,"src":"10211:20:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10211:61:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1364,"nodeType":"ExpressionStatement","src":"10211:61:4"}]}},{"expression":{"arguments":[{"expression":{"id":1394,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"10781:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1395,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":567,"src":"10781:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1396,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"10806:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":573,"src":"10806:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1405,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"10863:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":1401,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"10849:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1398,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"10834:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1399,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":577,"src":"10834:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"10834:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10834:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1403,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10833:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":401,"src":"10833:29:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10833:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10887:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1391,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"10742:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateLockedFunds","nodeType":"MemberAccess","referencedDeclaration":3094,"src":"10742:24:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10742:161:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1409,"nodeType":"ExpressionStatement","src":"10742:161:4"},{"expression":{"arguments":[{"expression":{"id":1413,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"11027:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1414,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":573,"src":"11027:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1415,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"11054:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1416,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":567,"src":"11054:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1423,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"11104:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":1419,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"11090:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1417,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"11080:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"11080:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11080:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1421,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11079:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":401,"src":"11079:24:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11079:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11128:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1410,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"10992:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateBalance","nodeType":"MemberAccess","referencedDeclaration":3161,"src":"10992:20:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10992:152:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1427,"nodeType":"ExpressionStatement","src":"10992:152:4"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":1436,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"11237:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1437,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":562,"src":"11237:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1438,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"11264:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1439,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"side","nodeType":"MemberAccess","referencedDeclaration":565,"src":"11264:10:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},{"expression":{"id":1440,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"11293:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1441,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":567,"src":"11293:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1442,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"11322:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1443,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":569,"src":"11322:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1444,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"11353:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1445,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":573,"src":"11353:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1446,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"11384:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1447,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"11410:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1448,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"11434:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":577,"src":"11434:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1450,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"11463:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1451,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"originalAmountA","nodeType":"MemberAccess","referencedDeclaration":579,"src":"11463:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1452,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"11503:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1453,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"originalAmountB","nodeType":"MemberAccess","referencedDeclaration":581,"src":"11503:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1454,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"11543:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1455,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"11572:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1435,"name":"_filledOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"11206:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__filledOrder_$610_storage_ptr_$","typeString":"type(struct Exchange._filledOrder storage pointer)"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11206:385:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$610_memory_ptr","typeString":"struct Exchange._filledOrder memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__filledOrder_$610_memory_ptr","typeString":"struct Exchange._filledOrder memory"}],"expression":{"baseExpression":{"baseExpression":{"id":1428,"name":"s_filledOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"11157:14:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$610_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._filledOrder storage ref[] storage ref))"}},"id":1432,"indexExpression":{"expression":{"id":1429,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"11172:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":567,"src":"11172:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11157:26:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$610_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._filledOrder storage ref[] storage ref)"}},"id":1433,"indexExpression":{"hexValue":"30","id":1431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11184:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11157:29:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__filledOrder_$610_storage_$dyn_storage","typeString":"struct Exchange._filledOrder storage ref[] storage ref"}},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"11157:34:4","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$__filledOrder_$610_storage_$dyn_storage_ptr_$_t_struct$__filledOrder_$610_storage_$returns$__$bound_to$_t_array$_t_struct$__filledOrder_$610_storage_$dyn_storage_ptr_$","typeString":"function (struct Exchange._filledOrder storage ref[] storage pointer,struct Exchange._filledOrder storage ref)"}},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11157:445:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1458,"nodeType":"ExpressionStatement","src":"11157:445:4"}]},"id":1460,"implemented":true,"kind":"function","modifiers":[],"name":"fillBuyOrders","nameLocation":"9702:13:4","nodeType":"FunctionDefinition","parameters":{"id":1332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1323,"mutability":"mutable","name":"order","nameLocation":"9740:5:4","nodeType":"VariableDeclaration","scope":1460,"src":"9726:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":1322,"nodeType":"UserDefinedTypeName","pathNode":{"id":1321,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":584,"src":"9726:6:4"},"referencedDeclaration":584,"src":"9726:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},{"constant":false,"id":1325,"mutability":"mutable","name":"_amount","nameLocation":"9764:7:4","nodeType":"VariableDeclaration","scope":1460,"src":"9756:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1324,"name":"uint256","nodeType":"ElementaryTypeName","src":"9756:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1327,"mutability":"mutable","name":"_rate","nameLocation":"9790:5:4","nodeType":"VariableDeclaration","scope":1460,"src":"9782:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1326,"name":"uint256","nodeType":"ElementaryTypeName","src":"9782:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1329,"mutability":"mutable","name":"feesWaived","nameLocation":"9811:10:4","nodeType":"VariableDeclaration","scope":1460,"src":"9806:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1328,"name":"bool","nodeType":"ElementaryTypeName","src":"9806:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1331,"mutability":"mutable","name":"fees","nameLocation":"9840:4:4","nodeType":"VariableDeclaration","scope":1460,"src":"9832:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1330,"name":"uint256","nodeType":"ElementaryTypeName","src":"9832:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9715:136:4"},"returnParameters":{"id":1333,"nodeType":"ParameterList","parameters":[],"src":"9861:0:4"},"scope":2236,"src":"9693:1917:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1567,"nodeType":"Block","src":"11787:1067:4","statements":[{"condition":{"id":1474,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"11802:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1543,"nodeType":"Block","src":"12243:427:4","statements":[{"assignments":[1514],"declarations":[{"constant":false,"id":1514,"mutability":"mutable","name":"amountTokensToDeduct","nameLocation":"12266:20:4","nodeType":"VariableDeclaration","scope":1543,"src":"12258:28:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1513,"name":"uint256","nodeType":"ElementaryTypeName","src":"12258:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1521,"initialValue":{"arguments":[{"expression":{"id":1517,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"12340:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1518,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":573,"src":"12340:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1519,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"12371:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1515,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"12289:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2635","typeString":"contract TradingFees"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"amountTokensToDeduct","nodeType":"MemberAccess","referencedDeclaration":2578,"src":"12289:32:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12289:101:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12258:132:4"},{"expression":{"arguments":[{"expression":{"id":1525,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"12500:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1526,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":573,"src":"12500:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1527,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"12531:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1528,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":567,"src":"12531:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1538,"name":"amountTokensToDeduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"12599:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1535,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"12585:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":1531,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"12571:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1529,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"12561:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"12561:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12561:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1533,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12560:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":401,"src":"12560:24:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12560:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":371,"src":"12560:38:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12560:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12639:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1522,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"12461:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateBalance","nodeType":"MemberAccess","referencedDeclaration":3161,"src":"12461:20:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12461:197:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1542,"nodeType":"ExpressionStatement","src":"12461:197:4"}]},"id":1544,"nodeType":"IfStatement","src":"11798:872:4","trueBody":{"id":1512,"nodeType":"Block","src":"11814:423:4","statements":[{"assignments":[1476],"declarations":[{"constant":false,"id":1476,"mutability":"mutable","name":"aDAIToDeduct","nameLocation":"11864:12:4","nodeType":"VariableDeclaration","scope":1512,"src":"11856:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1475,"name":"uint256","nodeType":"ElementaryTypeName","src":"11856:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1481,"initialValue":{"arguments":[{"id":1479,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"11910:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1477,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"11879:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2635","typeString":"contract TradingFees"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"amountaDAIToDeduct","nodeType":"MemberAccess","referencedDeclaration":2541,"src":"11879:30:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11879:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11856:59:4"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1485,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"11951:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2635","typeString":"contract TradingFees"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"aDAI","nodeType":"MemberAccess","referencedDeclaration":2434,"src":"11951:16:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11951:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1488,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"11971:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1489,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":567,"src":"11971:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1490,"name":"aDAIToDeduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"11983:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11997:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1482,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"11930:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateBalance","nodeType":"MemberAccess","referencedDeclaration":3161,"src":"11930:20:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11930:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1493,"nodeType":"ExpressionStatement","src":"11930:73:4"},{"expression":{"arguments":[{"expression":{"id":1497,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"12093:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1498,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":573,"src":"12093:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1499,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"12124:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1500,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":567,"src":"12124:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1507,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"12178:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":1503,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"12164:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1501,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"12154:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"12154:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12154:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1505,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12153:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":401,"src":"12153:24:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12153:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12206:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1494,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"12054:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateBalance","nodeType":"MemberAccess","referencedDeclaration":3161,"src":"12054:20:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12054:171:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1511,"nodeType":"ExpressionStatement","src":"12054:171:4"}]}},{"expression":{"arguments":[{"expression":{"id":1548,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"12707:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1549,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":567,"src":"12707:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1550,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"12719:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1551,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":569,"src":"12719:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1552,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"12733:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12742:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1545,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"12682:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateLockedFunds","nodeType":"MemberAccess","referencedDeclaration":3094,"src":"12682:24:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12682:66:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1555,"nodeType":"ExpressionStatement","src":"12682:66:4"},{"expression":{"arguments":[{"expression":{"id":1559,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"12805:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1560,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":569,"src":"12805:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1561,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"12819:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1562,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":567,"src":"12819:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1563,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"12831:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12840:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1556,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"12784:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateBalance","nodeType":"MemberAccess","referencedDeclaration":3161,"src":"12784:20:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12784:62:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1566,"nodeType":"ExpressionStatement","src":"12784:62:4"}]},"id":1568,"implemented":true,"kind":"function","modifiers":[],"name":"fillSellOrders","nameLocation":"11627:14:4","nodeType":"FunctionDefinition","parameters":{"id":1472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1463,"mutability":"mutable","name":"order","nameLocation":"11666:5:4","nodeType":"VariableDeclaration","scope":1568,"src":"11652:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":1462,"nodeType":"UserDefinedTypeName","pathNode":{"id":1461,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":584,"src":"11652:6:4"},"referencedDeclaration":584,"src":"11652:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},{"constant":false,"id":1465,"mutability":"mutable","name":"_amount","nameLocation":"11690:7:4","nodeType":"VariableDeclaration","scope":1568,"src":"11682:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1464,"name":"uint256","nodeType":"ElementaryTypeName","src":"11682:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1467,"mutability":"mutable","name":"_rate","nameLocation":"11716:5:4","nodeType":"VariableDeclaration","scope":1568,"src":"11708:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1466,"name":"uint256","nodeType":"ElementaryTypeName","src":"11708:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1469,"mutability":"mutable","name":"feesWaived","nameLocation":"11737:10:4","nodeType":"VariableDeclaration","scope":1568,"src":"11732:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1468,"name":"bool","nodeType":"ElementaryTypeName","src":"11732:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1471,"mutability":"mutable","name":"fees","nameLocation":"11766:4:4","nodeType":"VariableDeclaration","scope":1568,"src":"11758:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1470,"name":"uint256","nodeType":"ElementaryTypeName","src":"11758:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11641:136:4"},"returnParameters":{"id":1473,"nodeType":"ParameterList","parameters":[],"src":"11787:0:4"},"scope":2236,"src":"11618:1236:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1908,"nodeType":"Block","src":"13015:4625:4","statements":[{"assignments":[1587],"declarations":[{"constant":false,"id":1587,"mutability":"mutable","name":"saleTokenAmt","nameLocation":"13034:12:4","nodeType":"VariableDeclaration","scope":1908,"src":"13026:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1586,"name":"uint256","nodeType":"ElementaryTypeName","src":"13026:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1588,"nodeType":"VariableDeclarationStatement","src":"13026:20:4"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1589,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"13063:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1590,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"13071:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$613_$","typeString":"type(enum Exchange.Side)"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":611,"src":"13071:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},"src":"13063:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1749,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"15415:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1750,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"15423:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$613_$","typeString":"type(enum Exchange.Side)"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":612,"src":"15423:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},"src":"15415:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1906,"nodeType":"IfStatement","src":"15411:2222:4","trueBody":{"id":1905,"nodeType":"Block","src":"15434:2199:4","statements":[{"assignments":[1757],"declarations":[{"constant":false,"id":1757,"mutability":"mutable","name":"_buyOrder","nameLocation":"15508:9:4","nodeType":"VariableDeclaration","scope":1905,"src":"15492:25:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order[]"},"typeName":{"baseType":{"id":1755,"nodeType":"UserDefinedTypeName","pathNode":{"id":1754,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":584,"src":"15492:6:4"},"referencedDeclaration":584,"src":"15492:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_storage_ptr","typeString":"struct Exchange._Order"}},"id":1756,"nodeType":"ArrayTypeName","src":"15492:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"}},"visibility":"internal"}],"id":1763,"initialValue":{"baseExpression":{"baseExpression":{"id":1758,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"15520:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$584_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":1760,"indexExpression":{"id":1759,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"15532:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15520:19:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$584_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":1762,"indexExpression":{"hexValue":"30","id":1761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15540:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15520:22:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"15492:50:4"},{"body":{"id":1903,"nodeType":"Block","src":"15604:2018:4","statements":[{"assignments":[1777,null],"declarations":[{"constant":false,"id":1777,"mutability":"mutable","name":"sellOrderToFill","nameLocation":"15690:15:4","nodeType":"VariableDeclaration","scope":1903,"src":"15676:29:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":1776,"nodeType":"UserDefinedTypeName","pathNode":{"id":1775,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":584,"src":"15676:6:4"},"referencedDeclaration":584,"src":"15676:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},null],"id":1783,"initialValue":{"arguments":[{"id":1779,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"15751:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31","id":1780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15780:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"id":1781,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"15804:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1778,"name":"getOrderFromArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"15711:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_struct$__Order_$584_memory_ptr_$_t_uint256_$","typeString":"function (address,uint256,uint256) view returns (struct Exchange._Order memory,uint256)"}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15711:115:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$__Order_$584_memory_ptr_$_t_uint256_$","typeString":"tuple(struct Exchange._Order memory,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15675:151:4"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1784,"name":"_buyOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"15925:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":1786,"indexExpression":{"id":1785,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"15935:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15925:12:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1787,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":577,"src":"15925:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1788,"name":"sellOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"15946:15:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1789,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":577,"src":"15946:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15925:41:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1791,"name":"_buyOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"15991:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":1793,"indexExpression":{"id":1792,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"16001:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15991:12:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1794,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":573,"src":"15991:19:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1795,"name":"sellOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"16014:15:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1796,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":573,"src":"16014:22:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15991:45:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15925:111:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1890,"nodeType":"IfStatement","src":"15899:1600:4","trueBody":{"id":1889,"nodeType":"Block","src":"16056:1443:4","statements":[{"assignments":[1801],"declarations":[{"constant":false,"id":1801,"mutability":"mutable","name":"order","nameLocation":"16093:5:4","nodeType":"VariableDeclaration","scope":1889,"src":"16079:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":1800,"nodeType":"UserDefinedTypeName","pathNode":{"id":1799,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":584,"src":"16079:6:4"},"referencedDeclaration":584,"src":"16079:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"}],"id":1805,"initialValue":{"baseExpression":{"id":1802,"name":"_buyOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"16101:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":1804,"indexExpression":{"id":1803,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"16111:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16101:12:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"nodeType":"VariableDeclarationStatement","src":"16079:34:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1806,"name":"sellOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"16216:15:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1807,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":571,"src":"16216:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1808,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"16242:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1809,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":571,"src":"16242:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16216:39:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1817,"name":"sellOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"16441:15:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1818,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":571,"src":"16441:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":1819,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"16468:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1820,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":571,"src":"16468:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16441:40:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1828,"nodeType":"IfStatement","src":"16437:135:4","trueBody":{"id":1827,"nodeType":"Block","src":"16483:89:4","statements":[{"expression":{"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1822,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"16510:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1823,"name":"sellOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"16525:15:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1824,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":571,"src":"16525:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16510:38:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1826,"nodeType":"ExpressionStatement","src":"16510:38:4"}]}},"id":1829,"nodeType":"IfStatement","src":"16212:360:4","trueBody":{"id":1816,"nodeType":"Block","src":"16257:79:4","statements":[{"expression":{"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1811,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"16284:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1812,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"16299:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1813,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":571,"src":"16299:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16284:28:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1815,"nodeType":"ExpressionStatement","src":"16284:28:4"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1833,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"16691:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1834,"name":"sellOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"16699:15:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1835,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":567,"src":"16699:20:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1831,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"16674:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3110,"src":"16674:16:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16674:46:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1837,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"16753:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16674:91:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742053656c6c657220546f6b656e2042616c616e6365","id":1839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16792:35:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_23606608e7b13fb3e79d5390038cbd9a3725c22bbf868c3351f539c1403aa51c","typeString":"literal_string \"Insufficient Seller Token Balance\""},"value":"Insufficient Seller Token Balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_23606608e7b13fb3e79d5390038cbd9a3725c22bbf868c3351f539c1403aa51c","typeString":"literal_string \"Insufficient Seller Token Balance\""}],"id":1830,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16640:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16640:210:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1841,"nodeType":"ExpressionStatement","src":"16640:210:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1845,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"16924:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1846,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":573,"src":"16924:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1847,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"16938:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1848,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":567,"src":"16938:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1843,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"16907:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3110,"src":"16907:16:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16907:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[{"id":1857,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"17017:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"expression":{"id":1852,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"17000:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1853,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":577,"src":"17000:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1850,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"16983:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"16983:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16983:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1855,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16982:30:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":401,"src":"16982:34:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16982:44:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16907:119:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420427579657220546f6b656e2042616c616e6365","id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17053:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_b526016737f3f795ad9662415cdc5815356c7958b0a29dae27c6455ef786683d","typeString":"literal_string \"Insufficient Buyer Token Balance\""},"value":"Insufficient Buyer Token Balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b526016737f3f795ad9662415cdc5815356c7958b0a29dae27c6455ef786683d","typeString":"literal_string \"Insufficient Buyer Token Balance\""}],"id":1842,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16873:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16873:237:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1862,"nodeType":"ExpressionStatement","src":"16873:237:4"},{"assignments":[1865],"declarations":[{"constant":false,"id":1865,"mutability":"mutable","name":"fillOrderValues","nameLocation":"17196:15:4","nodeType":"VariableDeclaration","scope":1889,"src":"17172:39:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$560_memory_ptr","typeString":"struct Exchange._fillOrderValues"},"typeName":{"id":1864,"nodeType":"UserDefinedTypeName","pathNode":{"id":1863,"name":"_fillOrderValues","nodeType":"IdentifierPath","referencedDeclaration":560,"src":"17172:16:4"},"referencedDeclaration":560,"src":"17172:16:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$560_storage_ptr","typeString":"struct Exchange._fillOrderValues"}},"visibility":"internal"}],"id":1871,"initialValue":{"arguments":[{"expression":{"id":1867,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"17257:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1868,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":577,"src":"17257:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1869,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"17294:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1866,"name":"_fillOrderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"17214:16:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__fillOrderValues_$560_storage_ptr_$","typeString":"type(struct Exchange._fillOrderValues storage pointer)"}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17214:115:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$560_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"nodeType":"VariableDeclarationStatement","src":"17172:157:4"},{"expression":{"arguments":[{"expression":{"id":1873,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"17362:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$613_$","typeString":"type(enum Exchange.Side)"}},"id":1874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":612,"src":"17362:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},{"id":1875,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"17373:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1876,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"17378:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1877,"name":"fillOrderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"17386:15:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$560_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$__fillOrderValues_$560_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}],"id":1872,"name":"fillOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"17352:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_Side_$613_$_t_uint256_$_t_address_$_t_struct$__fillOrderValues_$560_memory_ptr_$returns$__$","typeString":"function (enum Exchange.Side,uint256,address,struct Exchange._fillOrderValues memory)"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17352:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1879,"nodeType":"ExpressionStatement","src":"17352:50:4"},{"expression":{"arguments":[{"expression":{"id":1881,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"17435:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$613_$","typeString":"type(enum Exchange.Side)"}},"id":1882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":611,"src":"17435:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},{"expression":{"id":1883,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"17445:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1884,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":562,"src":"17445:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1885,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"17455:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1886,"name":"fillOrderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"17463:15:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$560_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$__fillOrderValues_$560_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}],"id":1880,"name":"fillOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"17425:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_Side_$613_$_t_uint256_$_t_address_$_t_struct$__fillOrderValues_$560_memory_ptr_$returns$__$","typeString":"function (enum Exchange.Side,uint256,address,struct Exchange._fillOrderValues memory)"}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17425:54:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1888,"nodeType":"ExpressionStatement","src":"17425:54:4"}]}},{"assignments":[1892],"declarations":[{"constant":false,"id":1892,"mutability":"mutable","name":"orderExist","nameLocation":"17522:10:4","nodeType":"VariableDeclaration","scope":1903,"src":"17517:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1891,"name":"bool","nodeType":"ElementaryTypeName","src":"17517:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1898,"initialValue":{"arguments":[{"id":1894,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"17547:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1895,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"17552:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},{"id":1896,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"17558:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1893,"name":"orderExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"17535:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Side_$613_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,enum Exchange.Side,address) view returns (bool)"}},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17535:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"17517:48:4"},{"condition":{"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"17588:11:4","subExpression":{"id":1899,"name":"orderExist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"17589:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1902,"nodeType":"IfStatement","src":"17584:22:4","trueBody":{"id":1901,"nodeType":"Break","src":"17601:5:4"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1768,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"15577:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1769,"name":"_buyOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"15581:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"15581:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15577:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1904,"initializationExpression":{"assignments":[1765],"declarations":[{"constant":false,"id":1765,"mutability":"mutable","name":"i","nameLocation":"15570:1:4","nodeType":"VariableDeclaration","scope":1904,"src":"15562:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1764,"name":"uint256","nodeType":"ElementaryTypeName","src":"15562:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1767,"initialValue":{"hexValue":"30","id":1766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15574:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"15562:13:4"},"loopExpression":{"expression":{"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15599:3:4","subExpression":{"id":1772,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"15599:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1774,"nodeType":"ExpressionStatement","src":"15599:3:4"},"nodeType":"ForStatement","src":"15557:2065:4"}]}},"id":1907,"nodeType":"IfStatement","src":"13059:4574:4","trueBody":{"id":1748,"nodeType":"Block","src":"13081:2324:4","statements":[{"assignments":[1597],"declarations":[{"constant":false,"id":1597,"mutability":"mutable","name":"_sellOrder","nameLocation":"13156:10:4","nodeType":"VariableDeclaration","scope":1748,"src":"13140:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order[]"},"typeName":{"baseType":{"id":1595,"nodeType":"UserDefinedTypeName","pathNode":{"id":1594,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":584,"src":"13140:6:4"},"referencedDeclaration":584,"src":"13140:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_storage_ptr","typeString":"struct Exchange._Order"}},"id":1596,"nodeType":"ArrayTypeName","src":"13140:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"}},"visibility":"internal"}],"id":1603,"initialValue":{"baseExpression":{"baseExpression":{"id":1598,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"13169:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$584_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":1600,"indexExpression":{"id":1599,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"13181:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13169:19:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$584_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":1602,"indexExpression":{"hexValue":"31","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13189:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13169:22:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13140:51:4"},{"body":{"id":1746,"nodeType":"Block","src":"13254:2140:4","statements":[{"assignments":[1617,null],"declarations":[{"constant":false,"id":1617,"mutability":"mutable","name":"buyOrderToFill","nameLocation":"13339:14:4","nodeType":"VariableDeclaration","scope":1746,"src":"13325:28:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":1616,"nodeType":"UserDefinedTypeName","pathNode":{"id":1615,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":584,"src":"13325:6:4"},"referencedDeclaration":584,"src":"13325:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},null],"id":1626,"initialValue":{"arguments":[{"id":1619,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"13399:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1622,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"13434:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}],"id":1621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13428:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1620,"name":"uint8","nodeType":"ElementaryTypeName","src":"13428:5:4","typeDescriptions":{}}},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13428:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1624,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"13462:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1618,"name":"getOrderFromArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"13359:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_struct$__Order_$584_memory_ptr_$_t_uint256_$","typeString":"function (address,uint256,uint256) view returns (struct Exchange._Order memory,uint256)"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13359:125:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$__Order_$584_memory_ptr_$_t_uint256_$","typeString":"tuple(struct Exchange._Order memory,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13324:160:4"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1627,"name":"_sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"13600:10:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":1629,"indexExpression":{"id":1628,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"13611:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13600:13:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1630,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":577,"src":"13600:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":1631,"name":"buyOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"13622:14:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1632,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":577,"src":"13622:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13600:41:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1634,"name":"buyOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"13666:14:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":573,"src":"13666:21:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"baseExpression":{"id":1636,"name":"_sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"13691:10:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":1638,"indexExpression":{"id":1637,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"13702:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13691:13:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1639,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":573,"src":"13691:20:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13666:45:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13600:111:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1733,"nodeType":"IfStatement","src":"13574:1695:4","trueBody":{"id":1732,"nodeType":"Block","src":"13731:1538:4","statements":[{"assignments":[1644],"declarations":[{"constant":false,"id":1644,"mutability":"mutable","name":"sellOrder","nameLocation":"13768:9:4","nodeType":"VariableDeclaration","scope":1732,"src":"13754:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":1643,"nodeType":"UserDefinedTypeName","pathNode":{"id":1642,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":584,"src":"13754:6:4"},"referencedDeclaration":584,"src":"13754:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"}],"id":1648,"initialValue":{"baseExpression":{"id":1645,"name":"_sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"13780:10:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":1647,"indexExpression":{"id":1646,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"13791:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13780:13:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"nodeType":"VariableDeclarationStatement","src":"13754:39:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1649,"name":"buyOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"13894:14:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":571,"src":"13894:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1651,"name":"sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"13919:9:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1652,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":571,"src":"13919:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13894:42:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1660,"name":"buyOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"14127:14:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1661,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":571,"src":"14127:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":1662,"name":"sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"14153:9:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1663,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":571,"src":"14153:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14127:43:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1671,"nodeType":"IfStatement","src":"14123:137:4","trueBody":{"id":1670,"nodeType":"Block","src":"14172:88:4","statements":[{"expression":{"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1665,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"14199:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1666,"name":"buyOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"14214:14:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1667,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":571,"src":"14214:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14199:37:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1669,"nodeType":"ExpressionStatement","src":"14199:37:4"}]}},"id":1672,"nodeType":"IfStatement","src":"13890:370:4","trueBody":{"id":1659,"nodeType":"Block","src":"13938:83:4","statements":[{"expression":{"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1654,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"13965:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1655,"name":"sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"13980:9:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1656,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":571,"src":"13980:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13965:32:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1658,"nodeType":"ExpressionStatement","src":"13965:32:4"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1676,"name":"buyOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"14411:14:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1677,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":573,"src":"14411:21:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1678,"name":"buyOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"14463:14:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1679,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":567,"src":"14463:19:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1674,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"14364:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3110,"src":"14364:16:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14364:145:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[{"id":1688,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"14552:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"expression":{"id":1683,"name":"sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"14531:9:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1684,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":577,"src":"14531:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1681,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"14514:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"14514:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14514:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1686,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14513:34:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":401,"src":"14513:38:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14513:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14364:197:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420427579657220546f6b656e2042616c616e6365","id":1691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14588:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_b526016737f3f795ad9662415cdc5815356c7958b0a29dae27c6455ef786683d","typeString":"literal_string \"Insufficient Buyer Token Balance\""},"value":"Insufficient Buyer Token Balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b526016737f3f795ad9662415cdc5815356c7958b0a29dae27c6455ef786683d","typeString":"literal_string \"Insufficient Buyer Token Balance\""}],"id":1673,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14330:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14330:315:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1693,"nodeType":"ExpressionStatement","src":"14330:315:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1697,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"14719:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1698,"name":"sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"14727:9:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1699,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":567,"src":"14727:14:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1695,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"14702:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3110,"src":"14702:16:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14702:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1701,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"14775:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14702:85:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742053656c6c657220546f6b656e2042616c616e6365","id":1703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14814:35:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_23606608e7b13fb3e79d5390038cbd9a3725c22bbf868c3351f539c1403aa51c","typeString":"literal_string \"Insufficient Seller Token Balance\""},"value":"Insufficient Seller Token Balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_23606608e7b13fb3e79d5390038cbd9a3725c22bbf868c3351f539c1403aa51c","typeString":"literal_string \"Insufficient Seller Token Balance\""}],"id":1694,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14668:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14668:204:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1705,"nodeType":"ExpressionStatement","src":"14668:204:4"},{"assignments":[1708],"declarations":[{"constant":false,"id":1708,"mutability":"mutable","name":"fillOrderValues","nameLocation":"14958:15:4","nodeType":"VariableDeclaration","scope":1732,"src":"14934:39:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$560_memory_ptr","typeString":"struct Exchange._fillOrderValues"},"typeName":{"id":1707,"nodeType":"UserDefinedTypeName","pathNode":{"id":1706,"name":"_fillOrderValues","nodeType":"IdentifierPath","referencedDeclaration":560,"src":"14934:16:4"},"referencedDeclaration":560,"src":"14934:16:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$560_storage_ptr","typeString":"struct Exchange._fillOrderValues"}},"visibility":"internal"}],"id":1714,"initialValue":{"arguments":[{"expression":{"id":1710,"name":"sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"15019:9:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1711,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":577,"src":"15019:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1712,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"15060:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1709,"name":"_fillOrderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"14976:16:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__fillOrderValues_$560_storage_ptr_$","typeString":"type(struct Exchange._fillOrderValues storage pointer)"}},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14976:119:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$560_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"nodeType":"VariableDeclarationStatement","src":"14934:161:4"},{"expression":{"arguments":[{"expression":{"id":1716,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"15128:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$613_$","typeString":"type(enum Exchange.Side)"}},"id":1717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":611,"src":"15128:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},{"id":1718,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"15138:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1719,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"15143:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1720,"name":"fillOrderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"15151:15:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$560_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$__fillOrderValues_$560_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}],"id":1715,"name":"fillOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"15118:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_Side_$613_$_t_uint256_$_t_address_$_t_struct$__fillOrderValues_$560_memory_ptr_$returns$__$","typeString":"function (enum Exchange.Side,uint256,address,struct Exchange._fillOrderValues memory)"}},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15118:49:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1722,"nodeType":"ExpressionStatement","src":"15118:49:4"},{"expression":{"arguments":[{"expression":{"id":1724,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"15200:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$613_$","typeString":"type(enum Exchange.Side)"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":612,"src":"15200:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},{"expression":{"id":1726,"name":"sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"15211:9:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1727,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":562,"src":"15211:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1728,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"15225:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1729,"name":"fillOrderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"15233:15:4","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$560_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$__fillOrderValues_$560_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}],"id":1723,"name":"fillOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"15190:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_Side_$613_$_t_uint256_$_t_address_$_t_struct$__fillOrderValues_$560_memory_ptr_$returns$__$","typeString":"function (enum Exchange.Side,uint256,address,struct Exchange._fillOrderValues memory)"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15190:59:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1731,"nodeType":"ExpressionStatement","src":"15190:59:4"}]}},{"assignments":[1735],"declarations":[{"constant":false,"id":1735,"mutability":"mutable","name":"orderExist","nameLocation":"15294:10:4","nodeType":"VariableDeclaration","scope":1746,"src":"15289:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1734,"name":"bool","nodeType":"ElementaryTypeName","src":"15289:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1741,"initialValue":{"arguments":[{"id":1737,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"15319:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1738,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"15324:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},{"id":1739,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"15330:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1736,"name":"orderExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"15307:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Side_$613_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,enum Exchange.Side,address) view returns (bool)"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15307:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15289:48:4"},{"condition":{"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15360:11:4","subExpression":{"id":1742,"name":"orderExist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"15361:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1745,"nodeType":"IfStatement","src":"15356:22:4","trueBody":{"id":1744,"nodeType":"Break","src":"15373:5:4"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1608,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"13226:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1609,"name":"_sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"13230:10:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"13230:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13226:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1747,"initializationExpression":{"assignments":[1605],"declarations":[{"constant":false,"id":1605,"mutability":"mutable","name":"i","nameLocation":"13219:1:4","nodeType":"VariableDeclaration","scope":1747,"src":"13211:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1604,"name":"uint256","nodeType":"ElementaryTypeName","src":"13211:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1607,"initialValue":{"hexValue":"30","id":1606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13223:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13211:13:4"},"loopExpression":{"expression":{"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13249:3:4","subExpression":{"id":1612,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"13249:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1614,"nodeType":"ExpressionStatement","src":"13249:3:4"},"nodeType":"ForStatement","src":"13206:2188:4"}]}}]},"id":1909,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1578,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"12977:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1579,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"12982:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},{"id":1580,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"12988:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1581,"kind":"modifierInvocation","modifierName":{"id":1577,"name":"validOrder","nodeType":"IdentifierPath","referencedDeclaration":2222,"src":"12966:10:4"},"nodeType":"ModifierInvocation","src":"12966:29:4"},{"arguments":[{"id":1583,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"13007:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1584,"kind":"modifierInvocation","modifierName":{"id":1582,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":2235,"src":"12996:10:4"},"nodeType":"ModifierInvocation","src":"12996:18:4"}],"name":"matchOrders","nameLocation":"12871:11:4","nodeType":"FunctionDefinition","parameters":{"id":1576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1570,"mutability":"mutable","name":"_token","nameLocation":"12901:6:4","nodeType":"VariableDeclaration","scope":1909,"src":"12893:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1569,"name":"address","nodeType":"ElementaryTypeName","src":"12893:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1572,"mutability":"mutable","name":"_id","nameLocation":"12926:3:4","nodeType":"VariableDeclaration","scope":1909,"src":"12918:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1571,"name":"uint256","nodeType":"ElementaryTypeName","src":"12918:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1575,"mutability":"mutable","name":"side","nameLocation":"12945:4:4","nodeType":"VariableDeclaration","scope":1909,"src":"12940:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"},"typeName":{"id":1574,"nodeType":"UserDefinedTypeName","pathNode":{"id":1573,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":613,"src":"12940:4:4"},"referencedDeclaration":613,"src":"12940:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},"visibility":"internal"}],"src":"12882:74:4"},"returnParameters":{"id":1585,"nodeType":"ParameterList","parameters":[],"src":"13015:0:4"},"scope":2236,"src":"12862:4778:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1929,"nodeType":"Block","src":"17754:67:4","statements":[{"expression":{"expression":{"baseExpression":{"baseExpression":{"id":1919,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"17772:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$584_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":1921,"indexExpression":{"id":1920,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"17784:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17772:19:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$584_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":1926,"indexExpression":{"arguments":[{"id":1924,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"17800:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}],"id":1923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17792:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1922,"name":"uint256","nodeType":"ElementaryTypeName","src":"17792:7:4","typeDescriptions":{}}},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17792:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17772:34:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"17772:41:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1918,"id":1928,"nodeType":"Return","src":"17765:48:4"}]},"functionSelector":"e947a695","id":1930,"implemented":true,"kind":"function","modifiers":[],"name":"getOrderLength","nameLocation":"17657:14:4","nodeType":"FunctionDefinition","parameters":{"id":1915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1912,"mutability":"mutable","name":"side","nameLocation":"17687:4:4","nodeType":"VariableDeclaration","scope":1930,"src":"17682:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"},"typeName":{"id":1911,"nodeType":"UserDefinedTypeName","pathNode":{"id":1910,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":613,"src":"17682:4:4"},"referencedDeclaration":613,"src":"17682:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":1914,"mutability":"mutable","name":"_token","nameLocation":"17710:6:4","nodeType":"VariableDeclaration","scope":1930,"src":"17702:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1913,"name":"address","nodeType":"ElementaryTypeName","src":"17702:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17671:52:4"},"returnParameters":{"id":1918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1930,"src":"17745:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1916,"name":"uint256","nodeType":"ElementaryTypeName","src":"17745:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17744:9:4"},"scope":2236,"src":"17648:173:4","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1950,"nodeType":"Block","src":"19021:69:4","statements":[{"expression":{"expression":{"baseExpression":{"baseExpression":{"id":1940,"name":"s_filledOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"19039:14:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$610_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._filledOrder storage ref[] storage ref))"}},"id":1942,"indexExpression":{"id":1941,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"19054:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19039:21:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$610_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._filledOrder storage ref[] storage ref)"}},"id":1947,"indexExpression":{"arguments":[{"id":1945,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"19069:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}],"id":1944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19061:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1943,"name":"uint256","nodeType":"ElementaryTypeName","src":"19061:7:4","typeDescriptions":{}}},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19061:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19039:36:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__filledOrder_$610_storage_$dyn_storage","typeString":"struct Exchange._filledOrder storage ref[] storage ref"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"19039:43:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1939,"id":1949,"nodeType":"Return","src":"19032:50:4"}]},"functionSelector":"c3364be4","id":1951,"implemented":true,"kind":"function","modifiers":[],"name":"getFilledOrderLength","nameLocation":"18919:20:4","nodeType":"FunctionDefinition","parameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1932,"mutability":"mutable","name":"_user","nameLocation":"18958:5:4","nodeType":"VariableDeclaration","scope":1951,"src":"18950:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1931,"name":"address","nodeType":"ElementaryTypeName","src":"18950:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1935,"mutability":"mutable","name":"side","nameLocation":"18979:4:4","nodeType":"VariableDeclaration","scope":1951,"src":"18974:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"},"typeName":{"id":1934,"nodeType":"UserDefinedTypeName","pathNode":{"id":1933,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":613,"src":"18974:4:4"},"referencedDeclaration":613,"src":"18974:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},"visibility":"internal"}],"src":"18939:51:4"},"returnParameters":{"id":1939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1951,"src":"19012:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"19012:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19011:9:4"},"scope":2236,"src":"18910:180:4","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2014,"nodeType":"Block","src":"20521:320:4","statements":[{"assignments":[1966],"declarations":[{"constant":false,"id":1966,"mutability":"mutable","name":"i","nameLocation":"20540:1:4","nodeType":"VariableDeclaration","scope":2014,"src":"20532:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1965,"name":"uint256","nodeType":"ElementaryTypeName","src":"20532:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1968,"initialValue":{"hexValue":"30","id":1967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20544:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20532:13:4"},{"assignments":[1973],"declarations":[{"constant":false,"id":1973,"mutability":"mutable","name":"_order","nameLocation":"20572:6:4","nodeType":"VariableDeclaration","scope":2014,"src":"20556:22:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order[]"},"typeName":{"baseType":{"id":1971,"nodeType":"UserDefinedTypeName","pathNode":{"id":1970,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":584,"src":"20556:6:4"},"referencedDeclaration":584,"src":"20556:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_storage_ptr","typeString":"struct Exchange._Order"}},"id":1972,"nodeType":"ArrayTypeName","src":"20556:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"}},"visibility":"internal"}],"id":1979,"initialValue":{"baseExpression":{"baseExpression":{"id":1974,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"20581:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$584_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":1976,"indexExpression":{"id":1975,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"20593:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20581:19:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$584_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":1978,"indexExpression":{"id":1977,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"20601:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20581:25:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"20556:50:4"},{"assignments":[1982],"declarations":[{"constant":false,"id":1982,"mutability":"mutable","name":"order","nameLocation":"20631:5:4","nodeType":"VariableDeclaration","scope":2014,"src":"20617:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":1981,"nodeType":"UserDefinedTypeName","pathNode":{"id":1980,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":584,"src":"20617:6:4"},"referencedDeclaration":584,"src":"20617:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"}],"id":1983,"nodeType":"VariableDeclarationStatement","src":"20617:19:4"},{"body":{"id":2008,"nodeType":"Block","src":"20679:127:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1993,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"20698:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":1995,"indexExpression":{"id":1994,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"20705:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20698:9:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1996,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":562,"src":"20698:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1997,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"20714:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20698:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2007,"nodeType":"IfStatement","src":"20694:101:4","trueBody":{"id":2006,"nodeType":"Block","src":"20719:76:4","statements":[{"expression":{"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1999,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"20738:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2000,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"20746:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2002,"indexExpression":{"id":2001,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"20753:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20746:9:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"src":"20738:17:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2004,"nodeType":"ExpressionStatement","src":"20738:17:4"},{"id":2005,"nodeType":"Break","src":"20774:5:4"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1986,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"20655:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1987,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"20659:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"20659:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20655:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2009,"initializationExpression":{"expression":{"id":1984,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"20652:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1985,"nodeType":"ExpressionStatement","src":"20652:1:4"},"loopExpression":{"expression":{"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"20674:3:4","subExpression":{"id":1990,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"20674:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1992,"nodeType":"ExpressionStatement","src":"20674:3:4"},"nodeType":"ForStatement","src":"20647:159:4"},{"expression":{"components":[{"id":2010,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"20824:5:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},{"id":2011,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"20831:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2012,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20823:10:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$__Order_$584_memory_ptr_$_t_uint256_$","typeString":"tuple(struct Exchange._Order memory,uint256)"}},"functionReturnParameters":1964,"id":2013,"nodeType":"Return","src":"20816:17:4"}]},"functionSelector":"609ae6b5","id":2015,"implemented":true,"kind":"function","modifiers":[],"name":"getOrderFromArray","nameLocation":"20381:17:4","nodeType":"FunctionDefinition","parameters":{"id":1958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1953,"mutability":"mutable","name":"_token","nameLocation":"20417:6:4","nodeType":"VariableDeclaration","scope":2015,"src":"20409:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1952,"name":"address","nodeType":"ElementaryTypeName","src":"20409:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1955,"mutability":"mutable","name":"side","nameLocation":"20442:4:4","nodeType":"VariableDeclaration","scope":2015,"src":"20434:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1954,"name":"uint256","nodeType":"ElementaryTypeName","src":"20434:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1957,"mutability":"mutable","name":"_id","nameLocation":"20465:3:4","nodeType":"VariableDeclaration","scope":2015,"src":"20457:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1956,"name":"uint256","nodeType":"ElementaryTypeName","src":"20457:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20398:77:4"},"returnParameters":{"id":1964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2015,"src":"20497:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":1960,"nodeType":"UserDefinedTypeName","pathNode":{"id":1959,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":584,"src":"20497:6:4"},"referencedDeclaration":584,"src":"20497:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},{"constant":false,"id":1963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2015,"src":"20512:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1962,"name":"uint256","nodeType":"ElementaryTypeName","src":"20512:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20496:24:4"},"scope":2236,"src":"20372:469:4","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2066,"nodeType":"Block","src":"20971:254:4","statements":[{"assignments":[2031],"declarations":[{"constant":false,"id":2031,"mutability":"mutable","name":"orders","nameLocation":"20998:6:4","nodeType":"VariableDeclaration","scope":2066,"src":"20982:22:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order[]"},"typeName":{"baseType":{"id":2029,"nodeType":"UserDefinedTypeName","pathNode":{"id":2028,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":584,"src":"20982:6:4"},"referencedDeclaration":584,"src":"20982:6:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_storage_ptr","typeString":"struct Exchange._Order"}},"id":2030,"nodeType":"ArrayTypeName","src":"20982:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"}},"visibility":"internal"}],"id":2040,"initialValue":{"baseExpression":{"baseExpression":{"id":2032,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"21007:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$584_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":2034,"indexExpression":{"id":2033,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"21019:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21007:19:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$584_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":2039,"indexExpression":{"arguments":[{"id":2037,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"21035:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}],"id":2036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21027:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2035,"name":"uint256","nodeType":"ElementaryTypeName","src":"21027:7:4","typeDescriptions":{}}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21027:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21007:34:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"20982:59:4"},{"body":{"id":2062,"nodeType":"Block","src":"21098:97:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2052,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"21117:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2054,"indexExpression":{"id":2053,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"21124:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21117:9:4","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$584_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2055,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":562,"src":"21117:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2056,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"21133:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21117:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2061,"nodeType":"IfStatement","src":"21113:71:4","trueBody":{"id":2060,"nodeType":"Block","src":"21138:46:4","statements":[{"expression":{"hexValue":"74727565","id":2058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21164:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2026,"id":2059,"nodeType":"Return","src":"21157:11:4"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2045,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"21074:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2046,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"21078:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$584_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"21078:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21074:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2063,"initializationExpression":{"assignments":[2042],"declarations":[{"constant":false,"id":2042,"mutability":"mutable","name":"i","nameLocation":"21067:1:4","nodeType":"VariableDeclaration","scope":2063,"src":"21059:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2041,"name":"uint256","nodeType":"ElementaryTypeName","src":"21059:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2044,"initialValue":{"hexValue":"30","id":2043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21071:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"21059:13:4"},"loopExpression":{"expression":{"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"21093:3:4","subExpression":{"id":2049,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"21093:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2051,"nodeType":"ExpressionStatement","src":"21093:3:4"},"nodeType":"ForStatement","src":"21054:141:4"},{"expression":{"hexValue":"66616c7365","id":2064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21212:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2026,"id":2065,"nodeType":"Return","src":"21205:12:4"}]},"functionSelector":"182cffeb","id":2067,"implemented":true,"kind":"function","modifiers":[],"name":"orderExists","nameLocation":"20858:11:4","nodeType":"FunctionDefinition","parameters":{"id":2023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2017,"mutability":"mutable","name":"_id","nameLocation":"20888:3:4","nodeType":"VariableDeclaration","scope":2067,"src":"20880:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2016,"name":"uint256","nodeType":"ElementaryTypeName","src":"20880:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2020,"mutability":"mutable","name":"side","nameLocation":"20907:4:4","nodeType":"VariableDeclaration","scope":2067,"src":"20902:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"},"typeName":{"id":2019,"nodeType":"UserDefinedTypeName","pathNode":{"id":2018,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":613,"src":"20902:4:4"},"referencedDeclaration":613,"src":"20902:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":2022,"mutability":"mutable","name":"_token","nameLocation":"20930:6:4","nodeType":"VariableDeclaration","scope":2067,"src":"20922:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2021,"name":"address","nodeType":"ElementaryTypeName","src":"20922:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20869:74:4"},"returnParameters":{"id":2026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2067,"src":"20965:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2024,"name":"bool","nodeType":"ElementaryTypeName","src":"20965:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20964:6:4"},"scope":2236,"src":"20849:376:4","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2093,"nodeType":"Block","src":"21303:134:4","statements":[{"expression":{"arguments":[{"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"21322:24:4","subExpression":{"arguments":[{"id":2078,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"21339:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2077,"name":"isVerifiedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"21323:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21323:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20616c7265616479207665726966696564","id":2081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21348:24:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430","typeString":"literal_string \"Token already verified\""},"value":"Token already verified"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430","typeString":"literal_string \"Token already verified\""}],"id":2076,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21314:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21314:59:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2083,"nodeType":"ExpressionStatement","src":"21314:59:4"},{"expression":{"arguments":[{"arguments":[{"id":2088,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"21410:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2089,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"21418:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2087,"name":"_tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"21399:10:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__tokenInfo_$555_storage_ptr_$","typeString":"type(struct Exchange._tokenInfo storage pointer)"}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21399:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__tokenInfo_$555_memory_ptr","typeString":"struct Exchange._tokenInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__tokenInfo_$555_memory_ptr","typeString":"struct Exchange._tokenInfo memory"}],"expression":{"id":2084,"name":"tokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"21384:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$555_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo storage ref[] storage ref"}},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"21384:14:4","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$__tokenInfo_$555_storage_$dyn_storage_ptr_$_t_struct$__tokenInfo_$555_storage_$returns$__$bound_to$_t_array$_t_struct$__tokenInfo_$555_storage_$dyn_storage_ptr_$","typeString":"function (struct Exchange._tokenInfo storage ref[] storage pointer,struct Exchange._tokenInfo storage ref)"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21384:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2092,"nodeType":"ExpressionStatement","src":"21384:45:4"}]},"functionSelector":"af81c5b9","id":2094,"implemented":true,"kind":"function","modifiers":[{"id":2074,"kind":"modifierInvocation","modifierName":{"id":2073,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"21293:9:4"},"nodeType":"ModifierInvocation","src":"21293:9:4"}],"name":"addToken","nameLocation":"21242:8:4","nodeType":"FunctionDefinition","parameters":{"id":2072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2069,"mutability":"mutable","name":"_token","nameLocation":"21259:6:4","nodeType":"VariableDeclaration","scope":2094,"src":"21251:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2068,"name":"address","nodeType":"ElementaryTypeName","src":"21251:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2071,"mutability":"mutable","name":"_decimals","nameLocation":"21275:9:4","nodeType":"VariableDeclaration","scope":2094,"src":"21267:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2070,"name":"uint256","nodeType":"ElementaryTypeName","src":"21267:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21250:35:4"},"returnParameters":{"id":2075,"nodeType":"ParameterList","parameters":[],"src":"21303:0:4"},"scope":2236,"src":"21233:204:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2125,"nodeType":"Block","src":"21513:204:4","statements":[{"body":{"id":2121,"nodeType":"Block","src":"21617:70:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2112,"name":"tokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"21636:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$555_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo storage ref[] storage ref"}},"id":2114,"indexExpression":{"id":2113,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"21646:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21636:12:4","typeDescriptions":{"typeIdentifier":"t_struct$__tokenInfo_$555_storage","typeString":"struct Exchange._tokenInfo storage ref"}},"id":2115,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":552,"src":"21636:16:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2116,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"21656:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21636:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2120,"nodeType":"IfStatement","src":"21632:43:4","trueBody":{"expression":{"hexValue":"74727565","id":2118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21671:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2100,"id":2119,"nodeType":"Return","src":"21664:11:4"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2105,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"21590:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2106,"name":"tokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"21594:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$555_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo storage ref[] storage ref"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"21594:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21590:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2122,"initializationExpression":{"assignments":[2102],"declarations":[{"constant":false,"id":2102,"mutability":"mutable","name":"i","nameLocation":"21583:1:4","nodeType":"VariableDeclaration","scope":2122,"src":"21575:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2101,"name":"uint256","nodeType":"ElementaryTypeName","src":"21575:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2104,"initialValue":{"hexValue":"30","id":2103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21587:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"21575:13:4"},"loopExpression":{"expression":{"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"21612:3:4","subExpression":{"id":2109,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"21612:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2111,"nodeType":"ExpressionStatement","src":"21612:3:4"},"nodeType":"ForStatement","src":"21570:117:4"},{"expression":{"hexValue":"66616c7365","id":2123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21704:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2100,"id":2124,"nodeType":"Return","src":"21697:12:4"}]},"functionSelector":"1027b219","id":2126,"implemented":true,"kind":"function","modifiers":[],"name":"isVerifiedToken","nameLocation":"21454:15:4","nodeType":"FunctionDefinition","parameters":{"id":2097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2096,"mutability":"mutable","name":"_token","nameLocation":"21478:6:4","nodeType":"VariableDeclaration","scope":2126,"src":"21470:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2095,"name":"address","nodeType":"ElementaryTypeName","src":"21470:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21469:16:4"},"returnParameters":{"id":2100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2126,"src":"21507:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2098,"name":"bool","nodeType":"ElementaryTypeName","src":"21507:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21506:6:4"},"scope":2236,"src":"21445:272:4","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2159,"nodeType":"Block","src":"21793:186:4","statements":[{"body":{"id":2157,"nodeType":"Block","src":"21851:121:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2144,"name":"tokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"21870:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$555_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo storage ref[] storage ref"}},"id":2146,"indexExpression":{"id":2145,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"21880:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21870:12:4","typeDescriptions":{"typeIdentifier":"t_struct$__tokenInfo_$555_storage","typeString":"struct Exchange._tokenInfo storage ref"}},"id":2147,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":552,"src":"21870:16:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2148,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"21890:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21870:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2156,"nodeType":"IfStatement","src":"21866:95:4","trueBody":{"id":2155,"nodeType":"Block","src":"21898:63:4","statements":[{"expression":{"expression":{"baseExpression":{"id":2150,"name":"tokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"21924:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$555_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo storage ref[] storage ref"}},"id":2152,"indexExpression":{"id":2151,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"21934:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21924:12:4","typeDescriptions":{"typeIdentifier":"t_struct$__tokenInfo_$555_storage","typeString":"struct Exchange._tokenInfo storage ref"}},"id":2153,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":554,"src":"21924:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2132,"id":2154,"nodeType":"Return","src":"21917:28:4"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2137,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"21824:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2138,"name":"tokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"21828:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$555_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo storage ref[] storage ref"}},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"21828:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21824:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2158,"initializationExpression":{"assignments":[2134],"declarations":[{"constant":false,"id":2134,"mutability":"mutable","name":"i","nameLocation":"21817:1:4","nodeType":"VariableDeclaration","scope":2158,"src":"21809:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2133,"name":"uint256","nodeType":"ElementaryTypeName","src":"21809:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2136,"initialValue":{"hexValue":"30","id":2135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21821:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"21809:13:4"},"loopExpression":{"expression":{"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"21846:3:4","subExpression":{"id":2141,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"21846:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2143,"nodeType":"ExpressionStatement","src":"21846:3:4"},"nodeType":"ForStatement","src":"21804:168:4"}]},"functionSelector":"1f69565f","id":2160,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenInfo","nameLocation":"21734:12:4","nodeType":"FunctionDefinition","parameters":{"id":2129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2128,"mutability":"mutable","name":"_token","nameLocation":"21755:6:4","nodeType":"VariableDeclaration","scope":2160,"src":"21747:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2127,"name":"address","nodeType":"ElementaryTypeName","src":"21747:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21746:16:4"},"returnParameters":{"id":2132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2160,"src":"21784:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2130,"name":"uint256","nodeType":"ElementaryTypeName","src":"21784:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21783:9:4"},"scope":2236,"src":"21725:254:4","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2173,"nodeType":"Block","src":"22054:50:4","statements":[{"expression":{"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2167,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"22065:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2169,"name":"_Walletaddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"22081:14:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2168,"name":"Wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"22074:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Wallet_$3199_$","typeString":"type(contract Wallet)"}},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22074:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"src":"22065:31:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"id":2172,"nodeType":"ExpressionStatement","src":"22065:31:4"}]},"functionSelector":"ac1a386a","id":2174,"implemented":true,"kind":"function","modifiers":[{"id":2165,"kind":"modifierInvocation","modifierName":{"id":2164,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"22044:9:4"},"nodeType":"ModifierInvocation","src":"22044:9:4"}],"name":"setWalletAddress","nameLocation":"21996:16:4","nodeType":"FunctionDefinition","parameters":{"id":2163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2162,"mutability":"mutable","name":"_Walletaddress","nameLocation":"22021:14:4","nodeType":"VariableDeclaration","scope":2174,"src":"22013:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2161,"name":"address","nodeType":"ElementaryTypeName","src":"22013:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22012:24:4"},"returnParameters":{"id":2166,"nodeType":"ParameterList","parameters":[],"src":"22054:0:4"},"scope":2236,"src":"21987:117:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2187,"nodeType":"Block","src":"22207:68:4","statements":[{"expression":{"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2181,"name":"priceChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"22218:12:4","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2405","typeString":"contract PriceChecker"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2183,"name":"_PriceCheckeraddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"22246:20:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2182,"name":"PriceChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"22233:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PriceChecker_$2405_$","typeString":"type(contract PriceChecker)"}},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22233:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2405","typeString":"contract PriceChecker"}},"src":"22218:49:4","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2405","typeString":"contract PriceChecker"}},"id":2186,"nodeType":"ExpressionStatement","src":"22218:49:4"}]},"functionSelector":"b136e39a","id":2188,"implemented":true,"kind":"function","modifiers":[{"id":2179,"kind":"modifierInvocation","modifierName":{"id":2178,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"22197:9:4"},"nodeType":"ModifierInvocation","src":"22197:9:4"}],"name":"setPriceCheckerAddress","nameLocation":"22121:22:4","nodeType":"FunctionDefinition","parameters":{"id":2177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2176,"mutability":"mutable","name":"_PriceCheckeraddress","nameLocation":"22162:20:4","nodeType":"VariableDeclaration","scope":2188,"src":"22154:28:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2175,"name":"address","nodeType":"ElementaryTypeName","src":"22154:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22143:46:4"},"returnParameters":{"id":2180,"nodeType":"ParameterList","parameters":[],"src":"22207:0:4"},"scope":2236,"src":"22112:163:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2201,"nodeType":"Block","src":"22346:58:4","statements":[{"expression":{"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2195,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"22357:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2635","typeString":"contract TradingFees"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2197,"name":"_tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"22383:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2196,"name":"TradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"22371:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TradingFees_$2635_$","typeString":"type(contract TradingFees)"}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22371:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2635","typeString":"contract TradingFees"}},"src":"22357:39:4","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2635","typeString":"contract TradingFees"}},"id":2200,"nodeType":"ExpressionStatement","src":"22357:39:4"}]},"functionSelector":"dafbfe6a","id":2202,"implemented":true,"kind":"function","modifiers":[{"id":2193,"kind":"modifierInvocation","modifierName":{"id":2192,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"22336:9:4"},"nodeType":"ModifierInvocation","src":"22336:9:4"}],"name":"setTradingFees","nameLocation":"22292:14:4","nodeType":"FunctionDefinition","parameters":{"id":2191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2190,"mutability":"mutable","name":"_tradingFees","nameLocation":"22315:12:4","nodeType":"VariableDeclaration","scope":2202,"src":"22307:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2189,"name":"address","nodeType":"ElementaryTypeName","src":"22307:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22306:22:4"},"returnParameters":{"id":2194,"nodeType":"ParameterList","parameters":[],"src":"22346:0:4"},"scope":2236,"src":"22283:121:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2221,"nodeType":"Block","src":"22506:90:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":2213,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"22537:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2214,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"22542:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},{"id":2215,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"22548:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2212,"name":"orderExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"22525:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Side_$613_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,enum Exchange.Side,address) view returns (bool)"}},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22525:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964204f72646572204944","id":2217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22557:18:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2","typeString":"literal_string \"Invalid Order ID\""},"value":"Invalid Order ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2","typeString":"literal_string \"Invalid Order ID\""}],"id":2211,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22517:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22517:59:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2219,"nodeType":"ExpressionStatement","src":"22517:59:4"},{"id":2220,"nodeType":"PlaceholderStatement","src":"22587:1:4"}]},"id":2222,"name":"validOrder","nameLocation":"22421:10:4","nodeType":"ModifierDefinition","parameters":{"id":2210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2204,"mutability":"mutable","name":"_id","nameLocation":"22450:3:4","nodeType":"VariableDeclaration","scope":2222,"src":"22442:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2203,"name":"uint256","nodeType":"ElementaryTypeName","src":"22442:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2207,"mutability":"mutable","name":"side","nameLocation":"22469:4:4","nodeType":"VariableDeclaration","scope":2222,"src":"22464:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"},"typeName":{"id":2206,"nodeType":"UserDefinedTypeName","pathNode":{"id":2205,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":613,"src":"22464:4:4"},"referencedDeclaration":613,"src":"22464:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$613","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":2209,"mutability":"mutable","name":"_token","nameLocation":"22492:6:4","nodeType":"VariableDeclaration","scope":2222,"src":"22484:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2208,"name":"address","nodeType":"ElementaryTypeName","src":"22484:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22431:74:4"},"src":"22412:184:4","virtual":false,"visibility":"internal"},{"body":{"id":2234,"nodeType":"Block","src":"22640:91:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":2228,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"22675:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2227,"name":"isVerifiedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"22659:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22659:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20756e617661696c61626c6520696e20444558","id":2230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22684:26:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3","typeString":"literal_string \"Token unavailable in DEX\""},"value":"Token unavailable in DEX"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3","typeString":"literal_string \"Token unavailable in DEX\""}],"id":2226,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22651:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22651:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2232,"nodeType":"ExpressionStatement","src":"22651:60:4"},{"id":2233,"nodeType":"PlaceholderStatement","src":"22722:1:4"}]},"id":2235,"name":"validToken","nameLocation":"22613:10:4","nodeType":"ModifierDefinition","parameters":{"id":2225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2224,"mutability":"mutable","name":"_token","nameLocation":"22632:6:4","nodeType":"VariableDeclaration","scope":2235,"src":"22624:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2223,"name":"address","nodeType":"ElementaryTypeName","src":"22624:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22623:16:4"},"src":"22604:127:4","virtual":false,"visibility":"internal"}],"scope":2237,"src":"387:22347:4","usedErrors":[]}],"src":"35:22701:4"},"id":4},"contracts/PriceChecker.sol":{"ast":{"absolutePath":"contracts/PriceChecker.sol","exportedSymbols":{"AggregatorV3Interface":[45],"Context":[180],"Ownable":[158],"PriceChecker":[2405]},"id":2406,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2238,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"33:23:5"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":2239,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2406,"sourceUnit":46,"src":"60:76:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2240,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2406,"sourceUnit":159,"src":"138:52:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2241,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":158,"src":"219:7:5"},"id":2242,"nodeType":"InheritanceSpecifier","src":"219:7:5"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2405,"linearizedBaseContracts":[2405,158,180],"name":"PriceChecker","nameLocation":"203:12:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"10c7f0b9","id":2246,"mutability":"mutable","name":"priceFeeds","nameLocation":"254:10:5","nodeType":"VariableDeclaration","scope":2405,"src":"234:30:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2254_storage_$dyn_storage","typeString":"struct PriceChecker._priceFeed[]"},"typeName":{"baseType":{"id":2244,"nodeType":"UserDefinedTypeName","pathNode":{"id":2243,"name":"_priceFeed","nodeType":"IdentifierPath","referencedDeclaration":2254,"src":"234:10:5"},"referencedDeclaration":2254,"src":"234:10:5","typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$2254_storage_ptr","typeString":"struct PriceChecker._priceFeed"}},"id":2245,"nodeType":"ArrayTypeName","src":"234:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2254_storage_$dyn_storage_ptr","typeString":"struct PriceChecker._priceFeed[]"}},"visibility":"public"},{"canonicalName":"PriceChecker._priceFeed","id":2254,"members":[{"constant":false,"id":2248,"mutability":"mutable","name":"name","nameLocation":"309:4:5","nodeType":"VariableDeclaration","scope":2254,"src":"302:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2247,"name":"string","nodeType":"ElementaryTypeName","src":"302:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2250,"mutability":"mutable","name":"token","nameLocation":"332:5:5","nodeType":"VariableDeclaration","scope":2254,"src":"324:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2249,"name":"address","nodeType":"ElementaryTypeName","src":"324:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2253,"mutability":"mutable","name":"priceFeed","nameLocation":"370:9:5","nodeType":"VariableDeclaration","scope":2254,"src":"348:31:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"},"typeName":{"id":2252,"nodeType":"UserDefinedTypeName","pathNode":{"id":2251,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"348:21:5"},"referencedDeclaration":45,"src":"348:21:5","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"}],"name":"_priceFeed","nameLocation":"280:10:5","nodeType":"StructDefinition","scope":2405,"src":"273:114:5","visibility":"public"},{"body":{"id":2335,"nodeType":"Block","src":"568:583:5","statements":[{"assignments":[2269],"declarations":[{"constant":false,"id":2269,"mutability":"mutable","name":"pricefeed","nameLocation":"599:9:5","nodeType":"VariableDeclaration","scope":2335,"src":"579:29:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2254_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed[]"},"typeName":{"baseType":{"id":2267,"nodeType":"UserDefinedTypeName","pathNode":{"id":2266,"name":"_priceFeed","nodeType":"IdentifierPath","referencedDeclaration":2254,"src":"579:10:5"},"referencedDeclaration":2254,"src":"579:10:5","typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$2254_storage_ptr","typeString":"struct PriceChecker._priceFeed"}},"id":2268,"nodeType":"ArrayTypeName","src":"579:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2254_storage_$dyn_storage_ptr","typeString":"struct PriceChecker._priceFeed[]"}},"visibility":"internal"}],"id":2271,"initialValue":{"id":2270,"name":"priceFeeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"611:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2254_storage_$dyn_storage","typeString":"struct PriceChecker._priceFeed storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"579:42:5"},{"assignments":[2273],"declarations":[{"constant":false,"id":2273,"mutability":"mutable","name":"isAdded","nameLocation":"637:7:5","nodeType":"VariableDeclaration","scope":2335,"src":"632:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2272,"name":"bool","nodeType":"ElementaryTypeName","src":"632:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2275,"initialValue":{"hexValue":"66616c7365","id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"647:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"632:20:5"},{"body":{"id":2310,"nodeType":"Block","src":"710:238:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2290,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"774:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2288,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"757:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"757:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"757:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2287,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"747:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"747:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2296,"name":"pricefeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"829:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2254_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed memory[] memory"}},"id":2298,"indexExpression":{"id":2297,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"839:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"829:12:5","typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$2254_memory_ptr","typeString":"struct PriceChecker._priceFeed memory"}},"id":2299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"name","nodeType":"MemberAccess","referencedDeclaration":2248,"src":"829:17:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2294,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"812:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"812:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"812:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2293,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"802:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"802:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"747:101:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2309,"nodeType":"IfStatement","src":"725:212:5","trueBody":{"id":2308,"nodeType":"Block","src":"864:73:5","statements":[{"expression":{"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2303,"name":"isAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"883:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"893:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"883:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2306,"nodeType":"ExpressionStatement","src":"883:14:5"},{"id":2307,"nodeType":"Break","src":"916:5:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2280,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"683:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2281,"name":"pricefeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"687:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2254_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed memory[] memory"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"687:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"683:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2311,"initializationExpression":{"assignments":[2277],"declarations":[{"constant":false,"id":2277,"mutability":"mutable","name":"i","nameLocation":"676:1:5","nodeType":"VariableDeclaration","scope":2311,"src":"668:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2276,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2279,"initialValue":{"hexValue":"30","id":2278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"680:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"668:13:5"},"loopExpression":{"expression":{"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"705:3:5","subExpression":{"id":2284,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"705:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2286,"nodeType":"ExpressionStatement","src":"705:3:5"},"nodeType":"ForStatement","src":"663:285:5"},{"expression":{"arguments":[{"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"966:8:5","subExpression":{"id":2313,"name":"isAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"967:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5072696365204665656420616c7265616479206164646564","id":2315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"976:26:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f","typeString":"literal_string \"Price Feed already added\""},"value":"Price Feed already added"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f","typeString":"literal_string \"Price Feed already added\""}],"id":2312,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"958:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"958:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2317,"nodeType":"ExpressionStatement","src":"958:45:5"},{"assignments":[2320],"declarations":[{"constant":false,"id":2320,"mutability":"mutable","name":"priceFeed","nameLocation":"1036:9:5","nodeType":"VariableDeclaration","scope":2335,"src":"1014:31:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"},"typeName":{"id":2319,"nodeType":"UserDefinedTypeName","pathNode":{"id":2318,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"1014:21:5"},"referencedDeclaration":45,"src":"1014:21:5","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"}],"id":2324,"initialValue":{"arguments":[{"id":2322,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"1070:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2321,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"1048:21:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$45_$","typeString":"type(contract AggregatorV3Interface)"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1048:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"nodeType":"VariableDeclarationStatement","src":"1014:65:5"},{"expression":{"arguments":[{"arguments":[{"id":2329,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"1117:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2330,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"1124:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2331,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"1132:9:5","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}],"id":2328,"name":"_priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"1106:10:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__priceFeed_$2254_storage_ptr_$","typeString":"type(struct PriceChecker._priceFeed storage pointer)"}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1106:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$2254_memory_ptr","typeString":"struct PriceChecker._priceFeed memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__priceFeed_$2254_memory_ptr","typeString":"struct PriceChecker._priceFeed memory"}],"expression":{"id":2325,"name":"priceFeeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"1090:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2254_storage_$dyn_storage","typeString":"struct PriceChecker._priceFeed storage ref[] storage ref"}},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"1090:15:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$__priceFeed_$2254_storage_$dyn_storage_ptr_$_t_struct$__priceFeed_$2254_storage_$returns$__$bound_to$_t_array$_t_struct$__priceFeed_$2254_storage_$dyn_storage_ptr_$","typeString":"function (struct PriceChecker._priceFeed storage ref[] storage pointer,struct PriceChecker._priceFeed storage ref)"}},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1090:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2334,"nodeType":"ExpressionStatement","src":"1090:53:5"}]},"functionSelector":"8c35423e","id":2336,"implemented":true,"kind":"function","modifiers":[{"id":2263,"kind":"modifierInvocation","modifierName":{"id":2262,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"558:9:5"},"nodeType":"ModifierInvocation","src":"558:9:5"}],"name":"addPriceFeed","nameLocation":"447:12:5","nodeType":"FunctionDefinition","parameters":{"id":2261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2256,"mutability":"mutable","name":"_name","nameLocation":"484:5:5","nodeType":"VariableDeclaration","scope":2336,"src":"470:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2255,"name":"string","nodeType":"ElementaryTypeName","src":"470:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2258,"mutability":"mutable","name":"_token","nameLocation":"508:6:5","nodeType":"VariableDeclaration","scope":2336,"src":"500:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2257,"name":"address","nodeType":"ElementaryTypeName","src":"500:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2260,"mutability":"mutable","name":"_address","nameLocation":"533:8:5","nodeType":"VariableDeclaration","scope":2336,"src":"525:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2259,"name":"address","nodeType":"ElementaryTypeName","src":"525:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:89:5"},"returnParameters":{"id":2264,"nodeType":"ParameterList","parameters":[],"src":"568:0:5"},"scope":2405,"src":"438:713:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2377,"nodeType":"Block","src":"1269:244:5","statements":[{"assignments":[2348],"declarations":[{"constant":false,"id":2348,"mutability":"mutable","name":"pricefeed","nameLocation":"1300:9:5","nodeType":"VariableDeclaration","scope":2377,"src":"1280:29:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2254_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed[]"},"typeName":{"baseType":{"id":2346,"nodeType":"UserDefinedTypeName","pathNode":{"id":2345,"name":"_priceFeed","nodeType":"IdentifierPath","referencedDeclaration":2254,"src":"1280:10:5"},"referencedDeclaration":2254,"src":"1280:10:5","typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$2254_storage_ptr","typeString":"struct PriceChecker._priceFeed"}},"id":2347,"nodeType":"ArrayTypeName","src":"1280:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2254_storage_$dyn_storage_ptr","typeString":"struct PriceChecker._priceFeed[]"}},"visibility":"internal"}],"id":2350,"initialValue":{"id":2349,"name":"priceFeeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"1312:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2254_storage_$dyn_storage","typeString":"struct PriceChecker._priceFeed storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1280:42:5"},{"body":{"id":2375,"nodeType":"Block","src":"1382:124:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2362,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"1401:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"baseExpression":{"id":2363,"name":"pricefeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"1411:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2254_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed memory[] memory"}},"id":2365,"indexExpression":{"id":2364,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"1421:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1411:12:5","typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$2254_memory_ptr","typeString":"struct PriceChecker._priceFeed memory"}},"id":2366,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":2250,"src":"1411:18:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1401:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2374,"nodeType":"IfStatement","src":"1397:98:5","trueBody":{"id":2373,"nodeType":"Block","src":"1431:64:5","statements":[{"expression":{"expression":{"baseExpression":{"id":2368,"name":"pricefeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"1457:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2254_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed memory[] memory"}},"id":2370,"indexExpression":{"id":2369,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"1467:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1457:12:5","typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$2254_memory_ptr","typeString":"struct PriceChecker._priceFeed memory"}},"id":2371,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"priceFeed","nodeType":"MemberAccess","referencedDeclaration":2253,"src":"1457:22:5","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"functionReturnParameters":2343,"id":2372,"nodeType":"Return","src":"1450:29:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2355,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"1355:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2356,"name":"pricefeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"1359:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2254_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed memory[] memory"}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1359:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1355:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2376,"initializationExpression":{"assignments":[2352],"declarations":[{"constant":false,"id":2352,"mutability":"mutable","name":"i","nameLocation":"1348:1:5","nodeType":"VariableDeclaration","scope":2376,"src":"1340:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2351,"name":"uint256","nodeType":"ElementaryTypeName","src":"1340:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2354,"initialValue":{"hexValue":"30","id":2353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1352:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1340:13:5"},"loopExpression":{"expression":{"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1377:3:5","subExpression":{"id":2359,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"1377:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2361,"nodeType":"ExpressionStatement","src":"1377:3:5"},"nodeType":"ForStatement","src":"1335:171:5"}]},"id":2378,"implemented":true,"kind":"function","modifiers":[],"name":"getPriceFeed","nameLocation":"1168:12:5","nodeType":"FunctionDefinition","parameters":{"id":2339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2338,"mutability":"mutable","name":"_token","nameLocation":"1199:6:5","nodeType":"VariableDeclaration","scope":2378,"src":"1191:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2337,"name":"address","nodeType":"ElementaryTypeName","src":"1191:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1180:32:5"},"returnParameters":{"id":2343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2342,"mutability":"mutable","name":"priceFeed","nameLocation":"1258:9:5","nodeType":"VariableDeclaration","scope":2378,"src":"1236:31:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"},"typeName":{"id":2341,"nodeType":"UserDefinedTypeName","pathNode":{"id":2340,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"1236:21:5"},"referencedDeclaration":45,"src":"1236:21:5","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"}],"src":"1235:33:5"},"scope":2405,"src":"1159:354:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2403,"nodeType":"Block","src":"1589:172:5","statements":[{"assignments":[2387],"declarations":[{"constant":false,"id":2387,"mutability":"mutable","name":"priceFeed","nameLocation":"1622:9:5","nodeType":"VariableDeclaration","scope":2403,"src":"1600:31:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"},"typeName":{"id":2386,"nodeType":"UserDefinedTypeName","pathNode":{"id":2385,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"1600:21:5"},"referencedDeclaration":45,"src":"1600:21:5","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"}],"id":2391,"initialValue":{"arguments":[{"id":2389,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"1647:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2388,"name":"getPriceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"1634:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_contract$_AggregatorV3Interface_$45_$","typeString":"function (address) view returns (contract AggregatorV3Interface)"}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1634:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"nodeType":"VariableDeclarationStatement","src":"1600:56:5"},{"assignments":[null,2393,null,null,null],"declarations":[null,{"constant":false,"id":2393,"mutability":"mutable","name":"answer","nameLocation":"1677:6:5","nodeType":"VariableDeclaration","scope":2403,"src":"1670:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2392,"name":"int256","nodeType":"ElementaryTypeName","src":"1670:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},null,null,null],"id":2397,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2394,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"1693:9:5","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":44,"src":"1693:25:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1693:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"nodeType":"VariableDeclarationStatement","src":"1667:53:5"},{"expression":{"arguments":[{"id":2400,"name":"answer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"1746:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1738:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2398,"name":"uint256","nodeType":"ElementaryTypeName","src":"1738:7:5","typeDescriptions":{}}},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1738:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2384,"id":2402,"nodeType":"Return","src":"1731:22:5"}]},"functionSelector":"41976e09","id":2404,"implemented":true,"kind":"function","modifiers":[],"name":"getPrice","nameLocation":"1530:8:5","nodeType":"FunctionDefinition","parameters":{"id":2381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2380,"mutability":"mutable","name":"_address","nameLocation":"1547:8:5","nodeType":"VariableDeclaration","scope":2404,"src":"1539:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2379,"name":"address","nodeType":"ElementaryTypeName","src":"1539:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1538:18:5"},"returnParameters":{"id":2384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2404,"src":"1580:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2382,"name":"uint256","nodeType":"ElementaryTypeName","src":"1580:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1579:9:5"},"scope":2405,"src":"1521:240:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2406,"src":"194:1570:5","usedErrors":[]}],"src":"33:1733:5"},"id":5},"contracts/TradingFees.sol":{"ast":{"absolutePath":"contracts/TradingFees.sol","exportedSymbols":{"AggregatorV3Interface":[45],"Context":[180],"Exchange":[2236],"IERC20":[3285],"Ownable":[158],"PriceChecker":[2405],"SafeMath":[492],"TradingFees":[2635],"Wallet":[3199]},"id":2636,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2407,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"35:23:6"},{"absolutePath":"contracts/PriceChecker.sol","file":"./PriceChecker.sol","id":2408,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2636,"sourceUnit":2406,"src":"62:28:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Wallet.sol","file":"./Wallet.sol","id":2409,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2636,"sourceUnit":3200,"src":"92:22:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":2410,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2636,"sourceUnit":493,"src":"189:57:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":2411,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2636,"sourceUnit":46,"src":"248:76:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2412,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2636,"sourceUnit":159,"src":"326:52:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2413,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":158,"src":"406:7:6"},"id":2414,"nodeType":"InheritanceSpecifier","src":"406:7:6"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2635,"linearizedBaseContracts":[2635,158,180],"name":"TradingFees","nameLocation":"391:11:6","nodeType":"ContractDefinition","nodes":[{"id":2417,"libraryName":{"id":2415,"name":"SafeMath","nodeType":"IdentifierPath","referencedDeclaration":492,"src":"924:8:6"},"nodeType":"UsingForDirective","src":"918:27:6","typeName":{"id":2416,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":2422,"mutability":"mutable","name":"decimals","nameLocation":"998:8:6","nodeType":"VariableDeclaration","scope":2635,"src":"990:27:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2418,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":2421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1009:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":2420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1015:2:6","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"1009:8:6","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"visibility":"internal"},{"constant":false,"functionSelector":"be22f546","id":2428,"mutability":"mutable","name":"daiToken","nameLocation":"1039:8:6","nodeType":"VariableDeclaration","scope":2635,"src":"1024:86:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2423,"name":"address","nodeType":"ElementaryTypeName","src":"1024:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"307842613844436544333531323932356535324645363762316235333239313837353839303732413535","id":2426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1067:42:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xBa8DCeD3512925e52FE67b1b5329187589072A55"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1059:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2424,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:6","typeDescriptions":{}}},"id":2427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1059:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"1a38a4fb","id":2434,"mutability":"mutable","name":"aDAI","nameLocation":"1157:4:6","nodeType":"VariableDeclaration","scope":2635,"src":"1142:73:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2429,"name":"address","nodeType":"ElementaryTypeName","src":"1142:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"307841444439384230333432653430393445633332663362363743636664333234324338373666663761","id":2432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1172:42:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xADD98B0342e4094Ec32f3b67Ccfd3242C876ff7a"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1164:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2430,"name":"address","nodeType":"ElementaryTypeName","src":"1164:7:6","typeDescriptions":{}}},"id":2433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1164:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":2437,"mutability":"mutable","name":"priceFeed","nameLocation":"1260:9:6","nodeType":"VariableDeclaration","scope":2635,"src":"1247:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2405","typeString":"contract PriceChecker"},"typeName":{"id":2436,"nodeType":"UserDefinedTypeName","pathNode":{"id":2435,"name":"PriceChecker","nodeType":"IdentifierPath","referencedDeclaration":2405,"src":"1247:12:6"},"referencedDeclaration":2405,"src":"1247:12:6","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2405","typeString":"contract PriceChecker"}},"visibility":"internal"},{"constant":false,"id":2440,"mutability":"mutable","name":"wallet","nameLocation":"1283:6:6","nodeType":"VariableDeclaration","scope":2635,"src":"1276:13:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"},"typeName":{"id":2439,"nodeType":"UserDefinedTypeName","pathNode":{"id":2438,"name":"Wallet","nodeType":"IdentifierPath","referencedDeclaration":3199,"src":"1276:6:6"},"referencedDeclaration":3199,"src":"1276:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"visibility":"internal"},{"body":{"id":2451,"nodeType":"Block","src":"1340:65:6","statements":[{"expression":{"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2445,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"1351:9:6","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2405","typeString":"contract PriceChecker"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2447,"name":"_priceCheckerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"1376:20:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2446,"name":"PriceChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"1363:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PriceChecker_$2405_$","typeString":"type(contract PriceChecker)"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1363:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2405","typeString":"contract PriceChecker"}},"src":"1351:46:6","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2405","typeString":"contract PriceChecker"}},"id":2450,"nodeType":"ExpressionStatement","src":"1351:46:6"}]},"id":2452,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2442,"mutability":"mutable","name":"_priceCheckerAddress","nameLocation":"1318:20:6","nodeType":"VariableDeclaration","scope":2452,"src":"1310:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2441,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1309:30:6"},"returnParameters":{"id":2444,"nodeType":"ParameterList","parameters":[],"src":"1340:0:6"},"scope":2635,"src":"1298:107:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2505,"nodeType":"Block","src":"1551:542:6","statements":[{"assignments":[2464],"declarations":[{"constant":false,"id":2464,"mutability":"mutable","name":"priceOfToken","nameLocation":"1797:12:6","nodeType":"VariableDeclaration","scope":2505,"src":"1789:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2463,"name":"uint256","nodeType":"ElementaryTypeName","src":"1789:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2469,"initialValue":{"arguments":[{"id":2467,"name":"_refToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"1831:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2465,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"1812:9:6","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2405","typeString":"contract PriceChecker"}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPrice","nodeType":"MemberAccess","referencedDeclaration":2404,"src":"1812:18:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1812:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1789:52:6"},{"assignments":[2471],"declarations":[{"constant":false,"id":2471,"mutability":"mutable","name":"value","nameLocation":"1880:5:6","nodeType":"VariableDeclaration","scope":2505,"src":"1872:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2470,"name":"uint256","nodeType":"ElementaryTypeName","src":"1872:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2493,"initialValue":{"arguments":[{"id":2491,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"1987:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"id":2486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1961:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3130","id":2485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1967:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1961:8:6","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}],"expression":{"id":2482,"name":"priceOfToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"1944:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"1944:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1944:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":2478,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"1929:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":2474,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"1917:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2472,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"1905:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"1905:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1905:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2476,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1904:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":401,"src":"1904:24:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1904:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2480,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1903:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"1903:40:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1903:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2489,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1888:94:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":401,"src":"1888:98:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1888:108:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1872:124:6"},{"assignments":[2495],"declarations":[{"constant":false,"id":2495,"mutability":"mutable","name":"fees","nameLocation":"2015:4:6","nodeType":"VariableDeclaration","scope":2505,"src":"2007:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2494,"name":"uint256","nodeType":"ElementaryTypeName","src":"2007:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2502,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2032:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2038:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2032:7:6","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}],"expression":{"id":2496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"2022:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":401,"src":"2022:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2022:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2007:33:6"},{"expression":{"id":2503,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"2060:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2462,"id":2504,"nodeType":"Return","src":"2053:11:6"}]},"functionSelector":"513ffedd","id":2506,"implemented":true,"kind":"function","modifiers":[],"name":"calculateFees","nameLocation":"1422:13:6","nodeType":"FunctionDefinition","parameters":{"id":2459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2454,"mutability":"mutable","name":"_amount","nameLocation":"1454:7:6","nodeType":"VariableDeclaration","scope":2506,"src":"1446:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2453,"name":"uint256","nodeType":"ElementaryTypeName","src":"1446:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2456,"mutability":"mutable","name":"_rate","nameLocation":"1480:5:6","nodeType":"VariableDeclaration","scope":2506,"src":"1472:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2455,"name":"uint256","nodeType":"ElementaryTypeName","src":"1472:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2458,"mutability":"mutable","name":"_refToken","nameLocation":"1504:9:6","nodeType":"VariableDeclaration","scope":2506,"src":"1496:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2457,"name":"address","nodeType":"ElementaryTypeName","src":"1496:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1435:85:6"},"returnParameters":{"id":2462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2506,"src":"1542:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2460,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:9:6"},"scope":2635,"src":"1413:680:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2540,"nodeType":"Block","src":"2215:199:6","statements":[{"assignments":[2514],"declarations":[{"constant":false,"id":2514,"mutability":"mutable","name":"aDAI_Price","nameLocation":"2234:10:6","nodeType":"VariableDeclaration","scope":2540,"src":"2226:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2513,"name":"uint256","nodeType":"ElementaryTypeName","src":"2226:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2519,"initialValue":{"arguments":[{"id":2517,"name":"daiToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"2266:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2515,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"2247:9:6","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2405","typeString":"contract PriceChecker"}},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPrice","nodeType":"MemberAccess","referencedDeclaration":2404,"src":"2247:18:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2247:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2226:49:6"},{"assignments":[2521],"declarations":[{"constant":false,"id":2521,"mutability":"mutable","name":"amt","nameLocation":"2321:3:6","nodeType":"VariableDeclaration","scope":2540,"src":"2313:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2520,"name":"uint256","nodeType":"ElementaryTypeName","src":"2313:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2534,"initialValue":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"id":2531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2366:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3130","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2372:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"2366:8:6","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}],"expression":{"id":2527,"name":"aDAI_Price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"2351:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"2351:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2351:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2524,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"2337:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2522,"name":"_fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"2327:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"2327:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2327:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":401,"src":"2327:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2327:49:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2313:63:6"},{"expression":{"arguments":[{"id":2537,"name":"amt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"2402:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2394:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2535,"name":"uint256","nodeType":"ElementaryTypeName","src":"2394:7:6","typeDescriptions":{}}},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2394:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2512,"id":2539,"nodeType":"Return","src":"2387:19:6"}]},"functionSelector":"a42963e9","id":2541,"implemented":true,"kind":"function","modifiers":[],"name":"amountaDAIToDeduct","nameLocation":"2151:18:6","nodeType":"FunctionDefinition","parameters":{"id":2509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2508,"mutability":"mutable","name":"_fees","nameLocation":"2178:5:6","nodeType":"VariableDeclaration","scope":2541,"src":"2170:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2507,"name":"uint256","nodeType":"ElementaryTypeName","src":"2170:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2169:15:6"},"returnParameters":{"id":2512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2541,"src":"2206:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2510,"name":"uint256","nodeType":"ElementaryTypeName","src":"2206:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2205:9:6"},"scope":2635,"src":"2142:272:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2577,"nodeType":"Block","src":"2585:192:6","statements":[{"assignments":[2551],"declarations":[{"constant":false,"id":2551,"mutability":"mutable","name":"priceOfToken","nameLocation":"2604:12:6","nodeType":"VariableDeclaration","scope":2577,"src":"2596:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2550,"name":"uint256","nodeType":"ElementaryTypeName","src":"2596:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2556,"initialValue":{"arguments":[{"id":2554,"name":"_refToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"2638:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2552,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"2619:9:6","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2405","typeString":"contract PriceChecker"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPrice","nodeType":"MemberAccess","referencedDeclaration":2404,"src":"2619:18:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2619:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2596:52:6"},{"assignments":[2558],"declarations":[{"constant":false,"id":2558,"mutability":"mutable","name":"amt","nameLocation":"2682:3:6","nodeType":"VariableDeclaration","scope":2577,"src":"2674:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2557,"name":"uint256","nodeType":"ElementaryTypeName","src":"2674:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2571,"initialValue":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"id":2568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2729:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3130","id":2567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2735:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"2729:8:6","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}],"expression":{"id":2564,"name":"priceOfToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"2712:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"2712:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2712:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2561,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"2698:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2559,"name":"_fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"2688:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"2688:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2688:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":401,"src":"2688:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2688:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2674:65:6"},{"expression":{"arguments":[{"id":2574,"name":"amt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"2765:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2757:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2572,"name":"uint256","nodeType":"ElementaryTypeName","src":"2757:7:6","typeDescriptions":{}}},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2757:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2549,"id":2576,"nodeType":"Return","src":"2750:19:6"}]},"functionSelector":"b98ee419","id":2578,"implemented":true,"kind":"function","modifiers":[],"name":"amountTokensToDeduct","nameLocation":"2475:20:6","nodeType":"FunctionDefinition","parameters":{"id":2546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2543,"mutability":"mutable","name":"_refToken","nameLocation":"2514:9:6","nodeType":"VariableDeclaration","scope":2578,"src":"2506:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2542,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2545,"mutability":"mutable","name":"_fees","nameLocation":"2542:5:6","nodeType":"VariableDeclaration","scope":2578,"src":"2534:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2544,"name":"uint256","nodeType":"ElementaryTypeName","src":"2534:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2495:59:6"},"returnParameters":{"id":2549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2578,"src":"2576:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2547,"name":"uint256","nodeType":"ElementaryTypeName","src":"2576:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2575:9:6"},"scope":2635,"src":"2466:311:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2605,"nodeType":"Block","src":"2896:155:6","statements":[{"assignments":[2588],"declarations":[{"constant":false,"id":2588,"mutability":"mutable","name":"amtDAI","nameLocation":"2915:6:6","nodeType":"VariableDeclaration","scope":2605,"src":"2907:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2587,"name":"uint256","nodeType":"ElementaryTypeName","src":"2907:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2592,"initialValue":{"arguments":[{"id":2590,"name":"_fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"2943:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2589,"name":"amountaDAIToDeduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"2924:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2924:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2907:42:6"},{"assignments":[2594],"declarations":[{"constant":false,"id":2594,"mutability":"mutable","name":"balance","nameLocation":"2968:7:6","nodeType":"VariableDeclaration","scope":2605,"src":"2960:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2593,"name":"uint256","nodeType":"ElementaryTypeName","src":"2960:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2600,"initialValue":{"arguments":[{"id":2597,"name":"aDAI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"2994:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2598,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"3000:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2595,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"2978:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"s_tokens","nodeType":"MemberAccess","referencedDeclaration":2663,"src":"2978:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2978:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2960:46:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2601,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"3026:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2602,"name":"amtDAI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"3037:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3026:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2586,"id":2604,"nodeType":"Return","src":"3019:24:6"}]},"functionSelector":"ca8963f1","id":2606,"implemented":true,"kind":"function","modifiers":[],"name":"checkSufficientaDAI","nameLocation":"2794:19:6","nodeType":"FunctionDefinition","parameters":{"id":2583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2580,"mutability":"mutable","name":"_fees","nameLocation":"2832:5:6","nodeType":"VariableDeclaration","scope":2606,"src":"2824:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2579,"name":"uint256","nodeType":"ElementaryTypeName","src":"2824:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2582,"mutability":"mutable","name":"_user","nameLocation":"2856:5:6","nodeType":"VariableDeclaration","scope":2606,"src":"2848:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2581,"name":"address","nodeType":"ElementaryTypeName","src":"2848:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2813:55:6"},"returnParameters":{"id":2586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2606,"src":"2890:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2584,"name":"bool","nodeType":"ElementaryTypeName","src":"2890:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2889:6:6"},"scope":2635,"src":"2785:266:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2619,"nodeType":"Block","src":"3126:50:6","statements":[{"expression":{"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2613,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"3137:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2615,"name":"_Walletaddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"3153:14:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2614,"name":"Wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"3146:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Wallet_$3199_$","typeString":"type(contract Wallet)"}},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3146:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"src":"3137:31:6","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}},"id":2618,"nodeType":"ExpressionStatement","src":"3137:31:6"}]},"functionSelector":"ac1a386a","id":2620,"implemented":true,"kind":"function","modifiers":[{"id":2611,"kind":"modifierInvocation","modifierName":{"id":2610,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"3116:9:6"},"nodeType":"ModifierInvocation","src":"3116:9:6"}],"name":"setWalletAddress","nameLocation":"3068:16:6","nodeType":"FunctionDefinition","parameters":{"id":2609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2608,"mutability":"mutable","name":"_Walletaddress","nameLocation":"3093:14:6","nodeType":"VariableDeclaration","scope":2620,"src":"3085:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2607,"name":"address","nodeType":"ElementaryTypeName","src":"3085:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3084:24:6"},"returnParameters":{"id":2612,"nodeType":"ParameterList","parameters":[],"src":"3126:0:6"},"scope":2635,"src":"3059:117:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2633,"nodeType":"Block","src":"3279:65:6","statements":[{"expression":{"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2627,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"3290:9:6","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2405","typeString":"contract PriceChecker"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2629,"name":"_PriceCheckeraddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"3315:20:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2628,"name":"PriceChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"3302:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PriceChecker_$2405_$","typeString":"type(contract PriceChecker)"}},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3302:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2405","typeString":"contract PriceChecker"}},"src":"3290:46:6","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2405","typeString":"contract PriceChecker"}},"id":2632,"nodeType":"ExpressionStatement","src":"3290:46:6"}]},"functionSelector":"b136e39a","id":2634,"implemented":true,"kind":"function","modifiers":[{"id":2625,"kind":"modifierInvocation","modifierName":{"id":2624,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"3269:9:6"},"nodeType":"ModifierInvocation","src":"3269:9:6"}],"name":"setPriceCheckerAddress","nameLocation":"3193:22:6","nodeType":"FunctionDefinition","parameters":{"id":2623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2622,"mutability":"mutable","name":"_PriceCheckeraddress","nameLocation":"3234:20:6","nodeType":"VariableDeclaration","scope":2634,"src":"3226:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2621,"name":"address","nodeType":"ElementaryTypeName","src":"3226:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3215:46:6"},"returnParameters":{"id":2626,"nodeType":"ParameterList","parameters":[],"src":"3279:0:6"},"scope":2635,"src":"3184:160:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":2636,"src":"382:2965:6","usedErrors":[]}],"src":"35:3314:6"},"id":6},"contracts/Wallet.sol":{"ast":{"absolutePath":"contracts/Wallet.sol","exportedSymbols":{"AggregatorV3Interface":[45],"Context":[180],"Exchange":[2236],"IERC20":[3285],"Ownable":[158],"SafeMath":[492],"Wallet":[3199]},"id":3200,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2637,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"35:23:7"},{"absolutePath":"contracts/interface/IERC20.sol","file":"./interface/IERC20.sol","id":2638,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3200,"sourceUnit":3286,"src":"62:32:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Exchange.sol","file":"./Exchange.sol","id":2639,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3200,"sourceUnit":2237,"src":"96:24:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":2640,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3200,"sourceUnit":493,"src":"195:57:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":2641,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3200,"sourceUnit":46,"src":"254:76:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2642,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3200,"sourceUnit":159,"src":"332:52:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2643,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":158,"src":"407:7:7"},"id":2644,"nodeType":"InheritanceSpecifier","src":"407:7:7"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3199,"linearizedBaseContracts":[3199,158,180],"name":"Wallet","nameLocation":"397:6:7","nodeType":"ContractDefinition","nodes":[{"id":2647,"libraryName":{"id":2645,"name":"SafeMath","nodeType":"IdentifierPath","referencedDeclaration":492,"src":"428:8:7"},"nodeType":"UsingForDirective","src":"422:27:7","typeName":{"id":2646,"name":"uint256","nodeType":"ElementaryTypeName","src":"441:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"functionSelector":"b4a99a4e","id":2649,"mutability":"immutable","name":"Owner","nameLocation":"519:5:7","nodeType":"VariableDeclaration","scope":3199,"src":"494:30:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2648,"name":"address","nodeType":"ElementaryTypeName","src":"494:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":2651,"mutability":"mutable","name":"locked","nameLocation":"582:6:7","nodeType":"VariableDeclaration","scope":3199,"src":"569:19:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2650,"name":"bool","nodeType":"ElementaryTypeName","src":"569:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"constant":false,"functionSelector":"7bf1a627","id":2657,"mutability":"mutable","name":"ethToken","nameLocation":"612:8:7","nodeType":"VariableDeclaration","scope":3199,"src":"597:36:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2652,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"30","id":2655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"631:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"623:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2653,"name":"address","nodeType":"ElementaryTypeName","src":"623:7:7","typeDescriptions":{}}},"id":2656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"623:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"cd5d767c","id":2663,"mutability":"mutable","name":"s_tokens","nameLocation":"697:8:7","nodeType":"VariableDeclaration","scope":3199,"src":"642:63:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":2662,"keyType":{"id":2658,"name":"address","nodeType":"ElementaryTypeName","src":"650:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"642:47:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":2661,"keyType":{"id":2659,"name":"address","nodeType":"ElementaryTypeName","src":"669:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"661:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2660,"name":"uint256","nodeType":"ElementaryTypeName","src":"680:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"4bdde1cf","id":2669,"mutability":"mutable","name":"lockedFunds","nameLocation":"807:11:7","nodeType":"VariableDeclaration","scope":3199,"src":"752:66:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":2668,"keyType":{"id":2664,"name":"address","nodeType":"ElementaryTypeName","src":"760:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"752:47:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":2667,"keyType":{"id":2665,"name":"address","nodeType":"ElementaryTypeName","src":"779:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"771:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2666,"name":"uint256","nodeType":"ElementaryTypeName","src":"790:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"id":2672,"mutability":"mutable","name":"exchange","nameLocation":"836:8:7","nodeType":"VariableDeclaration","scope":3199,"src":"827:17:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2236","typeString":"contract Exchange"},"typeName":{"id":2671,"nodeType":"UserDefinedTypeName","pathNode":{"id":2670,"name":"Exchange","nodeType":"IdentifierPath","referencedDeclaration":2236,"src":"827:8:7"},"referencedDeclaration":2236,"src":"827:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2236","typeString":"contract Exchange"}},"visibility":"internal"},{"constant":false,"id":2675,"mutability":"mutable","name":"token","nameLocation":"858:5:7","nodeType":"VariableDeclaration","scope":3199,"src":"851:12:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3285","typeString":"contract IERC20"},"typeName":{"id":2674,"nodeType":"UserDefinedTypeName","pathNode":{"id":2673,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":3285,"src":"851:6:7"},"referencedDeclaration":3285,"src":"851:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3285","typeString":"contract IERC20"}},"visibility":"internal"},{"anonymous":false,"id":2685,"name":"Deposit","nameLocation":"878:7:7","nodeType":"EventDefinition","parameters":{"id":2684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2677,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"894:5:7","nodeType":"VariableDeclaration","scope":2685,"src":"886:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2676,"name":"address","nodeType":"ElementaryTypeName","src":"886:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2679,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"909:4:7","nodeType":"VariableDeclaration","scope":2685,"src":"901:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2678,"name":"address","nodeType":"ElementaryTypeName","src":"901:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2681,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"923:6:7","nodeType":"VariableDeclaration","scope":2685,"src":"915:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2680,"name":"uint256","nodeType":"ElementaryTypeName","src":"915:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2683,"indexed":false,"mutability":"mutable","name":"balance","nameLocation":"939:7:7","nodeType":"VariableDeclaration","scope":2685,"src":"931:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2682,"name":"uint256","nodeType":"ElementaryTypeName","src":"931:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"885:62:7"},"src":"872:76:7"},{"anonymous":false,"documentation":{"id":2686,"nodeType":"StructuredDocumentation","src":"956:48:7","text":"@notice Event when amount withdrawn exchange"},"id":2696,"name":"Withdraw","nameLocation":"1016:8:7","nodeType":"EventDefinition","parameters":{"id":2695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2688,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1043:5:7","nodeType":"VariableDeclaration","scope":2696,"src":"1035:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2687,"name":"address","nodeType":"ElementaryTypeName","src":"1035:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2690,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"1067:4:7","nodeType":"VariableDeclaration","scope":2696,"src":"1059:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2689,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2692,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1090:6:7","nodeType":"VariableDeclaration","scope":2696,"src":"1082:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2691,"name":"uint256","nodeType":"ElementaryTypeName","src":"1082:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2694,"indexed":false,"mutability":"mutable","name":"balance","nameLocation":"1115:7:7","nodeType":"VariableDeclaration","scope":2696,"src":"1107:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2693,"name":"uint256","nodeType":"ElementaryTypeName","src":"1107:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1024:105:7"},"src":"1010:120:7"},{"body":{"id":2704,"nodeType":"Block","src":"1152:37:7","statements":[{"expression":{"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2699,"name":"Owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"1163:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2700,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1171:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1171:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1163:18:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2703,"nodeType":"ExpressionStatement","src":"1163:18:7"}]},"id":2705,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2697,"nodeType":"ParameterList","parameters":[],"src":"1149:2:7"},"returnParameters":{"id":2698,"nodeType":"ParameterList","parameters":[],"src":"1152:0:7"},"scope":3199,"src":"1138:51:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2730,"nodeType":"Block","src":"1236:225:7","statements":[{"expression":{"arguments":[{"id":2709,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"1261:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2710,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1271:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1271:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2712,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1283:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"1283:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1294:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2708,"name":"updateBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"1247:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1247:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2716,"nodeType":"ExpressionStatement","src":"1247:52:7"},{"eventCall":{"arguments":[{"id":2718,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"1339:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2719,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1362:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1362:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2721,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1387:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"1387:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2724,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"1421:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2725,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1431:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1431:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2723,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"1411:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1411:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2717,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"1317:7:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1317:136:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2729,"nodeType":"EmitStatement","src":"1312:141:7"}]},"functionSelector":"f6326fb3","id":2731,"implemented":true,"kind":"function","modifiers":[],"name":"depositETH","nameLocation":"1206:10:7","nodeType":"FunctionDefinition","parameters":{"id":2706,"nodeType":"ParameterList","parameters":[],"src":"1216:2:7"},"returnParameters":{"id":2707,"nodeType":"ParameterList","parameters":[],"src":"1236:0:7"},"scope":3199,"src":"1197:264:7","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2803,"nodeType":"Block","src":"1516:657:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"id":2744,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1618:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1618:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2746,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"1630:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2743,"name":"getlockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"1603:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1603:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2738,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"1559:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2739,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1569:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1569:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2737,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"1549:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1549:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":371,"src":"1549:35:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1549:105:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2749,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"1658:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1549:116:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e63652045544820746f207769746864726177","id":2751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1680:38:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4","typeString":"literal_string \"Insufficient balance ETH to withdraw\""},"value":"Insufficient balance ETH to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4","typeString":"literal_string \"Insufficient balance ETH to withdraw\""}],"id":2736,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1527:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1527:202:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2753,"nodeType":"ExpressionStatement","src":"1527:202:7"},{"expression":{"arguments":[{"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1748:7:7","subExpression":{"id":2755,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"1749:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e742063616c6c20646574656374656421","id":2757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1757:26:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","typeString":"literal_string \"Reentrant call detected!\""},"value":"Reentrant call detected!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","typeString":"literal_string \"Reentrant call detected!\""}],"id":2754,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1740:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1740:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2759,"nodeType":"ExpressionStatement","src":"1740:44:7"},{"expression":{"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2760,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"1795:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1804:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1795:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2763,"nodeType":"ExpressionStatement","src":"1795:13:7"},{"expression":{"arguments":[{"id":2765,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"1833:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2766,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1843:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1843:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2768,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"1855:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1864:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2764,"name":"updateBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"1819:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1819:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2771,"nodeType":"ExpressionStatement","src":"1819:51:7"},{"expression":{"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2772,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"1881:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1890:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1881:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2775,"nodeType":"ExpressionStatement","src":"1881:14:7"},{"assignments":[2777,null],"declarations":[{"constant":false,"id":2777,"mutability":"mutable","name":"success","nameLocation":"1912:7:7","nodeType":"VariableDeclaration","scope":2803,"src":"1907:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2776,"name":"bool","nodeType":"ElementaryTypeName","src":"1907:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2785,"initialValue":{"arguments":[{"hexValue":"","id":2783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1957:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":2778,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1925:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1925:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"1925:15:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2781,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"1948:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1925:31:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1925:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1906:54:7"},{"expression":{"arguments":[{"id":2787,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"1979:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6661696c656420746f2073656e6420616d6f756e74","id":2788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1988:23:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4","typeString":"literal_string \"failed to send amount\""},"value":"failed to send amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4","typeString":"literal_string \"failed to send amount\""}],"id":2786,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1971:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1971:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2790,"nodeType":"ExpressionStatement","src":"1971:41:7"},{"eventCall":{"arguments":[{"id":2792,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"2053:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2793,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2076:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2076:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2795,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"2101:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2797,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"2133:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2798,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2143:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2143:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2796,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"2123:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2123:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2791,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"2030:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2030:135:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2802,"nodeType":"EmitStatement","src":"2025:140:7"}]},"functionSelector":"f14210a6","id":2804,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawETH","nameLocation":"1478:11:7","nodeType":"FunctionDefinition","parameters":{"id":2734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2733,"mutability":"mutable","name":"_amount","nameLocation":"1498:7:7","nodeType":"VariableDeclaration","scope":2804,"src":"1490:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2732,"name":"uint256","nodeType":"ElementaryTypeName","src":"1490:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1489:17:7"},"returnParameters":{"id":2735,"nodeType":"ParameterList","parameters":[],"src":"1516:0:7"},"scope":3199,"src":"1469:704:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2892,"nodeType":"Block","src":"2389:907:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2814,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"2408:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2815,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"2418:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2408:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2813,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2400:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2400:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2818,"nodeType":"ExpressionStatement","src":"2400:27:7"},{"expression":{"arguments":[{"arguments":[{"id":2822,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"2485:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2820,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"2460:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2236","typeString":"contract Exchange"}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isVerifiedToken","nodeType":"MemberAccess","referencedDeclaration":2126,"src":"2460:24:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2460:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f74207665726966696564206f6e2045786368616e6765","id":2824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2507:32:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a","typeString":"literal_string \"Token not verified on Exchange\""},"value":"Token not verified on Exchange"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a","typeString":"literal_string \"Token not verified on Exchange\""}],"id":2819,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2438:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2438:112:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2826,"nodeType":"ExpressionStatement","src":"2438:112:7"},{"expression":{"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2827,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"2627:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3285","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2829,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"2642:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2828,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"2635:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3285_$","typeString":"type(contract IERC20)"}},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2635:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3285","typeString":"contract IERC20"}},"src":"2627:22:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3285","typeString":"contract IERC20"}},"id":2832,"nodeType":"ExpressionStatement","src":"2627:22:7"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":2836,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2738:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2738:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2840,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2758:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}],"id":2839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2750:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2838,"name":"address","nodeType":"ElementaryTypeName","src":"2750:7:7","typeDescriptions":{}}},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2750:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2842,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"2765:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2834,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"2719:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3285","typeString":"contract IERC20"}},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":3284,"src":"2719:18:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2719:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20417070726f76616c20796574","id":2844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2788:17:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba","typeString":"literal_string \"No Approval yet\""},"value":"No Approval yet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba","typeString":"literal_string \"No Approval yet\""}],"id":2833,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2697:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2697:119:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2846,"nodeType":"ExpressionStatement","src":"2697:119:7"},{"assignments":[2848],"declarations":[{"constant":false,"id":2848,"mutability":"mutable","name":"decimals","nameLocation":"2835:8:7","nodeType":"VariableDeclaration","scope":2892,"src":"2827:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2847,"name":"uint256","nodeType":"ElementaryTypeName","src":"2827:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2850,"initialValue":{"hexValue":"3138","id":2849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2846:2:7","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"nodeType":"VariableDeclarationStatement","src":"2827:21:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2851,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"2863:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3138","id":2852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2876:2:7","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"2863:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"arguments":[{"id":2864,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"3006:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2865,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3031:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3031:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3072:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[{"id":2872,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"3091:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2870,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"3078:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":371,"src":"3078:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3078:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3072:29:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2867,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"3060:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"3060:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3060:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3121:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2863,"name":"updateBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"2974:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2974:166:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2878,"nodeType":"ExpressionStatement","src":"2974:166:7"},"id":2879,"nodeType":"IfStatement","src":"2859:281:7","trueBody":{"id":2862,"nodeType":"Block","src":"2880:75:7","statements":[{"expression":{"arguments":[{"id":2855,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"2909:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2856,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2917:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2917:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2858,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"2929:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2938:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2854,"name":"updateBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"2895:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2895:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2861,"nodeType":"ExpressionStatement","src":"2895:48:7"}]}},{"eventCall":{"arguments":[{"id":2881,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"3180:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2882,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3201:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3201:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2884,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"3226:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2886,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"3258:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2887,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3266:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3266:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2885,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"3248:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3248:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2880,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"3158:7:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3158:130:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2891,"nodeType":"EmitStatement","src":"3153:135:7"}]},"functionSelector":"99c6d2de","id":2893,"implemented":true,"kind":"function","modifiers":[],"name":"depositToken","nameLocation":"2281:12:7","nodeType":"FunctionDefinition","parameters":{"id":2811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2806,"mutability":"mutable","name":"_token","nameLocation":"2312:6:7","nodeType":"VariableDeclaration","scope":2893,"src":"2304:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2805,"name":"address","nodeType":"ElementaryTypeName","src":"2304:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2808,"mutability":"mutable","name":"_amount","nameLocation":"2337:7:7","nodeType":"VariableDeclaration","scope":2893,"src":"2329:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2807,"name":"uint256","nodeType":"ElementaryTypeName","src":"2329:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2810,"mutability":"mutable","name":"_decimals","nameLocation":"2363:9:7","nodeType":"VariableDeclaration","scope":2893,"src":"2355:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2809,"name":"uint256","nodeType":"ElementaryTypeName","src":"2355:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2293:86:7"},"returnParameters":{"id":2812,"nodeType":"ParameterList","parameters":[],"src":"2389:0:7"},"scope":3199,"src":"2272:1024:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3026,"nodeType":"Block","src":"3422:1248:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2903,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"3441:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2904,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"3451:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3441:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2902,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3433:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3433:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2907,"nodeType":"ExpressionStatement","src":"3433:27:7"},{"expression":{"arguments":[{"arguments":[{"id":2911,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"3518:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2909,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"3493:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2236","typeString":"contract Exchange"}},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isVerifiedToken","nodeType":"MemberAccess","referencedDeclaration":2126,"src":"3493:24:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3493:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f74207665726966696564206f6e2045786368616e6765","id":2913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3540:32:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a","typeString":"literal_string \"Token not verified on Exchange\""},"value":"Token not verified on Exchange"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a","typeString":"literal_string \"Token not verified on Exchange\""}],"id":2908,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3471:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3471:112:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2915,"nodeType":"ExpressionStatement","src":"3471:112:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"id":2924,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3685:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3685:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2926,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"3697:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2923,"name":"getlockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"3670:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3670:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2918,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"3628:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2919,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3636:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3636:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2917,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"3618:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3618:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":371,"src":"3618:33:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3618:101:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2929,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"3723:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3618:112:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420546f6b656e7320746f207769746864726177","id":2931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3745:33:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9","typeString":"literal_string \"Insufficient Tokens to withdraw\""},"value":"Insufficient Tokens to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9","typeString":"literal_string \"Insufficient Tokens to withdraw\""}],"id":2916,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3596:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3596:193:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2933,"nodeType":"ExpressionStatement","src":"3596:193:7"},{"expression":{"arguments":[{"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3808:7:7","subExpression":{"id":2935,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"3809:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e742063616c6c20646574656374656421","id":2937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3817:26:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","typeString":"literal_string \"Reentrant call detected!\""},"value":"Reentrant call detected!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","typeString":"literal_string \"Reentrant call detected!\""}],"id":2934,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3800:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3800:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2939,"nodeType":"ExpressionStatement","src":"3800:44:7"},{"expression":{"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2940,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"3855:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3864:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3855:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2943,"nodeType":"ExpressionStatement","src":"3855:13:7"},{"expression":{"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2944,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"3881:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3285","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2946,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"3896:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2945,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"3889:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3285_$","typeString":"type(contract IERC20)"}},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3889:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3285","typeString":"contract IERC20"}},"src":"3881:22:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3285","typeString":"contract IERC20"}},"id":2949,"nodeType":"ExpressionStatement","src":"3881:22:7"},{"assignments":[2951],"declarations":[{"constant":false,"id":2951,"mutability":"mutable","name":"decimals","nameLocation":"3922:8:7","nodeType":"VariableDeclaration","scope":3026,"src":"3914:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2950,"name":"uint256","nodeType":"ElementaryTypeName","src":"3914:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2953,"initialValue":{"hexValue":"3138","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3933:2:7","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"nodeType":"VariableDeclarationStatement","src":"3914:21:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2954,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"3950:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3138","id":2955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3963:2:7","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"3950:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3008,"nodeType":"Block","src":"4108:381:7","statements":[{"expression":{"arguments":[{"id":2976,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"4155:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2977,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4180:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4180:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4221:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[{"id":2984,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"4240:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2982,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"4227:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":371,"src":"4227:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4227:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4221:29:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2979,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"4209:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":386,"src":"4209:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4209:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4270:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2975,"name":"updateBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"4123:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4123:167:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2990,"nodeType":"ExpressionStatement","src":"4123:167:7"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":2994,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4368:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4368:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4413:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[{"id":3001,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"4432:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2999,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"4419:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":371,"src":"4419:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4419:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4413:29:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2996,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"4401:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":401,"src":"4401:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4401:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2992,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"4331:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3285","typeString":"contract IERC20"}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":3273,"src":"4331:14:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4331:131:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2991,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4305:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4305:172:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3007,"nodeType":"ExpressionStatement","src":"4305:172:7"}]},"id":3009,"nodeType":"IfStatement","src":"3946:543:7","trueBody":{"id":2974,"nodeType":"Block","src":"3967:135:7","statements":[{"expression":{"arguments":[{"id":2958,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"3996:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2959,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4004:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4004:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2961,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"4016:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4025:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2957,"name":"updateBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"3982:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3982:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2964,"nodeType":"ExpressionStatement","src":"3982:49:7"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":2968,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4069:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4069:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2970,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"4081:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2966,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"4054:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3285","typeString":"contract IERC20"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":3273,"src":"4054:14:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4054:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2965,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4046:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4046:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2973,"nodeType":"ExpressionStatement","src":"4046:44:7"}]}},{"expression":{"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3010,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"4501:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4510:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4501:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3013,"nodeType":"ExpressionStatement","src":"4501:14:7"},{"eventCall":{"arguments":[{"id":3015,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"4554:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3016,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4575:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4575:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3018,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"4600:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3020,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"4632:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3021,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4640:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4640:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3019,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"4622:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4622:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3014,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"4531:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4531:131:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3025,"nodeType":"EmitStatement","src":"4526:136:7"}]},"functionSelector":"96c0ec55","id":3027,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawToken","nameLocation":"3313:13:7","nodeType":"FunctionDefinition","parameters":{"id":2900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2895,"mutability":"mutable","name":"_token","nameLocation":"3345:6:7","nodeType":"VariableDeclaration","scope":3027,"src":"3337:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2894,"name":"address","nodeType":"ElementaryTypeName","src":"3337:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2897,"mutability":"mutable","name":"_amount","nameLocation":"3370:7:7","nodeType":"VariableDeclaration","scope":3027,"src":"3362:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2896,"name":"uint256","nodeType":"ElementaryTypeName","src":"3362:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2899,"mutability":"mutable","name":"_decimals","nameLocation":"3396:9:7","nodeType":"VariableDeclaration","scope":3027,"src":"3388:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2898,"name":"uint256","nodeType":"ElementaryTypeName","src":"3388:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3326:86:7"},"returnParameters":{"id":2901,"nodeType":"ParameterList","parameters":[],"src":"3422:0:7"},"scope":3199,"src":"3304:1366:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3042,"nodeType":"Block","src":"4788:52:7","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":3036,"name":"lockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2669,"src":"4806:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3038,"indexExpression":{"id":3037,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"4818:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4806:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3040,"indexExpression":{"id":3039,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"4825:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4806:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3035,"id":3041,"nodeType":"Return","src":"4799:33:7"}]},"functionSelector":"4fc121db","id":3043,"implemented":true,"kind":"function","modifiers":[],"name":"getlockedFunds","nameLocation":"4687:14:7","nodeType":"FunctionDefinition","parameters":{"id":3032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3029,"mutability":"mutable","name":"_user","nameLocation":"4720:5:7","nodeType":"VariableDeclaration","scope":3043,"src":"4712:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3028,"name":"address","nodeType":"ElementaryTypeName","src":"4712:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3031,"mutability":"mutable","name":"_token","nameLocation":"4744:6:7","nodeType":"VariableDeclaration","scope":3043,"src":"4736:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3030,"name":"address","nodeType":"ElementaryTypeName","src":"4736:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4701:56:7"},"returnParameters":{"id":3035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3043,"src":"4779:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3033,"name":"uint256","nodeType":"ElementaryTypeName","src":"4779:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4778:9:7"},"scope":3199,"src":"4678:162:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3093,"nodeType":"Block","src":"4998:301:7","statements":[{"condition":{"id":3056,"name":"isAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"5013:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5157:6:7","subExpression":{"id":3073,"name":"isAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"5158:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3091,"nodeType":"IfStatement","src":"5153:139:7","trueBody":{"id":3090,"nodeType":"Block","src":"5165:127:7","statements":[{"expression":{"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3075,"name":"lockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2669,"src":"5180:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3078,"indexExpression":{"id":3076,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"5192:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5180:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3079,"indexExpression":{"id":3077,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"5199:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5180:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3086,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"5258:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":3080,"name":"lockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2669,"src":"5209:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3082,"indexExpression":{"id":3081,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"5221:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5209:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3084,"indexExpression":{"id":3083,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"5228:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5209:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":371,"src":"5209:30:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5209:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5180:100:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3089,"nodeType":"ExpressionStatement","src":"5180:100:7"}]}},"id":3092,"nodeType":"IfStatement","src":"5009:283:7","trueBody":{"id":3072,"nodeType":"Block","src":"5020:127:7","statements":[{"expression":{"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3057,"name":"lockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2669,"src":"5035:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3060,"indexExpression":{"id":3058,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"5047:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5035:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3061,"indexExpression":{"id":3059,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"5054:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5035:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3068,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"5113:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":3062,"name":"lockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2669,"src":"5064:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3064,"indexExpression":{"id":3063,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"5076:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5064:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3066,"indexExpression":{"id":3065,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"5083:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5064:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":356,"src":"5064:30:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5064:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5035:100:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3071,"nodeType":"ExpressionStatement","src":"5035:100:7"}]}}]},"functionSelector":"46a8f820","id":3094,"implemented":true,"kind":"function","modifiers":[{"id":3054,"kind":"modifierInvocation","modifierName":{"id":3053,"name":"isAuthorised","nodeType":"IdentifierPath","referencedDeclaration":3198,"src":"4985:12:7"},"nodeType":"ModifierInvocation","src":"4985:12:7"}],"name":"updateLockedFunds","nameLocation":"4857:17:7","nodeType":"FunctionDefinition","parameters":{"id":3052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3045,"mutability":"mutable","name":"_user","nameLocation":"4893:5:7","nodeType":"VariableDeclaration","scope":3094,"src":"4885:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3044,"name":"address","nodeType":"ElementaryTypeName","src":"4885:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3047,"mutability":"mutable","name":"_token","nameLocation":"4917:6:7","nodeType":"VariableDeclaration","scope":3094,"src":"4909:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3046,"name":"address","nodeType":"ElementaryTypeName","src":"4909:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3049,"mutability":"mutable","name":"_amount","nameLocation":"4942:7:7","nodeType":"VariableDeclaration","scope":3094,"src":"4934:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3048,"name":"uint256","nodeType":"ElementaryTypeName","src":"4934:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3051,"mutability":"mutable","name":"isAdd","nameLocation":"4965:5:7","nodeType":"VariableDeclaration","scope":3094,"src":"4960:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3050,"name":"bool","nodeType":"ElementaryTypeName","src":"4960:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4874:103:7"},"returnParameters":{"id":3055,"nodeType":"ParameterList","parameters":[],"src":"4998:0:7"},"scope":3199,"src":"4848:451:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3109,"nodeType":"Block","src":"5480:49:7","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":3103,"name":"s_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2663,"src":"5498:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3105,"indexExpression":{"id":3104,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"5507:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5498:16:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3107,"indexExpression":{"id":3106,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"5515:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5498:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3102,"id":3108,"nodeType":"Return","src":"5491:30:7"}]},"functionSelector":"f7888aec","id":3110,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"5384:9:7","nodeType":"FunctionDefinition","parameters":{"id":3099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3096,"mutability":"mutable","name":"_token","nameLocation":"5412:6:7","nodeType":"VariableDeclaration","scope":3110,"src":"5404:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3095,"name":"address","nodeType":"ElementaryTypeName","src":"5404:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3098,"mutability":"mutable","name":"_user","nameLocation":"5437:5:7","nodeType":"VariableDeclaration","scope":3110,"src":"5429:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3097,"name":"address","nodeType":"ElementaryTypeName","src":"5429:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5393:56:7"},"returnParameters":{"id":3102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3110,"src":"5471:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3100,"name":"uint256","nodeType":"ElementaryTypeName","src":"5471:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5470:9:7"},"scope":3199,"src":"5375:154:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3160,"nodeType":"Block","src":"5683:225:7","statements":[{"condition":{"id":3123,"name":"isAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"5698:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5804:6:7","subExpression":{"id":3140,"name":"isAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"5805:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3158,"nodeType":"IfStatement","src":"5800:101:7","trueBody":{"id":3157,"nodeType":"Block","src":"5812:89:7","statements":[{"expression":{"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3142,"name":"s_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2663,"src":"5827:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3145,"indexExpression":{"id":3143,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"5836:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5827:16:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3146,"indexExpression":{"id":3144,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"5844:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5827:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3153,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"5881:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":3147,"name":"s_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2663,"src":"5853:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3149,"indexExpression":{"id":3148,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"5862:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5853:16:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3151,"indexExpression":{"id":3150,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"5870:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5853:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":371,"src":"5853:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5853:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5827:62:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3156,"nodeType":"ExpressionStatement","src":"5827:62:7"}]}},"id":3159,"nodeType":"IfStatement","src":"5694:207:7","trueBody":{"id":3139,"nodeType":"Block","src":"5705:89:7","statements":[{"expression":{"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3124,"name":"s_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2663,"src":"5720:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3127,"indexExpression":{"id":3125,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"5729:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5720:16:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3128,"indexExpression":{"id":3126,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"5737:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5720:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3135,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"5774:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":3129,"name":"s_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2663,"src":"5746:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3131,"indexExpression":{"id":3130,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"5755:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5746:16:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3133,"indexExpression":{"id":3132,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"5763:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5746:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":356,"src":"5746:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5746:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5720:62:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3138,"nodeType":"ExpressionStatement","src":"5720:62:7"}]}}]},"functionSelector":"c5ab4602","id":3161,"implemented":true,"kind":"function","modifiers":[{"id":3121,"kind":"modifierInvocation","modifierName":{"id":3120,"name":"isAuthorised","nodeType":"IdentifierPath","referencedDeclaration":3198,"src":"5670:12:7"},"nodeType":"ModifierInvocation","src":"5670:12:7"}],"name":"updateBalance","nameLocation":"5546:13:7","nodeType":"FunctionDefinition","parameters":{"id":3119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3112,"mutability":"mutable","name":"_token","nameLocation":"5578:6:7","nodeType":"VariableDeclaration","scope":3161,"src":"5570:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3111,"name":"address","nodeType":"ElementaryTypeName","src":"5570:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3114,"mutability":"mutable","name":"_user","nameLocation":"5603:5:7","nodeType":"VariableDeclaration","scope":3161,"src":"5595:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3113,"name":"address","nodeType":"ElementaryTypeName","src":"5595:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3116,"mutability":"mutable","name":"_amount","nameLocation":"5627:7:7","nodeType":"VariableDeclaration","scope":3161,"src":"5619:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3115,"name":"uint256","nodeType":"ElementaryTypeName","src":"5619:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3118,"mutability":"mutable","name":"isAdd","nameLocation":"5650:5:7","nodeType":"VariableDeclaration","scope":3161,"src":"5645:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3117,"name":"bool","nodeType":"ElementaryTypeName","src":"5645:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5559:103:7"},"returnParameters":{"id":3122,"nodeType":"ParameterList","parameters":[],"src":"5683:0:7"},"scope":3199,"src":"5537:371:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3174,"nodeType":"Block","src":"5990:56:7","statements":[{"expression":{"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3168,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"6001:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2236","typeString":"contract Exchange"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3170,"name":"_exchangeAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"6021:16:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3169,"name":"Exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"6012:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Exchange_$2236_$","typeString":"type(contract Exchange)"}},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6012:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2236","typeString":"contract Exchange"}},"src":"6001:37:7","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2236","typeString":"contract Exchange"}},"id":3173,"nodeType":"ExpressionStatement","src":"6001:37:7"}]},"functionSelector":"31415a65","id":3175,"implemented":true,"kind":"function","modifiers":[{"id":3166,"kind":"modifierInvocation","modifierName":{"id":3165,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"5980:9:7"},"nodeType":"ModifierInvocation","src":"5980:9:7"}],"name":"updateExchangeAddress","nameLocation":"5925:21:7","nodeType":"FunctionDefinition","parameters":{"id":3164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3163,"mutability":"mutable","name":"_exchangeAddress","nameLocation":"5955:16:7","nodeType":"VariableDeclaration","scope":3175,"src":"5947:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3162,"name":"address","nodeType":"ElementaryTypeName","src":"5947:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5946:26:7"},"returnParameters":{"id":3167,"nodeType":"ParameterList","parameters":[],"src":"5990:0:7"},"scope":3199,"src":"5916:130:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3197,"nodeType":"Block","src":"6078:169:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3178,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6111:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6111:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3182,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6133:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Wallet_$3199","typeString":"contract Wallet"}],"id":3181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6125:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3180,"name":"address","nodeType":"ElementaryTypeName","src":"6125:7:7","typeDescriptions":{}}},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6125:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6111:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3185,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6142:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6142:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3189,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"6164:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2236","typeString":"contract Exchange"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Exchange_$2236","typeString":"contract Exchange"}],"id":3188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6156:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3187,"name":"address","nodeType":"ElementaryTypeName","src":"6156:7:7","typeDescriptions":{}}},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6156:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6142:31:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6111:62:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e617574686f72697365642046756e6374696f6e2043616c6c","id":3193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6188:28:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1","typeString":"literal_string \"Unauthorised Function Call\""},"value":"Unauthorised Function Call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1","typeString":"literal_string \"Unauthorised Function Call\""}],"id":3177,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6089:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6089:138:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3195,"nodeType":"ExpressionStatement","src":"6089:138:7"},{"id":3196,"nodeType":"PlaceholderStatement","src":"6238:1:7"}]},"id":3198,"name":"isAuthorised","nameLocation":"6063:12:7","nodeType":"ModifierDefinition","parameters":{"id":3176,"nodeType":"ParameterList","parameters":[],"src":"6075:2:7"},"src":"6054:193:7","virtual":false,"visibility":"internal"}],"scope":3200,"src":"388:5862:7","usedErrors":[]}],"src":"35:6217:7"},"id":7},"contracts/interface/IERC20.sol":{"ast":{"absolutePath":"contracts/interface/IERC20.sol","exportedSymbols":{"IERC20":[3285]},"id":3286,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3201,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:8"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3285,"linearizedBaseContracts":[3285],"name":"IERC20","nameLocation":"70:6:8","nodeType":"ContractDefinition","nodes":[{"functionSelector":"dd62ed3e","id":3210,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"93:9:8","nodeType":"FunctionDefinition","parameters":{"id":3206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3203,"mutability":"mutable","name":"owner","nameLocation":"121:5:8","nodeType":"VariableDeclaration","scope":3210,"src":"113:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3202,"name":"address","nodeType":"ElementaryTypeName","src":"113:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3205,"mutability":"mutable","name":"spender","nameLocation":"145:7:8","nodeType":"VariableDeclaration","scope":3210,"src":"137:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3204,"name":"address","nodeType":"ElementaryTypeName","src":"137:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"102:57:8"},"returnParameters":{"id":3209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3208,"mutability":"mutable","name":"remaining","nameLocation":"191:9:8","nodeType":"VariableDeclaration","scope":3210,"src":"183:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3207,"name":"uint256","nodeType":"ElementaryTypeName","src":"183:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"182:19:8"},"scope":3285,"src":"84:118:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":3219,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"219:7:8","nodeType":"FunctionDefinition","parameters":{"id":3215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3212,"mutability":"mutable","name":"spender","nameLocation":"245:7:8","nodeType":"VariableDeclaration","scope":3219,"src":"237:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3211,"name":"address","nodeType":"ElementaryTypeName","src":"237:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3214,"mutability":"mutable","name":"value","nameLocation":"271:5:8","nodeType":"VariableDeclaration","scope":3219,"src":"263:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3213,"name":"uint256","nodeType":"ElementaryTypeName","src":"263:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"226:57:8"},"returnParameters":{"id":3218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3217,"mutability":"mutable","name":"success","nameLocation":"307:7:8","nodeType":"VariableDeclaration","scope":3219,"src":"302:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3216,"name":"bool","nodeType":"ElementaryTypeName","src":"302:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"301:14:8"},"scope":3285,"src":"210:106:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":3226,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"333:9:8","nodeType":"FunctionDefinition","parameters":{"id":3222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3221,"mutability":"mutable","name":"owner","nameLocation":"351:5:8","nodeType":"VariableDeclaration","scope":3226,"src":"343:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3220,"name":"address","nodeType":"ElementaryTypeName","src":"343:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"342:15:8"},"returnParameters":{"id":3225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3224,"mutability":"mutable","name":"balance","nameLocation":"389:7:8","nodeType":"VariableDeclaration","scope":3226,"src":"381:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3223,"name":"uint256","nodeType":"ElementaryTypeName","src":"381:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"380:17:8"},"scope":3285,"src":"324:74:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":3231,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"415:8:8","nodeType":"FunctionDefinition","parameters":{"id":3227,"nodeType":"ParameterList","parameters":[],"src":"423:2:8"},"returnParameters":{"id":3230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3229,"mutability":"mutable","name":"decimalPlaces","nameLocation":"455:13:8","nodeType":"VariableDeclaration","scope":3231,"src":"449:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3228,"name":"uint8","nodeType":"ElementaryTypeName","src":"449:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"448:21:8"},"scope":3285,"src":"406:64:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"66188463","id":3240,"implemented":false,"kind":"function","modifiers":[],"name":"decreaseApproval","nameLocation":"487:16:8","nodeType":"FunctionDefinition","parameters":{"id":3236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3233,"mutability":"mutable","name":"spender","nameLocation":"522:7:8","nodeType":"VariableDeclaration","scope":3240,"src":"514:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3232,"name":"address","nodeType":"ElementaryTypeName","src":"514:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3235,"mutability":"mutable","name":"subtractedValue","nameLocation":"548:15:8","nodeType":"VariableDeclaration","scope":3240,"src":"540:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3234,"name":"uint256","nodeType":"ElementaryTypeName","src":"540:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"503:67:8"},"returnParameters":{"id":3239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3238,"mutability":"mutable","name":"success","nameLocation":"594:7:8","nodeType":"VariableDeclaration","scope":3240,"src":"589:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3237,"name":"bool","nodeType":"ElementaryTypeName","src":"589:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"588:14:8"},"scope":3285,"src":"478:125:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d73dd623","id":3249,"implemented":false,"kind":"function","modifiers":[],"name":"increaseApproval","nameLocation":"620:16:8","nodeType":"FunctionDefinition","parameters":{"id":3245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3242,"mutability":"mutable","name":"spender","nameLocation":"655:7:8","nodeType":"VariableDeclaration","scope":3249,"src":"647:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3241,"name":"address","nodeType":"ElementaryTypeName","src":"647:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3244,"mutability":"mutable","name":"addedValue","nameLocation":"681:10:8","nodeType":"VariableDeclaration","scope":3249,"src":"673:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3243,"name":"uint256","nodeType":"ElementaryTypeName","src":"673:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:62:8"},"returnParameters":{"id":3248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3247,"mutability":"mutable","name":"success","nameLocation":"722:7:8","nodeType":"VariableDeclaration","scope":3249,"src":"717:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3246,"name":"bool","nodeType":"ElementaryTypeName","src":"717:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"716:14:8"},"scope":3285,"src":"611:120:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"06fdde03","id":3254,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"748:4:8","nodeType":"FunctionDefinition","parameters":{"id":3250,"nodeType":"ParameterList","parameters":[],"src":"752:2:8"},"returnParameters":{"id":3253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3252,"mutability":"mutable","name":"tokenName","nameLocation":"792:9:8","nodeType":"VariableDeclaration","scope":3254,"src":"778:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3251,"name":"string","nodeType":"ElementaryTypeName","src":"778:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"777:25:8"},"scope":3285,"src":"739:64:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":3259,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"820:6:8","nodeType":"FunctionDefinition","parameters":{"id":3255,"nodeType":"ParameterList","parameters":[],"src":"826:2:8"},"returnParameters":{"id":3258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3257,"mutability":"mutable","name":"tokenSymbol","nameLocation":"866:11:8","nodeType":"VariableDeclaration","scope":3259,"src":"852:25:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3256,"name":"string","nodeType":"ElementaryTypeName","src":"852:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"851:27:8"},"scope":3285,"src":"811:68:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":3264,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"896:11:8","nodeType":"FunctionDefinition","parameters":{"id":3260,"nodeType":"ParameterList","parameters":[],"src":"907:2:8"},"returnParameters":{"id":3263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3262,"mutability":"mutable","name":"totalTokensIssued","nameLocation":"941:17:8","nodeType":"VariableDeclaration","scope":3264,"src":"933:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3261,"name":"uint256","nodeType":"ElementaryTypeName","src":"933:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"932:27:8"},"scope":3285,"src":"887:73:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":3273,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"977:8:8","nodeType":"FunctionDefinition","parameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3266,"mutability":"mutable","name":"to","nameLocation":"1004:2:8","nodeType":"VariableDeclaration","scope":3273,"src":"996:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3265,"name":"address","nodeType":"ElementaryTypeName","src":"996:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3268,"mutability":"mutable","name":"value","nameLocation":"1025:5:8","nodeType":"VariableDeclaration","scope":3273,"src":"1017:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3267,"name":"uint256","nodeType":"ElementaryTypeName","src":"1017:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"985:52:8"},"returnParameters":{"id":3272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3271,"mutability":"mutable","name":"success","nameLocation":"1061:7:8","nodeType":"VariableDeclaration","scope":3273,"src":"1056:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3270,"name":"bool","nodeType":"ElementaryTypeName","src":"1056:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1055:14:8"},"scope":3285,"src":"968:102:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":3284,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1087:12:8","nodeType":"FunctionDefinition","parameters":{"id":3280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3275,"mutability":"mutable","name":"from","nameLocation":"1118:4:8","nodeType":"VariableDeclaration","scope":3284,"src":"1110:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3274,"name":"address","nodeType":"ElementaryTypeName","src":"1110:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3277,"mutability":"mutable","name":"to","nameLocation":"1141:2:8","nodeType":"VariableDeclaration","scope":3284,"src":"1133:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3276,"name":"address","nodeType":"ElementaryTypeName","src":"1133:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3279,"mutability":"mutable","name":"value","nameLocation":"1162:5:8","nodeType":"VariableDeclaration","scope":3284,"src":"1154:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3278,"name":"uint256","nodeType":"ElementaryTypeName","src":"1154:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1099:75:8"},"returnParameters":{"id":3283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3282,"mutability":"mutable","name":"success","nameLocation":"1198:7:8","nodeType":"VariableDeclaration","scope":3284,"src":"1193:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3281,"name":"bool","nodeType":"ElementaryTypeName","src":"1193:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1192:14:8"},"scope":3285,"src":"1078:129:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3286,"src":"60:1150:8","usedErrors":[]}],"src":"33:1179:8"},"id":8}},"contracts":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":53,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"SafeMath":{"abi":[],"devdoc":{"details":"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220801a649639a4662f1423a07f295f253ac939f4e1d9e14aa3cc81e609359b6e5264736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 BYTE PUSH5 0x9639A4662F EQ 0x23 LOG0 PUSH32 0x295F253AC939F4E1D9E14AA3CC81E609359B6E5264736F6C6343000807003300 ","sourceMap":"482:6300:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220801a649639a4662f1423a07f295f253ac939f4e1d9e14aa3cc81e609359b6e5264736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 BYTE PUSH5 0x9639A4662F EQ 0x23 LOG0 PUSH32 0x295F253AC939F4E1D9E14AA3CC81E609359B6E5264736F6C6343000807003300 ","sourceMap":"482:6300:3:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","div(uint256,uint256,string memory)":"infinite","mod(uint256,uint256)":"infinite","mod(uint256,uint256,string memory)":"infinite","mul(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite","sub(uint256,uint256,string memory)":"infinite","tryAdd(uint256,uint256)":"infinite","tryDiv(uint256,uint256)":"infinite","tryMod(uint256,uint256)":"infinite","tryMul(uint256,uint256)":"infinite","trySub(uint256,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Exchange.sol":{"Exchange":{"abi":[{"inputs":[{"internalType":"address","name":"_wallet","type":"address"},{"internalType":"address","name":"_fees","type":"address"},{"internalType":"address","name":"_priceChecker","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"address","name":"tokenA","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountA","type":"uint256"},{"indexed":false,"internalType":"address","name":"tokenB","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountB","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"rate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"indexed":false,"internalType":"bool","name":"waiveFees","type":"bool"}],"name":"Cancel","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"address","name":"tokenA","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountA","type":"uint256"},{"indexed":false,"internalType":"address","name":"tokenB","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountB","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"rate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"indexed":false,"internalType":"bool","name":"waiveFees","type":"bool"}],"name":"Order","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"rate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"waiveFees","type":"bool"}],"indexed":false,"internalType":"struct Exchange._Order","name":"remainingOrder","type":"tuple"},{"indexed":false,"internalType":"uint256","name":"amountBought","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fillBuyRate","type":"uint256"},{"indexed":false,"internalType":"bool","name":"feesWaived","type":"bool"},{"indexed":false,"internalType":"uint256","name":"feesPaid","type":"uint256"}],"name":"fillBuyOrder","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"rate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"waiveFees","type":"bool"}],"indexed":false,"internalType":"struct Exchange._Order","name":"remainingOrder","type":"tuple"},{"indexed":false,"internalType":"uint256","name":"amountSold","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fillSellRate","type":"uint256"},{"indexed":false,"internalType":"bool","name":"feesWaived","type":"bool"},{"indexed":false,"internalType":"uint256","name":"feesPaid","type":"uint256"}],"name":"fillSellOrder","type":"event"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_decimals","type":"uint256"}],"name":"addToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"address","name":"_token","type":"address"}],"name":"cancelOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenA","type":"address"},{"internalType":"uint256","name":"_amountA","type":"uint256"},{"internalType":"address","name":"_tokenB","type":"address"},{"internalType":"uint256","name":"_amountB","type":"uint256"},{"internalType":"uint256","name":"_rate","type":"uint256"},{"internalType":"bool","name":"_waiveFees","type":"bool"}],"name":"createLimitBuyOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenA","type":"address"},{"internalType":"uint256","name":"_amountA","type":"uint256"},{"internalType":"address","name":"_tokenB","type":"address"},{"internalType":"uint256","name":"_amountB","type":"uint256"},{"internalType":"uint256","name":"_rate","type":"uint256"},{"internalType":"bool","name":"_waiveFees","type":"bool"}],"name":"createLimitSellOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"ethToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"}],"name":"getFilledOrderLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"side","type":"uint256"},{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"getOrderFromArray","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"rate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"waiveFees","type":"bool"}],"internalType":"struct Exchange._Order","name":"","type":"tuple"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"_token","type":"address"}],"name":"getOrderLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"getTokenInfo","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"isVerifiedToken","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"_token","type":"address"}],"name":"orderExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"s_filledOrders","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountFilled","type":"uint256"},{"internalType":"uint256","name":"fillRate","type":"uint256"},{"internalType":"uint256","name":"originalRate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"feesWaived","type":"bool"},{"internalType":"uint256","name":"feesPaid","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"s_orderBook","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"rate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"waiveFees","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_orderId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_PriceCheckeraddress","type":"address"}],"name":"setPriceCheckerAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tradingFees","type":"address"}],"name":"setTradingFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_Walletaddress","type":"address"}],"name":"setWalletAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokenList","outputs":[{"internalType":"address","name":"add","type":"address"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_69":{"entryPoint":null,"id":69,"parameterSlots":0,"returnSlots":0},"@_719":{"entryPoint":null,"id":719,"parameterSlots":3,"returnSlots":0},"@_msgSender_170":{"entryPoint":401,"id":170,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_157":{"entryPoint":409,"id":157,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":605,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_address_fromMemory":{"entryPoint":628,"id":null,"parameterSlots":2,"returnSlots":3},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":720,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":740,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":772,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":777,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1511:9","statements":[{"body":{"nodeType":"YulBlock","src":"70:80:9","statements":[{"nodeType":"YulAssignment","src":"80:22:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"89:5:9"},"nodeType":"YulFunctionCall","src":"89:13:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"80:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"138:5:9"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"111:26:9"},"nodeType":"YulFunctionCall","src":"111:33:9"},"nodeType":"YulExpressionStatement","src":"111:33:9"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"56:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:9","type":""}],"src":"7:143:9"},{"body":{"nodeType":"YulBlock","src":"267:552:9","statements":[{"body":{"nodeType":"YulBlock","src":"313:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"315:77:9"},"nodeType":"YulFunctionCall","src":"315:79:9"},"nodeType":"YulExpressionStatement","src":"315:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"288:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"297:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"284:3:9"},"nodeType":"YulFunctionCall","src":"284:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"309:2:9","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"280:3:9"},"nodeType":"YulFunctionCall","src":"280:32:9"},"nodeType":"YulIf","src":"277:119:9"},{"nodeType":"YulBlock","src":"406:128:9","statements":[{"nodeType":"YulVariableDeclaration","src":"421:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"435:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"425:6:9","type":""}]},{"nodeType":"YulAssignment","src":"450:74:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"496:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"507:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"492:3:9"},"nodeType":"YulFunctionCall","src":"492:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"516:7:9"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"460:31:9"},"nodeType":"YulFunctionCall","src":"460:64:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"450:6:9"}]}]},{"nodeType":"YulBlock","src":"544:129:9","statements":[{"nodeType":"YulVariableDeclaration","src":"559:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"573:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"563:6:9","type":""}]},{"nodeType":"YulAssignment","src":"589:74:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"635:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"646:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"631:3:9"},"nodeType":"YulFunctionCall","src":"631:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"655:7:9"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"599:31:9"},"nodeType":"YulFunctionCall","src":"599:64:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"589:6:9"}]}]},{"nodeType":"YulBlock","src":"683:129:9","statements":[{"nodeType":"YulVariableDeclaration","src":"698:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"712:2:9","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"702:6:9","type":""}]},{"nodeType":"YulAssignment","src":"728:74:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"774:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"785:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"770:3:9"},"nodeType":"YulFunctionCall","src":"770:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"794:7:9"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"738:31:9"},"nodeType":"YulFunctionCall","src":"738:64:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"728:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"221:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"232:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"244:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"252:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"260:6:9","type":""}],"src":"156:663:9"},{"body":{"nodeType":"YulBlock","src":"865:35:9","statements":[{"nodeType":"YulAssignment","src":"875:19:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"891:2:9","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"885:5:9"},"nodeType":"YulFunctionCall","src":"885:9:9"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"875:6:9"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"858:6:9","type":""}],"src":"825:75:9"},{"body":{"nodeType":"YulBlock","src":"951:51:9","statements":[{"nodeType":"YulAssignment","src":"961:35:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:9"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"972:17:9"},"nodeType":"YulFunctionCall","src":"972:24:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"961:7:9"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"933:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"943:7:9","type":""}],"src":"906:96:9"},{"body":{"nodeType":"YulBlock","src":"1053:81:9","statements":[{"nodeType":"YulAssignment","src":"1063:65:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1078:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"1085:42:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1074:3:9"},"nodeType":"YulFunctionCall","src":"1074:54:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1063:7:9"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1035:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1045:7:9","type":""}],"src":"1008:126:9"},{"body":{"nodeType":"YulBlock","src":"1229:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1246:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1249:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1239:6:9"},"nodeType":"YulFunctionCall","src":"1239:12:9"},"nodeType":"YulExpressionStatement","src":"1239:12:9"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1140:117:9"},{"body":{"nodeType":"YulBlock","src":"1352:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1369:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1372:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1362:6:9"},"nodeType":"YulFunctionCall","src":"1362:12:9"},"nodeType":"YulExpressionStatement","src":"1362:12:9"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1263:117:9"},{"body":{"nodeType":"YulBlock","src":"1429:79:9","statements":[{"body":{"nodeType":"YulBlock","src":"1486:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1495:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1498:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1488:6:9"},"nodeType":"YulFunctionCall","src":"1488:12:9"},"nodeType":"YulExpressionStatement","src":"1488:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1452:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:9"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1459:17:9"},"nodeType":"YulFunctionCall","src":"1459:24:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1449:2:9"},"nodeType":"YulFunctionCall","src":"1449:35:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1442:6:9"},"nodeType":"YulFunctionCall","src":"1442:43:9"},"nodeType":"YulIf","src":"1439:63:9"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1422:5:9","type":""}],"src":"1386:122:9"}]},"contents":"{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n","id":9,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6080604052670de0b6b3a76400006004556000600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006009556001600a60006101000a81548160ff0219169083151502179055503480156200007f57600080fd5b5060405162003ce838038062003ce88339818101604052810190620000a5919062000274565b620000c5620000b96200019160201b60201c565b6200019960201b60201c565b82600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505062000323565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200026e8162000309565b92915050565b60008060006060848603121562000290576200028f62000304565b5b6000620002a0868287016200025d565b9350506020620002b3868287016200025d565b9250506040620002c6868287016200025d565b9150509250925092565b6000620002dd82620002e4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200031481620002d0565b81146200032057600080fd5b50565b6139b580620003336000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80639c07ce26116100b8578063bd8098ec1161007c578063bd8098ec1461033a578063c3364be414610375578063dafbfe6a146103a5578063e947a695146103c1578063f2fde38b146103f1578063f9242d9a1461040d57610137565b80639c07ce26146102975780639ead7222146102b5578063ac1a386a146102e6578063af81c5b914610302578063b136e39a1461031e57610137565b806362c09cfa116100ff57806362c09cfa146102195780636f4e410b14610235578063715018a6146102515780637bf1a6271461025b5780638da5cb5b1461027957610137565b80631027b2191461013c5780631347d60e1461016c578063182cffeb146101885780631f69565f146101b8578063609ae6b5146101e8575b600080fd5b61015660048036038101906101519190612d4c565b610447565b6040516101639190613319565b60405180910390f35b61018660048036038101906101819190612f19565b6104fd565b005b6101a2600480360381019061019d9190612fc6565b610f96565b6040516101af9190613319565b60405180910390f35b6101d260048036038101906101cd9190612d4c565b611246565b6040516101df919061343f565b60405180910390f35b61020260048036038101906101fd9190612e86565b61131c565b604051610210929190613414565b60405180910390f35b610233600480360381019061022e9190612df9565b6115e8565b005b61024f600480360381019061024a9190612df9565b611bc5565b005b6102596121a1565b005b6102636121b5565b6040516102709190613267565b60405180910390f35b6102816121db565b60405161028e9190613267565b60405180910390f35b61029f612204565b6040516102ac919061343f565b60405180910390f35b6102cf60048036038101906102ca9190612f6c565b61220a565b6040516102dd9291906132f0565b60405180910390f35b61030060048036038101906102fb9190612d4c565b61225e565b005b61031c60048036038101906103179190612db9565b6122aa565b005b61033860048036038101906103339190612d4c565b6123a8565b005b610354600480360381019061034f9190612e86565b6123f4565b60405161036c9c9b9a9998979695949392919061345a565b60405180910390f35b61038f600480360381019061038a9190612d79565b6124f8565b60405161039c919061343f565b60405180910390f35b6103bf60048036038101906103ba9190612d4c565b612568565b005b6103db60048036038101906103d69190612ed9565b6125b4565b6040516103e8919061343f565b60405180910390f35b61040b60048036038101906104069190612d4c565b612624565b005b61042760048036038101906104229190612e86565b6126a8565b60405161043e9b9a99989796959493929190613514565b60405180910390f35b600080600090505b6006805490508110156104f2578273ffffffffffffffffffffffffffffffffffffffff16600682815481106104875761048661379d565b5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156104df5760019150506104f8565b80806104ea906136c7565b91505061044f565b50600090505b919050565b81838261050b838383610f96565b61054a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054190613334565b60405180910390fd5b8361055481610447565b610593576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058a90613374565b60405180910390fd5b6000600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008960018111156105e9576105e861373f565b5b8152602001908152602001600020905060008180549050905061060a61291c565b600080600090505b83811015610824578a85828154811061062e5761062d61379d565b5b90600052602060002090600a02016000015414156108115780915084818154811061065c5761065b61379d565b5b90600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff1660018111156106a5576106a461373f565b5b60018111156106b7576106b661373f565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff1615151515815250509250610824565b808061081c906136c7565b915050610612565b50600a60009054906101000a900460ff1615610a4557816040015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a3906133b4565b60405180910390fd5b600060018111156108c0576108bf61373f565b5b8b60018111156108d3576108d261373f565b5b141561097a57600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346a8f820338460a001518560c0015160006040518563ffffffff1660e01b815260040161094394939291906132ab565b600060405180830381600087803b15801561095d57600080fd5b505af1158015610971573d6000803e3d6000fd5b50505050610a44565b60018081111561098d5761098c61373f565b5b8b60018111156109a05761099f61373f565b5b1415610a4357600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346a8f820338460600151856080015160006040518563ffffffff1660e01b8152600401610a1094939291906132ab565b600060405180830381600087803b158015610a2a57600080fd5b505af1158015610a3e573d6000803e3d6000fd5b505050505b5b5b60008190505b600184610a589190613626565b811015610ca55784610a746001836127a690919063ffffffff16565b81548110610a8557610a8461379d565b5b90600052602060002090600a0201858281548110610aa657610aa561379d565b5b90600052602060002090600a0201600082015481600001556001820160009054906101000a900460ff168160010160006101000a81548160ff02191690836001811115610af657610af561373f565b5b02179055506001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600382015481600301556004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600582015481600501556006820154816006015560078201548160070155600882015481600801556009820160009054906101000a900460ff168160090160006101000a81548160ff0219169083151502179055509050508080610c9d906136c7565b915050610a4b565b5083610cbb6001856127bc90919063ffffffff16565b81548110610ccc57610ccb61379d565b5b90600052602060002090600a02016000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600090556006820160009055600782016000905560088201600090556009820160006101000a81549060ff0219169055505083805480610dbb57610dba61376e565b5b60019003818190600052602060002090600a02016000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600090556006820160009055600782016000905560088201600090556009820160006101000a81549060ff02191690555050905583600760008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008d6001811115610ef657610ef561373f565b5b8152602001908152602001600020908054610f129291906129cc565b507fa1cc643491754200d3eca5769e524a0fd00f9b0862b18d0da7d6e7277a83dfda8a83602001518460400151856060015186608001518760a001518860c001518960e001518a61010001518b61012001518c6101400151604051610f819b9a99989796959493929190613514565b60405180910390a15050505050505050505050565b600080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000856001811115610fed57610fec61373f565b5b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156111e257838290600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff16600181111561106e5761106d61373f565b5b60018111156110805761107f61373f565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff1615151515815250508152602001906001019061101b565b50505050905060005b815181101561123857858282815181106112085761120761379d565b5b60200260200101516000015114156112255760019250505061123f565b8080611230906136c7565b9150506111eb565b5060009150505b9392505050565b600080600090505b600680549050811015611315578273ffffffffffffffffffffffffffffffffffffffff16600682815481106112865761128561379d565b5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561130257600681815481106112e8576112e761379d565b5b906000526020600020906002020160010154915050611317565b808061130d906136c7565b91505061124e565b505b919050565b61132461291c565b600080600090506000600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561156457838290600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff1660018111156113f0576113ef61373f565b5b60018111156114025761140161373f565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff1615151515815250508152602001906001019061139d565b50505050905061157261291c565b5b81518310156115d757858284815181106115905761158f61379d565b5b60200260200101516000015114156115c4578183815181106115b5576115b461379d565b5b602002602001015190506115d7565b82806115cf906136c7565b935050611573565b808394509450505050935093915050565b856115f281610447565b611631576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162890613374565b60405180910390fd5b8461163b81610447565b61167a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167190613374565b60405180910390fd5b846117e6600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634fc121db338a6040518363ffffffff1660e01b81526004016116db929190613282565b60206040518083038186803b1580156116f357600080fd5b505afa158015611707573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061172b9190612f99565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7888aec8a336040518363ffffffff1660e01b8152600401611788929190613282565b60206040518083038186803b1580156117a057600080fd5b505afa1580156117b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117d89190612f99565b6127bc90919063ffffffff16565b1015611827576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161181e90613394565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346a8f82033888860016040518563ffffffff1660e01b815260040161188994939291906132ab565b600060405180830381600087803b1580156118a357600080fd5b505af11580156118b7573d6000803e3d6000fd5b50505050600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080600181111561190f5761190e61373f565b5b81526020019081526020016000206040518061016001604052806009548152602001600060018111156119455761194461373f565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018a73ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018873ffffffffffffffffffffffffffffffffffffffff16815260200187815260200186815260200189815260200187815260200185151581525090806001815401808255809150506001900390600052602060002090600a02016000909190919091506000820151816000015560208201518160010160006101000a81548160ff02191690836001811115611a2057611a1f61373f565b5b021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816003015560a08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816005015560e08201518160060155610100820151816007015561012082015181600801556101408201518160090160006101000a81548160ff02191690831515021790555050507fcb2df66a1a7db52683240584eca4355946d7b80a59dcb7707aa8dd95463ed7446009546000338b8b8b8b8b8f8e8d604051611b979b9a99989796959493929190613514565b60405180910390a1611bb560016009546127a690919063ffffffff16565b6009819055505050505050505050565b85611bcf81610447565b611c0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c0590613374565b60405180910390fd5b84611c1881610447565b611c57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c4e90613374565b60405180910390fd5b86611dc3600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634fc121db338c6040518363ffffffff1660e01b8152600401611cb8929190613282565b60206040518083038186803b158015611cd057600080fd5b505afa158015611ce4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d089190612f99565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7888aec8c336040518363ffffffff1660e01b8152600401611d65929190613282565b60206040518083038186803b158015611d7d57600080fd5b505afa158015611d91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611db59190612f99565b6127bc90919063ffffffff16565b1015611e04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dfb90613394565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346a8f820338a8a60016040518563ffffffff1660e01b8152600401611e6694939291906132ab565b600060405180830381600087803b158015611e8057600080fd5b505af1158015611e94573d6000803e3d6000fd5b50505050600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600180811115611eec57611eeb61373f565b5b81526020019081526020016000206040518061016001604052806009548152602001600180811115611f2157611f2061373f565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018a73ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018873ffffffffffffffffffffffffffffffffffffffff16815260200187815260200186815260200189815260200187815260200185151581525090806001815401808255809150506001900390600052602060002090600a02016000909190919091506000820151816000015560208201518160010160006101000a81548160ff02191690836001811115611ffc57611ffb61373f565b5b021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816003015560a08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816005015560e08201518160060155610100820151816007015561012082015181600801556101408201518160090160006101000a81548160ff02191690831515021790555050507fcb2df66a1a7db52683240584eca4355946d7b80a59dcb7707aa8dd95463ed7446009546001338b8b8b8b8b8f8e8d6040516121739b9a99989796959493929190613514565b60405180910390a161219160016009546127a690919063ffffffff16565b6009819055505050505050505050565b6121a96127d2565b6121b36000612850565b565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60095481565b6006818154811061221a57600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b6122666127d2565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6122b26127d2565b6122bb82610447565b156122fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122f2906133d4565b60405180910390fd5b600660405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505050565b6123b06127d2565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6008602052826000526040600020602052816000526040600020818154811061241c57600080fd5b90600052602060002090600b020160009250925050508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050154908060060154908060070154908060080154908060090160009054906101000a900460ff169080600a015490508c565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083600181111561254e5761254d61373f565b5b815260200190815260200160002080549050905092915050565b6125706127d2565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084600181111561260a5761260961373f565b5b815260200190815260200160002080549050905092915050565b61262c6127d2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561269c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161269390613354565b60405180910390fd5b6126a581612850565b50565b600760205282600052604060002060205281600052604060002081815481106126d057600080fd5b90600052602060002090600a020160009250925050508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060154908060070154908060080154908060090160009054906101000a900460ff1690508b565b600081836127b491906135d0565b905092915050565b600081836127ca9190613626565b905092915050565b6127da612914565b73ffffffffffffffffffffffffffffffffffffffff166127f86121db565b73ffffffffffffffffffffffffffffffffffffffff161461284e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612845906133f4565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60405180610160016040528060008152602001600060018111156129435761294261373f565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000151581525090565b82805482825590600052602060002090600a028101928215612bee57600052602060002091600a0282015b82811115612bed578282600082015481600001556001820160009054906101000a900460ff168160010160006101000a81548160ff02191690836001811115612a4357612a4261373f565b5b02179055506001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600382015481600301556004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600582015481600501556006820154816006015560078201548160070155600882015481600801556009820160009054906101000a900460ff168160090160006101000a81548160ff021916908315150217905550505091600a019190600a01906129f7565b5b509050612bfb9190612bff565b5090565b5b80821115612cdf576000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600090556006820160009055600782016000905560088201600090556009820160006101000a81549060ff021916905550600a01612c00565b5090565b600081359050612cf28161392a565b92915050565b600081359050612d0781613941565b92915050565b600081359050612d1c81613958565b92915050565b600081359050612d3181613968565b92915050565b600081519050612d4681613968565b92915050565b600060208284031215612d6257612d616137cc565b5b6000612d7084828501612ce3565b91505092915050565b60008060408385031215612d9057612d8f6137cc565b5b6000612d9e85828601612ce3565b9250506020612daf85828601612d0d565b9150509250929050565b60008060408385031215612dd057612dcf6137cc565b5b6000612dde85828601612ce3565b9250506020612def85828601612d22565b9150509250929050565b60008060008060008060c08789031215612e1657612e156137cc565b5b6000612e2489828a01612ce3565b9650506020612e3589828a01612d22565b9550506040612e4689828a01612ce3565b9450506060612e5789828a01612d22565b9350506080612e6889828a01612d22565b92505060a0612e7989828a01612cf8565b9150509295509295509295565b600080600060608486031215612e9f57612e9e6137cc565b5b6000612ead86828701612ce3565b9350506020612ebe86828701612d22565b9250506040612ecf86828701612d22565b9150509250925092565b60008060408385031215612ef057612eef6137cc565b5b6000612efe85828601612d0d565b9250506020612f0f85828601612ce3565b9150509250929050565b600080600060608486031215612f3257612f316137cc565b5b6000612f4086828701612d0d565b9350506020612f5186828701612d22565b9250506040612f6286828701612ce3565b9150509250925092565b600060208284031215612f8257612f816137cc565b5b6000612f9084828501612d22565b91505092915050565b600060208284031215612faf57612fae6137cc565b5b6000612fbd84828501612d37565b91505092915050565b600080600060608486031215612fdf57612fde6137cc565b5b6000612fed86828701612d22565b9350506020612ffe86828701612d0d565b925050604061300f86828701612ce3565b9150509250925092565b6130228161365a565b82525050565b6130318161365a565b82525050565b6130408161366c565b82525050565b61304f8161366c565b82525050565b61305e816136b5565b82525050565b61306d816136b5565b82525050565b60006130806010836135bf565b915061308b826137d1565b602082019050919050565b60006130a36026836135bf565b91506130ae826137fa565b604082019050919050565b60006130c66018836135bf565b91506130d182613849565b602082019050919050565b60006130e96012836135bf565b91506130f482613872565b602082019050919050565b600061310c6009836135bf565b91506131178261389b565b602082019050919050565b600061312f6016836135bf565b915061313a826138c4565b602082019050919050565b60006131526020836135bf565b915061315d826138ed565b602082019050919050565b6101608201600082015161317f6000850182613249565b5060208201516131926020850182613055565b5060408201516131a56040850182613019565b5060608201516131b86060850182613019565b5060808201516131cb6080850182613249565b5060a08201516131de60a0850182613019565b5060c08201516131f160c0850182613249565b5060e082015161320460e0850182613249565b50610100820151613219610100850182613249565b5061012082015161322e610120850182613249565b50610140820151613243610140850182613037565b50505050565b613252816136ab565b82525050565b613261816136ab565b82525050565b600060208201905061327c6000830184613028565b92915050565b60006040820190506132976000830185613028565b6132a46020830184613028565b9392505050565b60006080820190506132c06000830187613028565b6132cd6020830186613028565b6132da6040830185613258565b6132e76060830184613046565b95945050505050565b60006040820190506133056000830185613028565b6133126020830184613258565b9392505050565b600060208201905061332e6000830184613046565b92915050565b6000602082019050818103600083015261334d81613073565b9050919050565b6000602082019050818103600083015261336d81613096565b9050919050565b6000602082019050818103600083015261338d816130b9565b9050919050565b600060208201905081810360008301526133ad816130dc565b9050919050565b600060208201905081810360008301526133cd816130ff565b9050919050565b600060208201905081810360008301526133ed81613122565b9050919050565b6000602082019050818103600083015261340d81613145565b9050919050565b60006101808201905061342a6000830185613168565b613438610160830184613258565b9392505050565b60006020820190506134546000830184613258565b92915050565b600061018082019050613470600083018f613258565b61347d602083018e613064565b61348a604083018d613028565b613497606083018c613028565b6134a4608083018b613028565b6134b160a083018a613258565b6134be60c0830189613258565b6134cb60e0830188613258565b6134d9610100830187613258565b6134e7610120830186613258565b6134f5610140830185613046565b613503610160830184613258565b9d9c50505050505050505050505050565b60006101608201905061352a600083018e613258565b613537602083018d613064565b613544604083018c613028565b613551606083018b613028565b61355e608083018a613258565b61356b60a0830189613028565b61357860c0830188613258565b61358560e0830187613258565b613593610100830186613258565b6135a1610120830185613258565b6135af610140830184613046565b9c9b505050505050505050505050565b600082825260208201905092915050565b60006135db826136ab565b91506135e6836136ab565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561361b5761361a613710565b5b828201905092915050565b6000613631826136ab565b915061363c836136ab565b92508282101561364f5761364e613710565b5b828203905092915050565b60006136658261368b565b9050919050565b60008115159050919050565b600081905061368682613916565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006136c082613678565b9050919050565b60006136d2826136ab565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561370557613704613710565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b7f496e76616c6964204f7264657220494400000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f546f6b656e20756e617661696c61626c6520696e204445580000000000000000600082015250565b7f496e73756666696369656e742046756e64730000000000000000000000000000600082015250565b7f4e6f74204f776e65720000000000000000000000000000000000000000000000600082015250565b7f546f6b656e20616c726561647920766572696669656400000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600281106139275761392661373f565b5b50565b6139338161365a565b811461393e57600080fd5b50565b61394a8161366c565b811461395557600080fd5b50565b6002811061396557600080fd5b50565b613971816136ab565b811461397c57600080fd5b5056fea264697066735822122025b5dd8fe613f60885e17b9788bead27e9c82f3ca9c4635310c8640049dd345264736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x4 SSTORE PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 SSTORE PUSH1 0x1 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3CE8 CODESIZE SUB DUP1 PUSH3 0x3CE8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0xA5 SWAP2 SWAP1 PUSH3 0x274 JUMP JUMPDEST PUSH3 0xC5 PUSH3 0xB9 PUSH3 0x191 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x199 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP3 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x323 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x26E DUP2 PUSH3 0x309 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x290 JUMPI PUSH3 0x28F PUSH3 0x304 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2A0 DUP7 DUP3 DUP8 ADD PUSH3 0x25D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x2B3 DUP7 DUP3 DUP8 ADD PUSH3 0x25D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x2C6 DUP7 DUP3 DUP8 ADD PUSH3 0x25D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2DD DUP3 PUSH3 0x2E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x314 DUP2 PUSH3 0x2D0 JUMP JUMPDEST DUP2 EQ PUSH3 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x39B5 DUP1 PUSH3 0x333 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C07CE26 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xBD8098EC GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xBD8098EC EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xC3364BE4 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xDAFBFE6A EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0xE947A695 EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0xF9242D9A EQ PUSH2 0x40D JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x9C07CE26 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x9EAD7222 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xAC1A386A EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0xAF81C5B9 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0xB136E39A EQ PUSH2 0x31E JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x62C09CFA GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x62C09CFA EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x6F4E410B EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x7BF1A627 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x279 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x1027B219 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x1347D60E EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x182CFFEB EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x1F69565F EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x609AE6B5 EQ PUSH2 0x1E8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x2D4C JUMP JUMPDEST PUSH2 0x447 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x3319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x186 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x2F19 JUMP JUMPDEST PUSH2 0x4FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x2FC6 JUMP JUMPDEST PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x3319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x2D4C JUMP JUMPDEST PUSH2 0x1246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x343F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x2E86 JUMP JUMPDEST PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP3 SWAP2 SWAP1 PUSH2 0x3414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x2DF9 JUMP JUMPDEST PUSH2 0x15E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x2DF9 JUMP JUMPDEST PUSH2 0x1BC5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x259 PUSH2 0x21A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x263 PUSH2 0x21B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x3267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x281 PUSH2 0x21DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x3267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH2 0x2204 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x343F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x2F6C JUMP JUMPDEST PUSH2 0x220A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DD SWAP3 SWAP2 SWAP1 PUSH2 0x32F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x300 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x2D4C JUMP JUMPDEST PUSH2 0x225E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x2DB9 JUMP JUMPDEST PUSH2 0x22AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x338 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x2D4C JUMP JUMPDEST PUSH2 0x23A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x2E86 JUMP JUMPDEST PUSH2 0x23F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36C SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x345A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x2D79 JUMP JUMPDEST PUSH2 0x24F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x343F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x2D4C JUMP JUMPDEST PUSH2 0x2568 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x2ED9 JUMP JUMPDEST PUSH2 0x25B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0x343F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x2D4C JUMP JUMPDEST PUSH2 0x2624 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x427 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x422 SWAP2 SWAP1 PUSH2 0x2E86 JUMP JUMPDEST PUSH2 0x26A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43E SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3514 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x4F2 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x487 JUMPI PUSH2 0x486 PUSH2 0x379D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4DF JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x4F8 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x4EA SWAP1 PUSH2 0x36C7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x44F JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 DUP3 PUSH2 0x50B DUP4 DUP4 DUP4 PUSH2 0xF96 JUMP JUMPDEST PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x541 SWAP1 PUSH2 0x3334 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH2 0x554 DUP2 PUSH2 0x447 JUMP JUMPDEST PUSH2 0x593 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x3374 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x5E9 JUMPI PUSH2 0x5E8 PUSH2 0x373F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH2 0x60A PUSH2 0x291C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x824 JUMPI DUP11 DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x62E JUMPI PUSH2 0x62D PUSH2 0x379D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x811 JUMPI DUP1 SWAP2 POP DUP5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x65C JUMPI PUSH2 0x65B PUSH2 0x379D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x6A5 JUMPI PUSH2 0x6A4 PUSH2 0x373F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x6B7 JUMPI PUSH2 0x6B6 PUSH2 0x373F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP3 POP PUSH2 0x824 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x81C SWAP1 PUSH2 0x36C7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x612 JUMP JUMPDEST POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA45 JUMPI DUP2 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A3 SWAP1 PUSH2 0x33B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x8C0 JUMPI PUSH2 0x8BF PUSH2 0x373F JUMP JUMPDEST JUMPDEST DUP12 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x8D3 JUMPI PUSH2 0x8D2 PUSH2 0x373F JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x97A JUMPI PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x46A8F820 CALLER DUP5 PUSH1 0xA0 ADD MLOAD DUP6 PUSH1 0xC0 ADD MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x943 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x95D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x971 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xA44 JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x98D JUMPI PUSH2 0x98C PUSH2 0x373F JUMP JUMPDEST JUMPDEST DUP12 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x9A0 JUMPI PUSH2 0x99F PUSH2 0x373F JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0xA43 JUMPI PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x46A8F820 CALLER DUP5 PUSH1 0x60 ADD MLOAD DUP6 PUSH1 0x80 ADD MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA10 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA3E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP JUMPDEST PUSH1 0x1 DUP5 PUSH2 0xA58 SWAP2 SWAP1 PUSH2 0x3626 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xCA5 JUMPI DUP5 PUSH2 0xA74 PUSH1 0x1 DUP4 PUSH2 0x27A6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xA85 JUMPI PUSH2 0xA84 PUSH2 0x379D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAA6 JUMPI PUSH2 0xAA5 PUSH2 0x379D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xAF6 JUMPI PUSH2 0xAF5 PUSH2 0x373F JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP3 ADD SLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 DUP3 ADD SLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0x6 DUP3 ADD SLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0x7 DUP3 ADD SLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH1 0x8 DUP3 ADD SLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 DUP1 PUSH2 0xC9D SWAP1 PUSH2 0x36C7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA4B JUMP JUMPDEST POP DUP4 PUSH2 0xCBB PUSH1 0x1 DUP6 PUSH2 0x27BC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xCCC JUMPI PUSH2 0xCCB PUSH2 0x379D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP DUP4 DUP1 SLOAD DUP1 PUSH2 0xDBB JUMPI PUSH2 0xDBA PUSH2 0x376E JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP SWAP1 SSTORE DUP4 PUSH1 0x7 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xEF6 JUMPI PUSH2 0xEF5 PUSH2 0x373F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 SLOAD PUSH2 0xF12 SWAP3 SWAP2 SWAP1 PUSH2 0x29CC JUMP JUMPDEST POP PUSH32 0xA1CC643491754200D3ECA5769E524A0FD00F9B0862B18D0DA7D6E7277A83DFDA DUP11 DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD DUP7 PUSH1 0x80 ADD MLOAD DUP8 PUSH1 0xA0 ADD MLOAD DUP9 PUSH1 0xC0 ADD MLOAD DUP10 PUSH1 0xE0 ADD MLOAD DUP11 PUSH2 0x100 ADD MLOAD DUP12 PUSH2 0x120 ADD MLOAD DUP13 PUSH2 0x140 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xF81 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3514 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xFED JUMPI PUSH2 0xFEC PUSH2 0x373F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x11E2 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x106E JUMPI PUSH2 0x106D PUSH2 0x373F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1080 JUMPI PUSH2 0x107F PUSH2 0x373F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x101B JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1238 JUMPI DUP6 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1208 JUMPI PUSH2 0x1207 PUSH2 0x379D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x1225 JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x123F JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1230 SWAP1 PUSH2 0x36C7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11EB JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1315 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1286 JUMPI PUSH2 0x1285 PUSH2 0x379D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1302 JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x12E8 JUMPI PUSH2 0x12E7 PUSH2 0x379D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP POP PUSH2 0x1317 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x130D SWAP1 PUSH2 0x36C7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x124E JUMP JUMPDEST POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1324 PUSH2 0x291C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1564 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x13F0 JUMPI PUSH2 0x13EF PUSH2 0x373F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1402 JUMPI PUSH2 0x1401 PUSH2 0x373F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x139D JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH2 0x1572 PUSH2 0x291C JUMP JUMPDEST JUMPDEST DUP2 MLOAD DUP4 LT ISZERO PUSH2 0x15D7 JUMPI DUP6 DUP3 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1590 JUMPI PUSH2 0x158F PUSH2 0x379D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x15C4 JUMPI DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x15B5 JUMPI PUSH2 0x15B4 PUSH2 0x379D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x15D7 JUMP JUMPDEST DUP3 DUP1 PUSH2 0x15CF SWAP1 PUSH2 0x36C7 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x1573 JUMP JUMPDEST DUP1 DUP4 SWAP5 POP SWAP5 POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST DUP6 PUSH2 0x15F2 DUP2 PUSH2 0x447 JUMP JUMPDEST PUSH2 0x1631 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1628 SWAP1 PUSH2 0x3374 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0x163B DUP2 PUSH2 0x447 JUMP JUMPDEST PUSH2 0x167A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1671 SWAP1 PUSH2 0x3374 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0x17E6 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4FC121DB CALLER DUP11 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16DB SWAP3 SWAP2 SWAP1 PUSH2 0x3282 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1707 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x172B SWAP2 SWAP1 PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF7888AEC DUP11 CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1788 SWAP3 SWAP2 SWAP1 PUSH2 0x3282 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17D8 SWAP2 SWAP1 PUSH2 0x2F99 JUMP JUMPDEST PUSH2 0x27BC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x1827 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x181E SWAP1 PUSH2 0x3394 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x46A8F820 CALLER DUP9 DUP9 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1889 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x7 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x190F JUMPI PUSH2 0x190E PUSH2 0x373F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1945 JUMPI PUSH2 0x1944 PUSH2 0x373F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1A20 JUMPI PUSH2 0x1A1F PUSH2 0x373F JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH32 0xCB2DF66A1A7DB52683240584ECA4355946D7B80A59DCB7707AA8DD95463ED744 PUSH1 0x9 SLOAD PUSH1 0x0 CALLER DUP12 DUP12 DUP12 DUP12 DUP12 DUP16 DUP15 DUP14 PUSH1 0x40 MLOAD PUSH2 0x1B97 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3514 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1BB5 PUSH1 0x1 PUSH1 0x9 SLOAD PUSH2 0x27A6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP6 PUSH2 0x1BCF DUP2 PUSH2 0x447 JUMP JUMPDEST PUSH2 0x1C0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C05 SWAP1 PUSH2 0x3374 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0x1C18 DUP2 PUSH2 0x447 JUMP JUMPDEST PUSH2 0x1C57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C4E SWAP1 PUSH2 0x3374 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH2 0x1DC3 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4FC121DB CALLER DUP13 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CB8 SWAP3 SWAP2 SWAP1 PUSH2 0x3282 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CE4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D08 SWAP2 SWAP1 PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF7888AEC DUP13 CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D65 SWAP3 SWAP2 SWAP1 PUSH2 0x3282 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D91 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DB5 SWAP2 SWAP1 PUSH2 0x2F99 JUMP JUMPDEST PUSH2 0x27BC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x1E04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DFB SWAP1 PUSH2 0x3394 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x46A8F820 CALLER DUP11 DUP11 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E66 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E94 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x7 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x1EEC JUMPI PUSH2 0x1EEB PUSH2 0x373F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x1F21 JUMPI PUSH2 0x1F20 PUSH2 0x373F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1FFC JUMPI PUSH2 0x1FFB PUSH2 0x373F JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH32 0xCB2DF66A1A7DB52683240584ECA4355946D7B80A59DCB7707AA8DD95463ED744 PUSH1 0x9 SLOAD PUSH1 0x1 CALLER DUP12 DUP12 DUP12 DUP12 DUP12 DUP16 DUP15 DUP14 PUSH1 0x40 MLOAD PUSH2 0x2173 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3514 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x2191 PUSH1 0x1 PUSH1 0x9 SLOAD PUSH2 0x27A6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x21A9 PUSH2 0x27D2 JUMP JUMPDEST PUSH2 0x21B3 PUSH1 0x0 PUSH2 0x2850 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x221A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x2266 PUSH2 0x27D2 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x22B2 PUSH2 0x27D2 JUMP JUMPDEST PUSH2 0x22BB DUP3 PUSH2 0x447 JUMP JUMPDEST ISZERO PUSH2 0x22FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22F2 SWAP1 PUSH2 0x33D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x23B0 PUSH2 0x27D2 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x241C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xB MUL ADD PUSH1 0x0 SWAP3 POP SWAP3 POP POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0xA ADD SLOAD SWAP1 POP DUP13 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x254E JUMPI PUSH2 0x254D PUSH2 0x373F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2570 PUSH2 0x27D2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x260A JUMPI PUSH2 0x2609 PUSH2 0x373F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x262C PUSH2 0x27D2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x269C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2693 SWAP1 PUSH2 0x3354 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x26A5 DUP2 PUSH2 0x2850 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x26D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 SWAP3 POP SWAP3 POP POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP12 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x27B4 SWAP2 SWAP1 PUSH2 0x35D0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x27CA SWAP2 SWAP1 PUSH2 0x3626 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27DA PUSH2 0x2914 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x27F8 PUSH2 0x21DB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x284E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2845 SWAP1 PUSH2 0x33F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2943 JUMPI PUSH2 0x2942 PUSH2 0x373F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2BEE JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0xA MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2BED JUMPI DUP3 DUP3 PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2A43 JUMPI PUSH2 0x2A42 PUSH2 0x373F JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP3 ADD SLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 DUP3 ADD SLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0x6 DUP3 ADD SLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0x7 DUP3 ADD SLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH1 0x8 DUP3 ADD SLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP SWAP2 PUSH1 0xA ADD SWAP2 SWAP1 PUSH1 0xA ADD SWAP1 PUSH2 0x29F7 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x2BFB SWAP2 SWAP1 PUSH2 0x2BFF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2CDF JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP PUSH1 0xA ADD PUSH2 0x2C00 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CF2 DUP2 PUSH2 0x392A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2D07 DUP2 PUSH2 0x3941 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2D1C DUP2 PUSH2 0x3958 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2D31 DUP2 PUSH2 0x3968 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2D46 DUP2 PUSH2 0x3968 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D62 JUMPI PUSH2 0x2D61 PUSH2 0x37CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D70 DUP5 DUP3 DUP6 ADD PUSH2 0x2CE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D90 JUMPI PUSH2 0x2D8F PUSH2 0x37CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D9E DUP6 DUP3 DUP7 ADD PUSH2 0x2CE3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2DAF DUP6 DUP3 DUP7 ADD PUSH2 0x2D0D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2DD0 JUMPI PUSH2 0x2DCF PUSH2 0x37CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DDE DUP6 DUP3 DUP7 ADD PUSH2 0x2CE3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2DEF DUP6 DUP3 DUP7 ADD PUSH2 0x2D22 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2E16 JUMPI PUSH2 0x2E15 PUSH2 0x37CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E24 DUP10 DUP3 DUP11 ADD PUSH2 0x2CE3 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x2E35 DUP10 DUP3 DUP11 ADD PUSH2 0x2D22 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x2E46 DUP10 DUP3 DUP11 ADD PUSH2 0x2CE3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x2E57 DUP10 DUP3 DUP11 ADD PUSH2 0x2D22 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x2E68 DUP10 DUP3 DUP11 ADD PUSH2 0x2D22 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x2E79 DUP10 DUP3 DUP11 ADD PUSH2 0x2CF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2E9F JUMPI PUSH2 0x2E9E PUSH2 0x37CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2EAD DUP7 DUP3 DUP8 ADD PUSH2 0x2CE3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2EBE DUP7 DUP3 DUP8 ADD PUSH2 0x2D22 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2ECF DUP7 DUP3 DUP8 ADD PUSH2 0x2D22 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2EF0 JUMPI PUSH2 0x2EEF PUSH2 0x37CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2EFE DUP6 DUP3 DUP7 ADD PUSH2 0x2D0D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2F0F DUP6 DUP3 DUP7 ADD PUSH2 0x2CE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2F32 JUMPI PUSH2 0x2F31 PUSH2 0x37CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F40 DUP7 DUP3 DUP8 ADD PUSH2 0x2D0D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2F51 DUP7 DUP3 DUP8 ADD PUSH2 0x2D22 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2F62 DUP7 DUP3 DUP8 ADD PUSH2 0x2CE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F82 JUMPI PUSH2 0x2F81 PUSH2 0x37CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F90 DUP5 DUP3 DUP6 ADD PUSH2 0x2D22 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FAF JUMPI PUSH2 0x2FAE PUSH2 0x37CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FBD DUP5 DUP3 DUP6 ADD PUSH2 0x2D37 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2FDF JUMPI PUSH2 0x2FDE PUSH2 0x37CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FED DUP7 DUP3 DUP8 ADD PUSH2 0x2D22 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2FFE DUP7 DUP3 DUP8 ADD PUSH2 0x2D0D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x300F DUP7 DUP3 DUP8 ADD PUSH2 0x2CE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x3022 DUP2 PUSH2 0x365A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3031 DUP2 PUSH2 0x365A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3040 DUP2 PUSH2 0x366C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x304F DUP2 PUSH2 0x366C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x305E DUP2 PUSH2 0x36B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x306D DUP2 PUSH2 0x36B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3080 PUSH1 0x10 DUP4 PUSH2 0x35BF JUMP JUMPDEST SWAP2 POP PUSH2 0x308B DUP3 PUSH2 0x37D1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30A3 PUSH1 0x26 DUP4 PUSH2 0x35BF JUMP JUMPDEST SWAP2 POP PUSH2 0x30AE DUP3 PUSH2 0x37FA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30C6 PUSH1 0x18 DUP4 PUSH2 0x35BF JUMP JUMPDEST SWAP2 POP PUSH2 0x30D1 DUP3 PUSH2 0x3849 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30E9 PUSH1 0x12 DUP4 PUSH2 0x35BF JUMP JUMPDEST SWAP2 POP PUSH2 0x30F4 DUP3 PUSH2 0x3872 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x310C PUSH1 0x9 DUP4 PUSH2 0x35BF JUMP JUMPDEST SWAP2 POP PUSH2 0x3117 DUP3 PUSH2 0x389B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x312F PUSH1 0x16 DUP4 PUSH2 0x35BF JUMP JUMPDEST SWAP2 POP PUSH2 0x313A DUP3 PUSH2 0x38C4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3152 PUSH1 0x20 DUP4 PUSH2 0x35BF JUMP JUMPDEST SWAP2 POP PUSH2 0x315D DUP3 PUSH2 0x38ED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x160 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x317F PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x3249 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3192 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3055 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x31A5 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3019 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x31B8 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x3019 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x31CB PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x3249 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x31DE PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x3019 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x31F1 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x3249 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x3204 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x3249 JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x3219 PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x3249 JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x322E PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x3249 JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x3243 PUSH2 0x140 DUP6 ADD DUP3 PUSH2 0x3037 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3252 DUP2 PUSH2 0x36AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3261 DUP2 PUSH2 0x36AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x327C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3028 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3297 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3028 JUMP JUMPDEST PUSH2 0x32A4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3028 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x32C0 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3028 JUMP JUMPDEST PUSH2 0x32CD PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3028 JUMP JUMPDEST PUSH2 0x32DA PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3258 JUMP JUMPDEST PUSH2 0x32E7 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3046 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3305 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3028 JUMP JUMPDEST PUSH2 0x3312 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3258 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x332E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3046 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x334D DUP2 PUSH2 0x3073 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x336D DUP2 PUSH2 0x3096 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x338D DUP2 PUSH2 0x30B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33AD DUP2 PUSH2 0x30DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33CD DUP2 PUSH2 0x30FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33ED DUP2 PUSH2 0x3122 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x340D DUP2 PUSH2 0x3145 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 ADD SWAP1 POP PUSH2 0x342A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3168 JUMP JUMPDEST PUSH2 0x3438 PUSH2 0x160 DUP4 ADD DUP5 PUSH2 0x3258 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3454 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3258 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 ADD SWAP1 POP PUSH2 0x3470 PUSH1 0x0 DUP4 ADD DUP16 PUSH2 0x3258 JUMP JUMPDEST PUSH2 0x347D PUSH1 0x20 DUP4 ADD DUP15 PUSH2 0x3064 JUMP JUMPDEST PUSH2 0x348A PUSH1 0x40 DUP4 ADD DUP14 PUSH2 0x3028 JUMP JUMPDEST PUSH2 0x3497 PUSH1 0x60 DUP4 ADD DUP13 PUSH2 0x3028 JUMP JUMPDEST PUSH2 0x34A4 PUSH1 0x80 DUP4 ADD DUP12 PUSH2 0x3028 JUMP JUMPDEST PUSH2 0x34B1 PUSH1 0xA0 DUP4 ADD DUP11 PUSH2 0x3258 JUMP JUMPDEST PUSH2 0x34BE PUSH1 0xC0 DUP4 ADD DUP10 PUSH2 0x3258 JUMP JUMPDEST PUSH2 0x34CB PUSH1 0xE0 DUP4 ADD DUP9 PUSH2 0x3258 JUMP JUMPDEST PUSH2 0x34D9 PUSH2 0x100 DUP4 ADD DUP8 PUSH2 0x3258 JUMP JUMPDEST PUSH2 0x34E7 PUSH2 0x120 DUP4 ADD DUP7 PUSH2 0x3258 JUMP JUMPDEST PUSH2 0x34F5 PUSH2 0x140 DUP4 ADD DUP6 PUSH2 0x3046 JUMP JUMPDEST PUSH2 0x3503 PUSH2 0x160 DUP4 ADD DUP5 PUSH2 0x3258 JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x352A PUSH1 0x0 DUP4 ADD DUP15 PUSH2 0x3258 JUMP JUMPDEST PUSH2 0x3537 PUSH1 0x20 DUP4 ADD DUP14 PUSH2 0x3064 JUMP JUMPDEST PUSH2 0x3544 PUSH1 0x40 DUP4 ADD DUP13 PUSH2 0x3028 JUMP JUMPDEST PUSH2 0x3551 PUSH1 0x60 DUP4 ADD DUP12 PUSH2 0x3028 JUMP JUMPDEST PUSH2 0x355E PUSH1 0x80 DUP4 ADD DUP11 PUSH2 0x3258 JUMP JUMPDEST PUSH2 0x356B PUSH1 0xA0 DUP4 ADD DUP10 PUSH2 0x3028 JUMP JUMPDEST PUSH2 0x3578 PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x3258 JUMP JUMPDEST PUSH2 0x3585 PUSH1 0xE0 DUP4 ADD DUP8 PUSH2 0x3258 JUMP JUMPDEST PUSH2 0x3593 PUSH2 0x100 DUP4 ADD DUP7 PUSH2 0x3258 JUMP JUMPDEST PUSH2 0x35A1 PUSH2 0x120 DUP4 ADD DUP6 PUSH2 0x3258 JUMP JUMPDEST PUSH2 0x35AF PUSH2 0x140 DUP4 ADD DUP5 PUSH2 0x3046 JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35DB DUP3 PUSH2 0x36AB JUMP JUMPDEST SWAP2 POP PUSH2 0x35E6 DUP4 PUSH2 0x36AB JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x361B JUMPI PUSH2 0x361A PUSH2 0x3710 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3631 DUP3 PUSH2 0x36AB JUMP JUMPDEST SWAP2 POP PUSH2 0x363C DUP4 PUSH2 0x36AB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x364F JUMPI PUSH2 0x364E PUSH2 0x3710 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3665 DUP3 PUSH2 0x368B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x3686 DUP3 PUSH2 0x3916 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36C0 DUP3 PUSH2 0x3678 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36D2 DUP3 PUSH2 0x36AB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x3705 JUMPI PUSH2 0x3704 PUSH2 0x3710 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x496E76616C6964204F7264657220494400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E20756E617661696C61626C6520696E204445580000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742046756E64730000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F74204F776E65720000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E20616C726561647920766572696669656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x3927 JUMPI PUSH2 0x3926 PUSH2 0x373F JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x3933 DUP2 PUSH2 0x365A JUMP JUMPDEST DUP2 EQ PUSH2 0x393E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x394A DUP2 PUSH2 0x366C JUMP JUMPDEST DUP2 EQ PUSH2 0x3955 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x3965 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3971 DUP2 PUSH2 0x36AB JUMP JUMPDEST DUP2 EQ PUSH2 0x397C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0xB5 0xDD DUP16 0xE6 SGT 0xF6 ADDMOD DUP6 0xE1 PUSH28 0x9788BEAD27E9C82F3CA9C4635310C8640049DD345264736F6C634300 ADDMOD SMOD STOP CALLER ","sourceMap":"387:22347:4:-:0;;;596:8;577:27;;645:1;611:36;;;;;;;;;;;;;;;;;;;;999:1;972:28;;1033:4;1007:30;;;;;;;;;;;;;;;;;;;;3318:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:1;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;3412:7:4;3396:6;;:24;;;;;;;;;;;;;;;;;;3457:5;3431:11;;:32;;;;;;;;;;;;;;;;;;3502:13;3474:12;;:42;;;;;;;;;;;;;;;;;;3318:206;;;387:22347;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2433:187:1:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;7:143:9:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:663::-;244:6;252;260;309:2;297:9;288:7;284:23;280:32;277:119;;;315:79;;:::i;:::-;277:119;435:1;460:64;516:7;507:6;496:9;492:22;460:64;:::i;:::-;450:74;;406:128;573:2;599:64;655:7;646:6;635:9;631:22;599:64;:::i;:::-;589:74;;544:129;712:2;738:64;794:7;785:6;774:9;770:22;738:64;:::i;:::-;728:74;;683:129;156:663;;;;;:::o;906:96::-;943:7;972:24;990:5;972:24;:::i;:::-;961:35;;906:96;;;:::o;1008:126::-;1045:7;1085:42;1078:5;1074:54;1063:65;;1008:126;;;:::o;1263:117::-;1372:1;1369;1362:12;1386:122;1459:24;1477:5;1459:24;:::i;:::-;1452:5;1449:35;1439:63;;1498:1;1495;1488:12;1439:63;1386:122;:::o;387:22347:4:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_100":{"entryPoint":10194,"id":100,"parameterSlots":0,"returnSlots":0},"@_msgSender_170":{"entryPoint":10516,"id":170,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_157":{"entryPoint":10320,"id":157,"parameterSlots":1,"returnSlots":0},"@addToken_2094":{"entryPoint":8874,"id":2094,"parameterSlots":2,"returnSlots":0},"@add_356":{"entryPoint":10150,"id":356,"parameterSlots":2,"returnSlots":1},"@cancelOrder_1120":{"entryPoint":1277,"id":1120,"parameterSlots":3,"returnSlots":0},"@createLimitBuyOrder_821":{"entryPoint":5608,"id":821,"parameterSlots":6,"returnSlots":0},"@createLimitSellOrder_923":{"entryPoint":7109,"id":923,"parameterSlots":6,"returnSlots":0},"@ethToken_524":{"entryPoint":8629,"id":524,"parameterSlots":0,"returnSlots":0},"@getFilledOrderLength_1951":{"entryPoint":9464,"id":1951,"parameterSlots":2,"returnSlots":1},"@getOrderFromArray_2015":{"entryPoint":4892,"id":2015,"parameterSlots":3,"returnSlots":2},"@getOrderLength_1930":{"entryPoint":9652,"id":1930,"parameterSlots":2,"returnSlots":1},"@getTokenInfo_2160":{"entryPoint":4678,"id":2160,"parameterSlots":1,"returnSlots":1},"@isVerifiedToken_2126":{"entryPoint":1095,"id":2126,"parameterSlots":1,"returnSlots":1},"@orderExists_2067":{"entryPoint":3990,"id":2067,"parameterSlots":3,"returnSlots":1},"@owner_86":{"entryPoint":8667,"id":86,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_114":{"entryPoint":8609,"id":114,"parameterSlots":0,"returnSlots":0},"@s_filledOrders_544":{"entryPoint":9204,"id":544,"parameterSlots":0,"returnSlots":0},"@s_orderBook_536":{"entryPoint":9896,"id":536,"parameterSlots":0,"returnSlots":0},"@s_orderId_547":{"entryPoint":8708,"id":547,"parameterSlots":0,"returnSlots":0},"@setPriceCheckerAddress_2188":{"entryPoint":9128,"id":2188,"parameterSlots":1,"returnSlots":0},"@setTradingFees_2202":{"entryPoint":9576,"id":2202,"parameterSlots":1,"returnSlots":0},"@setWalletAddress_2174":{"entryPoint":8798,"id":2174,"parameterSlots":1,"returnSlots":0},"@sub_371":{"entryPoint":10172,"id":371,"parameterSlots":2,"returnSlots":1},"@tokenList_528":{"entryPoint":8714,"id":528,"parameterSlots":0,"returnSlots":0},"@transferOwnership_137":{"entryPoint":9764,"id":137,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":11491,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":11512,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_enum$_Side_$613":{"entryPoint":11533,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":11554,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":11575,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":11596,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_enum$_Side_$613":{"entryPoint":11641,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":11705,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_uint256t_bool":{"entryPoint":11769,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":11910,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_enum$_Side_$613t_address":{"entryPoint":11993,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_enum$_Side_$613t_uint256t_address":{"entryPoint":12057,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":12140,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":12185,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_enum$_Side_$613t_address":{"entryPoint":12230,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address":{"entryPoint":12313,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":12328,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool":{"entryPoint":12343,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":12358,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_Side_$613_to_t_uint8":{"entryPoint":12373,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_Side_$613_to_t_uint8_fromStack":{"entryPoint":12388,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2_to_t_string_memory_ptr_fromStack":{"entryPoint":12403,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":12438,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3_to_t_string_memory_ptr_fromStack":{"entryPoint":12473,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092_to_t_string_memory_ptr_fromStack":{"entryPoint":12508,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4_to_t_string_memory_ptr_fromStack":{"entryPoint":12543,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430_to_t_string_memory_ptr_fromStack":{"entryPoint":12578,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":12613,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$__Order_$584_memory_ptr_to_t_struct$__Order_$584_memory_ptr_fromStack":{"entryPoint":12648,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":12873,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":12888,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":12903,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":12930,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_bool__fromStack_reversed":{"entryPoint":12971,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":13040,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":13081,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13108,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13140,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13172,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13204,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13236,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13268,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13300,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$__Order_$584_memory_ptr_t_uint256__to_t_struct$__Order_$584_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":13332,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":13375,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_enum$_Side_$613_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint8_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed":{"entryPoint":13402,"id":null,"parameterSlots":13,"returnSlots":1},"abi_encode_tuple_t_uint256_t_enum$_Side_$613_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint8_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed":{"entryPoint":13588,"id":null,"parameterSlots":12,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":13759,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":13776,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":13862,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":13914,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":13932,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_Side_$613":{"entryPoint":13944,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":13963,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":13995,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_Side_$613_to_t_uint8":{"entryPoint":14005,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":14023,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":14096,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":14143,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":14190,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":14237,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":14284,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2":{"entryPoint":14289,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":14330,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3":{"entryPoint":14409,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092":{"entryPoint":14450,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4":{"entryPoint":14491,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430":{"entryPoint":14532,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":14573,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_Side_$613":{"entryPoint":14614,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":14634,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":14657,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_enum$_Side_$613":{"entryPoint":14680,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":14696,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:24634:9","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:9","statements":[{"nodeType":"YulAssignment","src":"69:29:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:9"},"nodeType":"YulFunctionCall","src":"78:20:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:9"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:9"},"nodeType":"YulFunctionCall","src":"107:33:9"},"nodeType":"YulExpressionStatement","src":"107:33:9"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:9","type":""}],"src":"7:139:9"},{"body":{"nodeType":"YulBlock","src":"201:84:9","statements":[{"nodeType":"YulAssignment","src":"211:29:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"233:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"220:12:9"},"nodeType":"YulFunctionCall","src":"220:20:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"211:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"273:5:9"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"249:23:9"},"nodeType":"YulFunctionCall","src":"249:30:9"},"nodeType":"YulExpressionStatement","src":"249:30:9"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"179:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"187:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"195:5:9","type":""}],"src":"152:133:9"},{"body":{"nodeType":"YulBlock","src":"351:95:9","statements":[{"nodeType":"YulAssignment","src":"361:29:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"383:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"370:12:9"},"nodeType":"YulFunctionCall","src":"370:20:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"361:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"434:5:9"}],"functionName":{"name":"validator_revert_t_enum$_Side_$613","nodeType":"YulIdentifier","src":"399:34:9"},"nodeType":"YulFunctionCall","src":"399:41:9"},"nodeType":"YulExpressionStatement","src":"399:41:9"}]},"name":"abi_decode_t_enum$_Side_$613","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"329:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"337:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"345:5:9","type":""}],"src":"291:155:9"},{"body":{"nodeType":"YulBlock","src":"504:87:9","statements":[{"nodeType":"YulAssignment","src":"514:29:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"536:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"523:12:9"},"nodeType":"YulFunctionCall","src":"523:20:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"514:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"579:5:9"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"552:26:9"},"nodeType":"YulFunctionCall","src":"552:33:9"},"nodeType":"YulExpressionStatement","src":"552:33:9"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"482:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"490:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"498:5:9","type":""}],"src":"452:139:9"},{"body":{"nodeType":"YulBlock","src":"660:80:9","statements":[{"nodeType":"YulAssignment","src":"670:22:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"685:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"679:5:9"},"nodeType":"YulFunctionCall","src":"679:13:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"670:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"728:5:9"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"701:26:9"},"nodeType":"YulFunctionCall","src":"701:33:9"},"nodeType":"YulExpressionStatement","src":"701:33:9"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"638:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"646:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"654:5:9","type":""}],"src":"597:143:9"},{"body":{"nodeType":"YulBlock","src":"812:263:9","statements":[{"body":{"nodeType":"YulBlock","src":"858:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"860:77:9"},"nodeType":"YulFunctionCall","src":"860:79:9"},"nodeType":"YulExpressionStatement","src":"860:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"833:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"842:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"829:3:9"},"nodeType":"YulFunctionCall","src":"829:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"854:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"825:3:9"},"nodeType":"YulFunctionCall","src":"825:32:9"},"nodeType":"YulIf","src":"822:119:9"},{"nodeType":"YulBlock","src":"951:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"966:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"980:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"970:6:9","type":""}]},{"nodeType":"YulAssignment","src":"995:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1030:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1041:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1026:3:9"},"nodeType":"YulFunctionCall","src":"1026:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1050:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1005:20:9"},"nodeType":"YulFunctionCall","src":"1005:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"995:6:9"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"782:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"793:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"805:6:9","type":""}],"src":"746:329:9"},{"body":{"nodeType":"YulBlock","src":"1172:399:9","statements":[{"body":{"nodeType":"YulBlock","src":"1218:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1220:77:9"},"nodeType":"YulFunctionCall","src":"1220:79:9"},"nodeType":"YulExpressionStatement","src":"1220:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1193:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"1202:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1189:3:9"},"nodeType":"YulFunctionCall","src":"1189:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"1214:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1185:3:9"},"nodeType":"YulFunctionCall","src":"1185:32:9"},"nodeType":"YulIf","src":"1182:119:9"},{"nodeType":"YulBlock","src":"1311:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1326:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1340:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1330:6:9","type":""}]},{"nodeType":"YulAssignment","src":"1355:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1390:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1401:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1386:3:9"},"nodeType":"YulFunctionCall","src":"1386:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1410:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1365:20:9"},"nodeType":"YulFunctionCall","src":"1365:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1355:6:9"}]}]},{"nodeType":"YulBlock","src":"1438:126:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1453:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1467:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1457:6:9","type":""}]},{"nodeType":"YulAssignment","src":"1483:71:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1526:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1537:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1522:3:9"},"nodeType":"YulFunctionCall","src":"1522:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1546:7:9"}],"functionName":{"name":"abi_decode_t_enum$_Side_$613","nodeType":"YulIdentifier","src":"1493:28:9"},"nodeType":"YulFunctionCall","src":"1493:61:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1483:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_enum$_Side_$613","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1134:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1145:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1157:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1165:6:9","type":""}],"src":"1081:490:9"},{"body":{"nodeType":"YulBlock","src":"1660:391:9","statements":[{"body":{"nodeType":"YulBlock","src":"1706:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1708:77:9"},"nodeType":"YulFunctionCall","src":"1708:79:9"},"nodeType":"YulExpressionStatement","src":"1708:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1681:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"1690:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1677:3:9"},"nodeType":"YulFunctionCall","src":"1677:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"1702:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1673:3:9"},"nodeType":"YulFunctionCall","src":"1673:32:9"},"nodeType":"YulIf","src":"1670:119:9"},{"nodeType":"YulBlock","src":"1799:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1814:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1828:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1818:6:9","type":""}]},{"nodeType":"YulAssignment","src":"1843:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1878:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1889:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1874:3:9"},"nodeType":"YulFunctionCall","src":"1874:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1898:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1853:20:9"},"nodeType":"YulFunctionCall","src":"1853:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1843:6:9"}]}]},{"nodeType":"YulBlock","src":"1926:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1941:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1955:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1945:6:9","type":""}]},{"nodeType":"YulAssignment","src":"1971:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2006:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2017:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2002:3:9"},"nodeType":"YulFunctionCall","src":"2002:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2026:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1981:20:9"},"nodeType":"YulFunctionCall","src":"1981:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1971:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1622:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1633:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1645:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1653:6:9","type":""}],"src":"1577:474:9"},{"body":{"nodeType":"YulBlock","src":"2205:903:9","statements":[{"body":{"nodeType":"YulBlock","src":"2252:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2254:77:9"},"nodeType":"YulFunctionCall","src":"2254:79:9"},"nodeType":"YulExpressionStatement","src":"2254:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2226:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"2235:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2222:3:9"},"nodeType":"YulFunctionCall","src":"2222:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"2247:3:9","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2218:3:9"},"nodeType":"YulFunctionCall","src":"2218:33:9"},"nodeType":"YulIf","src":"2215:120:9"},{"nodeType":"YulBlock","src":"2345:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2360:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2374:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2364:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2389:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2424:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2435:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2420:3:9"},"nodeType":"YulFunctionCall","src":"2420:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2444:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2399:20:9"},"nodeType":"YulFunctionCall","src":"2399:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2389:6:9"}]}]},{"nodeType":"YulBlock","src":"2472:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2487:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2501:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2491:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2517:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2552:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2563:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2548:3:9"},"nodeType":"YulFunctionCall","src":"2548:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2572:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2527:20:9"},"nodeType":"YulFunctionCall","src":"2527:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2517:6:9"}]}]},{"nodeType":"YulBlock","src":"2600:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2615:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2629:2:9","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2619:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2645:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2680:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2691:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2676:3:9"},"nodeType":"YulFunctionCall","src":"2676:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2700:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2655:20:9"},"nodeType":"YulFunctionCall","src":"2655:53:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2645:6:9"}]}]},{"nodeType":"YulBlock","src":"2728:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2743:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2757:2:9","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2747:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2773:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2808:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2819:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2804:3:9"},"nodeType":"YulFunctionCall","src":"2804:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2828:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2783:20:9"},"nodeType":"YulFunctionCall","src":"2783:53:9"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2773:6:9"}]}]},{"nodeType":"YulBlock","src":"2856:119:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2871:17:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2885:3:9","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2875:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2902:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2937:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2948:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2933:3:9"},"nodeType":"YulFunctionCall","src":"2933:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2957:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2912:20:9"},"nodeType":"YulFunctionCall","src":"2912:53:9"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2902:6:9"}]}]},{"nodeType":"YulBlock","src":"2985:116:9","statements":[{"nodeType":"YulVariableDeclaration","src":"3000:17:9","value":{"kind":"number","nodeType":"YulLiteral","src":"3014:3:9","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3004:6:9","type":""}]},{"nodeType":"YulAssignment","src":"3031:60:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3063:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"3074:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3059:3:9"},"nodeType":"YulFunctionCall","src":"3059:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3083:7:9"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"3041:17:9"},"nodeType":"YulFunctionCall","src":"3041:50:9"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"3031:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_uint256t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2135:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2146:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2158:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2166:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2174:6:9","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2182:6:9","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2190:6:9","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2198:6:9","type":""}],"src":"2057:1051:9"},{"body":{"nodeType":"YulBlock","src":"3214:519:9","statements":[{"body":{"nodeType":"YulBlock","src":"3260:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3262:77:9"},"nodeType":"YulFunctionCall","src":"3262:79:9"},"nodeType":"YulExpressionStatement","src":"3262:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3235:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"3244:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3231:3:9"},"nodeType":"YulFunctionCall","src":"3231:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"3256:2:9","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3227:3:9"},"nodeType":"YulFunctionCall","src":"3227:32:9"},"nodeType":"YulIf","src":"3224:119:9"},{"nodeType":"YulBlock","src":"3353:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"3368:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"3382:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3372:6:9","type":""}]},{"nodeType":"YulAssignment","src":"3397:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3432:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"3443:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3428:3:9"},"nodeType":"YulFunctionCall","src":"3428:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3452:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3407:20:9"},"nodeType":"YulFunctionCall","src":"3407:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3397:6:9"}]}]},{"nodeType":"YulBlock","src":"3480:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"3495:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"3509:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3499:6:9","type":""}]},{"nodeType":"YulAssignment","src":"3525:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3560:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"3571:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3556:3:9"},"nodeType":"YulFunctionCall","src":"3556:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3580:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3535:20:9"},"nodeType":"YulFunctionCall","src":"3535:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3525:6:9"}]}]},{"nodeType":"YulBlock","src":"3608:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"3623:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"3637:2:9","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3627:6:9","type":""}]},{"nodeType":"YulAssignment","src":"3653:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3688:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"3699:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3684:3:9"},"nodeType":"YulFunctionCall","src":"3684:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3708:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3663:20:9"},"nodeType":"YulFunctionCall","src":"3663:53:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3653:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3168:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3179:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3191:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3199:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3207:6:9","type":""}],"src":"3114:619:9"},{"body":{"nodeType":"YulBlock","src":"3830:399:9","statements":[{"body":{"nodeType":"YulBlock","src":"3876:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3878:77:9"},"nodeType":"YulFunctionCall","src":"3878:79:9"},"nodeType":"YulExpressionStatement","src":"3878:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3851:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"3860:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3847:3:9"},"nodeType":"YulFunctionCall","src":"3847:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"3872:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3843:3:9"},"nodeType":"YulFunctionCall","src":"3843:32:9"},"nodeType":"YulIf","src":"3840:119:9"},{"nodeType":"YulBlock","src":"3969:125:9","statements":[{"nodeType":"YulVariableDeclaration","src":"3984:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"3998:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3988:6:9","type":""}]},{"nodeType":"YulAssignment","src":"4013:71:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4056:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"4067:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4052:3:9"},"nodeType":"YulFunctionCall","src":"4052:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4076:7:9"}],"functionName":{"name":"abi_decode_t_enum$_Side_$613","nodeType":"YulIdentifier","src":"4023:28:9"},"nodeType":"YulFunctionCall","src":"4023:61:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4013:6:9"}]}]},{"nodeType":"YulBlock","src":"4104:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"4119:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"4133:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4123:6:9","type":""}]},{"nodeType":"YulAssignment","src":"4149:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4184:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"4195:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4180:3:9"},"nodeType":"YulFunctionCall","src":"4180:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4204:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4159:20:9"},"nodeType":"YulFunctionCall","src":"4159:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4149:6:9"}]}]}]},"name":"abi_decode_tuple_t_enum$_Side_$613t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3792:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3803:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3815:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3823:6:9","type":""}],"src":"3739:490:9"},{"body":{"nodeType":"YulBlock","src":"4343:527:9","statements":[{"body":{"nodeType":"YulBlock","src":"4389:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4391:77:9"},"nodeType":"YulFunctionCall","src":"4391:79:9"},"nodeType":"YulExpressionStatement","src":"4391:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4364:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"4373:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4360:3:9"},"nodeType":"YulFunctionCall","src":"4360:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"4385:2:9","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4356:3:9"},"nodeType":"YulFunctionCall","src":"4356:32:9"},"nodeType":"YulIf","src":"4353:119:9"},{"nodeType":"YulBlock","src":"4482:125:9","statements":[{"nodeType":"YulVariableDeclaration","src":"4497:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"4511:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4501:6:9","type":""}]},{"nodeType":"YulAssignment","src":"4526:71:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4569:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"4580:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4565:3:9"},"nodeType":"YulFunctionCall","src":"4565:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4589:7:9"}],"functionName":{"name":"abi_decode_t_enum$_Side_$613","nodeType":"YulIdentifier","src":"4536:28:9"},"nodeType":"YulFunctionCall","src":"4536:61:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4526:6:9"}]}]},{"nodeType":"YulBlock","src":"4617:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"4632:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"4646:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4636:6:9","type":""}]},{"nodeType":"YulAssignment","src":"4662:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4697:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"4708:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4693:3:9"},"nodeType":"YulFunctionCall","src":"4693:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4717:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4672:20:9"},"nodeType":"YulFunctionCall","src":"4672:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4662:6:9"}]}]},{"nodeType":"YulBlock","src":"4745:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"4760:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"4774:2:9","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4764:6:9","type":""}]},{"nodeType":"YulAssignment","src":"4790:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4825:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"4836:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4821:3:9"},"nodeType":"YulFunctionCall","src":"4821:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4845:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4800:20:9"},"nodeType":"YulFunctionCall","src":"4800:53:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4790:6:9"}]}]}]},"name":"abi_decode_tuple_t_enum$_Side_$613t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4297:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4308:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4320:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4328:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4336:6:9","type":""}],"src":"4235:635:9"},{"body":{"nodeType":"YulBlock","src":"4942:263:9","statements":[{"body":{"nodeType":"YulBlock","src":"4988:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4990:77:9"},"nodeType":"YulFunctionCall","src":"4990:79:9"},"nodeType":"YulExpressionStatement","src":"4990:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4963:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"4972:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4959:3:9"},"nodeType":"YulFunctionCall","src":"4959:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"4984:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4955:3:9"},"nodeType":"YulFunctionCall","src":"4955:32:9"},"nodeType":"YulIf","src":"4952:119:9"},{"nodeType":"YulBlock","src":"5081:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"5096:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"5110:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5100:6:9","type":""}]},{"nodeType":"YulAssignment","src":"5125:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5160:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"5171:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5156:3:9"},"nodeType":"YulFunctionCall","src":"5156:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5180:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5135:20:9"},"nodeType":"YulFunctionCall","src":"5135:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5125:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4912:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4923:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4935:6:9","type":""}],"src":"4876:329:9"},{"body":{"nodeType":"YulBlock","src":"5288:274:9","statements":[{"body":{"nodeType":"YulBlock","src":"5334:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5336:77:9"},"nodeType":"YulFunctionCall","src":"5336:79:9"},"nodeType":"YulExpressionStatement","src":"5336:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5309:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"5318:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5305:3:9"},"nodeType":"YulFunctionCall","src":"5305:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"5330:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5301:3:9"},"nodeType":"YulFunctionCall","src":"5301:32:9"},"nodeType":"YulIf","src":"5298:119:9"},{"nodeType":"YulBlock","src":"5427:128:9","statements":[{"nodeType":"YulVariableDeclaration","src":"5442:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"5456:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5446:6:9","type":""}]},{"nodeType":"YulAssignment","src":"5471:74:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5517:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"5528:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5513:3:9"},"nodeType":"YulFunctionCall","src":"5513:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5537:7:9"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"5481:31:9"},"nodeType":"YulFunctionCall","src":"5481:64:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5471:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5258:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5269:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5281:6:9","type":""}],"src":"5211:351:9"},{"body":{"nodeType":"YulBlock","src":"5676:527:9","statements":[{"body":{"nodeType":"YulBlock","src":"5722:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5724:77:9"},"nodeType":"YulFunctionCall","src":"5724:79:9"},"nodeType":"YulExpressionStatement","src":"5724:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5697:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"5706:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5693:3:9"},"nodeType":"YulFunctionCall","src":"5693:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"5718:2:9","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5689:3:9"},"nodeType":"YulFunctionCall","src":"5689:32:9"},"nodeType":"YulIf","src":"5686:119:9"},{"nodeType":"YulBlock","src":"5815:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"5830:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"5844:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5834:6:9","type":""}]},{"nodeType":"YulAssignment","src":"5859:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5894:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"5905:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5890:3:9"},"nodeType":"YulFunctionCall","src":"5890:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5914:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5869:20:9"},"nodeType":"YulFunctionCall","src":"5869:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5859:6:9"}]}]},{"nodeType":"YulBlock","src":"5942:126:9","statements":[{"nodeType":"YulVariableDeclaration","src":"5957:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"5971:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5961:6:9","type":""}]},{"nodeType":"YulAssignment","src":"5987:71:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6030:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"6041:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6026:3:9"},"nodeType":"YulFunctionCall","src":"6026:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6050:7:9"}],"functionName":{"name":"abi_decode_t_enum$_Side_$613","nodeType":"YulIdentifier","src":"5997:28:9"},"nodeType":"YulFunctionCall","src":"5997:61:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5987:6:9"}]}]},{"nodeType":"YulBlock","src":"6078:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"6093:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"6107:2:9","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6097:6:9","type":""}]},{"nodeType":"YulAssignment","src":"6123:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6158:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"6169:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6154:3:9"},"nodeType":"YulFunctionCall","src":"6154:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6178:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6133:20:9"},"nodeType":"YulFunctionCall","src":"6133:53:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6123:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256t_enum$_Side_$613t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5630:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5641:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5653:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5661:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5669:6:9","type":""}],"src":"5568:635:9"},{"body":{"nodeType":"YulBlock","src":"6264:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6281:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6304:5:9"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6286:17:9"},"nodeType":"YulFunctionCall","src":"6286:24:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6274:6:9"},"nodeType":"YulFunctionCall","src":"6274:37:9"},"nodeType":"YulExpressionStatement","src":"6274:37:9"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6252:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6259:3:9","type":""}],"src":"6209:108:9"},{"body":{"nodeType":"YulBlock","src":"6388:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6405:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6428:5:9"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6410:17:9"},"nodeType":"YulFunctionCall","src":"6410:24:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6398:6:9"},"nodeType":"YulFunctionCall","src":"6398:37:9"},"nodeType":"YulExpressionStatement","src":"6398:37:9"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6376:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6383:3:9","type":""}],"src":"6323:118:9"},{"body":{"nodeType":"YulBlock","src":"6496:50:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6513:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6533:5:9"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6518:14:9"},"nodeType":"YulFunctionCall","src":"6518:21:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6506:6:9"},"nodeType":"YulFunctionCall","src":"6506:34:9"},"nodeType":"YulExpressionStatement","src":"6506:34:9"}]},"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6484:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6491:3:9","type":""}],"src":"6447:99:9"},{"body":{"nodeType":"YulBlock","src":"6611:50:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6628:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6648:5:9"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6633:14:9"},"nodeType":"YulFunctionCall","src":"6633:21:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6621:6:9"},"nodeType":"YulFunctionCall","src":"6621:34:9"},"nodeType":"YulExpressionStatement","src":"6621:34:9"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6599:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6606:3:9","type":""}],"src":"6552:109:9"},{"body":{"nodeType":"YulBlock","src":"6728:72:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6745:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6787:5:9"}],"functionName":{"name":"convert_t_enum$_Side_$613_to_t_uint8","nodeType":"YulIdentifier","src":"6750:36:9"},"nodeType":"YulFunctionCall","src":"6750:43:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6738:6:9"},"nodeType":"YulFunctionCall","src":"6738:56:9"},"nodeType":"YulExpressionStatement","src":"6738:56:9"}]},"name":"abi_encode_t_enum$_Side_$613_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6716:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6723:3:9","type":""}],"src":"6667:133:9"},{"body":{"nodeType":"YulBlock","src":"6877:72:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6894:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6936:5:9"}],"functionName":{"name":"convert_t_enum$_Side_$613_to_t_uint8","nodeType":"YulIdentifier","src":"6899:36:9"},"nodeType":"YulFunctionCall","src":"6899:43:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6887:6:9"},"nodeType":"YulFunctionCall","src":"6887:56:9"},"nodeType":"YulExpressionStatement","src":"6887:56:9"}]},"name":"abi_encode_t_enum$_Side_$613_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6865:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6872:3:9","type":""}],"src":"6806:143:9"},{"body":{"nodeType":"YulBlock","src":"7101:220:9","statements":[{"nodeType":"YulAssignment","src":"7111:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7177:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"7182:2:9","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7118:58:9"},"nodeType":"YulFunctionCall","src":"7118:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7111:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7283:3:9"}],"functionName":{"name":"store_literal_in_memory_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2","nodeType":"YulIdentifier","src":"7194:88:9"},"nodeType":"YulFunctionCall","src":"7194:93:9"},"nodeType":"YulExpressionStatement","src":"7194:93:9"},{"nodeType":"YulAssignment","src":"7296:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7307:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"7312:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7303:3:9"},"nodeType":"YulFunctionCall","src":"7303:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7296:3:9"}]}]},"name":"abi_encode_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7089:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7097:3:9","type":""}],"src":"6955:366:9"},{"body":{"nodeType":"YulBlock","src":"7473:220:9","statements":[{"nodeType":"YulAssignment","src":"7483:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7549:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"7554:2:9","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7490:58:9"},"nodeType":"YulFunctionCall","src":"7490:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7483:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7655:3:9"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"7566:88:9"},"nodeType":"YulFunctionCall","src":"7566:93:9"},"nodeType":"YulExpressionStatement","src":"7566:93:9"},{"nodeType":"YulAssignment","src":"7668:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7679:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"7684:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7675:3:9"},"nodeType":"YulFunctionCall","src":"7675:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7668:3:9"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7461:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7469:3:9","type":""}],"src":"7327:366:9"},{"body":{"nodeType":"YulBlock","src":"7845:220:9","statements":[{"nodeType":"YulAssignment","src":"7855:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7921:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"7926:2:9","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7862:58:9"},"nodeType":"YulFunctionCall","src":"7862:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7855:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8027:3:9"}],"functionName":{"name":"store_literal_in_memory_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3","nodeType":"YulIdentifier","src":"7938:88:9"},"nodeType":"YulFunctionCall","src":"7938:93:9"},"nodeType":"YulExpressionStatement","src":"7938:93:9"},{"nodeType":"YulAssignment","src":"8040:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8051:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"8056:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8047:3:9"},"nodeType":"YulFunctionCall","src":"8047:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8040:3:9"}]}]},"name":"abi_encode_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7833:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7841:3:9","type":""}],"src":"7699:366:9"},{"body":{"nodeType":"YulBlock","src":"8217:220:9","statements":[{"nodeType":"YulAssignment","src":"8227:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8293:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"8298:2:9","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8234:58:9"},"nodeType":"YulFunctionCall","src":"8234:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8227:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8399:3:9"}],"functionName":{"name":"store_literal_in_memory_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092","nodeType":"YulIdentifier","src":"8310:88:9"},"nodeType":"YulFunctionCall","src":"8310:93:9"},"nodeType":"YulExpressionStatement","src":"8310:93:9"},{"nodeType":"YulAssignment","src":"8412:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8423:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"8428:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8419:3:9"},"nodeType":"YulFunctionCall","src":"8419:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8412:3:9"}]}]},"name":"abi_encode_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8205:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8213:3:9","type":""}],"src":"8071:366:9"},{"body":{"nodeType":"YulBlock","src":"8589:219:9","statements":[{"nodeType":"YulAssignment","src":"8599:73:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8665:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"8670:1:9","type":"","value":"9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8606:58:9"},"nodeType":"YulFunctionCall","src":"8606:66:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8599:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8770:3:9"}],"functionName":{"name":"store_literal_in_memory_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4","nodeType":"YulIdentifier","src":"8681:88:9"},"nodeType":"YulFunctionCall","src":"8681:93:9"},"nodeType":"YulExpressionStatement","src":"8681:93:9"},{"nodeType":"YulAssignment","src":"8783:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8794:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"8799:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8790:3:9"},"nodeType":"YulFunctionCall","src":"8790:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8783:3:9"}]}]},"name":"abi_encode_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8577:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8585:3:9","type":""}],"src":"8443:365:9"},{"body":{"nodeType":"YulBlock","src":"8960:220:9","statements":[{"nodeType":"YulAssignment","src":"8970:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9036:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"9041:2:9","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8977:58:9"},"nodeType":"YulFunctionCall","src":"8977:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8970:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9142:3:9"}],"functionName":{"name":"store_literal_in_memory_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430","nodeType":"YulIdentifier","src":"9053:88:9"},"nodeType":"YulFunctionCall","src":"9053:93:9"},"nodeType":"YulExpressionStatement","src":"9053:93:9"},{"nodeType":"YulAssignment","src":"9155:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9166:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"9171:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9162:3:9"},"nodeType":"YulFunctionCall","src":"9162:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9155:3:9"}]}]},"name":"abi_encode_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8948:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8956:3:9","type":""}],"src":"8814:366:9"},{"body":{"nodeType":"YulBlock","src":"9332:220:9","statements":[{"nodeType":"YulAssignment","src":"9342:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9408:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"9413:2:9","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9349:58:9"},"nodeType":"YulFunctionCall","src":"9349:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9342:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9514:3:9"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"9425:88:9"},"nodeType":"YulFunctionCall","src":"9425:93:9"},"nodeType":"YulExpressionStatement","src":"9425:93:9"},{"nodeType":"YulAssignment","src":"9527:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9538:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"9543:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9534:3:9"},"nodeType":"YulFunctionCall","src":"9534:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9527:3:9"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9320:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9328:3:9","type":""}],"src":"9186:366:9"},{"body":{"nodeType":"YulBlock","src":"9726:2006:9","statements":[{"nodeType":"YulVariableDeclaration","src":"9736:28:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9752:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"9757:6:9","type":"","value":"0x0160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9748:3:9"},"nodeType":"YulFunctionCall","src":"9748:16:9"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"9740:4:9","type":""}]},{"nodeType":"YulBlock","src":"9774:162:9","statements":[{"nodeType":"YulVariableDeclaration","src":"9807:43:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9837:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"9844:4:9","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9833:3:9"},"nodeType":"YulFunctionCall","src":"9833:16:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9827:5:9"},"nodeType":"YulFunctionCall","src":"9827:23:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9811:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9897:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9915:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"9920:4:9","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9911:3:9"},"nodeType":"YulFunctionCall","src":"9911:14:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9863:33:9"},"nodeType":"YulFunctionCall","src":"9863:63:9"},"nodeType":"YulExpressionStatement","src":"9863:63:9"}]},{"nodeType":"YulBlock","src":"9946:170:9","statements":[{"nodeType":"YulVariableDeclaration","src":"9981:43:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10011:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"10018:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10007:3:9"},"nodeType":"YulFunctionCall","src":"10007:16:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10001:5:9"},"nodeType":"YulFunctionCall","src":"10001:23:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9985:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10077:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10095:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"10100:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10091:3:9"},"nodeType":"YulFunctionCall","src":"10091:14:9"}],"functionName":{"name":"abi_encode_t_enum$_Side_$613_to_t_uint8","nodeType":"YulIdentifier","src":"10037:39:9"},"nodeType":"YulFunctionCall","src":"10037:69:9"},"nodeType":"YulExpressionStatement","src":"10037:69:9"}]},{"nodeType":"YulBlock","src":"10126:164:9","statements":[{"nodeType":"YulVariableDeclaration","src":"10161:43:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10191:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"10198:4:9","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10187:3:9"},"nodeType":"YulFunctionCall","src":"10187:16:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10181:5:9"},"nodeType":"YulFunctionCall","src":"10181:23:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10165:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10251:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10269:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"10274:4:9","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10265:3:9"},"nodeType":"YulFunctionCall","src":"10265:14:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"10217:33:9"},"nodeType":"YulFunctionCall","src":"10217:63:9"},"nodeType":"YulExpressionStatement","src":"10217:63:9"}]},{"nodeType":"YulBlock","src":"10300:166:9","statements":[{"nodeType":"YulVariableDeclaration","src":"10337:43:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10367:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"10374:4:9","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10363:3:9"},"nodeType":"YulFunctionCall","src":"10363:16:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10357:5:9"},"nodeType":"YulFunctionCall","src":"10357:23:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10341:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10427:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10445:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"10450:4:9","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10441:3:9"},"nodeType":"YulFunctionCall","src":"10441:14:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"10393:33:9"},"nodeType":"YulFunctionCall","src":"10393:63:9"},"nodeType":"YulExpressionStatement","src":"10393:63:9"}]},{"nodeType":"YulBlock","src":"10476:167:9","statements":[{"nodeType":"YulVariableDeclaration","src":"10514:43:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10544:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"10551:4:9","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10540:3:9"},"nodeType":"YulFunctionCall","src":"10540:16:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10534:5:9"},"nodeType":"YulFunctionCall","src":"10534:23:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10518:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10604:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10622:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"10627:4:9","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10618:3:9"},"nodeType":"YulFunctionCall","src":"10618:14:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"10570:33:9"},"nodeType":"YulFunctionCall","src":"10570:63:9"},"nodeType":"YulExpressionStatement","src":"10570:63:9"}]},{"nodeType":"YulBlock","src":"10653:166:9","statements":[{"nodeType":"YulVariableDeclaration","src":"10690:43:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10720:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"10727:4:9","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10716:3:9"},"nodeType":"YulFunctionCall","src":"10716:16:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10710:5:9"},"nodeType":"YulFunctionCall","src":"10710:23:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10694:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10780:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10798:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"10803:4:9","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10794:3:9"},"nodeType":"YulFunctionCall","src":"10794:14:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"10746:33:9"},"nodeType":"YulFunctionCall","src":"10746:63:9"},"nodeType":"YulExpressionStatement","src":"10746:63:9"}]},{"nodeType":"YulBlock","src":"10829:167:9","statements":[{"nodeType":"YulVariableDeclaration","src":"10867:43:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10897:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"10904:4:9","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10893:3:9"},"nodeType":"YulFunctionCall","src":"10893:16:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10887:5:9"},"nodeType":"YulFunctionCall","src":"10887:23:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10871:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10957:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10975:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"10980:4:9","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10971:3:9"},"nodeType":"YulFunctionCall","src":"10971:14:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"10923:33:9"},"nodeType":"YulFunctionCall","src":"10923:63:9"},"nodeType":"YulExpressionStatement","src":"10923:63:9"}]},{"nodeType":"YulBlock","src":"11006:164:9","statements":[{"nodeType":"YulVariableDeclaration","src":"11041:43:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11071:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"11078:4:9","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11067:3:9"},"nodeType":"YulFunctionCall","src":"11067:16:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11061:5:9"},"nodeType":"YulFunctionCall","src":"11061:23:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11045:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11131:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11149:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"11154:4:9","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11145:3:9"},"nodeType":"YulFunctionCall","src":"11145:14:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"11097:33:9"},"nodeType":"YulFunctionCall","src":"11097:63:9"},"nodeType":"YulExpressionStatement","src":"11097:63:9"}]},{"nodeType":"YulBlock","src":"11180:179:9","statements":[{"nodeType":"YulVariableDeclaration","src":"11226:45:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11256:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"11263:6:9","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11252:3:9"},"nodeType":"YulFunctionCall","src":"11252:18:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11246:5:9"},"nodeType":"YulFunctionCall","src":"11246:25:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11230:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11318:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11336:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"11341:6:9","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11332:3:9"},"nodeType":"YulFunctionCall","src":"11332:16:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"11284:33:9"},"nodeType":"YulFunctionCall","src":"11284:65:9"},"nodeType":"YulExpressionStatement","src":"11284:65:9"}]},{"nodeType":"YulBlock","src":"11369:179:9","statements":[{"nodeType":"YulVariableDeclaration","src":"11415:45:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11445:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"11452:6:9","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11441:3:9"},"nodeType":"YulFunctionCall","src":"11441:18:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11435:5:9"},"nodeType":"YulFunctionCall","src":"11435:25:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11419:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11507:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11525:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"11530:6:9","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11521:3:9"},"nodeType":"YulFunctionCall","src":"11521:16:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"11473:33:9"},"nodeType":"YulFunctionCall","src":"11473:65:9"},"nodeType":"YulExpressionStatement","src":"11473:65:9"}]},{"nodeType":"YulBlock","src":"11558:167:9","statements":[{"nodeType":"YulVariableDeclaration","src":"11598:45:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11628:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"11635:6:9","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11624:3:9"},"nodeType":"YulFunctionCall","src":"11624:18:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11618:5:9"},"nodeType":"YulFunctionCall","src":"11618:25:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11602:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11684:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11702:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"11707:6:9","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11698:3:9"},"nodeType":"YulFunctionCall","src":"11698:16:9"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"11656:27:9"},"nodeType":"YulFunctionCall","src":"11656:59:9"},"nodeType":"YulExpressionStatement","src":"11656:59:9"}]}]},"name":"abi_encode_t_struct$__Order_$584_memory_ptr_to_t_struct$__Order_$584_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9713:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9720:3:9","type":""}],"src":"9614:2118:9"},{"body":{"nodeType":"YulBlock","src":"11793:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11810:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11833:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11815:17:9"},"nodeType":"YulFunctionCall","src":"11815:24:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11803:6:9"},"nodeType":"YulFunctionCall","src":"11803:37:9"},"nodeType":"YulExpressionStatement","src":"11803:37:9"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11781:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11788:3:9","type":""}],"src":"11738:108:9"},{"body":{"nodeType":"YulBlock","src":"11917:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11934:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11957:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11939:17:9"},"nodeType":"YulFunctionCall","src":"11939:24:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11927:6:9"},"nodeType":"YulFunctionCall","src":"11927:37:9"},"nodeType":"YulExpressionStatement","src":"11927:37:9"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11905:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11912:3:9","type":""}],"src":"11852:118:9"},{"body":{"nodeType":"YulBlock","src":"12074:124:9","statements":[{"nodeType":"YulAssignment","src":"12084:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12096:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12107:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12092:3:9"},"nodeType":"YulFunctionCall","src":"12092:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12084:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12164:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12177:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12188:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12173:3:9"},"nodeType":"YulFunctionCall","src":"12173:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12120:43:9"},"nodeType":"YulFunctionCall","src":"12120:71:9"},"nodeType":"YulExpressionStatement","src":"12120:71:9"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12046:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12058:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12069:4:9","type":""}],"src":"11976:222:9"},{"body":{"nodeType":"YulBlock","src":"12330:206:9","statements":[{"nodeType":"YulAssignment","src":"12340:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12352:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12363:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12348:3:9"},"nodeType":"YulFunctionCall","src":"12348:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12340:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12420:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12433:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12444:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12429:3:9"},"nodeType":"YulFunctionCall","src":"12429:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12376:43:9"},"nodeType":"YulFunctionCall","src":"12376:71:9"},"nodeType":"YulExpressionStatement","src":"12376:71:9"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12501:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12514:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12525:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12510:3:9"},"nodeType":"YulFunctionCall","src":"12510:18:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12457:43:9"},"nodeType":"YulFunctionCall","src":"12457:72:9"},"nodeType":"YulExpressionStatement","src":"12457:72:9"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12294:9:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12306:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12314:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12325:4:9","type":""}],"src":"12204:332:9"},{"body":{"nodeType":"YulBlock","src":"12718:365:9","statements":[{"nodeType":"YulAssignment","src":"12728:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12740:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12751:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12736:3:9"},"nodeType":"YulFunctionCall","src":"12736:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12728:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12809:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12822:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12833:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12818:3:9"},"nodeType":"YulFunctionCall","src":"12818:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12765:43:9"},"nodeType":"YulFunctionCall","src":"12765:71:9"},"nodeType":"YulExpressionStatement","src":"12765:71:9"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12890:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12903:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12914:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12899:3:9"},"nodeType":"YulFunctionCall","src":"12899:18:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12846:43:9"},"nodeType":"YulFunctionCall","src":"12846:72:9"},"nodeType":"YulExpressionStatement","src":"12846:72:9"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12972:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12985:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12996:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12981:3:9"},"nodeType":"YulFunctionCall","src":"12981:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12928:43:9"},"nodeType":"YulFunctionCall","src":"12928:72:9"},"nodeType":"YulExpressionStatement","src":"12928:72:9"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"13048:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13061:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13072:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13057:3:9"},"nodeType":"YulFunctionCall","src":"13057:18:9"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"13010:37:9"},"nodeType":"YulFunctionCall","src":"13010:66:9"},"nodeType":"YulExpressionStatement","src":"13010:66:9"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12666:9:9","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12678:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12686:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12694:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12702:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12713:4:9","type":""}],"src":"12542:541:9"},{"body":{"nodeType":"YulBlock","src":"13215:206:9","statements":[{"nodeType":"YulAssignment","src":"13225:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13237:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13248:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13233:3:9"},"nodeType":"YulFunctionCall","src":"13233:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13225:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13305:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13318:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13329:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13314:3:9"},"nodeType":"YulFunctionCall","src":"13314:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13261:43:9"},"nodeType":"YulFunctionCall","src":"13261:71:9"},"nodeType":"YulExpressionStatement","src":"13261:71:9"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13386:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13399:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13410:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13395:3:9"},"nodeType":"YulFunctionCall","src":"13395:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13342:43:9"},"nodeType":"YulFunctionCall","src":"13342:72:9"},"nodeType":"YulExpressionStatement","src":"13342:72:9"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13179:9:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13191:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13199:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13210:4:9","type":""}],"src":"13089:332:9"},{"body":{"nodeType":"YulBlock","src":"13519:118:9","statements":[{"nodeType":"YulAssignment","src":"13529:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13541:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13552:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13537:3:9"},"nodeType":"YulFunctionCall","src":"13537:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13529:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13603:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13616:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13627:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13612:3:9"},"nodeType":"YulFunctionCall","src":"13612:17:9"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"13565:37:9"},"nodeType":"YulFunctionCall","src":"13565:65:9"},"nodeType":"YulExpressionStatement","src":"13565:65:9"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13491:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13503:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13514:4:9","type":""}],"src":"13427:210:9"},{"body":{"nodeType":"YulBlock","src":"13814:248:9","statements":[{"nodeType":"YulAssignment","src":"13824:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13836:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13847:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13832:3:9"},"nodeType":"YulFunctionCall","src":"13832:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13824:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13871:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13882:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13867:3:9"},"nodeType":"YulFunctionCall","src":"13867:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13890:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"13896:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13886:3:9"},"nodeType":"YulFunctionCall","src":"13886:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13860:6:9"},"nodeType":"YulFunctionCall","src":"13860:47:9"},"nodeType":"YulExpressionStatement","src":"13860:47:9"},{"nodeType":"YulAssignment","src":"13916:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14050:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13924:124:9"},"nodeType":"YulFunctionCall","src":"13924:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13916:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13794:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13809:4:9","type":""}],"src":"13643:419:9"},{"body":{"nodeType":"YulBlock","src":"14239:248:9","statements":[{"nodeType":"YulAssignment","src":"14249:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14261:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14272:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14257:3:9"},"nodeType":"YulFunctionCall","src":"14257:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14249:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14296:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14307:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14292:3:9"},"nodeType":"YulFunctionCall","src":"14292:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14315:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"14321:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14311:3:9"},"nodeType":"YulFunctionCall","src":"14311:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14285:6:9"},"nodeType":"YulFunctionCall","src":"14285:47:9"},"nodeType":"YulExpressionStatement","src":"14285:47:9"},{"nodeType":"YulAssignment","src":"14341:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14475:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14349:124:9"},"nodeType":"YulFunctionCall","src":"14349:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14341:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14219:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14234:4:9","type":""}],"src":"14068:419:9"},{"body":{"nodeType":"YulBlock","src":"14664:248:9","statements":[{"nodeType":"YulAssignment","src":"14674:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14686:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14697:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14682:3:9"},"nodeType":"YulFunctionCall","src":"14682:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14674:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14721:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14732:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14717:3:9"},"nodeType":"YulFunctionCall","src":"14717:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14740:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"14746:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14736:3:9"},"nodeType":"YulFunctionCall","src":"14736:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14710:6:9"},"nodeType":"YulFunctionCall","src":"14710:47:9"},"nodeType":"YulExpressionStatement","src":"14710:47:9"},{"nodeType":"YulAssignment","src":"14766:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14900:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14774:124:9"},"nodeType":"YulFunctionCall","src":"14774:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14766:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14644:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14659:4:9","type":""}],"src":"14493:419:9"},{"body":{"nodeType":"YulBlock","src":"15089:248:9","statements":[{"nodeType":"YulAssignment","src":"15099:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15111:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"15122:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15107:3:9"},"nodeType":"YulFunctionCall","src":"15107:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15099:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15146:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"15157:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15142:3:9"},"nodeType":"YulFunctionCall","src":"15142:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15165:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"15171:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15161:3:9"},"nodeType":"YulFunctionCall","src":"15161:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15135:6:9"},"nodeType":"YulFunctionCall","src":"15135:47:9"},"nodeType":"YulExpressionStatement","src":"15135:47:9"},{"nodeType":"YulAssignment","src":"15191:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15325:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15199:124:9"},"nodeType":"YulFunctionCall","src":"15199:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15191:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15069:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15084:4:9","type":""}],"src":"14918:419:9"},{"body":{"nodeType":"YulBlock","src":"15514:248:9","statements":[{"nodeType":"YulAssignment","src":"15524:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15536:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"15547:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15532:3:9"},"nodeType":"YulFunctionCall","src":"15532:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15524:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15571:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"15582:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15567:3:9"},"nodeType":"YulFunctionCall","src":"15567:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15590:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"15596:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15586:3:9"},"nodeType":"YulFunctionCall","src":"15586:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15560:6:9"},"nodeType":"YulFunctionCall","src":"15560:47:9"},"nodeType":"YulExpressionStatement","src":"15560:47:9"},{"nodeType":"YulAssignment","src":"15616:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15750:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15624:124:9"},"nodeType":"YulFunctionCall","src":"15624:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15616:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15494:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15509:4:9","type":""}],"src":"15343:419:9"},{"body":{"nodeType":"YulBlock","src":"15939:248:9","statements":[{"nodeType":"YulAssignment","src":"15949:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15961:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"15972:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15957:3:9"},"nodeType":"YulFunctionCall","src":"15957:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15949:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15996:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"16007:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15992:3:9"},"nodeType":"YulFunctionCall","src":"15992:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16015:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"16021:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16011:3:9"},"nodeType":"YulFunctionCall","src":"16011:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15985:6:9"},"nodeType":"YulFunctionCall","src":"15985:47:9"},"nodeType":"YulExpressionStatement","src":"15985:47:9"},{"nodeType":"YulAssignment","src":"16041:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16175:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16049:124:9"},"nodeType":"YulFunctionCall","src":"16049:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16041:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15919:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15934:4:9","type":""}],"src":"15768:419:9"},{"body":{"nodeType":"YulBlock","src":"16364:248:9","statements":[{"nodeType":"YulAssignment","src":"16374:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16386:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"16397:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16382:3:9"},"nodeType":"YulFunctionCall","src":"16382:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16374:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16421:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"16432:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16417:3:9"},"nodeType":"YulFunctionCall","src":"16417:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16440:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"16446:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16436:3:9"},"nodeType":"YulFunctionCall","src":"16436:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16410:6:9"},"nodeType":"YulFunctionCall","src":"16410:47:9"},"nodeType":"YulExpressionStatement","src":"16410:47:9"},{"nodeType":"YulAssignment","src":"16466:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16600:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16474:124:9"},"nodeType":"YulFunctionCall","src":"16474:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16466:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16344:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16359:4:9","type":""}],"src":"16193:419:9"},{"body":{"nodeType":"YulBlock","src":"16790:254:9","statements":[{"nodeType":"YulAssignment","src":"16800:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16812:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"16823:3:9","type":"","value":"384"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16808:3:9"},"nodeType":"YulFunctionCall","src":"16808:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16800:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16927:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16940:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"16951:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16936:3:9"},"nodeType":"YulFunctionCall","src":"16936:17:9"}],"functionName":{"name":"abi_encode_t_struct$__Order_$584_memory_ptr_to_t_struct$__Order_$584_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16837:89:9"},"nodeType":"YulFunctionCall","src":"16837:117:9"},"nodeType":"YulExpressionStatement","src":"16837:117:9"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17008:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17021:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"17032:3:9","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17017:3:9"},"nodeType":"YulFunctionCall","src":"17017:19:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16964:43:9"},"nodeType":"YulFunctionCall","src":"16964:73:9"},"nodeType":"YulExpressionStatement","src":"16964:73:9"}]},"name":"abi_encode_tuple_t_struct$__Order_$584_memory_ptr_t_uint256__to_t_struct$__Order_$584_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16754:9:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16766:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16774:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16785:4:9","type":""}],"src":"16618:426:9"},{"body":{"nodeType":"YulBlock","src":"17148:124:9","statements":[{"nodeType":"YulAssignment","src":"17158:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17170:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"17181:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17166:3:9"},"nodeType":"YulFunctionCall","src":"17166:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17158:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17238:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17251:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"17262:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17247:3:9"},"nodeType":"YulFunctionCall","src":"17247:17:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17194:43:9"},"nodeType":"YulFunctionCall","src":"17194:71:9"},"nodeType":"YulExpressionStatement","src":"17194:71:9"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17120:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17132:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17143:4:9","type":""}],"src":"17050:222:9"},{"body":{"nodeType":"YulBlock","src":"17686:1037:9","statements":[{"nodeType":"YulAssignment","src":"17696:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17708:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"17719:3:9","type":"","value":"384"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17704:3:9"},"nodeType":"YulFunctionCall","src":"17704:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17696:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17777:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17790:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"17801:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17786:3:9"},"nodeType":"YulFunctionCall","src":"17786:17:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17733:43:9"},"nodeType":"YulFunctionCall","src":"17733:71:9"},"nodeType":"YulExpressionStatement","src":"17733:71:9"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17864:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17877:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"17888:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17873:3:9"},"nodeType":"YulFunctionCall","src":"17873:18:9"}],"functionName":{"name":"abi_encode_t_enum$_Side_$613_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"17814:49:9"},"nodeType":"YulFunctionCall","src":"17814:78:9"},"nodeType":"YulExpressionStatement","src":"17814:78:9"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17946:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17959:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"17970:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17955:3:9"},"nodeType":"YulFunctionCall","src":"17955:18:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17902:43:9"},"nodeType":"YulFunctionCall","src":"17902:72:9"},"nodeType":"YulExpressionStatement","src":"17902:72:9"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"18028:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18041:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"18052:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18037:3:9"},"nodeType":"YulFunctionCall","src":"18037:18:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17984:43:9"},"nodeType":"YulFunctionCall","src":"17984:72:9"},"nodeType":"YulExpressionStatement","src":"17984:72:9"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"18110:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18123:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"18134:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18119:3:9"},"nodeType":"YulFunctionCall","src":"18119:19:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18066:43:9"},"nodeType":"YulFunctionCall","src":"18066:73:9"},"nodeType":"YulExpressionStatement","src":"18066:73:9"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"18193:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18206:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"18217:3:9","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18202:3:9"},"nodeType":"YulFunctionCall","src":"18202:19:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18149:43:9"},"nodeType":"YulFunctionCall","src":"18149:73:9"},"nodeType":"YulExpressionStatement","src":"18149:73:9"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"18276:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18289:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"18300:3:9","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18285:3:9"},"nodeType":"YulFunctionCall","src":"18285:19:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18232:43:9"},"nodeType":"YulFunctionCall","src":"18232:73:9"},"nodeType":"YulExpressionStatement","src":"18232:73:9"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"18359:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18372:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"18383:3:9","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18368:3:9"},"nodeType":"YulFunctionCall","src":"18368:19:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18315:43:9"},"nodeType":"YulFunctionCall","src":"18315:73:9"},"nodeType":"YulExpressionStatement","src":"18315:73:9"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"18442:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18455:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"18466:3:9","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18451:3:9"},"nodeType":"YulFunctionCall","src":"18451:19:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18398:43:9"},"nodeType":"YulFunctionCall","src":"18398:73:9"},"nodeType":"YulExpressionStatement","src":"18398:73:9"},{"expression":{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"18525:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18538:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"18549:3:9","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18534:3:9"},"nodeType":"YulFunctionCall","src":"18534:19:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18481:43:9"},"nodeType":"YulFunctionCall","src":"18481:73:9"},"nodeType":"YulExpressionStatement","src":"18481:73:9"},{"expression":{"arguments":[{"name":"value10","nodeType":"YulIdentifier","src":"18602:7:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18616:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"18627:3:9","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18612:3:9"},"nodeType":"YulFunctionCall","src":"18612:19:9"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"18564:37:9"},"nodeType":"YulFunctionCall","src":"18564:68:9"},"nodeType":"YulExpressionStatement","src":"18564:68:9"},{"expression":{"arguments":[{"name":"value11","nodeType":"YulIdentifier","src":"18686:7:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18700:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"18711:3:9","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18696:3:9"},"nodeType":"YulFunctionCall","src":"18696:19:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18642:43:9"},"nodeType":"YulFunctionCall","src":"18642:74:9"},"nodeType":"YulExpressionStatement","src":"18642:74:9"}]},"name":"abi_encode_tuple_t_uint256_t_enum$_Side_$613_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint8_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17568:9:9","type":""},{"name":"value11","nodeType":"YulTypedName","src":"17580:7:9","type":""},{"name":"value10","nodeType":"YulTypedName","src":"17589:7:9","type":""},{"name":"value9","nodeType":"YulTypedName","src":"17598:6:9","type":""},{"name":"value8","nodeType":"YulTypedName","src":"17606:6:9","type":""},{"name":"value7","nodeType":"YulTypedName","src":"17614:6:9","type":""},{"name":"value6","nodeType":"YulTypedName","src":"17622:6:9","type":""},{"name":"value5","nodeType":"YulTypedName","src":"17630:6:9","type":""},{"name":"value4","nodeType":"YulTypedName","src":"17638:6:9","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17646:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17654:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17662:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17670:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17681:4:9","type":""}],"src":"17278:1445:9"},{"body":{"nodeType":"YulBlock","src":"19108:953:9","statements":[{"nodeType":"YulAssignment","src":"19118:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19130:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"19141:3:9","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19126:3:9"},"nodeType":"YulFunctionCall","src":"19126:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19118:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19199:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19212:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"19223:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19208:3:9"},"nodeType":"YulFunctionCall","src":"19208:17:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19155:43:9"},"nodeType":"YulFunctionCall","src":"19155:71:9"},"nodeType":"YulExpressionStatement","src":"19155:71:9"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19286:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19299:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"19310:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19295:3:9"},"nodeType":"YulFunctionCall","src":"19295:18:9"}],"functionName":{"name":"abi_encode_t_enum$_Side_$613_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"19236:49:9"},"nodeType":"YulFunctionCall","src":"19236:78:9"},"nodeType":"YulExpressionStatement","src":"19236:78:9"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"19368:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19381:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"19392:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19377:3:9"},"nodeType":"YulFunctionCall","src":"19377:18:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19324:43:9"},"nodeType":"YulFunctionCall","src":"19324:72:9"},"nodeType":"YulExpressionStatement","src":"19324:72:9"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"19450:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19463:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"19474:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19459:3:9"},"nodeType":"YulFunctionCall","src":"19459:18:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19406:43:9"},"nodeType":"YulFunctionCall","src":"19406:72:9"},"nodeType":"YulExpressionStatement","src":"19406:72:9"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"19532:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19545:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"19556:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19541:3:9"},"nodeType":"YulFunctionCall","src":"19541:19:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19488:43:9"},"nodeType":"YulFunctionCall","src":"19488:73:9"},"nodeType":"YulExpressionStatement","src":"19488:73:9"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"19615:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19628:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"19639:3:9","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19624:3:9"},"nodeType":"YulFunctionCall","src":"19624:19:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19571:43:9"},"nodeType":"YulFunctionCall","src":"19571:73:9"},"nodeType":"YulExpressionStatement","src":"19571:73:9"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"19698:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19711:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"19722:3:9","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19707:3:9"},"nodeType":"YulFunctionCall","src":"19707:19:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19654:43:9"},"nodeType":"YulFunctionCall","src":"19654:73:9"},"nodeType":"YulExpressionStatement","src":"19654:73:9"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"19781:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19794:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"19805:3:9","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19790:3:9"},"nodeType":"YulFunctionCall","src":"19790:19:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19737:43:9"},"nodeType":"YulFunctionCall","src":"19737:73:9"},"nodeType":"YulExpressionStatement","src":"19737:73:9"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"19864:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19877:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"19888:3:9","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19873:3:9"},"nodeType":"YulFunctionCall","src":"19873:19:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19820:43:9"},"nodeType":"YulFunctionCall","src":"19820:73:9"},"nodeType":"YulExpressionStatement","src":"19820:73:9"},{"expression":{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"19947:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19960:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"19971:3:9","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19956:3:9"},"nodeType":"YulFunctionCall","src":"19956:19:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19903:43:9"},"nodeType":"YulFunctionCall","src":"19903:73:9"},"nodeType":"YulExpressionStatement","src":"19903:73:9"},{"expression":{"arguments":[{"name":"value10","nodeType":"YulIdentifier","src":"20024:7:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20038:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"20049:3:9","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20034:3:9"},"nodeType":"YulFunctionCall","src":"20034:19:9"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"19986:37:9"},"nodeType":"YulFunctionCall","src":"19986:68:9"},"nodeType":"YulExpressionStatement","src":"19986:68:9"}]},"name":"abi_encode_tuple_t_uint256_t_enum$_Side_$613_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint8_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18999:9:9","type":""},{"name":"value10","nodeType":"YulTypedName","src":"19011:7:9","type":""},{"name":"value9","nodeType":"YulTypedName","src":"19020:6:9","type":""},{"name":"value8","nodeType":"YulTypedName","src":"19028:6:9","type":""},{"name":"value7","nodeType":"YulTypedName","src":"19036:6:9","type":""},{"name":"value6","nodeType":"YulTypedName","src":"19044:6:9","type":""},{"name":"value5","nodeType":"YulTypedName","src":"19052:6:9","type":""},{"name":"value4","nodeType":"YulTypedName","src":"19060:6:9","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19068:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19076:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19084:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19092:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19103:4:9","type":""}],"src":"18729:1332:9"},{"body":{"nodeType":"YulBlock","src":"20107:35:9","statements":[{"nodeType":"YulAssignment","src":"20117:19:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20133:2:9","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20127:5:9"},"nodeType":"YulFunctionCall","src":"20127:9:9"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20117:6:9"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"20100:6:9","type":""}],"src":"20067:75:9"},{"body":{"nodeType":"YulBlock","src":"20244:73:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20261:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"20266:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20254:6:9"},"nodeType":"YulFunctionCall","src":"20254:19:9"},"nodeType":"YulExpressionStatement","src":"20254:19:9"},{"nodeType":"YulAssignment","src":"20282:29:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20301:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"20306:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20297:3:9"},"nodeType":"YulFunctionCall","src":"20297:14:9"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"20282:11:9"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20216:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"20221:6:9","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"20232:11:9","type":""}],"src":"20148:169:9"},{"body":{"nodeType":"YulBlock","src":"20367:261:9","statements":[{"nodeType":"YulAssignment","src":"20377:25:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20400:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20382:17:9"},"nodeType":"YulFunctionCall","src":"20382:20:9"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"20377:1:9"}]},{"nodeType":"YulAssignment","src":"20411:25:9","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20434:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20416:17:9"},"nodeType":"YulFunctionCall","src":"20416:20:9"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"20411:1:9"}]},{"body":{"nodeType":"YulBlock","src":"20574:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20576:16:9"},"nodeType":"YulFunctionCall","src":"20576:18:9"},"nodeType":"YulExpressionStatement","src":"20576:18:9"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20495:1:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20502:66:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"20570:1:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20498:3:9"},"nodeType":"YulFunctionCall","src":"20498:74:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20492:2:9"},"nodeType":"YulFunctionCall","src":"20492:81:9"},"nodeType":"YulIf","src":"20489:107:9"},{"nodeType":"YulAssignment","src":"20606:16:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20617:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"20620:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20613:3:9"},"nodeType":"YulFunctionCall","src":"20613:9:9"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"20606:3:9"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"20354:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"20357:1:9","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"20363:3:9","type":""}],"src":"20323:305:9"},{"body":{"nodeType":"YulBlock","src":"20679:146:9","statements":[{"nodeType":"YulAssignment","src":"20689:25:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20712:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20694:17:9"},"nodeType":"YulFunctionCall","src":"20694:20:9"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"20689:1:9"}]},{"nodeType":"YulAssignment","src":"20723:25:9","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20746:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20728:17:9"},"nodeType":"YulFunctionCall","src":"20728:20:9"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"20723:1:9"}]},{"body":{"nodeType":"YulBlock","src":"20770:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20772:16:9"},"nodeType":"YulFunctionCall","src":"20772:18:9"},"nodeType":"YulExpressionStatement","src":"20772:18:9"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20764:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"20767:1:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20761:2:9"},"nodeType":"YulFunctionCall","src":"20761:8:9"},"nodeType":"YulIf","src":"20758:34:9"},{"nodeType":"YulAssignment","src":"20802:17:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20814:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"20817:1:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20810:3:9"},"nodeType":"YulFunctionCall","src":"20810:9:9"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"20802:4:9"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"20665:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"20668:1:9","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"20674:4:9","type":""}],"src":"20634:191:9"},{"body":{"nodeType":"YulBlock","src":"20876:51:9","statements":[{"nodeType":"YulAssignment","src":"20886:35:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20915:5:9"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"20897:17:9"},"nodeType":"YulFunctionCall","src":"20897:24:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"20886:7:9"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20858:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"20868:7:9","type":""}],"src":"20831:96:9"},{"body":{"nodeType":"YulBlock","src":"20975:48:9","statements":[{"nodeType":"YulAssignment","src":"20985:32:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21010:5:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21003:6:9"},"nodeType":"YulFunctionCall","src":"21003:13:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20996:6:9"},"nodeType":"YulFunctionCall","src":"20996:21:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"20985:7:9"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20957:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"20967:7:9","type":""}],"src":"20933:90:9"},{"body":{"nodeType":"YulBlock","src":"21082:74:9","statements":[{"nodeType":"YulAssignment","src":"21092:16:9","value":{"name":"value","nodeType":"YulIdentifier","src":"21103:5:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"21092:7:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21144:5:9"}],"functionName":{"name":"validator_assert_t_enum$_Side_$613","nodeType":"YulIdentifier","src":"21109:34:9"},"nodeType":"YulFunctionCall","src":"21109:41:9"},"nodeType":"YulExpressionStatement","src":"21109:41:9"}]},"name":"cleanup_t_enum$_Side_$613","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21064:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"21074:7:9","type":""}],"src":"21029:127:9"},{"body":{"nodeType":"YulBlock","src":"21207:81:9","statements":[{"nodeType":"YulAssignment","src":"21217:65:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21232:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"21239:42:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21228:3:9"},"nodeType":"YulFunctionCall","src":"21228:54:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"21217:7:9"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21189:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"21199:7:9","type":""}],"src":"21162:126:9"},{"body":{"nodeType":"YulBlock","src":"21339:32:9","statements":[{"nodeType":"YulAssignment","src":"21349:16:9","value":{"name":"value","nodeType":"YulIdentifier","src":"21360:5:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"21349:7:9"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21321:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"21331:7:9","type":""}],"src":"21294:77:9"},{"body":{"nodeType":"YulBlock","src":"21443:61:9","statements":[{"nodeType":"YulAssignment","src":"21453:45:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21492:5:9"}],"functionName":{"name":"cleanup_t_enum$_Side_$613","nodeType":"YulIdentifier","src":"21466:25:9"},"nodeType":"YulFunctionCall","src":"21466:32:9"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"21453:9:9"}]}]},"name":"convert_t_enum$_Side_$613_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21423:5:9","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"21433:9:9","type":""}],"src":"21377:127:9"},{"body":{"nodeType":"YulBlock","src":"21553:190:9","statements":[{"nodeType":"YulAssignment","src":"21563:33:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21590:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21572:17:9"},"nodeType":"YulFunctionCall","src":"21572:24:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21563:5:9"}]},{"body":{"nodeType":"YulBlock","src":"21686:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21688:16:9"},"nodeType":"YulFunctionCall","src":"21688:18:9"},"nodeType":"YulExpressionStatement","src":"21688:18:9"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21611:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"21618:66:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21608:2:9"},"nodeType":"YulFunctionCall","src":"21608:77:9"},"nodeType":"YulIf","src":"21605:103:9"},{"nodeType":"YulAssignment","src":"21717:20:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21728:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"21735:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21724:3:9"},"nodeType":"YulFunctionCall","src":"21724:13:9"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"21717:3:9"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21539:5:9","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"21549:3:9","type":""}],"src":"21510:233:9"},{"body":{"nodeType":"YulBlock","src":"21777:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21794:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21797:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21787:6:9"},"nodeType":"YulFunctionCall","src":"21787:88:9"},"nodeType":"YulExpressionStatement","src":"21787:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21891:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21894:4:9","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21884:6:9"},"nodeType":"YulFunctionCall","src":"21884:15:9"},"nodeType":"YulExpressionStatement","src":"21884:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21915:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21918:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21908:6:9"},"nodeType":"YulFunctionCall","src":"21908:15:9"},"nodeType":"YulExpressionStatement","src":"21908:15:9"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"21749:180:9"},{"body":{"nodeType":"YulBlock","src":"21963:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21980:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21983:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21973:6:9"},"nodeType":"YulFunctionCall","src":"21973:88:9"},"nodeType":"YulExpressionStatement","src":"21973:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22077:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22080:4:9","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22070:6:9"},"nodeType":"YulFunctionCall","src":"22070:15:9"},"nodeType":"YulExpressionStatement","src":"22070:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22101:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22104:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22094:6:9"},"nodeType":"YulFunctionCall","src":"22094:15:9"},"nodeType":"YulExpressionStatement","src":"22094:15:9"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"21935:180:9"},{"body":{"nodeType":"YulBlock","src":"22149:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22166:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22169:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22159:6:9"},"nodeType":"YulFunctionCall","src":"22159:88:9"},"nodeType":"YulExpressionStatement","src":"22159:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22263:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22266:4:9","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22256:6:9"},"nodeType":"YulFunctionCall","src":"22256:15:9"},"nodeType":"YulExpressionStatement","src":"22256:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22287:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22290:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22280:6:9"},"nodeType":"YulFunctionCall","src":"22280:15:9"},"nodeType":"YulExpressionStatement","src":"22280:15:9"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"22121:180:9"},{"body":{"nodeType":"YulBlock","src":"22335:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22352:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22355:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22345:6:9"},"nodeType":"YulFunctionCall","src":"22345:88:9"},"nodeType":"YulExpressionStatement","src":"22345:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22449:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22452:4:9","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22442:6:9"},"nodeType":"YulFunctionCall","src":"22442:15:9"},"nodeType":"YulExpressionStatement","src":"22442:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22473:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22476:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22466:6:9"},"nodeType":"YulFunctionCall","src":"22466:15:9"},"nodeType":"YulExpressionStatement","src":"22466:15:9"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"22307:180:9"},{"body":{"nodeType":"YulBlock","src":"22582:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22599:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22602:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22592:6:9"},"nodeType":"YulFunctionCall","src":"22592:12:9"},"nodeType":"YulExpressionStatement","src":"22592:12:9"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"22493:117:9"},{"body":{"nodeType":"YulBlock","src":"22705:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22722:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22725:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22715:6:9"},"nodeType":"YulFunctionCall","src":"22715:12:9"},"nodeType":"YulExpressionStatement","src":"22715:12:9"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"22616:117:9"},{"body":{"nodeType":"YulBlock","src":"22845:60:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22867:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"22875:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22863:3:9"},"nodeType":"YulFunctionCall","src":"22863:14:9"},{"hexValue":"496e76616c6964204f72646572204944","kind":"string","nodeType":"YulLiteral","src":"22879:18:9","type":"","value":"Invalid Order ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22856:6:9"},"nodeType":"YulFunctionCall","src":"22856:42:9"},"nodeType":"YulExpressionStatement","src":"22856:42:9"}]},"name":"store_literal_in_memory_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22837:6:9","type":""}],"src":"22739:166:9"},{"body":{"nodeType":"YulBlock","src":"23017:119:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23039:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"23047:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23035:3:9"},"nodeType":"YulFunctionCall","src":"23035:14:9"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"23051:34:9","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23028:6:9"},"nodeType":"YulFunctionCall","src":"23028:58:9"},"nodeType":"YulExpressionStatement","src":"23028:58:9"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23107:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"23115:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23103:3:9"},"nodeType":"YulFunctionCall","src":"23103:15:9"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"23120:8:9","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23096:6:9"},"nodeType":"YulFunctionCall","src":"23096:33:9"},"nodeType":"YulExpressionStatement","src":"23096:33:9"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23009:6:9","type":""}],"src":"22911:225:9"},{"body":{"nodeType":"YulBlock","src":"23248:68:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23270:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"23278:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23266:3:9"},"nodeType":"YulFunctionCall","src":"23266:14:9"},{"hexValue":"546f6b656e20756e617661696c61626c6520696e20444558","kind":"string","nodeType":"YulLiteral","src":"23282:26:9","type":"","value":"Token unavailable in DEX"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23259:6:9"},"nodeType":"YulFunctionCall","src":"23259:50:9"},"nodeType":"YulExpressionStatement","src":"23259:50:9"}]},"name":"store_literal_in_memory_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23240:6:9","type":""}],"src":"23142:174:9"},{"body":{"nodeType":"YulBlock","src":"23428:62:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23450:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"23458:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23446:3:9"},"nodeType":"YulFunctionCall","src":"23446:14:9"},{"hexValue":"496e73756666696369656e742046756e6473","kind":"string","nodeType":"YulLiteral","src":"23462:20:9","type":"","value":"Insufficient Funds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23439:6:9"},"nodeType":"YulFunctionCall","src":"23439:44:9"},"nodeType":"YulExpressionStatement","src":"23439:44:9"}]},"name":"store_literal_in_memory_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23420:6:9","type":""}],"src":"23322:168:9"},{"body":{"nodeType":"YulBlock","src":"23602:53:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23624:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"23632:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23620:3:9"},"nodeType":"YulFunctionCall","src":"23620:14:9"},{"hexValue":"4e6f74204f776e6572","kind":"string","nodeType":"YulLiteral","src":"23636:11:9","type":"","value":"Not Owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23613:6:9"},"nodeType":"YulFunctionCall","src":"23613:35:9"},"nodeType":"YulExpressionStatement","src":"23613:35:9"}]},"name":"store_literal_in_memory_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23594:6:9","type":""}],"src":"23496:159:9"},{"body":{"nodeType":"YulBlock","src":"23767:66:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23789:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"23797:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23785:3:9"},"nodeType":"YulFunctionCall","src":"23785:14:9"},{"hexValue":"546f6b656e20616c7265616479207665726966696564","kind":"string","nodeType":"YulLiteral","src":"23801:24:9","type":"","value":"Token already verified"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23778:6:9"},"nodeType":"YulFunctionCall","src":"23778:48:9"},"nodeType":"YulExpressionStatement","src":"23778:48:9"}]},"name":"store_literal_in_memory_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23759:6:9","type":""}],"src":"23661:172:9"},{"body":{"nodeType":"YulBlock","src":"23945:76:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23967:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"23975:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23963:3:9"},"nodeType":"YulFunctionCall","src":"23963:14:9"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"23979:34:9","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23956:6:9"},"nodeType":"YulFunctionCall","src":"23956:58:9"},"nodeType":"YulExpressionStatement","src":"23956:58:9"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23937:6:9","type":""}],"src":"23839:182:9"},{"body":{"nodeType":"YulBlock","src":"24078:62:9","statements":[{"body":{"nodeType":"YulBlock","src":"24112:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"24114:16:9"},"nodeType":"YulFunctionCall","src":"24114:18:9"},"nodeType":"YulExpressionStatement","src":"24114:18:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24101:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"24108:1:9","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"24098:2:9"},"nodeType":"YulFunctionCall","src":"24098:12:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24091:6:9"},"nodeType":"YulFunctionCall","src":"24091:20:9"},"nodeType":"YulIf","src":"24088:46:9"}]},"name":"validator_assert_t_enum$_Side_$613","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24071:5:9","type":""}],"src":"24027:113:9"},{"body":{"nodeType":"YulBlock","src":"24189:79:9","statements":[{"body":{"nodeType":"YulBlock","src":"24246:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24255:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24258:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24248:6:9"},"nodeType":"YulFunctionCall","src":"24248:12:9"},"nodeType":"YulExpressionStatement","src":"24248:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24212:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24237:5:9"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"24219:17:9"},"nodeType":"YulFunctionCall","src":"24219:24:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"24209:2:9"},"nodeType":"YulFunctionCall","src":"24209:35:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24202:6:9"},"nodeType":"YulFunctionCall","src":"24202:43:9"},"nodeType":"YulIf","src":"24199:63:9"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24182:5:9","type":""}],"src":"24146:122:9"},{"body":{"nodeType":"YulBlock","src":"24314:76:9","statements":[{"body":{"nodeType":"YulBlock","src":"24368:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24377:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24380:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24370:6:9"},"nodeType":"YulFunctionCall","src":"24370:12:9"},"nodeType":"YulExpressionStatement","src":"24370:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24337:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24359:5:9"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"24344:14:9"},"nodeType":"YulFunctionCall","src":"24344:21:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"24334:2:9"},"nodeType":"YulFunctionCall","src":"24334:32:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24327:6:9"},"nodeType":"YulFunctionCall","src":"24327:40:9"},"nodeType":"YulIf","src":"24324:60:9"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24307:5:9","type":""}],"src":"24274:116:9"},{"body":{"nodeType":"YulBlock","src":"24447:56:9","statements":[{"body":{"nodeType":"YulBlock","src":"24481:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24490:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24493:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24483:6:9"},"nodeType":"YulFunctionCall","src":"24483:12:9"},"nodeType":"YulExpressionStatement","src":"24483:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24470:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"24477:1:9","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"24467:2:9"},"nodeType":"YulFunctionCall","src":"24467:12:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24460:6:9"},"nodeType":"YulFunctionCall","src":"24460:20:9"},"nodeType":"YulIf","src":"24457:40:9"}]},"name":"validator_revert_t_enum$_Side_$613","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24440:5:9","type":""}],"src":"24396:107:9"},{"body":{"nodeType":"YulBlock","src":"24552:79:9","statements":[{"body":{"nodeType":"YulBlock","src":"24609:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24618:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24621:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24611:6:9"},"nodeType":"YulFunctionCall","src":"24611:12:9"},"nodeType":"YulExpressionStatement","src":"24611:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24575:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24600:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24582:17:9"},"nodeType":"YulFunctionCall","src":"24582:24:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"24572:2:9"},"nodeType":"YulFunctionCall","src":"24572:35:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24565:6:9"},"nodeType":"YulFunctionCall","src":"24565:43:9"},"nodeType":"YulIf","src":"24562:63:9"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24545:5:9","type":""}],"src":"24509:122:9"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_enum$_Side_$613(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Side_$613(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_enum$_Side_$613(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_Side_$613(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_enum$_Side_$613t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Side_$613(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_enum$_Side_$613t_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Side_$613(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_enum$_Side_$613t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_Side_$613(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_enum$_Side_$613_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_Side_$613_to_t_uint8(value))\n    }\n\n    function abi_encode_t_enum$_Side_$613_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Side_$613_to_t_uint8(value))\n    }\n\n    function abi_encode_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    // struct Exchange._Order -> struct Exchange._Order\n    function abi_encode_t_struct$__Order_$584_memory_ptr_to_t_struct$__Order_$584_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0160)\n\n        {\n            // id\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // side\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_enum$_Side_$613_to_t_uint8(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // user\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // tokenA\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // amountA\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // tokenB\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountB\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // rate\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // originalAmountA\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0100))\n        }\n\n        {\n            // originalAmountB\n\n            let memberValue0 := mload(add(value, 0x0120))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0120))\n        }\n\n        {\n            // waiveFees\n\n            let memberValue0 := mload(add(value, 0x0140))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x0140))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$__Order_$584_memory_ptr_t_uint256__to_t_struct$__Order_$584_memory_ptr_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 384)\n\n        abi_encode_t_struct$__Order_$584_memory_ptr_to_t_struct$__Order_$584_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 352))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_enum$_Side_$613_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint8_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart , value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 384)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_Side_$613_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value9,  add(headStart, 288))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value10,  add(headStart, 320))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value11,  add(headStart, 352))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_enum$_Side_$613_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint8_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 352)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_Side_$613_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_address_to_t_address_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value9,  add(headStart, 288))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value10,  add(headStart, 320))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_enum$_Side_$613(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Side_$613(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_enum$_Side_$613_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Side_$613(value)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Order ID\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token unavailable in DEX\")\n\n    }\n\n    function store_literal_in_memory_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient Funds\")\n\n    }\n\n    function store_literal_in_memory_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not Owner\")\n\n    }\n\n    function store_literal_in_memory_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token already verified\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_assert_t_enum$_Side_$613(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_enum$_Side_$613(value) {\n        if iszero(lt(value, 2)) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":9,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101375760003560e01c80639c07ce26116100b8578063bd8098ec1161007c578063bd8098ec1461033a578063c3364be414610375578063dafbfe6a146103a5578063e947a695146103c1578063f2fde38b146103f1578063f9242d9a1461040d57610137565b80639c07ce26146102975780639ead7222146102b5578063ac1a386a146102e6578063af81c5b914610302578063b136e39a1461031e57610137565b806362c09cfa116100ff57806362c09cfa146102195780636f4e410b14610235578063715018a6146102515780637bf1a6271461025b5780638da5cb5b1461027957610137565b80631027b2191461013c5780631347d60e1461016c578063182cffeb146101885780631f69565f146101b8578063609ae6b5146101e8575b600080fd5b61015660048036038101906101519190612d4c565b610447565b6040516101639190613319565b60405180910390f35b61018660048036038101906101819190612f19565b6104fd565b005b6101a2600480360381019061019d9190612fc6565b610f96565b6040516101af9190613319565b60405180910390f35b6101d260048036038101906101cd9190612d4c565b611246565b6040516101df919061343f565b60405180910390f35b61020260048036038101906101fd9190612e86565b61131c565b604051610210929190613414565b60405180910390f35b610233600480360381019061022e9190612df9565b6115e8565b005b61024f600480360381019061024a9190612df9565b611bc5565b005b6102596121a1565b005b6102636121b5565b6040516102709190613267565b60405180910390f35b6102816121db565b60405161028e9190613267565b60405180910390f35b61029f612204565b6040516102ac919061343f565b60405180910390f35b6102cf60048036038101906102ca9190612f6c565b61220a565b6040516102dd9291906132f0565b60405180910390f35b61030060048036038101906102fb9190612d4c565b61225e565b005b61031c60048036038101906103179190612db9565b6122aa565b005b61033860048036038101906103339190612d4c565b6123a8565b005b610354600480360381019061034f9190612e86565b6123f4565b60405161036c9c9b9a9998979695949392919061345a565b60405180910390f35b61038f600480360381019061038a9190612d79565b6124f8565b60405161039c919061343f565b60405180910390f35b6103bf60048036038101906103ba9190612d4c565b612568565b005b6103db60048036038101906103d69190612ed9565b6125b4565b6040516103e8919061343f565b60405180910390f35b61040b60048036038101906104069190612d4c565b612624565b005b61042760048036038101906104229190612e86565b6126a8565b60405161043e9b9a99989796959493929190613514565b60405180910390f35b600080600090505b6006805490508110156104f2578273ffffffffffffffffffffffffffffffffffffffff16600682815481106104875761048661379d565b5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156104df5760019150506104f8565b80806104ea906136c7565b91505061044f565b50600090505b919050565b81838261050b838383610f96565b61054a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054190613334565b60405180910390fd5b8361055481610447565b610593576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058a90613374565b60405180910390fd5b6000600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008960018111156105e9576105e861373f565b5b8152602001908152602001600020905060008180549050905061060a61291c565b600080600090505b83811015610824578a85828154811061062e5761062d61379d565b5b90600052602060002090600a02016000015414156108115780915084818154811061065c5761065b61379d565b5b90600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff1660018111156106a5576106a461373f565b5b60018111156106b7576106b661373f565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff1615151515815250509250610824565b808061081c906136c7565b915050610612565b50600a60009054906101000a900460ff1615610a4557816040015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a3906133b4565b60405180910390fd5b600060018111156108c0576108bf61373f565b5b8b60018111156108d3576108d261373f565b5b141561097a57600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346a8f820338460a001518560c0015160006040518563ffffffff1660e01b815260040161094394939291906132ab565b600060405180830381600087803b15801561095d57600080fd5b505af1158015610971573d6000803e3d6000fd5b50505050610a44565b60018081111561098d5761098c61373f565b5b8b60018111156109a05761099f61373f565b5b1415610a4357600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346a8f820338460600151856080015160006040518563ffffffff1660e01b8152600401610a1094939291906132ab565b600060405180830381600087803b158015610a2a57600080fd5b505af1158015610a3e573d6000803e3d6000fd5b505050505b5b5b60008190505b600184610a589190613626565b811015610ca55784610a746001836127a690919063ffffffff16565b81548110610a8557610a8461379d565b5b90600052602060002090600a0201858281548110610aa657610aa561379d565b5b90600052602060002090600a0201600082015481600001556001820160009054906101000a900460ff168160010160006101000a81548160ff02191690836001811115610af657610af561373f565b5b02179055506001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600382015481600301556004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600582015481600501556006820154816006015560078201548160070155600882015481600801556009820160009054906101000a900460ff168160090160006101000a81548160ff0219169083151502179055509050508080610c9d906136c7565b915050610a4b565b5083610cbb6001856127bc90919063ffffffff16565b81548110610ccc57610ccb61379d565b5b90600052602060002090600a02016000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600090556006820160009055600782016000905560088201600090556009820160006101000a81549060ff0219169055505083805480610dbb57610dba61376e565b5b60019003818190600052602060002090600a02016000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600090556006820160009055600782016000905560088201600090556009820160006101000a81549060ff02191690555050905583600760008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008d6001811115610ef657610ef561373f565b5b8152602001908152602001600020908054610f129291906129cc565b507fa1cc643491754200d3eca5769e524a0fd00f9b0862b18d0da7d6e7277a83dfda8a83602001518460400151856060015186608001518760a001518860c001518960e001518a61010001518b61012001518c6101400151604051610f819b9a99989796959493929190613514565b60405180910390a15050505050505050505050565b600080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000856001811115610fed57610fec61373f565b5b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156111e257838290600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff16600181111561106e5761106d61373f565b5b60018111156110805761107f61373f565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff1615151515815250508152602001906001019061101b565b50505050905060005b815181101561123857858282815181106112085761120761379d565b5b60200260200101516000015114156112255760019250505061123f565b8080611230906136c7565b9150506111eb565b5060009150505b9392505050565b600080600090505b600680549050811015611315578273ffffffffffffffffffffffffffffffffffffffff16600682815481106112865761128561379d565b5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561130257600681815481106112e8576112e761379d565b5b906000526020600020906002020160010154915050611317565b808061130d906136c7565b91505061124e565b505b919050565b61132461291c565b600080600090506000600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561156457838290600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff1660018111156113f0576113ef61373f565b5b60018111156114025761140161373f565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff1615151515815250508152602001906001019061139d565b50505050905061157261291c565b5b81518310156115d757858284815181106115905761158f61379d565b5b60200260200101516000015114156115c4578183815181106115b5576115b461379d565b5b602002602001015190506115d7565b82806115cf906136c7565b935050611573565b808394509450505050935093915050565b856115f281610447565b611631576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162890613374565b60405180910390fd5b8461163b81610447565b61167a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167190613374565b60405180910390fd5b846117e6600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634fc121db338a6040518363ffffffff1660e01b81526004016116db929190613282565b60206040518083038186803b1580156116f357600080fd5b505afa158015611707573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061172b9190612f99565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7888aec8a336040518363ffffffff1660e01b8152600401611788929190613282565b60206040518083038186803b1580156117a057600080fd5b505afa1580156117b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117d89190612f99565b6127bc90919063ffffffff16565b1015611827576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161181e90613394565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346a8f82033888860016040518563ffffffff1660e01b815260040161188994939291906132ab565b600060405180830381600087803b1580156118a357600080fd5b505af11580156118b7573d6000803e3d6000fd5b50505050600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080600181111561190f5761190e61373f565b5b81526020019081526020016000206040518061016001604052806009548152602001600060018111156119455761194461373f565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018a73ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018873ffffffffffffffffffffffffffffffffffffffff16815260200187815260200186815260200189815260200187815260200185151581525090806001815401808255809150506001900390600052602060002090600a02016000909190919091506000820151816000015560208201518160010160006101000a81548160ff02191690836001811115611a2057611a1f61373f565b5b021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816003015560a08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816005015560e08201518160060155610100820151816007015561012082015181600801556101408201518160090160006101000a81548160ff02191690831515021790555050507fcb2df66a1a7db52683240584eca4355946d7b80a59dcb7707aa8dd95463ed7446009546000338b8b8b8b8b8f8e8d604051611b979b9a99989796959493929190613514565b60405180910390a1611bb560016009546127a690919063ffffffff16565b6009819055505050505050505050565b85611bcf81610447565b611c0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c0590613374565b60405180910390fd5b84611c1881610447565b611c57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c4e90613374565b60405180910390fd5b86611dc3600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634fc121db338c6040518363ffffffff1660e01b8152600401611cb8929190613282565b60206040518083038186803b158015611cd057600080fd5b505afa158015611ce4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d089190612f99565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7888aec8c336040518363ffffffff1660e01b8152600401611d65929190613282565b60206040518083038186803b158015611d7d57600080fd5b505afa158015611d91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611db59190612f99565b6127bc90919063ffffffff16565b1015611e04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dfb90613394565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346a8f820338a8a60016040518563ffffffff1660e01b8152600401611e6694939291906132ab565b600060405180830381600087803b158015611e8057600080fd5b505af1158015611e94573d6000803e3d6000fd5b50505050600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600180811115611eec57611eeb61373f565b5b81526020019081526020016000206040518061016001604052806009548152602001600180811115611f2157611f2061373f565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018a73ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018873ffffffffffffffffffffffffffffffffffffffff16815260200187815260200186815260200189815260200187815260200185151581525090806001815401808255809150506001900390600052602060002090600a02016000909190919091506000820151816000015560208201518160010160006101000a81548160ff02191690836001811115611ffc57611ffb61373f565b5b021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816003015560a08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816005015560e08201518160060155610100820151816007015561012082015181600801556101408201518160090160006101000a81548160ff02191690831515021790555050507fcb2df66a1a7db52683240584eca4355946d7b80a59dcb7707aa8dd95463ed7446009546001338b8b8b8b8b8f8e8d6040516121739b9a99989796959493929190613514565b60405180910390a161219160016009546127a690919063ffffffff16565b6009819055505050505050505050565b6121a96127d2565b6121b36000612850565b565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60095481565b6006818154811061221a57600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b6122666127d2565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6122b26127d2565b6122bb82610447565b156122fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122f2906133d4565b60405180910390fd5b600660405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505050565b6123b06127d2565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6008602052826000526040600020602052816000526040600020818154811061241c57600080fd5b90600052602060002090600b020160009250925050508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050154908060060154908060070154908060080154908060090160009054906101000a900460ff169080600a015490508c565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083600181111561254e5761254d61373f565b5b815260200190815260200160002080549050905092915050565b6125706127d2565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084600181111561260a5761260961373f565b5b815260200190815260200160002080549050905092915050565b61262c6127d2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561269c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161269390613354565b60405180910390fd5b6126a581612850565b50565b600760205282600052604060002060205281600052604060002081815481106126d057600080fd5b90600052602060002090600a020160009250925050508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060154908060070154908060080154908060090160009054906101000a900460ff1690508b565b600081836127b491906135d0565b905092915050565b600081836127ca9190613626565b905092915050565b6127da612914565b73ffffffffffffffffffffffffffffffffffffffff166127f86121db565b73ffffffffffffffffffffffffffffffffffffffff161461284e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612845906133f4565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60405180610160016040528060008152602001600060018111156129435761294261373f565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000151581525090565b82805482825590600052602060002090600a028101928215612bee57600052602060002091600a0282015b82811115612bed578282600082015481600001556001820160009054906101000a900460ff168160010160006101000a81548160ff02191690836001811115612a4357612a4261373f565b5b02179055506001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600382015481600301556004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600582015481600501556006820154816006015560078201548160070155600882015481600801556009820160009054906101000a900460ff168160090160006101000a81548160ff021916908315150217905550505091600a019190600a01906129f7565b5b509050612bfb9190612bff565b5090565b5b80821115612cdf576000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600090556006820160009055600782016000905560088201600090556009820160006101000a81549060ff021916905550600a01612c00565b5090565b600081359050612cf28161392a565b92915050565b600081359050612d0781613941565b92915050565b600081359050612d1c81613958565b92915050565b600081359050612d3181613968565b92915050565b600081519050612d4681613968565b92915050565b600060208284031215612d6257612d616137cc565b5b6000612d7084828501612ce3565b91505092915050565b60008060408385031215612d9057612d8f6137cc565b5b6000612d9e85828601612ce3565b9250506020612daf85828601612d0d565b9150509250929050565b60008060408385031215612dd057612dcf6137cc565b5b6000612dde85828601612ce3565b9250506020612def85828601612d22565b9150509250929050565b60008060008060008060c08789031215612e1657612e156137cc565b5b6000612e2489828a01612ce3565b9650506020612e3589828a01612d22565b9550506040612e4689828a01612ce3565b9450506060612e5789828a01612d22565b9350506080612e6889828a01612d22565b92505060a0612e7989828a01612cf8565b9150509295509295509295565b600080600060608486031215612e9f57612e9e6137cc565b5b6000612ead86828701612ce3565b9350506020612ebe86828701612d22565b9250506040612ecf86828701612d22565b9150509250925092565b60008060408385031215612ef057612eef6137cc565b5b6000612efe85828601612d0d565b9250506020612f0f85828601612ce3565b9150509250929050565b600080600060608486031215612f3257612f316137cc565b5b6000612f4086828701612d0d565b9350506020612f5186828701612d22565b9250506040612f6286828701612ce3565b9150509250925092565b600060208284031215612f8257612f816137cc565b5b6000612f9084828501612d22565b91505092915050565b600060208284031215612faf57612fae6137cc565b5b6000612fbd84828501612d37565b91505092915050565b600080600060608486031215612fdf57612fde6137cc565b5b6000612fed86828701612d22565b9350506020612ffe86828701612d0d565b925050604061300f86828701612ce3565b9150509250925092565b6130228161365a565b82525050565b6130318161365a565b82525050565b6130408161366c565b82525050565b61304f8161366c565b82525050565b61305e816136b5565b82525050565b61306d816136b5565b82525050565b60006130806010836135bf565b915061308b826137d1565b602082019050919050565b60006130a36026836135bf565b91506130ae826137fa565b604082019050919050565b60006130c66018836135bf565b91506130d182613849565b602082019050919050565b60006130e96012836135bf565b91506130f482613872565b602082019050919050565b600061310c6009836135bf565b91506131178261389b565b602082019050919050565b600061312f6016836135bf565b915061313a826138c4565b602082019050919050565b60006131526020836135bf565b915061315d826138ed565b602082019050919050565b6101608201600082015161317f6000850182613249565b5060208201516131926020850182613055565b5060408201516131a56040850182613019565b5060608201516131b86060850182613019565b5060808201516131cb6080850182613249565b5060a08201516131de60a0850182613019565b5060c08201516131f160c0850182613249565b5060e082015161320460e0850182613249565b50610100820151613219610100850182613249565b5061012082015161322e610120850182613249565b50610140820151613243610140850182613037565b50505050565b613252816136ab565b82525050565b613261816136ab565b82525050565b600060208201905061327c6000830184613028565b92915050565b60006040820190506132976000830185613028565b6132a46020830184613028565b9392505050565b60006080820190506132c06000830187613028565b6132cd6020830186613028565b6132da6040830185613258565b6132e76060830184613046565b95945050505050565b60006040820190506133056000830185613028565b6133126020830184613258565b9392505050565b600060208201905061332e6000830184613046565b92915050565b6000602082019050818103600083015261334d81613073565b9050919050565b6000602082019050818103600083015261336d81613096565b9050919050565b6000602082019050818103600083015261338d816130b9565b9050919050565b600060208201905081810360008301526133ad816130dc565b9050919050565b600060208201905081810360008301526133cd816130ff565b9050919050565b600060208201905081810360008301526133ed81613122565b9050919050565b6000602082019050818103600083015261340d81613145565b9050919050565b60006101808201905061342a6000830185613168565b613438610160830184613258565b9392505050565b60006020820190506134546000830184613258565b92915050565b600061018082019050613470600083018f613258565b61347d602083018e613064565b61348a604083018d613028565b613497606083018c613028565b6134a4608083018b613028565b6134b160a083018a613258565b6134be60c0830189613258565b6134cb60e0830188613258565b6134d9610100830187613258565b6134e7610120830186613258565b6134f5610140830185613046565b613503610160830184613258565b9d9c50505050505050505050505050565b60006101608201905061352a600083018e613258565b613537602083018d613064565b613544604083018c613028565b613551606083018b613028565b61355e608083018a613258565b61356b60a0830189613028565b61357860c0830188613258565b61358560e0830187613258565b613593610100830186613258565b6135a1610120830185613258565b6135af610140830184613046565b9c9b505050505050505050505050565b600082825260208201905092915050565b60006135db826136ab565b91506135e6836136ab565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561361b5761361a613710565b5b828201905092915050565b6000613631826136ab565b915061363c836136ab565b92508282101561364f5761364e613710565b5b828203905092915050565b60006136658261368b565b9050919050565b60008115159050919050565b600081905061368682613916565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006136c082613678565b9050919050565b60006136d2826136ab565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561370557613704613710565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b7f496e76616c6964204f7264657220494400000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f546f6b656e20756e617661696c61626c6520696e204445580000000000000000600082015250565b7f496e73756666696369656e742046756e64730000000000000000000000000000600082015250565b7f4e6f74204f776e65720000000000000000000000000000000000000000000000600082015250565b7f546f6b656e20616c726561647920766572696669656400000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600281106139275761392661373f565b5b50565b6139338161365a565b811461393e57600080fd5b50565b61394a8161366c565b811461395557600080fd5b50565b6002811061396557600080fd5b50565b613971816136ab565b811461397c57600080fd5b5056fea264697066735822122025b5dd8fe613f60885e17b9788bead27e9c82f3ca9c4635310c8640049dd345264736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C07CE26 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xBD8098EC GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xBD8098EC EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xC3364BE4 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xDAFBFE6A EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0xE947A695 EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0xF9242D9A EQ PUSH2 0x40D JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x9C07CE26 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x9EAD7222 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xAC1A386A EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0xAF81C5B9 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0xB136E39A EQ PUSH2 0x31E JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x62C09CFA GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x62C09CFA EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x6F4E410B EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x7BF1A627 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x279 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x1027B219 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x1347D60E EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x182CFFEB EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x1F69565F EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x609AE6B5 EQ PUSH2 0x1E8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x2D4C JUMP JUMPDEST PUSH2 0x447 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x3319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x186 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x2F19 JUMP JUMPDEST PUSH2 0x4FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x2FC6 JUMP JUMPDEST PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x3319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x2D4C JUMP JUMPDEST PUSH2 0x1246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x343F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x2E86 JUMP JUMPDEST PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP3 SWAP2 SWAP1 PUSH2 0x3414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x2DF9 JUMP JUMPDEST PUSH2 0x15E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x2DF9 JUMP JUMPDEST PUSH2 0x1BC5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x259 PUSH2 0x21A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x263 PUSH2 0x21B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x3267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x281 PUSH2 0x21DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x3267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH2 0x2204 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x343F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x2F6C JUMP JUMPDEST PUSH2 0x220A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DD SWAP3 SWAP2 SWAP1 PUSH2 0x32F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x300 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x2D4C JUMP JUMPDEST PUSH2 0x225E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x2DB9 JUMP JUMPDEST PUSH2 0x22AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x338 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x2D4C JUMP JUMPDEST PUSH2 0x23A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x2E86 JUMP JUMPDEST PUSH2 0x23F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36C SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x345A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x2D79 JUMP JUMPDEST PUSH2 0x24F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x343F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x2D4C JUMP JUMPDEST PUSH2 0x2568 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x2ED9 JUMP JUMPDEST PUSH2 0x25B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0x343F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x2D4C JUMP JUMPDEST PUSH2 0x2624 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x427 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x422 SWAP2 SWAP1 PUSH2 0x2E86 JUMP JUMPDEST PUSH2 0x26A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43E SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3514 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x4F2 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x487 JUMPI PUSH2 0x486 PUSH2 0x379D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4DF JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x4F8 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x4EA SWAP1 PUSH2 0x36C7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x44F JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 DUP3 PUSH2 0x50B DUP4 DUP4 DUP4 PUSH2 0xF96 JUMP JUMPDEST PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x541 SWAP1 PUSH2 0x3334 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH2 0x554 DUP2 PUSH2 0x447 JUMP JUMPDEST PUSH2 0x593 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x3374 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x5E9 JUMPI PUSH2 0x5E8 PUSH2 0x373F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH2 0x60A PUSH2 0x291C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x824 JUMPI DUP11 DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x62E JUMPI PUSH2 0x62D PUSH2 0x379D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x811 JUMPI DUP1 SWAP2 POP DUP5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x65C JUMPI PUSH2 0x65B PUSH2 0x379D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x6A5 JUMPI PUSH2 0x6A4 PUSH2 0x373F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x6B7 JUMPI PUSH2 0x6B6 PUSH2 0x373F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP3 POP PUSH2 0x824 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x81C SWAP1 PUSH2 0x36C7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x612 JUMP JUMPDEST POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA45 JUMPI DUP2 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A3 SWAP1 PUSH2 0x33B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x8C0 JUMPI PUSH2 0x8BF PUSH2 0x373F JUMP JUMPDEST JUMPDEST DUP12 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x8D3 JUMPI PUSH2 0x8D2 PUSH2 0x373F JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x97A JUMPI PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x46A8F820 CALLER DUP5 PUSH1 0xA0 ADD MLOAD DUP6 PUSH1 0xC0 ADD MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x943 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x95D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x971 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xA44 JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x98D JUMPI PUSH2 0x98C PUSH2 0x373F JUMP JUMPDEST JUMPDEST DUP12 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x9A0 JUMPI PUSH2 0x99F PUSH2 0x373F JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0xA43 JUMPI PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x46A8F820 CALLER DUP5 PUSH1 0x60 ADD MLOAD DUP6 PUSH1 0x80 ADD MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA10 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA3E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP JUMPDEST PUSH1 0x1 DUP5 PUSH2 0xA58 SWAP2 SWAP1 PUSH2 0x3626 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xCA5 JUMPI DUP5 PUSH2 0xA74 PUSH1 0x1 DUP4 PUSH2 0x27A6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xA85 JUMPI PUSH2 0xA84 PUSH2 0x379D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAA6 JUMPI PUSH2 0xAA5 PUSH2 0x379D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xAF6 JUMPI PUSH2 0xAF5 PUSH2 0x373F JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP3 ADD SLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 DUP3 ADD SLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0x6 DUP3 ADD SLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0x7 DUP3 ADD SLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH1 0x8 DUP3 ADD SLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 DUP1 PUSH2 0xC9D SWAP1 PUSH2 0x36C7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA4B JUMP JUMPDEST POP DUP4 PUSH2 0xCBB PUSH1 0x1 DUP6 PUSH2 0x27BC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xCCC JUMPI PUSH2 0xCCB PUSH2 0x379D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP DUP4 DUP1 SLOAD DUP1 PUSH2 0xDBB JUMPI PUSH2 0xDBA PUSH2 0x376E JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP SWAP1 SSTORE DUP4 PUSH1 0x7 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xEF6 JUMPI PUSH2 0xEF5 PUSH2 0x373F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 SLOAD PUSH2 0xF12 SWAP3 SWAP2 SWAP1 PUSH2 0x29CC JUMP JUMPDEST POP PUSH32 0xA1CC643491754200D3ECA5769E524A0FD00F9B0862B18D0DA7D6E7277A83DFDA DUP11 DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD DUP7 PUSH1 0x80 ADD MLOAD DUP8 PUSH1 0xA0 ADD MLOAD DUP9 PUSH1 0xC0 ADD MLOAD DUP10 PUSH1 0xE0 ADD MLOAD DUP11 PUSH2 0x100 ADD MLOAD DUP12 PUSH2 0x120 ADD MLOAD DUP13 PUSH2 0x140 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xF81 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3514 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xFED JUMPI PUSH2 0xFEC PUSH2 0x373F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x11E2 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x106E JUMPI PUSH2 0x106D PUSH2 0x373F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1080 JUMPI PUSH2 0x107F PUSH2 0x373F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x101B JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1238 JUMPI DUP6 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1208 JUMPI PUSH2 0x1207 PUSH2 0x379D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x1225 JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x123F JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1230 SWAP1 PUSH2 0x36C7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11EB JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1315 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1286 JUMPI PUSH2 0x1285 PUSH2 0x379D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1302 JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x12E8 JUMPI PUSH2 0x12E7 PUSH2 0x379D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP POP PUSH2 0x1317 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x130D SWAP1 PUSH2 0x36C7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x124E JUMP JUMPDEST POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1324 PUSH2 0x291C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1564 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x13F0 JUMPI PUSH2 0x13EF PUSH2 0x373F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1402 JUMPI PUSH2 0x1401 PUSH2 0x373F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x139D JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH2 0x1572 PUSH2 0x291C JUMP JUMPDEST JUMPDEST DUP2 MLOAD DUP4 LT ISZERO PUSH2 0x15D7 JUMPI DUP6 DUP3 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1590 JUMPI PUSH2 0x158F PUSH2 0x379D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x15C4 JUMPI DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x15B5 JUMPI PUSH2 0x15B4 PUSH2 0x379D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x15D7 JUMP JUMPDEST DUP3 DUP1 PUSH2 0x15CF SWAP1 PUSH2 0x36C7 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x1573 JUMP JUMPDEST DUP1 DUP4 SWAP5 POP SWAP5 POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST DUP6 PUSH2 0x15F2 DUP2 PUSH2 0x447 JUMP JUMPDEST PUSH2 0x1631 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1628 SWAP1 PUSH2 0x3374 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0x163B DUP2 PUSH2 0x447 JUMP JUMPDEST PUSH2 0x167A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1671 SWAP1 PUSH2 0x3374 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0x17E6 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4FC121DB CALLER DUP11 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16DB SWAP3 SWAP2 SWAP1 PUSH2 0x3282 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1707 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x172B SWAP2 SWAP1 PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF7888AEC DUP11 CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1788 SWAP3 SWAP2 SWAP1 PUSH2 0x3282 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17D8 SWAP2 SWAP1 PUSH2 0x2F99 JUMP JUMPDEST PUSH2 0x27BC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x1827 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x181E SWAP1 PUSH2 0x3394 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x46A8F820 CALLER DUP9 DUP9 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1889 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x7 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x190F JUMPI PUSH2 0x190E PUSH2 0x373F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1945 JUMPI PUSH2 0x1944 PUSH2 0x373F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1A20 JUMPI PUSH2 0x1A1F PUSH2 0x373F JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH32 0xCB2DF66A1A7DB52683240584ECA4355946D7B80A59DCB7707AA8DD95463ED744 PUSH1 0x9 SLOAD PUSH1 0x0 CALLER DUP12 DUP12 DUP12 DUP12 DUP12 DUP16 DUP15 DUP14 PUSH1 0x40 MLOAD PUSH2 0x1B97 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3514 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1BB5 PUSH1 0x1 PUSH1 0x9 SLOAD PUSH2 0x27A6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP6 PUSH2 0x1BCF DUP2 PUSH2 0x447 JUMP JUMPDEST PUSH2 0x1C0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C05 SWAP1 PUSH2 0x3374 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0x1C18 DUP2 PUSH2 0x447 JUMP JUMPDEST PUSH2 0x1C57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C4E SWAP1 PUSH2 0x3374 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH2 0x1DC3 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4FC121DB CALLER DUP13 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CB8 SWAP3 SWAP2 SWAP1 PUSH2 0x3282 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CE4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D08 SWAP2 SWAP1 PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF7888AEC DUP13 CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D65 SWAP3 SWAP2 SWAP1 PUSH2 0x3282 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D91 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DB5 SWAP2 SWAP1 PUSH2 0x2F99 JUMP JUMPDEST PUSH2 0x27BC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x1E04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DFB SWAP1 PUSH2 0x3394 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x46A8F820 CALLER DUP11 DUP11 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E66 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E94 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x7 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x1EEC JUMPI PUSH2 0x1EEB PUSH2 0x373F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x1F21 JUMPI PUSH2 0x1F20 PUSH2 0x373F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1FFC JUMPI PUSH2 0x1FFB PUSH2 0x373F JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH32 0xCB2DF66A1A7DB52683240584ECA4355946D7B80A59DCB7707AA8DD95463ED744 PUSH1 0x9 SLOAD PUSH1 0x1 CALLER DUP12 DUP12 DUP12 DUP12 DUP12 DUP16 DUP15 DUP14 PUSH1 0x40 MLOAD PUSH2 0x2173 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3514 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x2191 PUSH1 0x1 PUSH1 0x9 SLOAD PUSH2 0x27A6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x21A9 PUSH2 0x27D2 JUMP JUMPDEST PUSH2 0x21B3 PUSH1 0x0 PUSH2 0x2850 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x221A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x2266 PUSH2 0x27D2 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x22B2 PUSH2 0x27D2 JUMP JUMPDEST PUSH2 0x22BB DUP3 PUSH2 0x447 JUMP JUMPDEST ISZERO PUSH2 0x22FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22F2 SWAP1 PUSH2 0x33D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x23B0 PUSH2 0x27D2 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x241C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xB MUL ADD PUSH1 0x0 SWAP3 POP SWAP3 POP POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0xA ADD SLOAD SWAP1 POP DUP13 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x254E JUMPI PUSH2 0x254D PUSH2 0x373F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2570 PUSH2 0x27D2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x260A JUMPI PUSH2 0x2609 PUSH2 0x373F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x262C PUSH2 0x27D2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x269C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2693 SWAP1 PUSH2 0x3354 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x26A5 DUP2 PUSH2 0x2850 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x26D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 SWAP3 POP SWAP3 POP POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP12 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x27B4 SWAP2 SWAP1 PUSH2 0x35D0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x27CA SWAP2 SWAP1 PUSH2 0x3626 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27DA PUSH2 0x2914 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x27F8 PUSH2 0x21DB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x284E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2845 SWAP1 PUSH2 0x33F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2943 JUMPI PUSH2 0x2942 PUSH2 0x373F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2BEE JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0xA MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2BED JUMPI DUP3 DUP3 PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2A43 JUMPI PUSH2 0x2A42 PUSH2 0x373F JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP3 ADD SLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 DUP3 ADD SLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0x6 DUP3 ADD SLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0x7 DUP3 ADD SLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH1 0x8 DUP3 ADD SLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP SWAP2 PUSH1 0xA ADD SWAP2 SWAP1 PUSH1 0xA ADD SWAP1 PUSH2 0x29F7 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x2BFB SWAP2 SWAP1 PUSH2 0x2BFF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2CDF JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP PUSH1 0xA ADD PUSH2 0x2C00 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CF2 DUP2 PUSH2 0x392A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2D07 DUP2 PUSH2 0x3941 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2D1C DUP2 PUSH2 0x3958 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2D31 DUP2 PUSH2 0x3968 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2D46 DUP2 PUSH2 0x3968 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D62 JUMPI PUSH2 0x2D61 PUSH2 0x37CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D70 DUP5 DUP3 DUP6 ADD PUSH2 0x2CE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D90 JUMPI PUSH2 0x2D8F PUSH2 0x37CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D9E DUP6 DUP3 DUP7 ADD PUSH2 0x2CE3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2DAF DUP6 DUP3 DUP7 ADD PUSH2 0x2D0D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2DD0 JUMPI PUSH2 0x2DCF PUSH2 0x37CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DDE DUP6 DUP3 DUP7 ADD PUSH2 0x2CE3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2DEF DUP6 DUP3 DUP7 ADD PUSH2 0x2D22 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2E16 JUMPI PUSH2 0x2E15 PUSH2 0x37CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E24 DUP10 DUP3 DUP11 ADD PUSH2 0x2CE3 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x2E35 DUP10 DUP3 DUP11 ADD PUSH2 0x2D22 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x2E46 DUP10 DUP3 DUP11 ADD PUSH2 0x2CE3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x2E57 DUP10 DUP3 DUP11 ADD PUSH2 0x2D22 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x2E68 DUP10 DUP3 DUP11 ADD PUSH2 0x2D22 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x2E79 DUP10 DUP3 DUP11 ADD PUSH2 0x2CF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2E9F JUMPI PUSH2 0x2E9E PUSH2 0x37CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2EAD DUP7 DUP3 DUP8 ADD PUSH2 0x2CE3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2EBE DUP7 DUP3 DUP8 ADD PUSH2 0x2D22 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2ECF DUP7 DUP3 DUP8 ADD PUSH2 0x2D22 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2EF0 JUMPI PUSH2 0x2EEF PUSH2 0x37CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2EFE DUP6 DUP3 DUP7 ADD PUSH2 0x2D0D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2F0F DUP6 DUP3 DUP7 ADD PUSH2 0x2CE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2F32 JUMPI PUSH2 0x2F31 PUSH2 0x37CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F40 DUP7 DUP3 DUP8 ADD PUSH2 0x2D0D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2F51 DUP7 DUP3 DUP8 ADD PUSH2 0x2D22 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2F62 DUP7 DUP3 DUP8 ADD PUSH2 0x2CE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F82 JUMPI PUSH2 0x2F81 PUSH2 0x37CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F90 DUP5 DUP3 DUP6 ADD PUSH2 0x2D22 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FAF JUMPI PUSH2 0x2FAE PUSH2 0x37CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FBD DUP5 DUP3 DUP6 ADD PUSH2 0x2D37 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2FDF JUMPI PUSH2 0x2FDE PUSH2 0x37CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FED DUP7 DUP3 DUP8 ADD PUSH2 0x2D22 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2FFE DUP7 DUP3 DUP8 ADD PUSH2 0x2D0D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x300F DUP7 DUP3 DUP8 ADD PUSH2 0x2CE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x3022 DUP2 PUSH2 0x365A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3031 DUP2 PUSH2 0x365A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3040 DUP2 PUSH2 0x366C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x304F DUP2 PUSH2 0x366C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x305E DUP2 PUSH2 0x36B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x306D DUP2 PUSH2 0x36B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3080 PUSH1 0x10 DUP4 PUSH2 0x35BF JUMP JUMPDEST SWAP2 POP PUSH2 0x308B DUP3 PUSH2 0x37D1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30A3 PUSH1 0x26 DUP4 PUSH2 0x35BF JUMP JUMPDEST SWAP2 POP PUSH2 0x30AE DUP3 PUSH2 0x37FA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30C6 PUSH1 0x18 DUP4 PUSH2 0x35BF JUMP JUMPDEST SWAP2 POP PUSH2 0x30D1 DUP3 PUSH2 0x3849 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30E9 PUSH1 0x12 DUP4 PUSH2 0x35BF JUMP JUMPDEST SWAP2 POP PUSH2 0x30F4 DUP3 PUSH2 0x3872 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x310C PUSH1 0x9 DUP4 PUSH2 0x35BF JUMP JUMPDEST SWAP2 POP PUSH2 0x3117 DUP3 PUSH2 0x389B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x312F PUSH1 0x16 DUP4 PUSH2 0x35BF JUMP JUMPDEST SWAP2 POP PUSH2 0x313A DUP3 PUSH2 0x38C4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3152 PUSH1 0x20 DUP4 PUSH2 0x35BF JUMP JUMPDEST SWAP2 POP PUSH2 0x315D DUP3 PUSH2 0x38ED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x160 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x317F PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x3249 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3192 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3055 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x31A5 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3019 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x31B8 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x3019 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x31CB PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x3249 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x31DE PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x3019 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x31F1 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x3249 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x3204 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x3249 JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x3219 PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x3249 JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x322E PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x3249 JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x3243 PUSH2 0x140 DUP6 ADD DUP3 PUSH2 0x3037 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3252 DUP2 PUSH2 0x36AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3261 DUP2 PUSH2 0x36AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x327C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3028 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3297 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3028 JUMP JUMPDEST PUSH2 0x32A4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3028 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x32C0 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3028 JUMP JUMPDEST PUSH2 0x32CD PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3028 JUMP JUMPDEST PUSH2 0x32DA PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3258 JUMP JUMPDEST PUSH2 0x32E7 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3046 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3305 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3028 JUMP JUMPDEST PUSH2 0x3312 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3258 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x332E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3046 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x334D DUP2 PUSH2 0x3073 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x336D DUP2 PUSH2 0x3096 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x338D DUP2 PUSH2 0x30B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33AD DUP2 PUSH2 0x30DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33CD DUP2 PUSH2 0x30FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33ED DUP2 PUSH2 0x3122 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x340D DUP2 PUSH2 0x3145 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 ADD SWAP1 POP PUSH2 0x342A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3168 JUMP JUMPDEST PUSH2 0x3438 PUSH2 0x160 DUP4 ADD DUP5 PUSH2 0x3258 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3454 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3258 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 ADD SWAP1 POP PUSH2 0x3470 PUSH1 0x0 DUP4 ADD DUP16 PUSH2 0x3258 JUMP JUMPDEST PUSH2 0x347D PUSH1 0x20 DUP4 ADD DUP15 PUSH2 0x3064 JUMP JUMPDEST PUSH2 0x348A PUSH1 0x40 DUP4 ADD DUP14 PUSH2 0x3028 JUMP JUMPDEST PUSH2 0x3497 PUSH1 0x60 DUP4 ADD DUP13 PUSH2 0x3028 JUMP JUMPDEST PUSH2 0x34A4 PUSH1 0x80 DUP4 ADD DUP12 PUSH2 0x3028 JUMP JUMPDEST PUSH2 0x34B1 PUSH1 0xA0 DUP4 ADD DUP11 PUSH2 0x3258 JUMP JUMPDEST PUSH2 0x34BE PUSH1 0xC0 DUP4 ADD DUP10 PUSH2 0x3258 JUMP JUMPDEST PUSH2 0x34CB PUSH1 0xE0 DUP4 ADD DUP9 PUSH2 0x3258 JUMP JUMPDEST PUSH2 0x34D9 PUSH2 0x100 DUP4 ADD DUP8 PUSH2 0x3258 JUMP JUMPDEST PUSH2 0x34E7 PUSH2 0x120 DUP4 ADD DUP7 PUSH2 0x3258 JUMP JUMPDEST PUSH2 0x34F5 PUSH2 0x140 DUP4 ADD DUP6 PUSH2 0x3046 JUMP JUMPDEST PUSH2 0x3503 PUSH2 0x160 DUP4 ADD DUP5 PUSH2 0x3258 JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x352A PUSH1 0x0 DUP4 ADD DUP15 PUSH2 0x3258 JUMP JUMPDEST PUSH2 0x3537 PUSH1 0x20 DUP4 ADD DUP14 PUSH2 0x3064 JUMP JUMPDEST PUSH2 0x3544 PUSH1 0x40 DUP4 ADD DUP13 PUSH2 0x3028 JUMP JUMPDEST PUSH2 0x3551 PUSH1 0x60 DUP4 ADD DUP12 PUSH2 0x3028 JUMP JUMPDEST PUSH2 0x355E PUSH1 0x80 DUP4 ADD DUP11 PUSH2 0x3258 JUMP JUMPDEST PUSH2 0x356B PUSH1 0xA0 DUP4 ADD DUP10 PUSH2 0x3028 JUMP JUMPDEST PUSH2 0x3578 PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x3258 JUMP JUMPDEST PUSH2 0x3585 PUSH1 0xE0 DUP4 ADD DUP8 PUSH2 0x3258 JUMP JUMPDEST PUSH2 0x3593 PUSH2 0x100 DUP4 ADD DUP7 PUSH2 0x3258 JUMP JUMPDEST PUSH2 0x35A1 PUSH2 0x120 DUP4 ADD DUP6 PUSH2 0x3258 JUMP JUMPDEST PUSH2 0x35AF PUSH2 0x140 DUP4 ADD DUP5 PUSH2 0x3046 JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35DB DUP3 PUSH2 0x36AB JUMP JUMPDEST SWAP2 POP PUSH2 0x35E6 DUP4 PUSH2 0x36AB JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x361B JUMPI PUSH2 0x361A PUSH2 0x3710 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3631 DUP3 PUSH2 0x36AB JUMP JUMPDEST SWAP2 POP PUSH2 0x363C DUP4 PUSH2 0x36AB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x364F JUMPI PUSH2 0x364E PUSH2 0x3710 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3665 DUP3 PUSH2 0x368B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x3686 DUP3 PUSH2 0x3916 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36C0 DUP3 PUSH2 0x3678 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36D2 DUP3 PUSH2 0x36AB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x3705 JUMPI PUSH2 0x3704 PUSH2 0x3710 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x496E76616C6964204F7264657220494400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E20756E617661696C61626C6520696E204445580000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742046756E64730000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F74204F776E65720000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E20616C726561647920766572696669656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x3927 JUMPI PUSH2 0x3926 PUSH2 0x373F JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x3933 DUP2 PUSH2 0x365A JUMP JUMPDEST DUP2 EQ PUSH2 0x393E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x394A DUP2 PUSH2 0x366C JUMP JUMPDEST DUP2 EQ PUSH2 0x3955 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x3965 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3971 DUP2 PUSH2 0x36AB JUMP JUMPDEST DUP2 EQ PUSH2 0x397C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0xB5 0xDD DUP16 0xE6 SGT 0xF6 ADDMOD DUP6 0xE1 PUSH28 0x9788BEAD27E9C82F3CA9C4635310C8640049DD345264736F6C634300 ADDMOD SMOD STOP CALLER ","sourceMap":"387:22347:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21445:272;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6326:1748;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;20849:376;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;21725:254;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20372:469;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3532:1367;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4907:1411;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101:1;;;:::i;:::-;;611:36:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;972:28:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;699:29;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;21987:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;21233:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;22112:163;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;878:85;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;18910:180;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22283:121;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;17648:173;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;802:67:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;21445:272;21507:4;21575:9;21587:1;21575:13;;21570:117;21594:9;:16;;;;21590:1;:20;21570:117;;;21656:6;21636:26;;:9;21646:1;21636:12;;;;;;;;:::i;:::-;;;;;;;;;;;;:16;;;;;;;;;;;;:26;;;21632:43;;;21671:4;21664:11;;;;;21632:43;21612:3;;;;;:::i;:::-;;;;21570:117;;;;21704:5;21697:12;;21445:272;;;;:::o;6326:1748::-;6439:3;6444:4;6450:6;22525:30;22537:3;22542:4;22548:6;22525:11;:30::i;:::-;22517:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;6469:6:::1;22659:23;22675:6;22659:15;:23::i;:::-;22651:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;6488:23:::2;6514:11;:19;6526:6;6514:19;;;;;;;;;;;;;;;:34;6542:4;6534:13;;;;;;;;:::i;:::-;;6514:34;;;;;;;;;;;6488:60;;6559:12;6574:6;:13;;;;6559:28;;6598:19;;:::i;:::-;6630:13;6659:9:::0;6671:1:::2;6659:13;;6654:190;6678:4;6674:1;:8;6654:190;;;6724:3;6708:6;6715:1;6708:9;;;;;;;;:::i;:::-;;;;;;;;;;;;:12;;;:19;6704:129;;;6756:1;6748:9;;6784:6;6791:1;6784:9;;;;;;;;:::i;:::-;;;;;;;;;;;;6776:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;6812:5;;6704:129;6684:3;;;;;:::i;:::-;;;;6654:190;;;;6901:10;;;;;;;;;;;6897:604;;;6950:5;:10;;;6936:24;;:10;:24;;;6928:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;7031:8;7023:16;;;;;;;;:::i;:::-;;:4;:16;;;;;;;;:::i;:::-;;;7019:471;;;7060:6;;;;;;;;;;;:24;;;7107:10;7140:5;:12;;;7175:5;:13;;;7211:5;7060:175;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;7019:471;;;7269:9;7261:17:::0;::::2;;;;;;;:::i;:::-;;:4;:17;;;;;;;;:::i;:::-;;;7257:233;;;7299:6;;;;;;;;;;;:24;;;7346:10;7379:5;:12;;;7414:5;:13;;;7450:5;7299:175;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;7257:233;7019:471;6897:604;7518:9;7530:5;7518:17;;7513:98;7548:1;7541:4;:8;;;;:::i;:::-;7537:1;:12;7513:98;;;7583:6;7590:8;7596:1;7590;:5;;:8;;;;:::i;:::-;7583:16;;;;;;;;:::i;:::-;;;;;;;;;;;;7571:6;7578:1;7571:9;;;;;;;;:::i;:::-;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7551:3;;;;;:::i;:::-;;;;7513:98;;;;7628:6;7635:11;7644:1;7635:4;:8;;:11;;;;:::i;:::-;7628:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;7621:26:::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7658:6;:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7720:6;7683:11;:19;7695:6;7683:19;;;;;;;;;;;;;;;:34;7711:4;7703:13;;;;;;;;:::i;:::-;;7683:34;;;;;;;;;;;:43;;;;;;;;:::i;:::-;;7744:322;7765:3;7783:5;:10;;;7808:5;:10;;;7833:5;:12;;;7860:5;:13;;;7888:5;:12;;;7915:5;:13;;;7943:5;:10;;;7968:5;:21;;;8004:5;:21;;;8040:5;:15;;;7744:322;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;6477:1597;;;;22587:1:::1;6326:1748:::0;;;;;;:::o;20849:376::-;20965:4;20982:22;21007:11;:19;21019:6;21007:19;;;;;;;;;;;;;;;:34;21035:4;21027:13;;;;;;;;:::i;:::-;;21007:34;;;;;;;;;;;20982:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21059:9;21054:141;21078:6;:13;21074:1;:17;21054:141;;;21133:3;21117:6;21124:1;21117:9;;;;;;;;:::i;:::-;;;;;;;;:12;;;:19;21113:71;;;21164:4;21157:11;;;;;;21113:71;21093:3;;;;;:::i;:::-;;;;21054:141;;;;21212:5;21205:12;;;20849:376;;;;;;:::o;21725:254::-;21784:7;21809:9;21821:1;21809:13;;21804:168;21828:9;:16;;;;21824:1;:20;21804:168;;;21890:6;21870:26;;:9;21880:1;21870:12;;;;;;;;:::i;:::-;;;;;;;;;;;;:16;;;;;;;;;;;;:26;;;21866:95;;;21924:9;21934:1;21924:12;;;;;;;;:::i;:::-;;;;;;;;;;;;:21;;;21917:28;;;;;21866:95;21846:3;;;;;:::i;:::-;;;;21804:168;;;;21725:254;;;;:::o;20372:469::-;20497:13;;:::i;:::-;20512:7;20532:9;20544:1;20532:13;;20556:22;20581:11;:19;20593:6;20581:19;;;;;;;;;;;;;;;:25;20601:4;20581:25;;;;;;;;;;;20556:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20617:19;;:::i;:::-;20647:159;20659:6;:13;20655:1;:17;20647:159;;;20714:3;20698:6;20705:1;20698:9;;;;;;;;:::i;:::-;;;;;;;;:12;;;:19;20694:101;;;20746:6;20753:1;20746:9;;;;;;;;:::i;:::-;;;;;;;;20738:17;;20774:5;;20694:101;20674:3;;;;;:::i;:::-;;;;20647:159;;;20824:5;20831:1;20816:17;;;;;;;20372:469;;;;;;:::o;3532:1367::-;3770:7;22659:23;22675:6;22659:15;:23::i;:::-;22651:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;3790:7:::1;22659:23;22675:6;22659:15;:23::i;:::-;22651:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;4034:8:::2;3913:117;3973:6;;;;;;;;;;;:21;;;3995:10;4007:7;3973:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3913:6;;;;;;;;;;;:16;;;3930:7;3939:10;3913:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;:117;;;;:::i;:::-;:129;;3891:197;;;;;;;;;;;;:::i;:::-;;;;;;;;;4101:6;;;;;;;;;;;:24;;;4126:10;4138:7;4147:8;4157:4;4101:61;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;4175:11;:20;4187:7;4175:20;;;;;;;;;;;;;;;:39;4204:8:::0;4196:17:::2;;;;;;;;:::i;:::-;;4175:39;;;;;;;;;;;4234:318;;;;;;;;4259:9;;4234:318;;;;4287:8;4234:318;;;;;;;;:::i;:::-;;;;;;4314:10;4234:318;;;;;;4343:7;4234:318;;;;;;4369:8;4234:318;;;;4396:7;4234:318;;;;;;4422:8;4234:318;;;;4449:5;4234:318;;;;4473:8;4234:318;;;;4500:8;4234:318;;;;4527:10;4234:318;;;;::::0;4175:388:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4581:269;4601:9;;4625:8;4648:10;4673:7;4695:8;4718:7;4740:8;4763:5;4783:8;4806;4829:10;4581:269;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;4875:16;4889:1;4875:9;;:13;;:16;;;;:::i;:::-;4863:9;:28;;;;22722:1:::1;3532:1367:::0;;;;;;;:::o;4907:1411::-;5120:7;22659:23;22675:6;22659:15;:23::i;:::-;22651:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5140:7:::1;22659:23;22675:6;22659:15;:23::i;:::-;22651:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5401:8:::2;5280:117;5340:6;;;;;;;;;;;:21;;;5362:10;5374:7;5340:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5280:6;;;;;;;;;;;:16;;;5297:7;5306:10;5280:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;:117;;;;:::i;:::-;:129;;5258:197;;;;;;;;;;;;:::i;:::-;;;;;;;;;5517:6;;;;;;;;;;;:24;;;5542:10;5554:7;5563:8;5573:4;5517:61;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;5591:11;:20;5603:7;5591:20;;;;;;;;;;;;;;;:40;5620:9;5612:18:::0;::::2;;;;;;;:::i;:::-;;5591:40;;;;;;;;;;;5651:319;;;;;;;;5676:9;;5651:319;;;;5704:9;5651:319:::0;::::2;;;;;;;:::i;:::-;;;;;;5732:10;5651:319;;;;;;5761:7;5651:319;;;;;;5787:8;5651:319;;;;5814:7;5651:319;;;;;;5840:8;5651:319;;;;5867:5;5651:319;;;;5891:8;5651:319;;;;5918:8;5651:319;;;;5945:10;5651:319;;;;::::0;5591:390:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5999:270;6019:9;;6043;6067:10;6092:7;6114:8;6137:7;6159:8;6182:5;6202:8;6225;6248:10;5999:270;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;6294:16;6308:1;6294:9;;:13;;:16;;;;:::i;:::-;6282:9;:28;;;;22722:1:::1;4907:1411:::0;;;;;;;:::o;1831:101:1:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;611:36:4:-;;;;;;;;;;;;;:::o;1201:85:1:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;972:28:4:-;;;;:::o;699:29::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;21987:117::-;1094:13:1;:11;:13::i;:::-;22081:14:4::1;22065:6;;:31;;;;;;;;;;;;;;;;;;21987:117:::0;:::o;21233:204::-;1094:13:1;:11;:13::i;:::-;21323:23:4::1;21339:6;21323:15;:23::i;:::-;21322:24;21314:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;21384:9;21399:29;;;;;;;;21410:6;21399:29;;;;;;21418:9;21399:29;;::::0;21384:45:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21233:204:::0;;:::o;22112:163::-;1094:13:1;:11;:13::i;:::-;22246:20:4::1;22218:12;;:49;;;;;;;;;;;;;;;;;;22112:163:::0;:::o;878:85::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;18910:180::-;19012:7;19039:14;:21;19054:5;19039:21;;;;;;;;;;;;;;;:36;19069:4;19061:13;;;;;;;;:::i;:::-;;19039:36;;;;;;;;;;;:43;;;;19032:50;;18910:180;;;;:::o;22283:121::-;1094:13:1;:11;:13::i;:::-;22383:12:4::1;22357:11;;:39;;;;;;;;;;;;;;;;;;22283:121:::0;:::o;17648:173::-;17745:7;17772:11;:19;17784:6;17772:19;;;;;;;;;;;;;;;:34;17800:4;17792:13;;;;;;;;:::i;:::-;;17772:34;;;;;;;;;;;:41;;;;17765:48;;17648:173;;;;:::o;2081:198:1:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;802:67:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2755:96:3:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3122:::-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;1359:130:1:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:9:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:133::-;195:5;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;152:133;;;;:::o;291:155::-;345:5;383:6;370:20;361:29;;399:41;434:5;399:41;:::i;:::-;291:155;;;;:::o;452:139::-;498:5;536:6;523:20;514:29;;552:33;579:5;552:33;:::i;:::-;452:139;;;;:::o;597:143::-;654:5;685:6;679:13;670:22;;701:33;728:5;701:33;:::i;:::-;597:143;;;;:::o;746:329::-;805:6;854:2;842:9;833:7;829:23;825:32;822:119;;;860:79;;:::i;:::-;822:119;980:1;1005:53;1050:7;1041:6;1030:9;1026:22;1005:53;:::i;:::-;995:63;;951:117;746:329;;;;:::o;1081:490::-;1157:6;1165;1214:2;1202:9;1193:7;1189:23;1185:32;1182:119;;;1220:79;;:::i;:::-;1182:119;1340:1;1365:53;1410:7;1401:6;1390:9;1386:22;1365:53;:::i;:::-;1355:63;;1311:117;1467:2;1493:61;1546:7;1537:6;1526:9;1522:22;1493:61;:::i;:::-;1483:71;;1438:126;1081:490;;;;;:::o;1577:474::-;1645:6;1653;1702:2;1690:9;1681:7;1677:23;1673:32;1670:119;;;1708:79;;:::i;:::-;1670:119;1828:1;1853:53;1898:7;1889:6;1878:9;1874:22;1853:53;:::i;:::-;1843:63;;1799:117;1955:2;1981:53;2026:7;2017:6;2006:9;2002:22;1981:53;:::i;:::-;1971:63;;1926:118;1577:474;;;;;:::o;2057:1051::-;2158:6;2166;2174;2182;2190;2198;2247:3;2235:9;2226:7;2222:23;2218:33;2215:120;;;2254:79;;:::i;:::-;2215:120;2374:1;2399:53;2444:7;2435:6;2424:9;2420:22;2399:53;:::i;:::-;2389:63;;2345:117;2501:2;2527:53;2572:7;2563:6;2552:9;2548:22;2527:53;:::i;:::-;2517:63;;2472:118;2629:2;2655:53;2700:7;2691:6;2680:9;2676:22;2655:53;:::i;:::-;2645:63;;2600:118;2757:2;2783:53;2828:7;2819:6;2808:9;2804:22;2783:53;:::i;:::-;2773:63;;2728:118;2885:3;2912:53;2957:7;2948:6;2937:9;2933:22;2912:53;:::i;:::-;2902:63;;2856:119;3014:3;3041:50;3083:7;3074:6;3063:9;3059:22;3041:50;:::i;:::-;3031:60;;2985:116;2057:1051;;;;;;;;:::o;3114:619::-;3191:6;3199;3207;3256:2;3244:9;3235:7;3231:23;3227:32;3224:119;;;3262:79;;:::i;:::-;3224:119;3382:1;3407:53;3452:7;3443:6;3432:9;3428:22;3407:53;:::i;:::-;3397:63;;3353:117;3509:2;3535:53;3580:7;3571:6;3560:9;3556:22;3535:53;:::i;:::-;3525:63;;3480:118;3637:2;3663:53;3708:7;3699:6;3688:9;3684:22;3663:53;:::i;:::-;3653:63;;3608:118;3114:619;;;;;:::o;3739:490::-;3815:6;3823;3872:2;3860:9;3851:7;3847:23;3843:32;3840:119;;;3878:79;;:::i;:::-;3840:119;3998:1;4023:61;4076:7;4067:6;4056:9;4052:22;4023:61;:::i;:::-;4013:71;;3969:125;4133:2;4159:53;4204:7;4195:6;4184:9;4180:22;4159:53;:::i;:::-;4149:63;;4104:118;3739:490;;;;;:::o;4235:635::-;4320:6;4328;4336;4385:2;4373:9;4364:7;4360:23;4356:32;4353:119;;;4391:79;;:::i;:::-;4353:119;4511:1;4536:61;4589:7;4580:6;4569:9;4565:22;4536:61;:::i;:::-;4526:71;;4482:125;4646:2;4672:53;4717:7;4708:6;4697:9;4693:22;4672:53;:::i;:::-;4662:63;;4617:118;4774:2;4800:53;4845:7;4836:6;4825:9;4821:22;4800:53;:::i;:::-;4790:63;;4745:118;4235:635;;;;;:::o;4876:329::-;4935:6;4984:2;4972:9;4963:7;4959:23;4955:32;4952:119;;;4990:79;;:::i;:::-;4952:119;5110:1;5135:53;5180:7;5171:6;5160:9;5156:22;5135:53;:::i;:::-;5125:63;;5081:117;4876:329;;;;:::o;5211:351::-;5281:6;5330:2;5318:9;5309:7;5305:23;5301:32;5298:119;;;5336:79;;:::i;:::-;5298:119;5456:1;5481:64;5537:7;5528:6;5517:9;5513:22;5481:64;:::i;:::-;5471:74;;5427:128;5211:351;;;;:::o;5568:635::-;5653:6;5661;5669;5718:2;5706:9;5697:7;5693:23;5689:32;5686:119;;;5724:79;;:::i;:::-;5686:119;5844:1;5869:53;5914:7;5905:6;5894:9;5890:22;5869:53;:::i;:::-;5859:63;;5815:117;5971:2;5997:61;6050:7;6041:6;6030:9;6026:22;5997:61;:::i;:::-;5987:71;;5942:126;6107:2;6133:53;6178:7;6169:6;6158:9;6154:22;6133:53;:::i;:::-;6123:63;;6078:118;5568:635;;;;;:::o;6209:108::-;6286:24;6304:5;6286:24;:::i;:::-;6281:3;6274:37;6209:108;;:::o;6323:118::-;6410:24;6428:5;6410:24;:::i;:::-;6405:3;6398:37;6323:118;;:::o;6447:99::-;6518:21;6533:5;6518:21;:::i;:::-;6513:3;6506:34;6447:99;;:::o;6552:109::-;6633:21;6648:5;6633:21;:::i;:::-;6628:3;6621:34;6552:109;;:::o;6667:133::-;6750:43;6787:5;6750:43;:::i;:::-;6745:3;6738:56;6667:133;;:::o;6806:143::-;6899:43;6936:5;6899:43;:::i;:::-;6894:3;6887:56;6806:143;;:::o;6955:366::-;7097:3;7118:67;7182:2;7177:3;7118:67;:::i;:::-;7111:74;;7194:93;7283:3;7194:93;:::i;:::-;7312:2;7307:3;7303:12;7296:19;;6955:366;;;:::o;7327:::-;7469:3;7490:67;7554:2;7549:3;7490:67;:::i;:::-;7483:74;;7566:93;7655:3;7566:93;:::i;:::-;7684:2;7679:3;7675:12;7668:19;;7327:366;;;:::o;7699:::-;7841:3;7862:67;7926:2;7921:3;7862:67;:::i;:::-;7855:74;;7938:93;8027:3;7938:93;:::i;:::-;8056:2;8051:3;8047:12;8040:19;;7699:366;;;:::o;8071:::-;8213:3;8234:67;8298:2;8293:3;8234:67;:::i;:::-;8227:74;;8310:93;8399:3;8310:93;:::i;:::-;8428:2;8423:3;8419:12;8412:19;;8071:366;;;:::o;8443:365::-;8585:3;8606:66;8670:1;8665:3;8606:66;:::i;:::-;8599:73;;8681:93;8770:3;8681:93;:::i;:::-;8799:2;8794:3;8790:12;8783:19;;8443:365;;;:::o;8814:366::-;8956:3;8977:67;9041:2;9036:3;8977:67;:::i;:::-;8970:74;;9053:93;9142:3;9053:93;:::i;:::-;9171:2;9166:3;9162:12;9155:19;;8814:366;;;:::o;9186:::-;9328:3;9349:67;9413:2;9408:3;9349:67;:::i;:::-;9342:74;;9425:93;9514:3;9425:93;:::i;:::-;9543:2;9538:3;9534:12;9527:19;;9186:366;;;:::o;9614:2118::-;9757:6;9752:3;9748:16;9844:4;9837:5;9833:16;9827:23;9863:63;9920:4;9915:3;9911:14;9897:12;9863:63;:::i;:::-;9774:162;10018:4;10011:5;10007:16;10001:23;10037:69;10100:4;10095:3;10091:14;10077:12;10037:69;:::i;:::-;9946:170;10198:4;10191:5;10187:16;10181:23;10217:63;10274:4;10269:3;10265:14;10251:12;10217:63;:::i;:::-;10126:164;10374:4;10367:5;10363:16;10357:23;10393:63;10450:4;10445:3;10441:14;10427:12;10393:63;:::i;:::-;10300:166;10551:4;10544:5;10540:16;10534:23;10570:63;10627:4;10622:3;10618:14;10604:12;10570:63;:::i;:::-;10476:167;10727:4;10720:5;10716:16;10710:23;10746:63;10803:4;10798:3;10794:14;10780:12;10746:63;:::i;:::-;10653:166;10904:4;10897:5;10893:16;10887:23;10923:63;10980:4;10975:3;10971:14;10957:12;10923:63;:::i;:::-;10829:167;11078:4;11071:5;11067:16;11061:23;11097:63;11154:4;11149:3;11145:14;11131:12;11097:63;:::i;:::-;11006:164;11263:6;11256:5;11252:18;11246:25;11284:65;11341:6;11336:3;11332:16;11318:12;11284:65;:::i;:::-;11180:179;11452:6;11445:5;11441:18;11435:25;11473:65;11530:6;11525:3;11521:16;11507:12;11473:65;:::i;:::-;11369:179;11635:6;11628:5;11624:18;11618:25;11656:59;11707:6;11702:3;11698:16;11684:12;11656:59;:::i;:::-;11558:167;9726:2006;9614:2118;;:::o;11738:108::-;11815:24;11833:5;11815:24;:::i;:::-;11810:3;11803:37;11738:108;;:::o;11852:118::-;11939:24;11957:5;11939:24;:::i;:::-;11934:3;11927:37;11852:118;;:::o;11976:222::-;12069:4;12107:2;12096:9;12092:18;12084:26;;12120:71;12188:1;12177:9;12173:17;12164:6;12120:71;:::i;:::-;11976:222;;;;:::o;12204:332::-;12325:4;12363:2;12352:9;12348:18;12340:26;;12376:71;12444:1;12433:9;12429:17;12420:6;12376:71;:::i;:::-;12457:72;12525:2;12514:9;12510:18;12501:6;12457:72;:::i;:::-;12204:332;;;;;:::o;12542:541::-;12713:4;12751:3;12740:9;12736:19;12728:27;;12765:71;12833:1;12822:9;12818:17;12809:6;12765:71;:::i;:::-;12846:72;12914:2;12903:9;12899:18;12890:6;12846:72;:::i;:::-;12928;12996:2;12985:9;12981:18;12972:6;12928:72;:::i;:::-;13010:66;13072:2;13061:9;13057:18;13048:6;13010:66;:::i;:::-;12542:541;;;;;;;:::o;13089:332::-;13210:4;13248:2;13237:9;13233:18;13225:26;;13261:71;13329:1;13318:9;13314:17;13305:6;13261:71;:::i;:::-;13342:72;13410:2;13399:9;13395:18;13386:6;13342:72;:::i;:::-;13089:332;;;;;:::o;13427:210::-;13514:4;13552:2;13541:9;13537:18;13529:26;;13565:65;13627:1;13616:9;13612:17;13603:6;13565:65;:::i;:::-;13427:210;;;;:::o;13643:419::-;13809:4;13847:2;13836:9;13832:18;13824:26;;13896:9;13890:4;13886:20;13882:1;13871:9;13867:17;13860:47;13924:131;14050:4;13924:131;:::i;:::-;13916:139;;13643:419;;;:::o;14068:::-;14234:4;14272:2;14261:9;14257:18;14249:26;;14321:9;14315:4;14311:20;14307:1;14296:9;14292:17;14285:47;14349:131;14475:4;14349:131;:::i;:::-;14341:139;;14068:419;;;:::o;14493:::-;14659:4;14697:2;14686:9;14682:18;14674:26;;14746:9;14740:4;14736:20;14732:1;14721:9;14717:17;14710:47;14774:131;14900:4;14774:131;:::i;:::-;14766:139;;14493:419;;;:::o;14918:::-;15084:4;15122:2;15111:9;15107:18;15099:26;;15171:9;15165:4;15161:20;15157:1;15146:9;15142:17;15135:47;15199:131;15325:4;15199:131;:::i;:::-;15191:139;;14918:419;;;:::o;15343:::-;15509:4;15547:2;15536:9;15532:18;15524:26;;15596:9;15590:4;15586:20;15582:1;15571:9;15567:17;15560:47;15624:131;15750:4;15624:131;:::i;:::-;15616:139;;15343:419;;;:::o;15768:::-;15934:4;15972:2;15961:9;15957:18;15949:26;;16021:9;16015:4;16011:20;16007:1;15996:9;15992:17;15985:47;16049:131;16175:4;16049:131;:::i;:::-;16041:139;;15768:419;;;:::o;16193:::-;16359:4;16397:2;16386:9;16382:18;16374:26;;16446:9;16440:4;16436:20;16432:1;16421:9;16417:17;16410:47;16474:131;16600:4;16474:131;:::i;:::-;16466:139;;16193:419;;;:::o;16618:426::-;16785:4;16823:3;16812:9;16808:19;16800:27;;16837:117;16951:1;16940:9;16936:17;16927:6;16837:117;:::i;:::-;16964:73;17032:3;17021:9;17017:19;17008:6;16964:73;:::i;:::-;16618:426;;;;;:::o;17050:222::-;17143:4;17181:2;17170:9;17166:18;17158:26;;17194:71;17262:1;17251:9;17247:17;17238:6;17194:71;:::i;:::-;17050:222;;;;:::o;17278:1445::-;17681:4;17719:3;17708:9;17704:19;17696:27;;17733:71;17801:1;17790:9;17786:17;17777:6;17733:71;:::i;:::-;17814:78;17888:2;17877:9;17873:18;17864:6;17814:78;:::i;:::-;17902:72;17970:2;17959:9;17955:18;17946:6;17902:72;:::i;:::-;17984;18052:2;18041:9;18037:18;18028:6;17984:72;:::i;:::-;18066:73;18134:3;18123:9;18119:19;18110:6;18066:73;:::i;:::-;18149;18217:3;18206:9;18202:19;18193:6;18149:73;:::i;:::-;18232;18300:3;18289:9;18285:19;18276:6;18232:73;:::i;:::-;18315;18383:3;18372:9;18368:19;18359:6;18315:73;:::i;:::-;18398;18466:3;18455:9;18451:19;18442:6;18398:73;:::i;:::-;18481;18549:3;18538:9;18534:19;18525:6;18481:73;:::i;:::-;18564:68;18627:3;18616:9;18612:19;18602:7;18564:68;:::i;:::-;18642:74;18711:3;18700:9;18696:19;18686:7;18642:74;:::i;:::-;17278:1445;;;;;;;;;;;;;;;:::o;18729:1332::-;19103:4;19141:3;19130:9;19126:19;19118:27;;19155:71;19223:1;19212:9;19208:17;19199:6;19155:71;:::i;:::-;19236:78;19310:2;19299:9;19295:18;19286:6;19236:78;:::i;:::-;19324:72;19392:2;19381:9;19377:18;19368:6;19324:72;:::i;:::-;19406;19474:2;19463:9;19459:18;19450:6;19406:72;:::i;:::-;19488:73;19556:3;19545:9;19541:19;19532:6;19488:73;:::i;:::-;19571;19639:3;19628:9;19624:19;19615:6;19571:73;:::i;:::-;19654;19722:3;19711:9;19707:19;19698:6;19654:73;:::i;:::-;19737;19805:3;19794:9;19790:19;19781:6;19737:73;:::i;:::-;19820;19888:3;19877:9;19873:19;19864:6;19820:73;:::i;:::-;19903;19971:3;19960:9;19956:19;19947:6;19903:73;:::i;:::-;19986:68;20049:3;20038:9;20034:19;20024:7;19986:68;:::i;:::-;18729:1332;;;;;;;;;;;;;;:::o;20148:169::-;20232:11;20266:6;20261:3;20254:19;20306:4;20301:3;20297:14;20282:29;;20148:169;;;;:::o;20323:305::-;20363:3;20382:20;20400:1;20382:20;:::i;:::-;20377:25;;20416:20;20434:1;20416:20;:::i;:::-;20411:25;;20570:1;20502:66;20498:74;20495:1;20492:81;20489:107;;;20576:18;;:::i;:::-;20489:107;20620:1;20617;20613:9;20606:16;;20323:305;;;;:::o;20634:191::-;20674:4;20694:20;20712:1;20694:20;:::i;:::-;20689:25;;20728:20;20746:1;20728:20;:::i;:::-;20723:25;;20767:1;20764;20761:8;20758:34;;;20772:18;;:::i;:::-;20758:34;20817:1;20814;20810:9;20802:17;;20634:191;;;;:::o;20831:96::-;20868:7;20897:24;20915:5;20897:24;:::i;:::-;20886:35;;20831:96;;;:::o;20933:90::-;20967:7;21010:5;21003:13;20996:21;20985:32;;20933:90;;;:::o;21029:127::-;21074:7;21103:5;21092:16;;21109:41;21144:5;21109:41;:::i;:::-;21029:127;;;:::o;21162:126::-;21199:7;21239:42;21232:5;21228:54;21217:65;;21162:126;;;:::o;21294:77::-;21331:7;21360:5;21349:16;;21294:77;;;:::o;21377:127::-;21433:9;21466:32;21492:5;21466:32;:::i;:::-;21453:45;;21377:127;;;:::o;21510:233::-;21549:3;21572:24;21590:5;21572:24;:::i;:::-;21563:33;;21618:66;21611:5;21608:77;21605:103;;;21688:18;;:::i;:::-;21605:103;21735:1;21728:5;21724:13;21717:20;;21510:233;;;:::o;21749:180::-;21797:77;21794:1;21787:88;21894:4;21891:1;21884:15;21918:4;21915:1;21908:15;21935:180;21983:77;21980:1;21973:88;22080:4;22077:1;22070:15;22104:4;22101:1;22094:15;22121:180;22169:77;22166:1;22159:88;22266:4;22263:1;22256:15;22290:4;22287:1;22280:15;22307:180;22355:77;22352:1;22345:88;22452:4;22449:1;22442:15;22476:4;22473:1;22466:15;22616:117;22725:1;22722;22715:12;22739:166;22879:18;22875:1;22867:6;22863:14;22856:42;22739:166;:::o;22911:225::-;23051:34;23047:1;23039:6;23035:14;23028:58;23120:8;23115:2;23107:6;23103:15;23096:33;22911:225;:::o;23142:174::-;23282:26;23278:1;23270:6;23266:14;23259:50;23142:174;:::o;23322:168::-;23462:20;23458:1;23450:6;23446:14;23439:44;23322:168;:::o;23496:159::-;23636:11;23632:1;23624:6;23620:14;23613:35;23496:159;:::o;23661:172::-;23801:24;23797:1;23789:6;23785:14;23778:48;23661:172;:::o;23839:182::-;23979:34;23975:1;23967:6;23963:14;23956:58;23839:182;:::o;24027:113::-;24108:1;24101:5;24098:12;24088:46;;24114:18;;:::i;:::-;24088:46;24027:113;:::o;24146:122::-;24219:24;24237:5;24219:24;:::i;:::-;24212:5;24209:35;24199:63;;24258:1;24255;24248:12;24199:63;24146:122;:::o;24274:116::-;24344:21;24359:5;24344:21;:::i;:::-;24337:5;24334:32;24324:60;;24380:1;24377;24370:12;24324:60;24274:116;:::o;24396:107::-;24477:1;24470:5;24467:12;24457:40;;24493:1;24490;24483:12;24457:40;24396:107;:::o;24509:122::-;24582:24;24600:5;24582:24;:::i;:::-;24575:5;24572:35;24562:63;;24621:1;24618;24611:12;24562:63;24509:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2954600","executionCost":"infinite","totalCost":"infinite"},"external":{"addToken(address,uint256)":"infinite","cancelOrder(uint8,uint256,address)":"infinite","createLimitBuyOrder(address,uint256,address,uint256,uint256,bool)":"infinite","createLimitSellOrder(address,uint256,address,uint256,uint256,bool)":"infinite","ethToken()":"2603","getFilledOrderLength(address,uint8)":"3127","getOrderFromArray(address,uint256,uint256)":"infinite","getOrderLength(uint8,address)":"3171","getTokenInfo(address)":"infinite","isVerifiedToken(address)":"infinite","orderExists(uint256,uint8,address)":"infinite","owner()":"2633","renounceOwnership()":"30465","s_filledOrders(address,uint256,uint256)":"infinite","s_orderBook(address,uint256,uint256)":"infinite","s_orderId()":"2452","setPriceCheckerAddress(address)":"27097","setTradingFees(address)":"27052","setWalletAddress(address)":"27053","tokenList(uint256)":"infinite","transferOwnership(address)":"30857"},"internal":{"fillBuyOrders(struct Exchange._Order memory,uint256,uint256,bool,uint256)":"infinite","fillOrder(enum Exchange.Side,uint256,address,struct Exchange._fillOrderValues memory)":"infinite","fillSellOrders(struct Exchange._Order memory,uint256,uint256,bool,uint256)":"infinite","matchOrders(address,uint256,enum Exchange.Side)":"infinite"}},"methodIdentifiers":{"addToken(address,uint256)":"af81c5b9","cancelOrder(uint8,uint256,address)":"1347d60e","createLimitBuyOrder(address,uint256,address,uint256,uint256,bool)":"62c09cfa","createLimitSellOrder(address,uint256,address,uint256,uint256,bool)":"6f4e410b","ethToken()":"7bf1a627","getFilledOrderLength(address,uint8)":"c3364be4","getOrderFromArray(address,uint256,uint256)":"609ae6b5","getOrderLength(uint8,address)":"e947a695","getTokenInfo(address)":"1f69565f","isVerifiedToken(address)":"1027b219","orderExists(uint256,uint8,address)":"182cffeb","owner()":"8da5cb5b","renounceOwnership()":"715018a6","s_filledOrders(address,uint256,uint256)":"bd8098ec","s_orderBook(address,uint256,uint256)":"f9242d9a","s_orderId()":"9c07ce26","setPriceCheckerAddress(address)":"b136e39a","setTradingFees(address)":"dafbfe6a","setWalletAddress(address)":"ac1a386a","tokenList(uint256)":"9ead7222","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_fees\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceChecker\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"name\":\"Cancel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"name\":\"Order\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct Exchange._Order\",\"name\":\"remainingOrder\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountBought\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fillBuyRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"feesWaived\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feesPaid\",\"type\":\"uint256\"}],\"name\":\"fillBuyOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct Exchange._Order\",\"name\":\"remainingOrder\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountSold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fillSellRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"feesWaived\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feesPaid\",\"type\":\"uint256\"}],\"name\":\"fillSellOrder\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"cancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_waiveFees\",\"type\":\"bool\"}],\"name\":\"createLimitBuyOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_waiveFees\",\"type\":\"bool\"}],\"name\":\"createLimitSellOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"}],\"name\":\"getFilledOrderLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"side\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getOrderFromArray\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"internalType\":\"struct Exchange._Order\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getOrderLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTokenInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isVerifiedToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"orderExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_filledOrders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountFilled\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fillRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"feesWaived\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"feesPaid\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_orderBook\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_orderId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_PriceCheckeraddress\",\"type\":\"address\"}],\"name\":\"setPriceCheckerAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tradingFees\",\"type\":\"address\"}],\"name\":\"setTradingFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Walletaddress\",\"type\":\"address\"}],\"name\":\"setWalletAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Cancel(uint256,uint8,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)\":{\"notice\":\"Event when an order is cancelled\"},\"Order(uint256,uint8,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)\":{\"notice\":\"Event when an order is placed on an exchange\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Exchange.sol\":\"Exchange\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/Exchange.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./PriceChecker.sol\\\";\\r\\nimport \\\"./TradingFees.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Exchange is Ownable {\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n    PriceChecker priceChecker;\\r\\n    TradingFees tradingFees;\\r\\n    Wallet wallet;\\r\\n\\r\\n    uint256 decimals = 10 ** 18;\\r\\n    address public ethToken = address(0);\\r\\n\\r\\n    //Token Address List available in DEX\\r\\n    _tokenInfo[] public tokenList;\\r\\n\\r\\n    //s_orderBook mappping: tokenAddress -> Side -> Order Array\\r\\n    mapping(address => mapping(uint256 => _Order[])) public s_orderBook;\\r\\n\\r\\n    mapping(address => mapping(uint256 => _filledOrder[]))\\r\\n        public s_filledOrders;\\r\\n\\r\\n    uint256 public s_orderId = 0;\\r\\n    bool private s_isManual = true;\\r\\n\\r\\n    struct _tokenInfo {\\r\\n        address add;\\r\\n        uint256 decimals;\\r\\n    }\\r\\n\\r\\n    struct _fillOrderValues {\\r\\n        uint256 rate;\\r\\n        uint256 amount;\\r\\n    }\\r\\n\\r\\n    //Structs representing an order that has unique id, user and amounts to give and get between two tokens to exchange\\r\\n    struct _Order {\\r\\n        uint256 id;\\r\\n        Side side;\\r\\n        address user;\\r\\n        address tokenA;\\r\\n        uint256 amountA;\\r\\n        address tokenB;\\r\\n        uint256 amountB;\\r\\n        uint256 rate; // TokenB/TokenA = price in terms of TokenB\\r\\n        uint256 originalAmountA;\\r\\n        uint256 originalAmountB;\\r\\n        bool waiveFees;\\r\\n    }\\r\\n\\r\\n    //For any order that is filled even if it is partially filled or fully filled\\r\\n    struct _filledOrder {\\r\\n        uint256 id;\\r\\n        Side side;\\r\\n        address user;\\r\\n        address tokenA;\\r\\n        address tokenB;\\r\\n        uint256 amountFilled;\\r\\n        uint256 fillRate;\\r\\n        uint256 originalRate;\\r\\n        uint256 originalAmountA;\\r\\n        uint256 originalAmountB;\\r\\n        bool feesWaived;\\r\\n        uint256 feesPaid; //in terms of ETH\\r\\n    }\\r\\n\\r\\n    enum Side {\\r\\n        BUY,\\r\\n        SELL\\r\\n    }\\r\\n\\r\\n    //add events\\r\\n    /// @notice Event when an order is placed on an exchange\\r\\n    event Order(\\r\\n        uint256 id,\\r\\n        Side side,\\r\\n        address user,\\r\\n        address tokenA,\\r\\n        uint256 amountA,\\r\\n        address tokenB,\\r\\n        uint256 amountB,\\r\\n        uint256 rate,\\r\\n        uint256 originalAmountA,\\r\\n        uint256 originalAmountB,\\r\\n        bool waiveFees\\r\\n    );\\r\\n\\r\\n    /// @notice Event when an order is cancelled\\r\\n    event Cancel(\\r\\n        uint256 id,\\r\\n        Side side,\\r\\n        address user,\\r\\n        address tokenA,\\r\\n        uint256 amountA,\\r\\n        address tokenB,\\r\\n        uint256 amountB,\\r\\n        uint256 rate,\\r\\n        uint256 originalAmountA,\\r\\n        uint256 originalAmountB,\\r\\n        bool waiveFees\\r\\n    );\\r\\n\\r\\n    event fillBuyOrder(\\r\\n        _Order remainingOrder,\\r\\n        uint256 amountBought,\\r\\n        uint256 fillBuyRate,\\r\\n        bool feesWaived,\\r\\n        uint256 feesPaid\\r\\n    );\\r\\n\\r\\n    event fillSellOrder(\\r\\n        _Order remainingOrder,\\r\\n        uint256 amountSold,\\r\\n        uint256 fillSellRate,\\r\\n        bool feesWaived,\\r\\n        uint256 feesPaid\\r\\n    );\\r\\n\\r\\n    constructor(address _wallet, address _fees, address _priceChecker) {\\r\\n        wallet = Wallet(_wallet);\\r\\n        tradingFees = TradingFees(_fees);\\r\\n        priceChecker = PriceChecker(_priceChecker);\\r\\n    }\\r\\n\\r\\n    function createLimitBuyOrder(\\r\\n        // TokenA/TokenB\\r\\n        address _tokenA,\\r\\n        uint256 _amountA,\\r\\n        address _tokenB,\\r\\n        uint256 _amountB,\\r\\n        uint256 _rate,\\r\\n        bool _waiveFees\\r\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\r\\n        //Amount user has deposited in the DEX must be >= value he wants to buy\\r\\n        require(\\r\\n            wallet.balanceOf(_tokenB, msg.sender).sub(\\r\\n                wallet.getlockedFunds(msg.sender, _tokenB)\\r\\n            ) >= _amountB,\\r\\n            \\\"Insufficient Funds\\\"\\r\\n        );\\r\\n\\r\\n        wallet.updateLockedFunds(msg.sender, _tokenB, _amountB, true);\\r\\n\\r\\n        s_orderBook[_tokenA][uint256(Side.BUY)].push(\\r\\n            _Order(\\r\\n                s_orderId,\\r\\n                Side.BUY,\\r\\n                msg.sender,\\r\\n                _tokenA,\\r\\n                _amountA,\\r\\n                _tokenB,\\r\\n                _amountB,\\r\\n                _rate,\\r\\n                _amountA,\\r\\n                _amountB,\\r\\n                _waiveFees\\r\\n            )\\r\\n        );\\r\\n\\r\\n        emit Order(\\r\\n            s_orderId,\\r\\n            Side.BUY,\\r\\n            msg.sender,\\r\\n            _tokenA,\\r\\n            _amountA,\\r\\n            _tokenB,\\r\\n            _amountB,\\r\\n            _rate,\\r\\n            _amountA,\\r\\n            _amountB,\\r\\n            _waiveFees\\r\\n        );\\r\\n\\r\\n        s_orderId = s_orderId.add(1);\\r\\n    }\\r\\n\\r\\n    function createLimitSellOrder(\\r\\n        address _tokenA,\\r\\n        uint256 _amountA,\\r\\n        address _tokenB,\\r\\n        uint256 _amountB,\\r\\n        uint256 _rate,\\r\\n        bool _waiveFees\\r\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\r\\n        //Amount of tokens user deposit in DEX must be >= the amount of tokens they want to sell\\r\\n        require(\\r\\n            wallet.balanceOf(_tokenA, msg.sender).sub(\\r\\n                wallet.getlockedFunds(msg.sender, _tokenA)\\r\\n            ) >= _amountA,\\r\\n            \\\"Insufficient Funds\\\"\\r\\n        );\\r\\n\\r\\n        //Lock the funds (tokens) in the wallet\\r\\n        wallet.updateLockedFunds(msg.sender, _tokenA, _amountA, true);\\r\\n\\r\\n        s_orderBook[_tokenA][uint256(Side.SELL)].push(\\r\\n            _Order(\\r\\n                s_orderId,\\r\\n                Side.SELL,\\r\\n                msg.sender,\\r\\n                _tokenA,\\r\\n                _amountA,\\r\\n                _tokenB,\\r\\n                _amountB,\\r\\n                _rate,\\r\\n                _amountA,\\r\\n                _amountB,\\r\\n                _waiveFees\\r\\n            )\\r\\n        );\\r\\n\\r\\n        emit Order(\\r\\n            s_orderId,\\r\\n            Side.SELL,\\r\\n            msg.sender,\\r\\n            _tokenA,\\r\\n            _amountA,\\r\\n            _tokenB,\\r\\n            _amountB,\\r\\n            _rate,\\r\\n            _amountA,\\r\\n            _amountB,\\r\\n            _waiveFees\\r\\n        );\\r\\n\\r\\n        s_orderId = s_orderId.add(1);\\r\\n    }\\r\\n\\r\\n    function cancelOrder(\\r\\n        Side side,\\r\\n        uint256 _id,\\r\\n        address _token\\r\\n    ) public validOrder(_id, side, _token) validToken(_token) {\\r\\n        _Order[] storage _order = s_orderBook[_token][uint256(side)];\\r\\n        uint256 size = _order.length;\\r\\n        _Order memory order;\\r\\n\\r\\n        uint256 index;\\r\\n        for (uint256 i = 0; i < size; i++) {\\r\\n            if (_order[i].id == _id) {\\r\\n                index = i;\\r\\n                order = _order[i];\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        //Manual cancellation of orders\\r\\n        if (s_isManual) {\\r\\n            require(msg.sender == order.user, \\\"Not Owner\\\");\\r\\n\\r\\n            //Unlock funds\\r\\n            if (side == Side.BUY) {\\r\\n                wallet.updateLockedFunds(\\r\\n                    msg.sender,\\r\\n                    order.tokenB,\\r\\n                    order.amountB,\\r\\n                    false\\r\\n                );\\r\\n            } else if (side == Side.SELL) {\\r\\n                wallet.updateLockedFunds(\\r\\n                    msg.sender,\\r\\n                    order.tokenA,\\r\\n                    order.amountA,\\r\\n                    false\\r\\n                );\\r\\n            }\\r\\n        }\\r\\n\\r\\n        for (uint256 j = index; j < size - 1; j++) {\\r\\n            _order[j] = _order[j.add(1)];\\r\\n        }\\r\\n        delete _order[size.sub(1)];\\r\\n        _order.pop();\\r\\n\\r\\n        s_orderBook[_token][uint256(side)] = _order;\\r\\n\\r\\n        emit Cancel(\\r\\n            _id,\\r\\n            order.side,\\r\\n            order.user,\\r\\n            order.tokenA,\\r\\n            order.amountA,\\r\\n            order.tokenB,\\r\\n            order.amountB,\\r\\n            order.rate,\\r\\n            order.originalAmountA,\\r\\n            order.originalAmountB,\\r\\n            order.waiveFees\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function fillOrder(\\r\\n        Side side,\\r\\n        uint256 _id,\\r\\n        address _token,\\r\\n        _fillOrderValues memory a\\r\\n    ) internal validOrder(_id, side, _token) validToken(_token) {\\r\\n        uint256 _side = uint256(side);\\r\\n        (_Order memory order, uint256 index) = getOrderFromArray(\\r\\n            _token,\\r\\n            _side,\\r\\n            _id\\r\\n        );\\r\\n\\r\\n        require(order.amountA >= a.amount, \\\"Invalid Order Amount to fill\\\");\\r\\n\\r\\n        order.amountA = order.amountA.sub(a.amount);\\r\\n        order.amountB = order.amountB.sub(\\r\\n            order.rate.mul(a.amount).div(decimals)\\r\\n        );\\r\\n        s_orderBook[_token][_side][index].amountA = order.amountA;\\r\\n        s_orderBook[_token][_side][index].amountB = order.amountB;\\r\\n\\r\\n        uint256 fees = tradingFees.calculateFees(\\r\\n            a.amount,\\r\\n            a.rate,\\r\\n            order.tokenB\\r\\n        ); //fees in terms of USD value 18dp\\r\\n        bool feesWaived = order.waiveFees &&\\r\\n            tradingFees.checkSufficientaDAI(fees, order.user);\\r\\n\\r\\n        if (side == Side.BUY) {\\r\\n            fillBuyOrders(order, a.amount, a.rate, feesWaived, fees);\\r\\n            emit fillBuyOrder(order, a.amount, a.rate, feesWaived, fees);\\r\\n        } else if (side == Side.SELL) {\\r\\n            fillSellOrders(order, a.amount, a.rate, feesWaived, fees);\\r\\n            emit fillSellOrder(order, a.amount, a.rate, feesWaived, fees);\\r\\n        }\\r\\n\\r\\n        if (order.amountA == 0) {\\r\\n            s_isManual = false;\\r\\n            cancelOrder(side, order.id, order.tokenA); //remove filled orders\\r\\n            s_isManual = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function fillBuyOrders(\\r\\n        _Order memory order,\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        bool feesWaived,\\r\\n        uint256 fees\\r\\n    ) internal {\\r\\n        if (feesWaived) {\\r\\n            //Deduct aDAI\\r\\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\\r\\n            wallet.updateBalance(\\r\\n                tradingFees.aDAI(),\\r\\n                order.user,\\r\\n                aDAIToDeduct,\\r\\n                false\\r\\n            );\\r\\n            //Credit Bought tokens\\r\\n            wallet.updateBalance(order.tokenA, order.user, _amount, true);\\r\\n        } else {\\r\\n            uint256 amountTokenToDeduct = tradingFees.amountTokensToDeduct(\\r\\n                order.tokenA,\\r\\n                fees\\r\\n            );\\r\\n            //Credit Bought tokens after minusing fees\\r\\n            wallet.updateBalance(\\r\\n                order.tokenA,\\r\\n                order.user,\\r\\n                _amount.sub(amountTokenToDeduct),\\r\\n                true\\r\\n            );\\r\\n        }\\r\\n\\r\\n        //Original Locked Funds unlocked\\r\\n        wallet.updateLockedFunds(\\r\\n            order.user,\\r\\n            order.tokenB,\\r\\n            (order.rate.mul(_amount)).div(decimals),\\r\\n            false\\r\\n        );\\r\\n\\r\\n        //buyer update\\r\\n        //Buyer balance deducted from what he paid\\r\\n        wallet.updateBalance(\\r\\n            order.tokenB,\\r\\n            order.user,\\r\\n            (_rate.mul(_amount)).div(decimals),\\r\\n            false\\r\\n        );\\r\\n\\r\\n        s_filledOrders[order.user][0].push(\\r\\n            _filledOrder(\\r\\n                order.id,\\r\\n                order.side,\\r\\n                order.user,\\r\\n                order.tokenA,\\r\\n                order.tokenB,\\r\\n                _amount,\\r\\n                _rate,\\r\\n                order.rate,\\r\\n                order.originalAmountA,\\r\\n                order.originalAmountB,\\r\\n                feesWaived,\\r\\n                fees\\r\\n            )\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function fillSellOrders(\\r\\n        _Order memory order,\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        bool feesWaived,\\r\\n        uint256 fees\\r\\n    ) internal {\\r\\n        if (feesWaived) {\\r\\n            //Deduct aDAI\\r\\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\\r\\n            wallet.updateBalance(tradingFees.aDAI(), order.user, aDAIToDeduct, false);\\r\\n            //Credit Earned tokens\\r\\n            wallet.updateBalance(\\r\\n                order.tokenB,\\r\\n                order.user,\\r\\n                (_rate.mul(_amount)).div(decimals),\\r\\n                true\\r\\n            );\\r\\n        } else {\\r\\n            uint256 amountTokensToDeduct = tradingFees.amountTokensToDeduct(\\r\\n                order.tokenB,\\r\\n                fees\\r\\n            );\\r\\n            //Credit Earned tokens after minusing fees\\r\\n            wallet.updateBalance(\\r\\n                order.tokenB,\\r\\n                order.user,\\r\\n                (_rate.mul(_amount)).div(decimals).sub(amountTokensToDeduct),\\r\\n                true\\r\\n            );\\r\\n        }\\r\\n\\r\\n        wallet.updateLockedFunds(order.user, order.tokenA, _amount, false);\\r\\n        //seller update\\r\\n        wallet.updateBalance(order.tokenA, order.user, _amount, false);\\r\\n    }\\r\\n\\r\\n    function matchOrders(\\r\\n        address _token,\\r\\n        uint256 _id,\\r\\n        Side side\\r\\n    ) internal validOrder(_id, side, _token) validToken(_token) {\\r\\n        uint256 saleTokenAmt;\\r\\n\\r\\n        if (side == Side.BUY) {\\r\\n            //Retrieve sell order to match\\r\\n            _Order[] memory _sellOrder = s_orderBook[_token][1];\\r\\n            for (uint256 i = 0; i < _sellOrder.length; i++) {\\r\\n                //Retrieve buy order to be filled\\r\\n                (_Order memory buyOrderToFill, ) = getOrderFromArray(\\r\\n                    _token,\\r\\n                    uint8(side),\\r\\n                    _id\\r\\n                );\\r\\n                //sell order hit buyer's limit price & tokenB matches\\r\\n                if (\\r\\n                    _sellOrder[i].rate <= buyOrderToFill.rate &&\\r\\n                    buyOrderToFill.tokenB == _sellOrder[i].tokenB\\r\\n                ) {\\r\\n                    _Order memory sellOrder = _sellOrder[i];\\r\\n                    //if buyer's amount to buy > seller's amount to sell\\r\\n                    if (buyOrderToFill.amountA > sellOrder.amountA) {\\r\\n                        saleTokenAmt = sellOrder.amountA;\\r\\n                    }\\r\\n                    //if seller's amount to sell >= buyer's amount to buy\\r\\n                    else if (buyOrderToFill.amountA <= sellOrder.amountA) {\\r\\n                        saleTokenAmt = buyOrderToFill.amountA;\\r\\n                    }\\r\\n\\r\\n                    //Verify current balance\\r\\n                    require(\\r\\n                        wallet.balanceOf(\\r\\n                            buyOrderToFill.tokenB,\\r\\n                            buyOrderToFill.user\\r\\n                        ) >= (saleTokenAmt.mul(sellOrder.rate)).div(decimals),\\r\\n                        \\\"Insufficient Buyer Token Balance\\\"\\r\\n                    );\\r\\n                    require(\\r\\n                        wallet.balanceOf(_token, sellOrder.user) >=\\r\\n                            saleTokenAmt,\\r\\n                        \\\"Insufficient Seller Token Balance\\\"\\r\\n                    );\\r\\n\\r\\n                    //update orders\\r\\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\\r\\n                        sellOrder.rate,\\r\\n                        saleTokenAmt\\r\\n                    );\\r\\n                    fillOrder(Side.BUY, _id, _token, fillOrderValues);\\r\\n                    fillOrder(Side.SELL, sellOrder.id, _token, fillOrderValues);\\r\\n                }\\r\\n\\r\\n                bool orderExist = orderExists(_id, side, _token);\\r\\n                if (!orderExist) break;\\r\\n            }\\r\\n        } else if (side == Side.SELL) {\\r\\n            //Retrieve buy order to match\\r\\n            _Order[] memory _buyOrder = s_orderBook[_token][0];\\r\\n            for (uint256 i = 0; i < _buyOrder.length; i++) {\\r\\n                //Retrieve sell order to be filled\\r\\n                (_Order memory sellOrderToFill, ) = getOrderFromArray(\\r\\n                    _token,\\r\\n                    1,\\r\\n                    _id\\r\\n                );\\r\\n                //sell order hit buyer's limit price\\r\\n                if (\\r\\n                    _buyOrder[i].rate >= sellOrderToFill.rate &&\\r\\n                    _buyOrder[i].tokenB == sellOrderToFill.tokenB\\r\\n                ) {\\r\\n                    _Order memory order = _buyOrder[i];\\r\\n\\r\\n                    //if seller's amount to sell > buyer's amount to buy\\r\\n                    if (sellOrderToFill.amountA > order.amountA) {\\r\\n                        saleTokenAmt = order.amountA;\\r\\n                    }\\r\\n                    //if buyer's amount to buy > seller's amount to sell\\r\\n                    else if (sellOrderToFill.amountA <= order.amountA) {\\r\\n                        saleTokenAmt = sellOrderToFill.amountA;\\r\\n                    }\\r\\n                    //Verify current balance\\r\\n                    require(\\r\\n                        wallet.balanceOf(_token, sellOrderToFill.user) >=\\r\\n                            saleTokenAmt,\\r\\n                        \\\"Insufficient Seller Token Balance\\\"\\r\\n                    );\\r\\n                    require(\\r\\n                        wallet.balanceOf(order.tokenB, order.user) >=\\r\\n                            (saleTokenAmt.mul(order.rate)).div(decimals),\\r\\n                        \\\"Insufficient Buyer Token Balance\\\"\\r\\n                    );\\r\\n\\r\\n                    //update orders\\r\\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\\r\\n                        order.rate,\\r\\n                        saleTokenAmt\\r\\n                    );\\r\\n                    fillOrder(Side.SELL, _id, _token, fillOrderValues);\\r\\n                    fillOrder(Side.BUY, order.id, _token, fillOrderValues);\\r\\n                }\\r\\n                bool orderExist = orderExists(_id, side, _token);\\r\\n                if (!orderExist) break;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getOrderLength(\\r\\n        Side side,\\r\\n        address _token\\r\\n    ) public view returns (uint256) {\\r\\n        return s_orderBook[_token][uint256(side)].length;\\r\\n    }\\r\\n\\r\\n    // function getOrder(\\r\\n    //     address _token,\\r\\n    //     uint256 index,\\r\\n    //     Side side\\r\\n    // )\\r\\n    //     public\\r\\n    //     view\\r\\n    //     returns (\\r\\n    //         uint256, //id\\r\\n    //         uint256, //Side\\r\\n    //         address, //user\\r\\n    //         address, //tokenA\\r\\n    //         uint256, //amountA\\r\\n    //         address, //tokenB\\r\\n    //         uint256, //amountB\\r\\n    //         uint256, //rate -> TokenB/TokenA\\r\\n    //         uint256, //originalAmountA\\r\\n    //         uint256, //originalAmountB\\r\\n    //         bool //feesWaived enabled\\r\\n    //     )\\r\\n    // {\\r\\n    //     _Order memory order = s_orderBook[_token][uint256(side)][index];\\r\\n    //     return (\\r\\n    //         order.id,\\r\\n    //         uint256(order.side),\\r\\n    //         order.user,\\r\\n    //         order.tokenA,\\r\\n    //         order.amountA,\\r\\n    //         order.tokenB,\\r\\n    //         order.amountB,\\r\\n    //         order.rate,\\r\\n    //         order.originalAmountA,\\r\\n    //         order.originalAmountB,\\r\\n    //         order.waiveFees\\r\\n    //     );\\r\\n    // }\\r\\n\\r\\n    function getFilledOrderLength(\\r\\n        address _user,\\r\\n        Side side\\r\\n    ) public view returns (uint256) {\\r\\n        return s_filledOrders[_user][uint256(side)].length;\\r\\n    }\\r\\n\\r\\n    // function getFilledOrder(\\r\\n    //     address _user,\\r\\n    //     Side side,\\r\\n    //     uint256 index\\r\\n    // )\\r\\n    //     public\\r\\n    //     view\\r\\n    //     returns (\\r\\n    //         uint256, //id\\r\\n    //         uint256, //side\\r\\n    //         address, //user\\r\\n    //         address, //tokenA\\r\\n    //         address, //tokenB\\r\\n    //         uint256, //amountFilled\\r\\n    //         uint256, //fillRate\\r\\n    //         uint256, //originalRate\\r\\n    //         uint256, //originalAmountA\\r\\n    //         uint256, //originalAmountB\\r\\n    //         bool, //feesWaived\\r\\n    //         uint256 //feesPaid\\r\\n    //     )\\r\\n    // {\\r\\n    //     _filledOrder memory filledOrder = s_filledOrders[_user][uint256(side)][\\r\\n    //         index\\r\\n    //     ];\\r\\n    //     return (\\r\\n    //         filledOrder.id,\\r\\n    //         uint256(filledOrder.side),\\r\\n    //         filledOrder.user,\\r\\n    //         filledOrder.tokenA,\\r\\n    //         filledOrder.tokenB,\\r\\n    //         filledOrder.amountFilled,\\r\\n    //         filledOrder.fillRate,\\r\\n    //         filledOrder.originalRate,\\r\\n    //         filledOrder.originalAmountA,\\r\\n    //         filledOrder.originalAmountB,\\r\\n    //         filledOrder.feesWaived,\\r\\n    //         filledOrder.feesPaid\\r\\n    //     );\\r\\n    // }\\r\\n\\r\\n    function getOrderFromArray(\\r\\n        address _token,\\r\\n        uint256 side,\\r\\n        uint256 _id\\r\\n    ) public view returns (_Order memory, uint256) {\\r\\n        uint256 i = 0;\\r\\n        _Order[] memory _order = s_orderBook[_token][side];\\r\\n        _Order memory order;\\r\\n        for (i; i < _order.length; i++) {\\r\\n            if (_order[i].id == _id) {\\r\\n                order = _order[i];\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        return (order, i);\\r\\n    }\\r\\n\\r\\n    function orderExists(\\r\\n        uint256 _id,\\r\\n        Side side,\\r\\n        address _token\\r\\n    ) public view returns (bool) {\\r\\n        _Order[] memory orders = s_orderBook[_token][uint256(side)];\\r\\n\\r\\n        for (uint256 i = 0; i < orders.length; i++) {\\r\\n            if (orders[i].id == _id) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function addToken(address _token, uint256 _decimals) public onlyOwner {\\r\\n        require(!isVerifiedToken(_token), \\\"Token already verified\\\");\\r\\n        tokenList.push(_tokenInfo(_token, _decimals));\\r\\n    }\\r\\n\\r\\n    function isVerifiedToken(address _token) public view returns (bool) {\\r\\n        //uint256 size = tokenList.length;\\r\\n\\r\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\r\\n            if (tokenList[i].add == _token) return true;\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function getTokenInfo(address _token) public view returns (uint256) {\\r\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\r\\n            if (tokenList[i].add == _token) {\\r\\n                return tokenList[i].decimals;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\\r\\n        wallet = Wallet(_Walletaddress);\\r\\n    }\\r\\n\\r\\n    function setPriceCheckerAddress(\\r\\n        address _PriceCheckeraddress\\r\\n    ) public onlyOwner {\\r\\n        priceChecker = PriceChecker(_PriceCheckeraddress);\\r\\n    }\\r\\n\\r\\n    function setTradingFees(address _tradingFees) public onlyOwner {\\r\\n        tradingFees = TradingFees(_tradingFees);\\r\\n    }\\r\\n\\r\\n    modifier validOrder(\\r\\n        uint256 _id,\\r\\n        Side side,\\r\\n        address _token\\r\\n    ) {\\r\\n        require(orderExists(_id, side, _token), \\\"Invalid Order ID\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier validToken(address _token) {\\r\\n        require(isVerifiedToken(_token), \\\"Token unavailable in DEX\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf501729978c3f815bbaf8920d1d3173c46363cd8cd17ae52a57d2ea2d9a3e7f8\",\"license\":\"MIT\"},\"contracts/PriceChecker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract PriceChecker is Ownable {\\r\\n    _priceFeed[] public priceFeeds;\\r\\n\\r\\n    struct _priceFeed {\\r\\n        string name;\\r\\n        address token;\\r\\n        AggregatorV3Interface priceFeed;\\r\\n    }\\r\\n\\r\\n    //only using PriceFeeds pegged to USD\\r\\n    function addPriceFeed(\\r\\n        string memory _name,\\r\\n        address _token,\\r\\n        address _address\\r\\n    ) external onlyOwner {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n        bool isAdded = false;\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (\\r\\n                keccak256(abi.encodePacked(_name)) ==\\r\\n                keccak256(abi.encodePacked(pricefeed[i].name))\\r\\n            ) {\\r\\n                isAdded = true;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        require(!isAdded, \\\"Price Feed already added\\\");\\r\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(_address);\\r\\n        priceFeeds.push(_priceFeed(_name, _token, priceFeed));\\r\\n    }\\r\\n\\r\\n    function getPriceFeed(\\r\\n        address _token\\r\\n    ) internal view returns (AggregatorV3Interface priceFeed) {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (_token == pricefeed[i].token) {\\r\\n                return pricefeed[i].priceFeed;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getPrice(address _address) external view returns (uint256) {\\r\\n        AggregatorV3Interface priceFeed = getPriceFeed(_address);\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(answer);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf1e1d97a9c555133c6a90fdc333e79e819ffaffd68d9c9579684b49413dda07c\",\"license\":\"MIT\"},\"contracts/TradingFees.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./PriceChecker.sol\\\";\\r\\nimport \\\"./Wallet.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract TradingFees is Ownable {\\r\\n    //When trading, have an option toggle to waive trading fees or not using deposited aETH\\r\\n    //Users have to first deposit aETH tokens into the Exchange contract to waive, aETH tokens are not for trading\\r\\n    //When a trade order goes through, trading fees of the trade fulfilled  = trade amount x trade price x 0.01,\\r\\n    //contract checks how much aETH is deposited and what is the value of aETH, if sufficient to waive fees fully, deduct balance in deposit\\r\\n    //and waive trading fees\\r\\n\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n\\r\\n    uint256 decimals = 10 ** 18;\\r\\n    address public daiToken =\\r\\n        address(0xBa8DCeD3512925e52FE67b1b5329187589072A55); //based on Aave contract\\r\\n    address public aDAI = address(0xADD98B0342e4094Ec32f3b67Ccfd3242C876ff7a); //based on Aave contract\\r\\n    PriceChecker priceFeed;\\r\\n    Wallet wallet;\\r\\n\\r\\n    constructor(address _priceCheckerAddress) {\\r\\n        priceFeed = PriceChecker(_priceCheckerAddress);\\r\\n    }\\r\\n\\r\\n    function calculateFees(\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        address _refToken\\r\\n    ) public view returns (uint256) {\\r\\n        //Calculated based on TokenB price, require actual price in 18dp\\r\\n        //trading fees is 0.1% of trade = 0.001\\r\\n        //moving up 18dp is 0.001 x 10**18 = 10**14\\r\\n        //have to fetch tokenPrice from PriceFeed\\r\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8dp originally\\r\\n        uint256 value = (\\r\\n            ((_amount.mul(_rate)).div(decimals)).mul(priceOfToken.mul(10 ** 10))\\r\\n        ).div(decimals);\\r\\n        uint256 fees = value.div(10 ** 4);\\r\\n\\r\\n        return fees; //based on USD value\\r\\n    }\\r\\n\\r\\n    //Amount of DAI to deduct from fees\\r\\n    function amountaDAIToDeduct(uint256 _fees) public view returns (uint256) {\\r\\n        uint256 aDAI_Price = priceFeed.getPrice(daiToken); // in 8 decimals initially\\r\\n        uint256 amt = _fees.mul(decimals).div(aDAI_Price.mul(10 ** 10));\\r\\n        return uint256(amt);\\r\\n    }\\r\\n\\r\\n    //Amount of Tokens to deduct from fees\\r\\n    function amountTokensToDeduct(\\r\\n        address _refToken,\\r\\n        uint256 _fees\\r\\n    ) public view returns (uint256) {\\r\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8decimals\\r\\n        uint256 amt = _fees.mul(decimals).div(priceOfToken.mul(10 ** 10));\\r\\n        return uint256(amt);\\r\\n    }\\r\\n\\r\\n    function checkSufficientaDAI(\\r\\n        uint256 _fees,\\r\\n        address _user\\r\\n    ) public view returns (bool) {\\r\\n        uint256 amtDAI = amountaDAIToDeduct(_fees);\\r\\n        uint256 balance = wallet.s_tokens(aDAI, _user);\\r\\n\\r\\n        return balance >= amtDAI;\\r\\n    }\\r\\n\\r\\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\\r\\n        wallet = Wallet(_Walletaddress);\\r\\n    }\\r\\n\\r\\n    function setPriceCheckerAddress(\\r\\n        address _PriceCheckeraddress\\r\\n    ) public onlyOwner {\\r\\n        priceFeed = PriceChecker(_PriceCheckeraddress);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x570e96da947a0e3017464615810b58bca9033d9fd045ff00077aa59313ee1d66\",\"license\":\"MIT\"},\"contracts/Wallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./interface/IERC20.sol\\\";\\r\\nimport \\\"./Exchange.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Wallet is Ownable {\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n\\r\\n    address public immutable Owner;\\r\\n\\r\\n    //For prevention of reentrancy\\r\\n    bool private locked;\\r\\n\\r\\n    address public ethToken = address(0);\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) public s_tokens; //tokenAdress -> msg.sender -> tokenAmt\\r\\n    mapping(address => mapping(address => uint256)) public lockedFunds;\\r\\n\\r\\n    Exchange exchange;\\r\\n    IERC20 token;\\r\\n\\r\\n    event Deposit(address token, address user, uint256 amount, uint256 balance);\\r\\n\\r\\n    /// @notice Event when amount withdrawn exchange\\r\\n    event Withdraw(\\r\\n        address token,\\r\\n        address user,\\r\\n        uint256 amount,\\r\\n        uint256 balance\\r\\n    );\\r\\n\\r\\n    constructor() {\\r\\n        Owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    function depositETH() external payable {\\r\\n        updateBalance(ethToken, msg.sender, msg.value, true);\\r\\n\\r\\n        emit Deposit(\\r\\n            ethToken,\\r\\n            msg.sender,\\r\\n            msg.value,\\r\\n            balanceOf(ethToken, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdrawETH(uint256 _amount) external {\\r\\n        require(\\r\\n            balanceOf(ethToken, msg.sender).sub(\\r\\n                getlockedFunds(msg.sender, ethToken)\\r\\n            ) >= _amount,\\r\\n            \\\"Insufficient balance ETH to withdraw\\\"\\r\\n        );\\r\\n        require(!locked, \\\"Reentrant call detected!\\\");\\r\\n        locked = true;\\r\\n        updateBalance(ethToken, msg.sender, _amount, false);\\r\\n        locked = false;\\r\\n        (bool success, ) = msg.sender.call{value: _amount}(\\\"\\\");\\r\\n        require(success, \\\"failed to send amount\\\");\\r\\n\\r\\n        emit Withdraw(\\r\\n            ethToken,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(ethToken, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    //from and transferFrom is from ERC20 contract\\r\\n    //_token should be an ERC20 token\\r\\n    function depositToken(\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        uint256 _decimals\\r\\n    ) external {\\r\\n        require(_token != ethToken);\\r\\n        require(\\r\\n            exchange.isVerifiedToken(_token),\\r\\n            \\\"Token not verified on Exchange\\\"\\r\\n        );\\r\\n        //need to add a check to prove that it is an ERC20 token\\r\\n        token = IERC20(_token);\\r\\n\\r\\n        //Requires approval first\\r\\n        require(\\r\\n            token.transferFrom(msg.sender, address(this), _amount),\\r\\n            \\\"No Approval yet\\\"\\r\\n        );\\r\\n        uint256 decimals = 18;\\r\\n        if (_decimals == 18) {\\r\\n            updateBalance(_token, msg.sender, _amount, true);\\r\\n        } else\\r\\n            updateBalance(\\r\\n                _token,\\r\\n                msg.sender,\\r\\n                _amount.mul(10 ** decimals.sub(_decimals)),\\r\\n                true\\r\\n            );\\r\\n\\r\\n        emit Deposit(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(_token, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdrawToken(\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        uint256 _decimals\\r\\n    ) external {\\r\\n        require(_token != ethToken);\\r\\n        require(\\r\\n            exchange.isVerifiedToken(_token),\\r\\n            \\\"Token not verified on Exchange\\\"\\r\\n        );\\r\\n\\r\\n        require(\\r\\n            balanceOf(_token, msg.sender).sub(\\r\\n                getlockedFunds(msg.sender, _token)\\r\\n            ) >= _amount,\\r\\n            \\\"Insufficient Tokens to withdraw\\\"\\r\\n        );\\r\\n        require(!locked, \\\"Reentrant call detected!\\\");\\r\\n        locked = true;\\r\\n\\r\\n        token = IERC20(_token);\\r\\n        uint256 decimals = 18;\\r\\n        if (_decimals == 18) {\\r\\n            updateBalance(_token, msg.sender, _amount, false);\\r\\n            require(token.transfer(msg.sender, _amount));\\r\\n        } else {\\r\\n            updateBalance(\\r\\n                _token,\\r\\n                msg.sender,\\r\\n                _amount.mul(10 ** decimals.sub(_decimals)),\\r\\n                false\\r\\n            );\\r\\n            require(\\r\\n                token.transfer(\\r\\n                    msg.sender,\\r\\n                    _amount.div(10 ** decimals.sub(_decimals))\\r\\n                )\\r\\n            );\\r\\n        }\\r\\n\\r\\n        locked = false;\\r\\n        emit Withdraw(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(_token, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getlockedFunds(\\r\\n        address _user,\\r\\n        address _token\\r\\n    ) public view returns (uint256) {\\r\\n        return lockedFunds[_user][_token];\\r\\n    }\\r\\n\\r\\n    function updateLockedFunds(\\r\\n        address _user,\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) public isAuthorised {\\r\\n        if (isAdd) {\\r\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].add(\\r\\n                _amount\\r\\n            );\\r\\n        } else if (!isAdd) {\\r\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].sub(\\r\\n                _amount\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //balance of specific tokens in the dex owned by specific user\\r\\n    function balanceOf(\\r\\n        address _token,\\r\\n        address _user\\r\\n    ) public view returns (uint256) {\\r\\n        return s_tokens[_token][_user];\\r\\n    }\\r\\n\\r\\n    function updateBalance(\\r\\n        address _token,\\r\\n        address _user,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) public isAuthorised {\\r\\n        if (isAdd) {\\r\\n            s_tokens[_token][_user] = s_tokens[_token][_user].add(_amount);\\r\\n        } else if (!isAdd) {\\r\\n            s_tokens[_token][_user] = s_tokens[_token][_user].sub(_amount);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function updateExchangeAddress(address _exchangeAddress) public onlyOwner {\\r\\n        exchange = Exchange(_exchangeAddress);\\r\\n    }\\r\\n\\r\\n    modifier isAuthorised() {\\r\\n        require(\\r\\n            msg.sender == address(this) || msg.sender == address(exchange),\\r\\n            \\\"Unauthorised Function Call\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf57179a3c0d338a6d94c7dadc3ee6873838e3af70c690754689b9c1c00aea67c\",\"license\":\"MIT\"},\"contracts/interface/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IERC20 {\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256 remaining);\\r\\n\\r\\n    function approve(\\r\\n        address spender,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function balanceOf(address owner) external view returns (uint256 balance);\\r\\n\\r\\n    function decimals() external view returns (uint8 decimalPlaces);\\r\\n\\r\\n    function decreaseApproval(\\r\\n        address spender,\\r\\n        uint256 subtractedValue\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function increaseApproval(\\r\\n        address spender,\\r\\n        uint256 addedValue\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function name() external view returns (string memory tokenName);\\r\\n\\r\\n    function symbol() external view returns (string memory tokenSymbol);\\r\\n\\r\\n    function totalSupply() external view returns (uint256 totalTokensIssued);\\r\\n\\r\\n    function transfer(\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n}\\r\\n\",\"keccak256\":\"0xef48d46afc4efefcd6d7f1799f25aee5d8fcd588e2aaa80a84af726128194326\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":53,"contract":"contracts/Exchange.sol:Exchange","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":507,"contract":"contracts/Exchange.sol:Exchange","label":"priceChecker","offset":0,"slot":"1","type":"t_contract(PriceChecker)2405"},{"astId":510,"contract":"contracts/Exchange.sol:Exchange","label":"tradingFees","offset":0,"slot":"2","type":"t_contract(TradingFees)2635"},{"astId":513,"contract":"contracts/Exchange.sol:Exchange","label":"wallet","offset":0,"slot":"3","type":"t_contract(Wallet)3199"},{"astId":518,"contract":"contracts/Exchange.sol:Exchange","label":"decimals","offset":0,"slot":"4","type":"t_uint256"},{"astId":524,"contract":"contracts/Exchange.sol:Exchange","label":"ethToken","offset":0,"slot":"5","type":"t_address"},{"astId":528,"contract":"contracts/Exchange.sol:Exchange","label":"tokenList","offset":0,"slot":"6","type":"t_array(t_struct(_tokenInfo)555_storage)dyn_storage"},{"astId":536,"contract":"contracts/Exchange.sol:Exchange","label":"s_orderBook","offset":0,"slot":"7","type":"t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(_Order)584_storage)dyn_storage))"},{"astId":544,"contract":"contracts/Exchange.sol:Exchange","label":"s_filledOrders","offset":0,"slot":"8","type":"t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(_filledOrder)610_storage)dyn_storage))"},{"astId":547,"contract":"contracts/Exchange.sol:Exchange","label":"s_orderId","offset":0,"slot":"9","type":"t_uint256"},{"astId":550,"contract":"contracts/Exchange.sol:Exchange","label":"s_isManual","offset":0,"slot":"10","type":"t_bool"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(_Order)584_storage)dyn_storage":{"base":"t_struct(_Order)584_storage","encoding":"dynamic_array","label":"struct Exchange._Order[]","numberOfBytes":"32"},"t_array(t_struct(_filledOrder)610_storage)dyn_storage":{"base":"t_struct(_filledOrder)610_storage","encoding":"dynamic_array","label":"struct Exchange._filledOrder[]","numberOfBytes":"32"},"t_array(t_struct(_tokenInfo)555_storage)dyn_storage":{"base":"t_struct(_tokenInfo)555_storage","encoding":"dynamic_array","label":"struct Exchange._tokenInfo[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(PriceChecker)2405":{"encoding":"inplace","label":"contract PriceChecker","numberOfBytes":"20"},"t_contract(TradingFees)2635":{"encoding":"inplace","label":"contract TradingFees","numberOfBytes":"20"},"t_contract(Wallet)3199":{"encoding":"inplace","label":"contract Wallet","numberOfBytes":"20"},"t_enum(Side)613":{"encoding":"inplace","label":"enum Exchange.Side","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(_Order)584_storage)dyn_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => struct Exchange._Order[]))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_array(t_struct(_Order)584_storage)dyn_storage)"},"t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(_filledOrder)610_storage)dyn_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => struct Exchange._filledOrder[]))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_array(t_struct(_filledOrder)610_storage)dyn_storage)"},"t_mapping(t_uint256,t_array(t_struct(_Order)584_storage)dyn_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Exchange._Order[])","numberOfBytes":"32","value":"t_array(t_struct(_Order)584_storage)dyn_storage"},"t_mapping(t_uint256,t_array(t_struct(_filledOrder)610_storage)dyn_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Exchange._filledOrder[])","numberOfBytes":"32","value":"t_array(t_struct(_filledOrder)610_storage)dyn_storage"},"t_struct(_Order)584_storage":{"encoding":"inplace","label":"struct Exchange._Order","members":[{"astId":562,"contract":"contracts/Exchange.sol:Exchange","label":"id","offset":0,"slot":"0","type":"t_uint256"},{"astId":565,"contract":"contracts/Exchange.sol:Exchange","label":"side","offset":0,"slot":"1","type":"t_enum(Side)613"},{"astId":567,"contract":"contracts/Exchange.sol:Exchange","label":"user","offset":1,"slot":"1","type":"t_address"},{"astId":569,"contract":"contracts/Exchange.sol:Exchange","label":"tokenA","offset":0,"slot":"2","type":"t_address"},{"astId":571,"contract":"contracts/Exchange.sol:Exchange","label":"amountA","offset":0,"slot":"3","type":"t_uint256"},{"astId":573,"contract":"contracts/Exchange.sol:Exchange","label":"tokenB","offset":0,"slot":"4","type":"t_address"},{"astId":575,"contract":"contracts/Exchange.sol:Exchange","label":"amountB","offset":0,"slot":"5","type":"t_uint256"},{"astId":577,"contract":"contracts/Exchange.sol:Exchange","label":"rate","offset":0,"slot":"6","type":"t_uint256"},{"astId":579,"contract":"contracts/Exchange.sol:Exchange","label":"originalAmountA","offset":0,"slot":"7","type":"t_uint256"},{"astId":581,"contract":"contracts/Exchange.sol:Exchange","label":"originalAmountB","offset":0,"slot":"8","type":"t_uint256"},{"astId":583,"contract":"contracts/Exchange.sol:Exchange","label":"waiveFees","offset":0,"slot":"9","type":"t_bool"}],"numberOfBytes":"320"},"t_struct(_filledOrder)610_storage":{"encoding":"inplace","label":"struct Exchange._filledOrder","members":[{"astId":586,"contract":"contracts/Exchange.sol:Exchange","label":"id","offset":0,"slot":"0","type":"t_uint256"},{"astId":589,"contract":"contracts/Exchange.sol:Exchange","label":"side","offset":0,"slot":"1","type":"t_enum(Side)613"},{"astId":591,"contract":"contracts/Exchange.sol:Exchange","label":"user","offset":1,"slot":"1","type":"t_address"},{"astId":593,"contract":"contracts/Exchange.sol:Exchange","label":"tokenA","offset":0,"slot":"2","type":"t_address"},{"astId":595,"contract":"contracts/Exchange.sol:Exchange","label":"tokenB","offset":0,"slot":"3","type":"t_address"},{"astId":597,"contract":"contracts/Exchange.sol:Exchange","label":"amountFilled","offset":0,"slot":"4","type":"t_uint256"},{"astId":599,"contract":"contracts/Exchange.sol:Exchange","label":"fillRate","offset":0,"slot":"5","type":"t_uint256"},{"astId":601,"contract":"contracts/Exchange.sol:Exchange","label":"originalRate","offset":0,"slot":"6","type":"t_uint256"},{"astId":603,"contract":"contracts/Exchange.sol:Exchange","label":"originalAmountA","offset":0,"slot":"7","type":"t_uint256"},{"astId":605,"contract":"contracts/Exchange.sol:Exchange","label":"originalAmountB","offset":0,"slot":"8","type":"t_uint256"},{"astId":607,"contract":"contracts/Exchange.sol:Exchange","label":"feesWaived","offset":0,"slot":"9","type":"t_bool"},{"astId":609,"contract":"contracts/Exchange.sol:Exchange","label":"feesPaid","offset":0,"slot":"10","type":"t_uint256"}],"numberOfBytes":"352"},"t_struct(_tokenInfo)555_storage":{"encoding":"inplace","label":"struct Exchange._tokenInfo","members":[{"astId":552,"contract":"contracts/Exchange.sol:Exchange","label":"add","offset":0,"slot":"0","type":"t_address"},{"astId":554,"contract":"contracts/Exchange.sol:Exchange","label":"decimals","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"events":{"Cancel(uint256,uint8,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)":{"notice":"Event when an order is cancelled"},"Order(uint256,uint8,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)":{"notice":"Event when an order is placed on an exchange"}},"kind":"user","methods":{},"version":1}}},"contracts/PriceChecker.sol":{"PriceChecker":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_address","type":"address"}],"name":"addPriceFeed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"getPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"priceFeeds","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"token","type":"address"},{"internalType":"contract AggregatorV3Interface","name":"priceFeed","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_69":{"entryPoint":null,"id":69,"parameterSlots":0,"returnSlots":0},"@_msgSender_170":{"entryPoint":50,"id":170,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_157":{"entryPoint":58,"id":157,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6113778061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806310c7f0b91461006757806341976e0914610099578063715018a6146100c95780638c35423e146100d35780638da5cb5b146100ef578063f2fde38b1461010d575b600080fd5b610081600480360381019061007c9190610cd3565b610129565b60405161009093929190610ead565b60405180910390f35b6100b360048036038101906100ae9190610c37565b61022b565b6040516100c09190610f4b565b60405180910390f35b6100d16102c9565b005b6100ed60048036038101906100e89190610c64565b6102dd565b005b6100f7610688565b6040516101049190610e92565b60405180910390f35b61012760048036038101906101229190610c37565b6106b1565b005b6001818154811061013957600080fd5b906000526020600020906003020160009150905080600001805461015c906110b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610188906110b7565b80156101d55780601f106101aa576101008083540402835291602001916101d5565b820191906000526020600020905b8154815290600101906020018083116101b857829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b60008061023783610735565b905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561028157600080fd5b505afa158015610295573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b99190610d00565b5050509150508092505050919050565b6102d1610971565b6102db60006109ef565b565b6102e5610971565b60006001805480602002602001604051908101604052809291908181526020016000905b82821015610479578382906000526020600020906003020160405180606001604052908160008201805461033c906110b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610368906110b7565b80156103b55780601f1061038a576101008083540402835291602001916103b5565b820191906000526020600020905b81548152906001019060200180831161039857829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190610309565b5050505090506000805b825181101561051a5782818151811061049f5761049e6111c1565b5b6020026020010151600001516040516020016104bb9190610e7b565b60405160208183030381529060405280519060200120866040516020016104e29190610e7b565b604051602081830303815290604052805190602001201415610507576001915061051a565b80806105129061111a565b915050610483565b50801561055c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055390610f0b565b60405180910390fd5b6000839050600160405180606001604052808881526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000190805190602001906105ef929190610abb565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106b9610971565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610729576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072090610eeb565b60405180910390fd5b610732816109ef565b50565b6000806001805480602002602001604051908101604052809291908181526020016000905b828210156108ca578382906000526020600020906003020160405180606001604052908160008201805461078d906110b7565b80601f01602080910402602001604051908101604052809291908181526020018280546107b9906110b7565b80156108065780601f106107db57610100808354040283529160200191610806565b820191906000526020600020905b8154815290600101906020018083116107e957829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508152602001906001019061075a565b50505050905060005b8151811015610969578181815181106108ef576108ee6111c1565b5b60200260200101516020015173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561095657818181518110610941576109406111c1565b5b6020026020010151604001519250505061096c565b80806109619061111a565b9150506108d3565b50505b919050565b610979610ab3565b73ffffffffffffffffffffffffffffffffffffffff16610997610688565b73ffffffffffffffffffffffffffffffffffffffff16146109ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e490610f2b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b828054610ac7906110b7565b90600052602060002090601f016020900481019282610ae95760008555610b30565b82601f10610b0257805160ff1916838001178555610b30565b82800160010185558215610b30579182015b82811115610b2f578251825591602001919060010190610b14565b5b509050610b3d9190610b41565b5090565b5b80821115610b5a576000816000905550600101610b42565b5090565b6000610b71610b6c84610f8b565b610f66565b905082815260208101848484011115610b8d57610b8c611224565b5b610b98848285611075565b509392505050565b600081359050610baf816112e5565b92915050565b600081519050610bc4816112fc565b92915050565b600082601f830112610bdf57610bde61121f565b5b8135610bef848260208601610b5e565b91505092915050565b600081359050610c0781611313565b92915050565b600081519050610c1c81611313565b92915050565b600081519050610c318161132a565b92915050565b600060208284031215610c4d57610c4c61122e565b5b6000610c5b84828501610ba0565b91505092915050565b600080600060608486031215610c7d57610c7c61122e565b5b600084013567ffffffffffffffff811115610c9b57610c9a611229565b5b610ca786828701610bca565b9350506020610cb886828701610ba0565b9250506040610cc986828701610ba0565b9150509250925092565b600060208284031215610ce957610ce861122e565b5b6000610cf784828501610bf8565b91505092915050565b600080600080600060a08688031215610d1c57610d1b61122e565b5b6000610d2a88828901610c22565b9550506020610d3b88828901610bb5565b9450506040610d4c88828901610c0d565b9350506060610d5d88828901610c0d565b9250506080610d6e88828901610c22565b9150509295509295909350565b610d8481610fe3565b82525050565b610d938161103f565b82525050565b6000610da482610fbc565b610dae8185610fc7565b9350610dbe818560208601611084565b610dc781611233565b840191505092915050565b6000610ddd82610fbc565b610de78185610fd8565b9350610df7818560208601611084565b80840191505092915050565b6000610e10602683610fc7565b9150610e1b82611244565b604082019050919050565b6000610e33601883610fc7565b9150610e3e82611293565b602082019050919050565b6000610e56602083610fc7565b9150610e61826112bc565b602082019050919050565b610e758161101f565b82525050565b6000610e878284610dd2565b915081905092915050565b6000602082019050610ea76000830184610d7b565b92915050565b60006060820190508181036000830152610ec78186610d99565b9050610ed66020830185610d7b565b610ee36040830184610d8a565b949350505050565b60006020820190508181036000830152610f0481610e03565b9050919050565b60006020820190508181036000830152610f2481610e26565b9050919050565b60006020820190508181036000830152610f4481610e49565b9050919050565b6000602082019050610f606000830184610e6c565b92915050565b6000610f70610f81565b9050610f7c82826110e9565b919050565b6000604051905090565b600067ffffffffffffffff821115610fa657610fa56111f0565b5b610faf82611233565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000610fee82610fff565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b600061104a82611051565b9050919050565b600061105c82611063565b9050919050565b600061106e82610fff565b9050919050565b82818337600083830152505050565b60005b838110156110a2578082015181840152602081019050611087565b838111156110b1576000848401525b50505050565b600060028204905060018216806110cf57607f821691505b602082108114156110e3576110e2611192565b5b50919050565b6110f282611233565b810181811067ffffffffffffffff82111715611111576111106111f0565b5b80604052505050565b60006111258261101f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561115857611157611163565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5072696365204665656420616c72656164792061646465640000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6112ee81610fe3565b81146112f957600080fd5b50565b61130581610ff5565b811461131057600080fd5b50565b61131c8161101f565b811461132757600080fd5b50565b61133381611029565b811461133e57600080fd5b5056fea2646970667358221220c35e7e8ecb7262f04ee52507df9a62a77b09793980be9195195c1e70958bbdd764736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1377 DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x10C7F0B9 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x41976E09 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x8C35423E EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x10D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH2 0x129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x90 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAE SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH2 0x2C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xC64 JUMP JUMPDEST PUSH2 0x2DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF7 PUSH2 0x688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x6B1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x15C SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x188 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x237 DUP4 PUSH2 0x735 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x295 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0xD00 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x971 JUMP JUMPDEST PUSH2 0x2DB PUSH1 0x0 PUSH2 0x9EF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2E5 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x479 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x33C SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x368 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x38A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3B5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x398 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x309 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x51A JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x49F JUMPI PUSH2 0x49E PUSH2 0x11C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4E2 SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0x507 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x51A JUMP JUMPDEST DUP1 DUP1 PUSH2 0x512 SWAP1 PUSH2 0x111A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x483 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x553 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x5EF SWAP3 SWAP2 SWAP1 PUSH2 0xABB JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6B9 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x729 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x720 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x732 DUP2 PUSH2 0x9EF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x8CA JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x78D SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7B9 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x806 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7DB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x806 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7E9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x75A JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x969 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x8EF JUMPI PUSH2 0x8EE PUSH2 0x11C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x956 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x941 JUMPI PUSH2 0x940 PUSH2 0x11C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD SWAP3 POP POP POP PUSH2 0x96C JUMP JUMPDEST DUP1 DUP1 PUSH2 0x961 SWAP1 PUSH2 0x111A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8D3 JUMP JUMPDEST POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x979 PUSH2 0xAB3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x997 PUSH2 0x688 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E4 SWAP1 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xAC7 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xAE9 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xB30 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xB02 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xB30 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xB30 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB2F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB14 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0xB41 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xB5A JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xB42 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB71 PUSH2 0xB6C DUP5 PUSH2 0xF8B JUMP JUMPDEST PUSH2 0xF66 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xB8D JUMPI PUSH2 0xB8C PUSH2 0x1224 JUMP JUMPDEST JUMPDEST PUSH2 0xB98 DUP5 DUP3 DUP6 PUSH2 0x1075 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBAF DUP2 PUSH2 0x12E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xBC4 DUP2 PUSH2 0x12FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBDF JUMPI PUSH2 0xBDE PUSH2 0x121F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBEF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xB5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC07 DUP2 PUSH2 0x1313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC1C DUP2 PUSH2 0x1313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC31 DUP2 PUSH2 0x132A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC4D JUMPI PUSH2 0xC4C PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC5B DUP5 DUP3 DUP6 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC7D JUMPI PUSH2 0xC7C PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC9B JUMPI PUSH2 0xC9A PUSH2 0x1229 JUMP JUMPDEST JUMPDEST PUSH2 0xCA7 DUP7 DUP3 DUP8 ADD PUSH2 0xBCA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCB8 DUP7 DUP3 DUP8 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCC9 DUP7 DUP3 DUP8 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE9 JUMPI PUSH2 0xCE8 PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCF7 DUP5 DUP3 DUP6 ADD PUSH2 0xBF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD1C JUMPI PUSH2 0xD1B PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD2A DUP9 DUP3 DUP10 ADD PUSH2 0xC22 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xD3B DUP9 DUP3 DUP10 ADD PUSH2 0xBB5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xD4C DUP9 DUP3 DUP10 ADD PUSH2 0xC0D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xD5D DUP9 DUP3 DUP10 ADD PUSH2 0xC0D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xD6E DUP9 DUP3 DUP10 ADD PUSH2 0xC22 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0xD84 DUP2 PUSH2 0xFE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD93 DUP2 PUSH2 0x103F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA4 DUP3 PUSH2 0xFBC JUMP JUMPDEST PUSH2 0xDAE DUP2 DUP6 PUSH2 0xFC7 JUMP JUMPDEST SWAP4 POP PUSH2 0xDBE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1084 JUMP JUMPDEST PUSH2 0xDC7 DUP2 PUSH2 0x1233 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDD DUP3 PUSH2 0xFBC JUMP JUMPDEST PUSH2 0xDE7 DUP2 DUP6 PUSH2 0xFD8 JUMP JUMPDEST SWAP4 POP PUSH2 0xDF7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1084 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE10 PUSH1 0x26 DUP4 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE1B DUP3 PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE33 PUSH1 0x18 DUP4 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE3E DUP3 PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE56 PUSH1 0x20 DUP4 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE61 DUP3 PUSH2 0x12BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE75 DUP2 PUSH2 0x101F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE87 DUP3 DUP5 PUSH2 0xDD2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEA7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEC7 DUP2 DUP7 PUSH2 0xD99 JUMP JUMPDEST SWAP1 POP PUSH2 0xED6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0xEE3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD8A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF04 DUP2 PUSH2 0xE03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF24 DUP2 PUSH2 0xE26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF44 DUP2 PUSH2 0xE49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF60 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF70 PUSH2 0xF81 JUMP JUMPDEST SWAP1 POP PUSH2 0xF7C DUP3 DUP3 PUSH2 0x10E9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xFA6 JUMPI PUSH2 0xFA5 PUSH2 0x11F0 JUMP JUMPDEST JUMPDEST PUSH2 0xFAF DUP3 PUSH2 0x1233 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFEE DUP3 PUSH2 0xFFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104A DUP3 PUSH2 0x1051 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105C DUP3 PUSH2 0x1063 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x106E DUP3 PUSH2 0xFFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10A2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1087 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x10B1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10CF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x10E3 JUMPI PUSH2 0x10E2 PUSH2 0x1192 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F2 DUP3 PUSH2 0x1233 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1111 JUMPI PUSH2 0x1110 PUSH2 0x11F0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1125 DUP3 PUSH2 0x101F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1158 JUMPI PUSH2 0x1157 PUSH2 0x1163 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5072696365204665656420616C72656164792061646465640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x12EE DUP2 PUSH2 0xFE3 JUMP JUMPDEST DUP2 EQ PUSH2 0x12F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1305 DUP2 PUSH2 0xFF5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x131C DUP2 PUSH2 0x101F JUMP JUMPDEST DUP2 EQ PUSH2 0x1327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1333 DUP2 PUSH2 0x1029 JUMP JUMPDEST DUP2 EQ PUSH2 0x133E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0x5E PUSH31 0x8ECB7262F04EE52507DF9A62A77B09793980BE9195195C1E70958BBDD76473 PUSH16 0x6C634300080700330000000000000000 ","sourceMap":"194:1570:5:-:0;;;;;;;;;;;;;936:32:1;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;194:1570:5;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2433:187:1:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;194:1570:5:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_100":{"entryPoint":2417,"id":100,"parameterSlots":0,"returnSlots":0},"@_msgSender_170":{"entryPoint":2739,"id":170,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_157":{"entryPoint":2543,"id":157,"parameterSlots":1,"returnSlots":0},"@addPriceFeed_2336":{"entryPoint":733,"id":2336,"parameterSlots":3,"returnSlots":0},"@getPriceFeed_2378":{"entryPoint":1845,"id":2378,"parameterSlots":1,"returnSlots":1},"@getPrice_2404":{"entryPoint":555,"id":2404,"parameterSlots":1,"returnSlots":1},"@owner_86":{"entryPoint":1672,"id":86,"parameterSlots":0,"returnSlots":1},"@priceFeeds_2246":{"entryPoint":297,"id":2246,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_114":{"entryPoint":713,"id":114,"parameterSlots":0,"returnSlots":0},"@transferOwnership_137":{"entryPoint":1713,"id":137,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":2910,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2976,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_int256_fromMemory":{"entryPoint":2997,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":3018,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3064,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":3085,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint80_fromMemory":{"entryPoint":3106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3127,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_addresst_address":{"entryPoint":3172,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":3283,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory":{"entryPoint":3328,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3451,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack":{"entryPoint":3466,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3481,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":3538,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":3587,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f_to_t_string_memory_ptr_fromStack":{"entryPoint":3622,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":3657,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3692,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":3707,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3730,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_address_t_contract$_AggregatorV3Interface_$45__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed":{"entryPoint":3757,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3819,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3851,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3883,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3915,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":3942,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":3969,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":3979,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":4028,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4039,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4056,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":4067,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int256":{"entryPoint":4085,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4095,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4127,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint80":{"entryPoint":4137,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_AggregatorV3Interface_$45_to_t_address":{"entryPoint":4159,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":4177,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":4195,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":4213,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":4228,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4279,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":4329,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":4378,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4451,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4498,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4545,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4592,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":4639,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":4644,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":4649,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4654,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":4659,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":4676,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f":{"entryPoint":4755,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":4796,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":4837,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_int256":{"entryPoint":4860,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":4883,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint80":{"entryPoint":4906,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:14545:9","statements":[{"body":{"nodeType":"YulBlock","src":"91:328:9","statements":[{"nodeType":"YulAssignment","src":"101:75:9","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"168:6:9"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"126:41:9"},"nodeType":"YulFunctionCall","src":"126:49:9"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"110:15:9"},"nodeType":"YulFunctionCall","src":"110:66:9"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"101:5:9"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"192:5:9"},{"name":"length","nodeType":"YulIdentifier","src":"199:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"185:6:9"},"nodeType":"YulFunctionCall","src":"185:21:9"},"nodeType":"YulExpressionStatement","src":"185:21:9"},{"nodeType":"YulVariableDeclaration","src":"215:27:9","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"230:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"237:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"226:3:9"},"nodeType":"YulFunctionCall","src":"226:16:9"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"219:3:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"280:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"282:77:9"},"nodeType":"YulFunctionCall","src":"282:79:9"},"nodeType":"YulExpressionStatement","src":"282:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"261:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"266:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"257:3:9"},"nodeType":"YulFunctionCall","src":"257:16:9"},{"name":"end","nodeType":"YulIdentifier","src":"275:3:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"254:2:9"},"nodeType":"YulFunctionCall","src":"254:25:9"},"nodeType":"YulIf","src":"251:112:9"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"396:3:9"},{"name":"dst","nodeType":"YulIdentifier","src":"401:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"406:6:9"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"372:23:9"},"nodeType":"YulFunctionCall","src":"372:41:9"},"nodeType":"YulExpressionStatement","src":"372:41:9"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"64:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"69:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"77:3:9","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"85:5:9","type":""}],"src":"7:412:9"},{"body":{"nodeType":"YulBlock","src":"477:87:9","statements":[{"nodeType":"YulAssignment","src":"487:29:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"509:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"496:12:9"},"nodeType":"YulFunctionCall","src":"496:20:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"487:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"552:5:9"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"525:26:9"},"nodeType":"YulFunctionCall","src":"525:33:9"},"nodeType":"YulExpressionStatement","src":"525:33:9"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"455:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"463:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"471:5:9","type":""}],"src":"425:139:9"},{"body":{"nodeType":"YulBlock","src":"632:79:9","statements":[{"nodeType":"YulAssignment","src":"642:22:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"657:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"651:5:9"},"nodeType":"YulFunctionCall","src":"651:13:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"642:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"699:5:9"}],"functionName":{"name":"validator_revert_t_int256","nodeType":"YulIdentifier","src":"673:25:9"},"nodeType":"YulFunctionCall","src":"673:32:9"},"nodeType":"YulExpressionStatement","src":"673:32:9"}]},"name":"abi_decode_t_int256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"610:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"618:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"626:5:9","type":""}],"src":"570:141:9"},{"body":{"nodeType":"YulBlock","src":"793:278:9","statements":[{"body":{"nodeType":"YulBlock","src":"842:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"844:77:9"},"nodeType":"YulFunctionCall","src":"844:79:9"},"nodeType":"YulExpressionStatement","src":"844:79:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"821:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"829:4:9","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"817:3:9"},"nodeType":"YulFunctionCall","src":"817:17:9"},{"name":"end","nodeType":"YulIdentifier","src":"836:3:9"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"813:3:9"},"nodeType":"YulFunctionCall","src":"813:27:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"806:6:9"},"nodeType":"YulFunctionCall","src":"806:35:9"},"nodeType":"YulIf","src":"803:122:9"},{"nodeType":"YulVariableDeclaration","src":"934:34:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"961:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"948:12:9"},"nodeType":"YulFunctionCall","src":"948:20:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"938:6:9","type":""}]},{"nodeType":"YulAssignment","src":"977:88:9","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1038:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"1046:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1034:3:9"},"nodeType":"YulFunctionCall","src":"1034:17:9"},{"name":"length","nodeType":"YulIdentifier","src":"1053:6:9"},{"name":"end","nodeType":"YulIdentifier","src":"1061:3:9"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"986:47:9"},"nodeType":"YulFunctionCall","src":"986:79:9"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"977:5:9"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"771:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"779:3:9","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"787:5:9","type":""}],"src":"731:340:9"},{"body":{"nodeType":"YulBlock","src":"1129:87:9","statements":[{"nodeType":"YulAssignment","src":"1139:29:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1161:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1148:12:9"},"nodeType":"YulFunctionCall","src":"1148:20:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1139:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1204:5:9"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1177:26:9"},"nodeType":"YulFunctionCall","src":"1177:33:9"},"nodeType":"YulExpressionStatement","src":"1177:33:9"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1107:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"1115:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1123:5:9","type":""}],"src":"1077:139:9"},{"body":{"nodeType":"YulBlock","src":"1285:80:9","statements":[{"nodeType":"YulAssignment","src":"1295:22:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1310:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1304:5:9"},"nodeType":"YulFunctionCall","src":"1304:13:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1295:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1353:5:9"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1326:26:9"},"nodeType":"YulFunctionCall","src":"1326:33:9"},"nodeType":"YulExpressionStatement","src":"1326:33:9"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1263:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"1271:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1279:5:9","type":""}],"src":"1222:143:9"},{"body":{"nodeType":"YulBlock","src":"1433:79:9","statements":[{"nodeType":"YulAssignment","src":"1443:22:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1458:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1452:5:9"},"nodeType":"YulFunctionCall","src":"1452:13:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1443:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1500:5:9"}],"functionName":{"name":"validator_revert_t_uint80","nodeType":"YulIdentifier","src":"1474:25:9"},"nodeType":"YulFunctionCall","src":"1474:32:9"},"nodeType":"YulExpressionStatement","src":"1474:32:9"}]},"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1411:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"1419:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1427:5:9","type":""}],"src":"1371:141:9"},{"body":{"nodeType":"YulBlock","src":"1584:263:9","statements":[{"body":{"nodeType":"YulBlock","src":"1630:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1632:77:9"},"nodeType":"YulFunctionCall","src":"1632:79:9"},"nodeType":"YulExpressionStatement","src":"1632:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1605:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"1614:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1601:3:9"},"nodeType":"YulFunctionCall","src":"1601:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"1626:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1597:3:9"},"nodeType":"YulFunctionCall","src":"1597:32:9"},"nodeType":"YulIf","src":"1594:119:9"},{"nodeType":"YulBlock","src":"1723:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1738:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1752:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1742:6:9","type":""}]},{"nodeType":"YulAssignment","src":"1767:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1802:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1813:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1798:3:9"},"nodeType":"YulFunctionCall","src":"1798:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1822:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1777:20:9"},"nodeType":"YulFunctionCall","src":"1777:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1767:6:9"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1554:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1565:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1577:6:9","type":""}],"src":"1518:329:9"},{"body":{"nodeType":"YulBlock","src":"1963:689:9","statements":[{"body":{"nodeType":"YulBlock","src":"2009:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2011:77:9"},"nodeType":"YulFunctionCall","src":"2011:79:9"},"nodeType":"YulExpressionStatement","src":"2011:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1984:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"1993:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1980:3:9"},"nodeType":"YulFunctionCall","src":"1980:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"2005:2:9","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1976:3:9"},"nodeType":"YulFunctionCall","src":"1976:32:9"},"nodeType":"YulIf","src":"1973:119:9"},{"nodeType":"YulBlock","src":"2102:287:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2117:45:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2148:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"2159:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2144:3:9"},"nodeType":"YulFunctionCall","src":"2144:17:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2131:12:9"},"nodeType":"YulFunctionCall","src":"2131:31:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2121:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"2209:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"2211:77:9"},"nodeType":"YulFunctionCall","src":"2211:79:9"},"nodeType":"YulExpressionStatement","src":"2211:79:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2181:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"2189:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2178:2:9"},"nodeType":"YulFunctionCall","src":"2178:30:9"},"nodeType":"YulIf","src":"2175:117:9"},{"nodeType":"YulAssignment","src":"2306:73:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2351:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2362:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2347:3:9"},"nodeType":"YulFunctionCall","src":"2347:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2371:7:9"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2316:30:9"},"nodeType":"YulFunctionCall","src":"2316:63:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2306:6:9"}]}]},{"nodeType":"YulBlock","src":"2399:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2414:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2428:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2418:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2444:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2479:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2490:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2475:3:9"},"nodeType":"YulFunctionCall","src":"2475:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2499:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2454:20:9"},"nodeType":"YulFunctionCall","src":"2454:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2444:6:9"}]}]},{"nodeType":"YulBlock","src":"2527:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2542:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2556:2:9","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2546:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2572:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2607:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2618:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2603:3:9"},"nodeType":"YulFunctionCall","src":"2603:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2627:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2582:20:9"},"nodeType":"YulFunctionCall","src":"2582:53:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2572:6:9"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1917:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1928:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1940:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1948:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1956:6:9","type":""}],"src":"1853:799:9"},{"body":{"nodeType":"YulBlock","src":"2724:263:9","statements":[{"body":{"nodeType":"YulBlock","src":"2770:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2772:77:9"},"nodeType":"YulFunctionCall","src":"2772:79:9"},"nodeType":"YulExpressionStatement","src":"2772:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2745:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"2754:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2741:3:9"},"nodeType":"YulFunctionCall","src":"2741:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"2766:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2737:3:9"},"nodeType":"YulFunctionCall","src":"2737:32:9"},"nodeType":"YulIf","src":"2734:119:9"},{"nodeType":"YulBlock","src":"2863:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2878:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2892:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2882:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2907:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2942:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2953:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2938:3:9"},"nodeType":"YulFunctionCall","src":"2938:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2962:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2917:20:9"},"nodeType":"YulFunctionCall","src":"2917:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2907:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2694:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2705:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2717:6:9","type":""}],"src":"2658:329:9"},{"body":{"nodeType":"YulBlock","src":"3135:829:9","statements":[{"body":{"nodeType":"YulBlock","src":"3182:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3184:77:9"},"nodeType":"YulFunctionCall","src":"3184:79:9"},"nodeType":"YulExpressionStatement","src":"3184:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3156:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"3165:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3152:3:9"},"nodeType":"YulFunctionCall","src":"3152:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"3177:3:9","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3148:3:9"},"nodeType":"YulFunctionCall","src":"3148:33:9"},"nodeType":"YulIf","src":"3145:120:9"},{"nodeType":"YulBlock","src":"3275:127:9","statements":[{"nodeType":"YulVariableDeclaration","src":"3290:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"3304:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3294:6:9","type":""}]},{"nodeType":"YulAssignment","src":"3319:73:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3364:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"3375:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3360:3:9"},"nodeType":"YulFunctionCall","src":"3360:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3384:7:9"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"3329:30:9"},"nodeType":"YulFunctionCall","src":"3329:63:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3319:6:9"}]}]},{"nodeType":"YulBlock","src":"3412:128:9","statements":[{"nodeType":"YulVariableDeclaration","src":"3427:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"3441:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3431:6:9","type":""}]},{"nodeType":"YulAssignment","src":"3457:73:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3502:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"3513:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3498:3:9"},"nodeType":"YulFunctionCall","src":"3498:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3522:7:9"}],"functionName":{"name":"abi_decode_t_int256_fromMemory","nodeType":"YulIdentifier","src":"3467:30:9"},"nodeType":"YulFunctionCall","src":"3467:63:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3457:6:9"}]}]},{"nodeType":"YulBlock","src":"3550:129:9","statements":[{"nodeType":"YulVariableDeclaration","src":"3565:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"3579:2:9","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3569:6:9","type":""}]},{"nodeType":"YulAssignment","src":"3595:74:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3641:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"3652:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3637:3:9"},"nodeType":"YulFunctionCall","src":"3637:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3661:7:9"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"3605:31:9"},"nodeType":"YulFunctionCall","src":"3605:64:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3595:6:9"}]}]},{"nodeType":"YulBlock","src":"3689:129:9","statements":[{"nodeType":"YulVariableDeclaration","src":"3704:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"3718:2:9","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3708:6:9","type":""}]},{"nodeType":"YulAssignment","src":"3734:74:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3780:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"3791:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3776:3:9"},"nodeType":"YulFunctionCall","src":"3776:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3800:7:9"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"3744:31:9"},"nodeType":"YulFunctionCall","src":"3744:64:9"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3734:6:9"}]}]},{"nodeType":"YulBlock","src":"3828:129:9","statements":[{"nodeType":"YulVariableDeclaration","src":"3843:17:9","value":{"kind":"number","nodeType":"YulLiteral","src":"3857:3:9","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3847:6:9","type":""}]},{"nodeType":"YulAssignment","src":"3874:73:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3919:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"3930:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3915:3:9"},"nodeType":"YulFunctionCall","src":"3915:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3939:7:9"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"3884:30:9"},"nodeType":"YulFunctionCall","src":"3884:63:9"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3874:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3073:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3084:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3096:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3104:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3112:6:9","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3120:6:9","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3128:6:9","type":""}],"src":"2993:971:9"},{"body":{"nodeType":"YulBlock","src":"4035:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4052:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4075:5:9"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4057:17:9"},"nodeType":"YulFunctionCall","src":"4057:24:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4045:6:9"},"nodeType":"YulFunctionCall","src":"4045:37:9"},"nodeType":"YulExpressionStatement","src":"4045:37:9"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4023:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4030:3:9","type":""}],"src":"3970:118:9"},{"body":{"nodeType":"YulBlock","src":"4187:94:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4204:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4268:5:9"}],"functionName":{"name":"convert_t_contract$_AggregatorV3Interface_$45_to_t_address","nodeType":"YulIdentifier","src":"4209:58:9"},"nodeType":"YulFunctionCall","src":"4209:65:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4197:6:9"},"nodeType":"YulFunctionCall","src":"4197:78:9"},"nodeType":"YulExpressionStatement","src":"4197:78:9"}]},"name":"abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4175:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4182:3:9","type":""}],"src":"4094:187:9"},{"body":{"nodeType":"YulBlock","src":"4379:272:9","statements":[{"nodeType":"YulVariableDeclaration","src":"4389:53:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4436:5:9"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4403:32:9"},"nodeType":"YulFunctionCall","src":"4403:39:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4393:6:9","type":""}]},{"nodeType":"YulAssignment","src":"4451:78:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4517:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"4522:6:9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4458:58:9"},"nodeType":"YulFunctionCall","src":"4458:71:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4451:3:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4564:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"4571:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4560:3:9"},"nodeType":"YulFunctionCall","src":"4560:16:9"},{"name":"pos","nodeType":"YulIdentifier","src":"4578:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"4583:6:9"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4538:21:9"},"nodeType":"YulFunctionCall","src":"4538:52:9"},"nodeType":"YulExpressionStatement","src":"4538:52:9"},{"nodeType":"YulAssignment","src":"4599:46:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4610:3:9"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4637:6:9"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4615:21:9"},"nodeType":"YulFunctionCall","src":"4615:29:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4606:3:9"},"nodeType":"YulFunctionCall","src":"4606:39:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4599:3:9"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4360:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4367:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4375:3:9","type":""}],"src":"4287:364:9"},{"body":{"nodeType":"YulBlock","src":"4767:267:9","statements":[{"nodeType":"YulVariableDeclaration","src":"4777:53:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4824:5:9"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4791:32:9"},"nodeType":"YulFunctionCall","src":"4791:39:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4781:6:9","type":""}]},{"nodeType":"YulAssignment","src":"4839:96:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4923:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"4928:6:9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"4846:76:9"},"nodeType":"YulFunctionCall","src":"4846:89:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4839:3:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4970:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"4977:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4966:3:9"},"nodeType":"YulFunctionCall","src":"4966:16:9"},{"name":"pos","nodeType":"YulIdentifier","src":"4984:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"4989:6:9"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4944:21:9"},"nodeType":"YulFunctionCall","src":"4944:52:9"},"nodeType":"YulExpressionStatement","src":"4944:52:9"},{"nodeType":"YulAssignment","src":"5005:23:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5016:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"5021:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5012:3:9"},"nodeType":"YulFunctionCall","src":"5012:16:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5005:3:9"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4748:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4755:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4763:3:9","type":""}],"src":"4657:377:9"},{"body":{"nodeType":"YulBlock","src":"5186:220:9","statements":[{"nodeType":"YulAssignment","src":"5196:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5262:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"5267:2:9","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5203:58:9"},"nodeType":"YulFunctionCall","src":"5203:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5196:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5368:3:9"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"5279:88:9"},"nodeType":"YulFunctionCall","src":"5279:93:9"},"nodeType":"YulExpressionStatement","src":"5279:93:9"},{"nodeType":"YulAssignment","src":"5381:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5392:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"5397:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5388:3:9"},"nodeType":"YulFunctionCall","src":"5388:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5381:3:9"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5174:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5182:3:9","type":""}],"src":"5040:366:9"},{"body":{"nodeType":"YulBlock","src":"5558:220:9","statements":[{"nodeType":"YulAssignment","src":"5568:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5634:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"5639:2:9","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5575:58:9"},"nodeType":"YulFunctionCall","src":"5575:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5568:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5740:3:9"}],"functionName":{"name":"store_literal_in_memory_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f","nodeType":"YulIdentifier","src":"5651:88:9"},"nodeType":"YulFunctionCall","src":"5651:93:9"},"nodeType":"YulExpressionStatement","src":"5651:93:9"},{"nodeType":"YulAssignment","src":"5753:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5764:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"5769:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5760:3:9"},"nodeType":"YulFunctionCall","src":"5760:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5753:3:9"}]}]},"name":"abi_encode_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5546:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5554:3:9","type":""}],"src":"5412:366:9"},{"body":{"nodeType":"YulBlock","src":"5930:220:9","statements":[{"nodeType":"YulAssignment","src":"5940:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6006:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"6011:2:9","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5947:58:9"},"nodeType":"YulFunctionCall","src":"5947:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5940:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6112:3:9"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"6023:88:9"},"nodeType":"YulFunctionCall","src":"6023:93:9"},"nodeType":"YulExpressionStatement","src":"6023:93:9"},{"nodeType":"YulAssignment","src":"6125:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6136:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"6141:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6132:3:9"},"nodeType":"YulFunctionCall","src":"6132:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6125:3:9"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5918:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5926:3:9","type":""}],"src":"5784:366:9"},{"body":{"nodeType":"YulBlock","src":"6221:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6238:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6261:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6243:17:9"},"nodeType":"YulFunctionCall","src":"6243:24:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6231:6:9"},"nodeType":"YulFunctionCall","src":"6231:37:9"},"nodeType":"YulExpressionStatement","src":"6231:37:9"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6209:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6216:3:9","type":""}],"src":"6156:118:9"},{"body":{"nodeType":"YulBlock","src":"6416:139:9","statements":[{"nodeType":"YulAssignment","src":"6427:102:9","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6516:6:9"},{"name":"pos","nodeType":"YulIdentifier","src":"6525:3:9"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"6434:81:9"},"nodeType":"YulFunctionCall","src":"6434:95:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6427:3:9"}]},{"nodeType":"YulAssignment","src":"6539:10:9","value":{"name":"pos","nodeType":"YulIdentifier","src":"6546:3:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6539:3:9"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6395:3:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6401:6:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6412:3:9","type":""}],"src":"6280:275:9"},{"body":{"nodeType":"YulBlock","src":"6659:124:9","statements":[{"nodeType":"YulAssignment","src":"6669:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6681:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"6692:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6677:3:9"},"nodeType":"YulFunctionCall","src":"6677:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6669:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6749:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6762:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"6773:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6758:3:9"},"nodeType":"YulFunctionCall","src":"6758:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6705:43:9"},"nodeType":"YulFunctionCall","src":"6705:71:9"},"nodeType":"YulExpressionStatement","src":"6705:71:9"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6631:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6643:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6654:4:9","type":""}],"src":"6561:222:9"},{"body":{"nodeType":"YulBlock","src":"6991:387:9","statements":[{"nodeType":"YulAssignment","src":"7001:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7013:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7024:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7009:3:9"},"nodeType":"YulFunctionCall","src":"7009:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7001:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7048:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7059:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7044:3:9"},"nodeType":"YulFunctionCall","src":"7044:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7067:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"7073:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7063:3:9"},"nodeType":"YulFunctionCall","src":"7063:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7037:6:9"},"nodeType":"YulFunctionCall","src":"7037:47:9"},"nodeType":"YulExpressionStatement","src":"7037:47:9"},{"nodeType":"YulAssignment","src":"7093:86:9","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7165:6:9"},{"name":"tail","nodeType":"YulIdentifier","src":"7174:4:9"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7101:63:9"},"nodeType":"YulFunctionCall","src":"7101:78:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7093:4:9"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7233:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7246:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7257:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7242:3:9"},"nodeType":"YulFunctionCall","src":"7242:18:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7189:43:9"},"nodeType":"YulFunctionCall","src":"7189:72:9"},"nodeType":"YulExpressionStatement","src":"7189:72:9"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7343:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7356:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7367:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7352:3:9"},"nodeType":"YulFunctionCall","src":"7352:18:9"}],"functionName":{"name":"abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7271:71:9"},"nodeType":"YulFunctionCall","src":"7271:100:9"},"nodeType":"YulExpressionStatement","src":"7271:100:9"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_address_t_contract$_AggregatorV3Interface_$45__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6947:9:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6959:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6967:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6975:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6986:4:9","type":""}],"src":"6789:589:9"},{"body":{"nodeType":"YulBlock","src":"7555:248:9","statements":[{"nodeType":"YulAssignment","src":"7565:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7577:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7588:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7573:3:9"},"nodeType":"YulFunctionCall","src":"7573:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7565:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7612:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7623:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7608:3:9"},"nodeType":"YulFunctionCall","src":"7608:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7631:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"7637:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7627:3:9"},"nodeType":"YulFunctionCall","src":"7627:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7601:6:9"},"nodeType":"YulFunctionCall","src":"7601:47:9"},"nodeType":"YulExpressionStatement","src":"7601:47:9"},{"nodeType":"YulAssignment","src":"7657:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7791:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7665:124:9"},"nodeType":"YulFunctionCall","src":"7665:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7657:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7535:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7550:4:9","type":""}],"src":"7384:419:9"},{"body":{"nodeType":"YulBlock","src":"7980:248:9","statements":[{"nodeType":"YulAssignment","src":"7990:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8002:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8013:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7998:3:9"},"nodeType":"YulFunctionCall","src":"7998:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7990:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8037:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8048:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8033:3:9"},"nodeType":"YulFunctionCall","src":"8033:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8056:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"8062:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8052:3:9"},"nodeType":"YulFunctionCall","src":"8052:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8026:6:9"},"nodeType":"YulFunctionCall","src":"8026:47:9"},"nodeType":"YulExpressionStatement","src":"8026:47:9"},{"nodeType":"YulAssignment","src":"8082:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8216:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8090:124:9"},"nodeType":"YulFunctionCall","src":"8090:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8082:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7960:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7975:4:9","type":""}],"src":"7809:419:9"},{"body":{"nodeType":"YulBlock","src":"8405:248:9","statements":[{"nodeType":"YulAssignment","src":"8415:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8427:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8438:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8423:3:9"},"nodeType":"YulFunctionCall","src":"8423:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8415:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8462:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8473:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8458:3:9"},"nodeType":"YulFunctionCall","src":"8458:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8481:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"8487:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8477:3:9"},"nodeType":"YulFunctionCall","src":"8477:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8451:6:9"},"nodeType":"YulFunctionCall","src":"8451:47:9"},"nodeType":"YulExpressionStatement","src":"8451:47:9"},{"nodeType":"YulAssignment","src":"8507:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8641:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8515:124:9"},"nodeType":"YulFunctionCall","src":"8515:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8507:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8385:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8400:4:9","type":""}],"src":"8234:419:9"},{"body":{"nodeType":"YulBlock","src":"8757:124:9","statements":[{"nodeType":"YulAssignment","src":"8767:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8779:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8790:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8775:3:9"},"nodeType":"YulFunctionCall","src":"8775:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8767:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8847:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8860:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8871:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8856:3:9"},"nodeType":"YulFunctionCall","src":"8856:17:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8803:43:9"},"nodeType":"YulFunctionCall","src":"8803:71:9"},"nodeType":"YulExpressionStatement","src":"8803:71:9"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8729:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8741:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8752:4:9","type":""}],"src":"8659:222:9"},{"body":{"nodeType":"YulBlock","src":"8928:88:9","statements":[{"nodeType":"YulAssignment","src":"8938:30:9","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"8948:18:9"},"nodeType":"YulFunctionCall","src":"8948:20:9"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8938:6:9"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8997:6:9"},{"name":"size","nodeType":"YulIdentifier","src":"9005:4:9"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"8977:19:9"},"nodeType":"YulFunctionCall","src":"8977:33:9"},"nodeType":"YulExpressionStatement","src":"8977:33:9"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"8912:4:9","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"8921:6:9","type":""}],"src":"8887:129:9"},{"body":{"nodeType":"YulBlock","src":"9062:35:9","statements":[{"nodeType":"YulAssignment","src":"9072:19:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9088:2:9","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9082:5:9"},"nodeType":"YulFunctionCall","src":"9082:9:9"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9072:6:9"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"9055:6:9","type":""}],"src":"9022:75:9"},{"body":{"nodeType":"YulBlock","src":"9170:241:9","statements":[{"body":{"nodeType":"YulBlock","src":"9275:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9277:16:9"},"nodeType":"YulFunctionCall","src":"9277:18:9"},"nodeType":"YulExpressionStatement","src":"9277:18:9"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9247:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"9255:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9244:2:9"},"nodeType":"YulFunctionCall","src":"9244:30:9"},"nodeType":"YulIf","src":"9241:56:9"},{"nodeType":"YulAssignment","src":"9307:37:9","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9337:6:9"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9315:21:9"},"nodeType":"YulFunctionCall","src":"9315:29:9"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9307:4:9"}]},{"nodeType":"YulAssignment","src":"9381:23:9","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"9393:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"9399:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9389:3:9"},"nodeType":"YulFunctionCall","src":"9389:15:9"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9381:4:9"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"9154:6:9","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"9165:4:9","type":""}],"src":"9103:308:9"},{"body":{"nodeType":"YulBlock","src":"9476:40:9","statements":[{"nodeType":"YulAssignment","src":"9487:22:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9503:5:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9497:5:9"},"nodeType":"YulFunctionCall","src":"9497:12:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9487:6:9"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9459:5:9","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9469:6:9","type":""}],"src":"9417:99:9"},{"body":{"nodeType":"YulBlock","src":"9618:73:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9635:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"9640:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9628:6:9"},"nodeType":"YulFunctionCall","src":"9628:19:9"},"nodeType":"YulExpressionStatement","src":"9628:19:9"},{"nodeType":"YulAssignment","src":"9656:29:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9675:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"9680:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9671:3:9"},"nodeType":"YulFunctionCall","src":"9671:14:9"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9656:11:9"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9590:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"9595:6:9","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9606:11:9","type":""}],"src":"9522:169:9"},{"body":{"nodeType":"YulBlock","src":"9811:34:9","statements":[{"nodeType":"YulAssignment","src":"9821:18:9","value":{"name":"pos","nodeType":"YulIdentifier","src":"9836:3:9"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9821:11:9"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9783:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"9788:6:9","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9799:11:9","type":""}],"src":"9697:148:9"},{"body":{"nodeType":"YulBlock","src":"9896:51:9","statements":[{"nodeType":"YulAssignment","src":"9906:35:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9935:5:9"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9917:17:9"},"nodeType":"YulFunctionCall","src":"9917:24:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9906:7:9"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9878:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9888:7:9","type":""}],"src":"9851:96:9"},{"body":{"nodeType":"YulBlock","src":"9997:32:9","statements":[{"nodeType":"YulAssignment","src":"10007:16:9","value":{"name":"value","nodeType":"YulIdentifier","src":"10018:5:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10007:7:9"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9979:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9989:7:9","type":""}],"src":"9953:76:9"},{"body":{"nodeType":"YulBlock","src":"10080:81:9","statements":[{"nodeType":"YulAssignment","src":"10090:65:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10105:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"10112:42:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10101:3:9"},"nodeType":"YulFunctionCall","src":"10101:54:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10090:7:9"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10062:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10072:7:9","type":""}],"src":"10035:126:9"},{"body":{"nodeType":"YulBlock","src":"10212:32:9","statements":[{"nodeType":"YulAssignment","src":"10222:16:9","value":{"name":"value","nodeType":"YulIdentifier","src":"10233:5:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10222:7:9"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10194:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10204:7:9","type":""}],"src":"10167:77:9"},{"body":{"nodeType":"YulBlock","src":"10294:61:9","statements":[{"nodeType":"YulAssignment","src":"10304:45:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10319:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"10326:22:9","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10315:3:9"},"nodeType":"YulFunctionCall","src":"10315:34:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10304:7:9"}]}]},"name":"cleanup_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10276:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10286:7:9","type":""}],"src":"10250:105:9"},{"body":{"nodeType":"YulBlock","src":"10449:66:9","statements":[{"nodeType":"YulAssignment","src":"10459:50:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10503:5:9"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"10472:30:9"},"nodeType":"YulFunctionCall","src":"10472:37:9"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10459:9:9"}]}]},"name":"convert_t_contract$_AggregatorV3Interface_$45_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10429:5:9","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10439:9:9","type":""}],"src":"10361:154:9"},{"body":{"nodeType":"YulBlock","src":"10581:66:9","statements":[{"nodeType":"YulAssignment","src":"10591:50:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10635:5:9"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"10604:30:9"},"nodeType":"YulFunctionCall","src":"10604:37:9"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10591:9:9"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10561:5:9","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10571:9:9","type":""}],"src":"10521:126:9"},{"body":{"nodeType":"YulBlock","src":"10713:53:9","statements":[{"nodeType":"YulAssignment","src":"10723:37:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10754:5:9"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"10736:17:9"},"nodeType":"YulFunctionCall","src":"10736:24:9"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10723:9:9"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10693:5:9","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10703:9:9","type":""}],"src":"10653:113:9"},{"body":{"nodeType":"YulBlock","src":"10823:103:9","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10846:3:9"},{"name":"src","nodeType":"YulIdentifier","src":"10851:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"10856:6:9"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"10833:12:9"},"nodeType":"YulFunctionCall","src":"10833:30:9"},"nodeType":"YulExpressionStatement","src":"10833:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10904:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"10909:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10900:3:9"},"nodeType":"YulFunctionCall","src":"10900:16:9"},{"kind":"number","nodeType":"YulLiteral","src":"10918:1:9","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10893:6:9"},"nodeType":"YulFunctionCall","src":"10893:27:9"},"nodeType":"YulExpressionStatement","src":"10893:27:9"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10805:3:9","type":""},{"name":"dst","nodeType":"YulTypedName","src":"10810:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"10815:6:9","type":""}],"src":"10772:154:9"},{"body":{"nodeType":"YulBlock","src":"10981:258:9","statements":[{"nodeType":"YulVariableDeclaration","src":"10991:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"11000:1:9","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10995:1:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"11060:63:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11085:3:9"},{"name":"i","nodeType":"YulIdentifier","src":"11090:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11081:3:9"},"nodeType":"YulFunctionCall","src":"11081:11:9"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11104:3:9"},{"name":"i","nodeType":"YulIdentifier","src":"11109:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11100:3:9"},"nodeType":"YulFunctionCall","src":"11100:11:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11094:5:9"},"nodeType":"YulFunctionCall","src":"11094:18:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11074:6:9"},"nodeType":"YulFunctionCall","src":"11074:39:9"},"nodeType":"YulExpressionStatement","src":"11074:39:9"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11021:1:9"},{"name":"length","nodeType":"YulIdentifier","src":"11024:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11018:2:9"},"nodeType":"YulFunctionCall","src":"11018:13:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11032:19:9","statements":[{"nodeType":"YulAssignment","src":"11034:15:9","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11043:1:9"},{"kind":"number","nodeType":"YulLiteral","src":"11046:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11039:3:9"},"nodeType":"YulFunctionCall","src":"11039:10:9"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11034:1:9"}]}]},"pre":{"nodeType":"YulBlock","src":"11014:3:9","statements":[]},"src":"11010:113:9"},{"body":{"nodeType":"YulBlock","src":"11157:76:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11207:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"11212:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11203:3:9"},"nodeType":"YulFunctionCall","src":"11203:16:9"},{"kind":"number","nodeType":"YulLiteral","src":"11221:1:9","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11196:6:9"},"nodeType":"YulFunctionCall","src":"11196:27:9"},"nodeType":"YulExpressionStatement","src":"11196:27:9"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11138:1:9"},{"name":"length","nodeType":"YulIdentifier","src":"11141:6:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11135:2:9"},"nodeType":"YulFunctionCall","src":"11135:13:9"},"nodeType":"YulIf","src":"11132:101:9"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10963:3:9","type":""},{"name":"dst","nodeType":"YulTypedName","src":"10968:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"10973:6:9","type":""}],"src":"10932:307:9"},{"body":{"nodeType":"YulBlock","src":"11296:269:9","statements":[{"nodeType":"YulAssignment","src":"11306:22:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11320:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"11326:1:9","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11316:3:9"},"nodeType":"YulFunctionCall","src":"11316:12:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11306:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"11337:38:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11367:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"11373:1:9","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11363:3:9"},"nodeType":"YulFunctionCall","src":"11363:12:9"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"11341:18:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"11414:51:9","statements":[{"nodeType":"YulAssignment","src":"11428:27:9","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11442:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"11450:4:9","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11438:3:9"},"nodeType":"YulFunctionCall","src":"11438:17:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11428:6:9"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11394:18:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11387:6:9"},"nodeType":"YulFunctionCall","src":"11387:26:9"},"nodeType":"YulIf","src":"11384:81:9"},{"body":{"nodeType":"YulBlock","src":"11517:42:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"11531:16:9"},"nodeType":"YulFunctionCall","src":"11531:18:9"},"nodeType":"YulExpressionStatement","src":"11531:18:9"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11481:18:9"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11504:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"11512:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11501:2:9"},"nodeType":"YulFunctionCall","src":"11501:14:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11478:2:9"},"nodeType":"YulFunctionCall","src":"11478:38:9"},"nodeType":"YulIf","src":"11475:84:9"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11280:4:9","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11289:6:9","type":""}],"src":"11245:320:9"},{"body":{"nodeType":"YulBlock","src":"11614:238:9","statements":[{"nodeType":"YulVariableDeclaration","src":"11624:58:9","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11646:6:9"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"11676:4:9"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"11654:21:9"},"nodeType":"YulFunctionCall","src":"11654:27:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11642:3:9"},"nodeType":"YulFunctionCall","src":"11642:40:9"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"11628:10:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"11793:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"11795:16:9"},"nodeType":"YulFunctionCall","src":"11795:18:9"},"nodeType":"YulExpressionStatement","src":"11795:18:9"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"11736:10:9"},{"kind":"number","nodeType":"YulLiteral","src":"11748:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11733:2:9"},"nodeType":"YulFunctionCall","src":"11733:34:9"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"11772:10:9"},{"name":"memPtr","nodeType":"YulIdentifier","src":"11784:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11769:2:9"},"nodeType":"YulFunctionCall","src":"11769:22:9"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11730:2:9"},"nodeType":"YulFunctionCall","src":"11730:62:9"},"nodeType":"YulIf","src":"11727:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11831:2:9","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"11835:10:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11824:6:9"},"nodeType":"YulFunctionCall","src":"11824:22:9"},"nodeType":"YulExpressionStatement","src":"11824:22:9"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11600:6:9","type":""},{"name":"size","nodeType":"YulTypedName","src":"11608:4:9","type":""}],"src":"11571:281:9"},{"body":{"nodeType":"YulBlock","src":"11901:190:9","statements":[{"nodeType":"YulAssignment","src":"11911:33:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11938:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11920:17:9"},"nodeType":"YulFunctionCall","src":"11920:24:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11911:5:9"}]},{"body":{"nodeType":"YulBlock","src":"12034:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12036:16:9"},"nodeType":"YulFunctionCall","src":"12036:18:9"},"nodeType":"YulExpressionStatement","src":"12036:18:9"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11959:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"11966:66:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11956:2:9"},"nodeType":"YulFunctionCall","src":"11956:77:9"},"nodeType":"YulIf","src":"11953:103:9"},{"nodeType":"YulAssignment","src":"12065:20:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12076:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"12083:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12072:3:9"},"nodeType":"YulFunctionCall","src":"12072:13:9"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12065:3:9"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11887:5:9","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"11897:3:9","type":""}],"src":"11858:233:9"},{"body":{"nodeType":"YulBlock","src":"12125:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12142:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12145:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12135:6:9"},"nodeType":"YulFunctionCall","src":"12135:88:9"},"nodeType":"YulExpressionStatement","src":"12135:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12239:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12242:4:9","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12232:6:9"},"nodeType":"YulFunctionCall","src":"12232:15:9"},"nodeType":"YulExpressionStatement","src":"12232:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12263:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12266:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12256:6:9"},"nodeType":"YulFunctionCall","src":"12256:15:9"},"nodeType":"YulExpressionStatement","src":"12256:15:9"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"12097:180:9"},{"body":{"nodeType":"YulBlock","src":"12311:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12328:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12331:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12321:6:9"},"nodeType":"YulFunctionCall","src":"12321:88:9"},"nodeType":"YulExpressionStatement","src":"12321:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12425:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12428:4:9","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12418:6:9"},"nodeType":"YulFunctionCall","src":"12418:15:9"},"nodeType":"YulExpressionStatement","src":"12418:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12449:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12452:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12442:6:9"},"nodeType":"YulFunctionCall","src":"12442:15:9"},"nodeType":"YulExpressionStatement","src":"12442:15:9"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"12283:180:9"},{"body":{"nodeType":"YulBlock","src":"12497:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12514:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12517:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12507:6:9"},"nodeType":"YulFunctionCall","src":"12507:88:9"},"nodeType":"YulExpressionStatement","src":"12507:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12611:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12614:4:9","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12604:6:9"},"nodeType":"YulFunctionCall","src":"12604:15:9"},"nodeType":"YulExpressionStatement","src":"12604:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12635:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12638:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12628:6:9"},"nodeType":"YulFunctionCall","src":"12628:15:9"},"nodeType":"YulExpressionStatement","src":"12628:15:9"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"12469:180:9"},{"body":{"nodeType":"YulBlock","src":"12683:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12700:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12703:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12693:6:9"},"nodeType":"YulFunctionCall","src":"12693:88:9"},"nodeType":"YulExpressionStatement","src":"12693:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12797:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12800:4:9","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12790:6:9"},"nodeType":"YulFunctionCall","src":"12790:15:9"},"nodeType":"YulExpressionStatement","src":"12790:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12821:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12824:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12814:6:9"},"nodeType":"YulFunctionCall","src":"12814:15:9"},"nodeType":"YulExpressionStatement","src":"12814:15:9"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"12655:180:9"},{"body":{"nodeType":"YulBlock","src":"12930:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12947:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12950:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12940:6:9"},"nodeType":"YulFunctionCall","src":"12940:12:9"},"nodeType":"YulExpressionStatement","src":"12940:12:9"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"12841:117:9"},{"body":{"nodeType":"YulBlock","src":"13053:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13070:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13073:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13063:6:9"},"nodeType":"YulFunctionCall","src":"13063:12:9"},"nodeType":"YulExpressionStatement","src":"13063:12:9"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"12964:117:9"},{"body":{"nodeType":"YulBlock","src":"13176:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13193:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13196:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13186:6:9"},"nodeType":"YulFunctionCall","src":"13186:12:9"},"nodeType":"YulExpressionStatement","src":"13186:12:9"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"13087:117:9"},{"body":{"nodeType":"YulBlock","src":"13299:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13316:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13319:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13309:6:9"},"nodeType":"YulFunctionCall","src":"13309:12:9"},"nodeType":"YulExpressionStatement","src":"13309:12:9"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"13210:117:9"},{"body":{"nodeType":"YulBlock","src":"13381:54:9","statements":[{"nodeType":"YulAssignment","src":"13391:38:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13409:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"13416:2:9","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13405:3:9"},"nodeType":"YulFunctionCall","src":"13405:14:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13425:2:9","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13421:3:9"},"nodeType":"YulFunctionCall","src":"13421:7:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13401:3:9"},"nodeType":"YulFunctionCall","src":"13401:28:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13391:6:9"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13364:5:9","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"13374:6:9","type":""}],"src":"13333:102:9"},{"body":{"nodeType":"YulBlock","src":"13547:119:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13569:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"13577:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13565:3:9"},"nodeType":"YulFunctionCall","src":"13565:14:9"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"13581:34:9","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13558:6:9"},"nodeType":"YulFunctionCall","src":"13558:58:9"},"nodeType":"YulExpressionStatement","src":"13558:58:9"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13637:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"13645:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13633:3:9"},"nodeType":"YulFunctionCall","src":"13633:15:9"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"13650:8:9","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13626:6:9"},"nodeType":"YulFunctionCall","src":"13626:33:9"},"nodeType":"YulExpressionStatement","src":"13626:33:9"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13539:6:9","type":""}],"src":"13441:225:9"},{"body":{"nodeType":"YulBlock","src":"13778:68:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13800:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"13808:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13796:3:9"},"nodeType":"YulFunctionCall","src":"13796:14:9"},{"hexValue":"5072696365204665656420616c7265616479206164646564","kind":"string","nodeType":"YulLiteral","src":"13812:26:9","type":"","value":"Price Feed already added"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13789:6:9"},"nodeType":"YulFunctionCall","src":"13789:50:9"},"nodeType":"YulExpressionStatement","src":"13789:50:9"}]},"name":"store_literal_in_memory_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13770:6:9","type":""}],"src":"13672:174:9"},{"body":{"nodeType":"YulBlock","src":"13958:76:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13980:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"13988:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13976:3:9"},"nodeType":"YulFunctionCall","src":"13976:14:9"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"13992:34:9","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13969:6:9"},"nodeType":"YulFunctionCall","src":"13969:58:9"},"nodeType":"YulExpressionStatement","src":"13969:58:9"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13950:6:9","type":""}],"src":"13852:182:9"},{"body":{"nodeType":"YulBlock","src":"14083:79:9","statements":[{"body":{"nodeType":"YulBlock","src":"14140:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14149:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14152:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14142:6:9"},"nodeType":"YulFunctionCall","src":"14142:12:9"},"nodeType":"YulExpressionStatement","src":"14142:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14106:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14131:5:9"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"14113:17:9"},"nodeType":"YulFunctionCall","src":"14113:24:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14103:2:9"},"nodeType":"YulFunctionCall","src":"14103:35:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14096:6:9"},"nodeType":"YulFunctionCall","src":"14096:43:9"},"nodeType":"YulIf","src":"14093:63:9"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14076:5:9","type":""}],"src":"14040:122:9"},{"body":{"nodeType":"YulBlock","src":"14210:78:9","statements":[{"body":{"nodeType":"YulBlock","src":"14266:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14275:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14278:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14268:6:9"},"nodeType":"YulFunctionCall","src":"14268:12:9"},"nodeType":"YulExpressionStatement","src":"14268:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14233:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14257:5:9"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"14240:16:9"},"nodeType":"YulFunctionCall","src":"14240:23:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14230:2:9"},"nodeType":"YulFunctionCall","src":"14230:34:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14223:6:9"},"nodeType":"YulFunctionCall","src":"14223:42:9"},"nodeType":"YulIf","src":"14220:62:9"}]},"name":"validator_revert_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14203:5:9","type":""}],"src":"14168:120:9"},{"body":{"nodeType":"YulBlock","src":"14337:79:9","statements":[{"body":{"nodeType":"YulBlock","src":"14394:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14403:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14406:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14396:6:9"},"nodeType":"YulFunctionCall","src":"14396:12:9"},"nodeType":"YulExpressionStatement","src":"14396:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14360:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14385:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14367:17:9"},"nodeType":"YulFunctionCall","src":"14367:24:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14357:2:9"},"nodeType":"YulFunctionCall","src":"14357:35:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14350:6:9"},"nodeType":"YulFunctionCall","src":"14350:43:9"},"nodeType":"YulIf","src":"14347:63:9"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14330:5:9","type":""}],"src":"14294:122:9"},{"body":{"nodeType":"YulBlock","src":"14464:78:9","statements":[{"body":{"nodeType":"YulBlock","src":"14520:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14529:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14532:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14522:6:9"},"nodeType":"YulFunctionCall","src":"14522:12:9"},"nodeType":"YulExpressionStatement","src":"14522:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14487:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14511:5:9"}],"functionName":{"name":"cleanup_t_uint80","nodeType":"YulIdentifier","src":"14494:16:9"},"nodeType":"YulFunctionCall","src":"14494:23:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14484:2:9"},"nodeType":"YulFunctionCall","src":"14484:34:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14477:6:9"},"nodeType":"YulFunctionCall","src":"14477:42:9"},"nodeType":"YulIf","src":"14474:62:9"}]},"name":"validator_revert_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14457:5:9","type":""}],"src":"14422:120:9"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_addresst_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AggregatorV3Interface_$45_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_address_t_contract$_AggregatorV3Interface_$45__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function convert_t_contract$_AggregatorV3Interface_$45_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Price Feed already added\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n}\n","id":9,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100625760003560e01c806310c7f0b91461006757806341976e0914610099578063715018a6146100c95780638c35423e146100d35780638da5cb5b146100ef578063f2fde38b1461010d575b600080fd5b610081600480360381019061007c9190610cd3565b610129565b60405161009093929190610ead565b60405180910390f35b6100b360048036038101906100ae9190610c37565b61022b565b6040516100c09190610f4b565b60405180910390f35b6100d16102c9565b005b6100ed60048036038101906100e89190610c64565b6102dd565b005b6100f7610688565b6040516101049190610e92565b60405180910390f35b61012760048036038101906101229190610c37565b6106b1565b005b6001818154811061013957600080fd5b906000526020600020906003020160009150905080600001805461015c906110b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610188906110b7565b80156101d55780601f106101aa576101008083540402835291602001916101d5565b820191906000526020600020905b8154815290600101906020018083116101b857829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b60008061023783610735565b905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561028157600080fd5b505afa158015610295573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b99190610d00565b5050509150508092505050919050565b6102d1610971565b6102db60006109ef565b565b6102e5610971565b60006001805480602002602001604051908101604052809291908181526020016000905b82821015610479578382906000526020600020906003020160405180606001604052908160008201805461033c906110b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610368906110b7565b80156103b55780601f1061038a576101008083540402835291602001916103b5565b820191906000526020600020905b81548152906001019060200180831161039857829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190610309565b5050505090506000805b825181101561051a5782818151811061049f5761049e6111c1565b5b6020026020010151600001516040516020016104bb9190610e7b565b60405160208183030381529060405280519060200120866040516020016104e29190610e7b565b604051602081830303815290604052805190602001201415610507576001915061051a565b80806105129061111a565b915050610483565b50801561055c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055390610f0b565b60405180910390fd5b6000839050600160405180606001604052808881526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000190805190602001906105ef929190610abb565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106b9610971565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610729576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072090610eeb565b60405180910390fd5b610732816109ef565b50565b6000806001805480602002602001604051908101604052809291908181526020016000905b828210156108ca578382906000526020600020906003020160405180606001604052908160008201805461078d906110b7565b80601f01602080910402602001604051908101604052809291908181526020018280546107b9906110b7565b80156108065780601f106107db57610100808354040283529160200191610806565b820191906000526020600020905b8154815290600101906020018083116107e957829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508152602001906001019061075a565b50505050905060005b8151811015610969578181815181106108ef576108ee6111c1565b5b60200260200101516020015173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561095657818181518110610941576109406111c1565b5b6020026020010151604001519250505061096c565b80806109619061111a565b9150506108d3565b50505b919050565b610979610ab3565b73ffffffffffffffffffffffffffffffffffffffff16610997610688565b73ffffffffffffffffffffffffffffffffffffffff16146109ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e490610f2b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b828054610ac7906110b7565b90600052602060002090601f016020900481019282610ae95760008555610b30565b82601f10610b0257805160ff1916838001178555610b30565b82800160010185558215610b30579182015b82811115610b2f578251825591602001919060010190610b14565b5b509050610b3d9190610b41565b5090565b5b80821115610b5a576000816000905550600101610b42565b5090565b6000610b71610b6c84610f8b565b610f66565b905082815260208101848484011115610b8d57610b8c611224565b5b610b98848285611075565b509392505050565b600081359050610baf816112e5565b92915050565b600081519050610bc4816112fc565b92915050565b600082601f830112610bdf57610bde61121f565b5b8135610bef848260208601610b5e565b91505092915050565b600081359050610c0781611313565b92915050565b600081519050610c1c81611313565b92915050565b600081519050610c318161132a565b92915050565b600060208284031215610c4d57610c4c61122e565b5b6000610c5b84828501610ba0565b91505092915050565b600080600060608486031215610c7d57610c7c61122e565b5b600084013567ffffffffffffffff811115610c9b57610c9a611229565b5b610ca786828701610bca565b9350506020610cb886828701610ba0565b9250506040610cc986828701610ba0565b9150509250925092565b600060208284031215610ce957610ce861122e565b5b6000610cf784828501610bf8565b91505092915050565b600080600080600060a08688031215610d1c57610d1b61122e565b5b6000610d2a88828901610c22565b9550506020610d3b88828901610bb5565b9450506040610d4c88828901610c0d565b9350506060610d5d88828901610c0d565b9250506080610d6e88828901610c22565b9150509295509295909350565b610d8481610fe3565b82525050565b610d938161103f565b82525050565b6000610da482610fbc565b610dae8185610fc7565b9350610dbe818560208601611084565b610dc781611233565b840191505092915050565b6000610ddd82610fbc565b610de78185610fd8565b9350610df7818560208601611084565b80840191505092915050565b6000610e10602683610fc7565b9150610e1b82611244565b604082019050919050565b6000610e33601883610fc7565b9150610e3e82611293565b602082019050919050565b6000610e56602083610fc7565b9150610e61826112bc565b602082019050919050565b610e758161101f565b82525050565b6000610e878284610dd2565b915081905092915050565b6000602082019050610ea76000830184610d7b565b92915050565b60006060820190508181036000830152610ec78186610d99565b9050610ed66020830185610d7b565b610ee36040830184610d8a565b949350505050565b60006020820190508181036000830152610f0481610e03565b9050919050565b60006020820190508181036000830152610f2481610e26565b9050919050565b60006020820190508181036000830152610f4481610e49565b9050919050565b6000602082019050610f606000830184610e6c565b92915050565b6000610f70610f81565b9050610f7c82826110e9565b919050565b6000604051905090565b600067ffffffffffffffff821115610fa657610fa56111f0565b5b610faf82611233565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000610fee82610fff565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b600061104a82611051565b9050919050565b600061105c82611063565b9050919050565b600061106e82610fff565b9050919050565b82818337600083830152505050565b60005b838110156110a2578082015181840152602081019050611087565b838111156110b1576000848401525b50505050565b600060028204905060018216806110cf57607f821691505b602082108114156110e3576110e2611192565b5b50919050565b6110f282611233565b810181811067ffffffffffffffff82111715611111576111106111f0565b5b80604052505050565b60006111258261101f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561115857611157611163565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5072696365204665656420616c72656164792061646465640000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6112ee81610fe3565b81146112f957600080fd5b50565b61130581610ff5565b811461131057600080fd5b50565b61131c8161101f565b811461132757600080fd5b50565b61133381611029565b811461133e57600080fd5b5056fea2646970667358221220c35e7e8ecb7262f04ee52507df9a62a77b09793980be9195195c1e70958bbdd764736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x10C7F0B9 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x41976E09 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x8C35423E EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x10D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH2 0x129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x90 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAE SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH2 0x2C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xC64 JUMP JUMPDEST PUSH2 0x2DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF7 PUSH2 0x688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x6B1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x15C SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x188 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x237 DUP4 PUSH2 0x735 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x295 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0xD00 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x971 JUMP JUMPDEST PUSH2 0x2DB PUSH1 0x0 PUSH2 0x9EF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2E5 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x479 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x33C SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x368 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x38A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3B5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x398 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x309 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x51A JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x49F JUMPI PUSH2 0x49E PUSH2 0x11C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4E2 SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0x507 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x51A JUMP JUMPDEST DUP1 DUP1 PUSH2 0x512 SWAP1 PUSH2 0x111A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x483 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x553 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x5EF SWAP3 SWAP2 SWAP1 PUSH2 0xABB JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6B9 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x729 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x720 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x732 DUP2 PUSH2 0x9EF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x8CA JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x78D SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7B9 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x806 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7DB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x806 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7E9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x75A JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x969 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x8EF JUMPI PUSH2 0x8EE PUSH2 0x11C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x956 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x941 JUMPI PUSH2 0x940 PUSH2 0x11C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD SWAP3 POP POP POP PUSH2 0x96C JUMP JUMPDEST DUP1 DUP1 PUSH2 0x961 SWAP1 PUSH2 0x111A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8D3 JUMP JUMPDEST POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x979 PUSH2 0xAB3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x997 PUSH2 0x688 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E4 SWAP1 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xAC7 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xAE9 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xB30 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xB02 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xB30 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xB30 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB2F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB14 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0xB41 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xB5A JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xB42 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB71 PUSH2 0xB6C DUP5 PUSH2 0xF8B JUMP JUMPDEST PUSH2 0xF66 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xB8D JUMPI PUSH2 0xB8C PUSH2 0x1224 JUMP JUMPDEST JUMPDEST PUSH2 0xB98 DUP5 DUP3 DUP6 PUSH2 0x1075 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBAF DUP2 PUSH2 0x12E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xBC4 DUP2 PUSH2 0x12FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBDF JUMPI PUSH2 0xBDE PUSH2 0x121F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBEF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xB5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC07 DUP2 PUSH2 0x1313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC1C DUP2 PUSH2 0x1313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC31 DUP2 PUSH2 0x132A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC4D JUMPI PUSH2 0xC4C PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC5B DUP5 DUP3 DUP6 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC7D JUMPI PUSH2 0xC7C PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC9B JUMPI PUSH2 0xC9A PUSH2 0x1229 JUMP JUMPDEST JUMPDEST PUSH2 0xCA7 DUP7 DUP3 DUP8 ADD PUSH2 0xBCA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCB8 DUP7 DUP3 DUP8 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCC9 DUP7 DUP3 DUP8 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE9 JUMPI PUSH2 0xCE8 PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCF7 DUP5 DUP3 DUP6 ADD PUSH2 0xBF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD1C JUMPI PUSH2 0xD1B PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD2A DUP9 DUP3 DUP10 ADD PUSH2 0xC22 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xD3B DUP9 DUP3 DUP10 ADD PUSH2 0xBB5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xD4C DUP9 DUP3 DUP10 ADD PUSH2 0xC0D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xD5D DUP9 DUP3 DUP10 ADD PUSH2 0xC0D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xD6E DUP9 DUP3 DUP10 ADD PUSH2 0xC22 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0xD84 DUP2 PUSH2 0xFE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD93 DUP2 PUSH2 0x103F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA4 DUP3 PUSH2 0xFBC JUMP JUMPDEST PUSH2 0xDAE DUP2 DUP6 PUSH2 0xFC7 JUMP JUMPDEST SWAP4 POP PUSH2 0xDBE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1084 JUMP JUMPDEST PUSH2 0xDC7 DUP2 PUSH2 0x1233 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDD DUP3 PUSH2 0xFBC JUMP JUMPDEST PUSH2 0xDE7 DUP2 DUP6 PUSH2 0xFD8 JUMP JUMPDEST SWAP4 POP PUSH2 0xDF7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1084 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE10 PUSH1 0x26 DUP4 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE1B DUP3 PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE33 PUSH1 0x18 DUP4 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE3E DUP3 PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE56 PUSH1 0x20 DUP4 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE61 DUP3 PUSH2 0x12BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE75 DUP2 PUSH2 0x101F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE87 DUP3 DUP5 PUSH2 0xDD2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEA7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEC7 DUP2 DUP7 PUSH2 0xD99 JUMP JUMPDEST SWAP1 POP PUSH2 0xED6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0xEE3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD8A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF04 DUP2 PUSH2 0xE03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF24 DUP2 PUSH2 0xE26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF44 DUP2 PUSH2 0xE49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF60 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF70 PUSH2 0xF81 JUMP JUMPDEST SWAP1 POP PUSH2 0xF7C DUP3 DUP3 PUSH2 0x10E9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xFA6 JUMPI PUSH2 0xFA5 PUSH2 0x11F0 JUMP JUMPDEST JUMPDEST PUSH2 0xFAF DUP3 PUSH2 0x1233 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFEE DUP3 PUSH2 0xFFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104A DUP3 PUSH2 0x1051 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105C DUP3 PUSH2 0x1063 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x106E DUP3 PUSH2 0xFFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10A2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1087 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x10B1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10CF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x10E3 JUMPI PUSH2 0x10E2 PUSH2 0x1192 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F2 DUP3 PUSH2 0x1233 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1111 JUMPI PUSH2 0x1110 PUSH2 0x11F0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1125 DUP3 PUSH2 0x101F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1158 JUMPI PUSH2 0x1157 PUSH2 0x1163 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5072696365204665656420616C72656164792061646465640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x12EE DUP2 PUSH2 0xFE3 JUMP JUMPDEST DUP2 EQ PUSH2 0x12F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1305 DUP2 PUSH2 0xFF5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x131C DUP2 PUSH2 0x101F JUMP JUMPDEST DUP2 EQ PUSH2 0x1327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1333 DUP2 PUSH2 0x1029 JUMP JUMPDEST DUP2 EQ PUSH2 0x133E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0x5E PUSH31 0x8ECB7262F04EE52507DF9A62A77B09793980BE9195195C1E70958BBDD76473 PUSH16 0x6C634300080700330000000000000000 ","sourceMap":"194:1570:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;234:30;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1521:240;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:1;;;:::i;:::-;;438:713:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;234:30:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1521:240::-;1580:7;1600:31;1634:22;1647:8;1634:12;:22::i;:::-;1600:56;;1670:13;1693:9;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1667:53;;;;;;1746:6;1731:22;;;;1521:240;;;:::o;1831:101:1:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;438:713:5:-;1094:13:1;:11;:13::i;:::-;579:29:5::1;611:10;579:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;632:12;668:9:::0;663:285:::1;687:9;:16;683:1;:20;663:285;;;829:9;839:1;829:12;;;;;;;;:::i;:::-;;;;;;;;:17;;;812:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;802:46;;;;;;774:5;757:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;747:34;;;;;;:101;725:212;;;893:4;883:14;;916:5;;725:212;705:3;;;;;:::i;:::-;;;;663:285;;;;967:7;966:8;958:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;1014:31;1070:8;1014:65;;1090:10;1106:36;;;;;;;;1117:5;1106:36;;;;1124:6;1106:36;;;;;;1132:9;1106:36;;;;::::0;1090:53:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;568:583;;;438:713:::0;;;:::o;1201:85:1:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2081:198::-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1159:354:5:-;1236:31;1280:29;1312:10;1280:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1340:9;1335:171;1359:9;:16;1355:1;:20;1335:171;;;1411:9;1421:1;1411:12;;;;;;;;:::i;:::-;;;;;;;;:18;;;1401:28;;:6;:28;;;1397:98;;;1457:9;1467:1;1457:12;;;;;;;;:::i;:::-;;;;;;;;:22;;;1450:29;;;;;;1397:98;1377:3;;;;;:::i;:::-;;;;1335:171;;;;1269:244;1159:354;;;;:::o;1359:130:1:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:412:9:-;85:5;110:66;126:49;168:6;126:49;:::i;:::-;110:66;:::i;:::-;101:75;;199:6;192:5;185:21;237:4;230:5;226:16;275:3;266:6;261:3;257:16;254:25;251:112;;;282:79;;:::i;:::-;251:112;372:41;406:6;401:3;396;372:41;:::i;:::-;91:328;7:412;;;;;:::o;425:139::-;471:5;509:6;496:20;487:29;;525:33;552:5;525:33;:::i;:::-;425:139;;;;:::o;570:141::-;626:5;657:6;651:13;642:22;;673:32;699:5;673:32;:::i;:::-;570:141;;;;:::o;731:340::-;787:5;836:3;829:4;821:6;817:17;813:27;803:122;;844:79;;:::i;:::-;803:122;961:6;948:20;986:79;1061:3;1053:6;1046:4;1038:6;1034:17;986:79;:::i;:::-;977:88;;793:278;731:340;;;;:::o;1077:139::-;1123:5;1161:6;1148:20;1139:29;;1177:33;1204:5;1177:33;:::i;:::-;1077:139;;;;:::o;1222:143::-;1279:5;1310:6;1304:13;1295:22;;1326:33;1353:5;1326:33;:::i;:::-;1222:143;;;;:::o;1371:141::-;1427:5;1458:6;1452:13;1443:22;;1474:32;1500:5;1474:32;:::i;:::-;1371:141;;;;:::o;1518:329::-;1577:6;1626:2;1614:9;1605:7;1601:23;1597:32;1594:119;;;1632:79;;:::i;:::-;1594:119;1752:1;1777:53;1822:7;1813:6;1802:9;1798:22;1777:53;:::i;:::-;1767:63;;1723:117;1518:329;;;;:::o;1853:799::-;1940:6;1948;1956;2005:2;1993:9;1984:7;1980:23;1976:32;1973:119;;;2011:79;;:::i;:::-;1973:119;2159:1;2148:9;2144:17;2131:31;2189:18;2181:6;2178:30;2175:117;;;2211:79;;:::i;:::-;2175:117;2316:63;2371:7;2362:6;2351:9;2347:22;2316:63;:::i;:::-;2306:73;;2102:287;2428:2;2454:53;2499:7;2490:6;2479:9;2475:22;2454:53;:::i;:::-;2444:63;;2399:118;2556:2;2582:53;2627:7;2618:6;2607:9;2603:22;2582:53;:::i;:::-;2572:63;;2527:118;1853:799;;;;;:::o;2658:329::-;2717:6;2766:2;2754:9;2745:7;2741:23;2737:32;2734:119;;;2772:79;;:::i;:::-;2734:119;2892:1;2917:53;2962:7;2953:6;2942:9;2938:22;2917:53;:::i;:::-;2907:63;;2863:117;2658:329;;;;:::o;2993:971::-;3096:6;3104;3112;3120;3128;3177:3;3165:9;3156:7;3152:23;3148:33;3145:120;;;3184:79;;:::i;:::-;3145:120;3304:1;3329:63;3384:7;3375:6;3364:9;3360:22;3329:63;:::i;:::-;3319:73;;3275:127;3441:2;3467:63;3522:7;3513:6;3502:9;3498:22;3467:63;:::i;:::-;3457:73;;3412:128;3579:2;3605:64;3661:7;3652:6;3641:9;3637:22;3605:64;:::i;:::-;3595:74;;3550:129;3718:2;3744:64;3800:7;3791:6;3780:9;3776:22;3744:64;:::i;:::-;3734:74;;3689:129;3857:3;3884:63;3939:7;3930:6;3919:9;3915:22;3884:63;:::i;:::-;3874:73;;3828:129;2993:971;;;;;;;;:::o;3970:118::-;4057:24;4075:5;4057:24;:::i;:::-;4052:3;4045:37;3970:118;;:::o;4094:187::-;4209:65;4268:5;4209:65;:::i;:::-;4204:3;4197:78;4094:187;;:::o;4287:364::-;4375:3;4403:39;4436:5;4403:39;:::i;:::-;4458:71;4522:6;4517:3;4458:71;:::i;:::-;4451:78;;4538:52;4583:6;4578:3;4571:4;4564:5;4560:16;4538:52;:::i;:::-;4615:29;4637:6;4615:29;:::i;:::-;4610:3;4606:39;4599:46;;4379:272;4287:364;;;;:::o;4657:377::-;4763:3;4791:39;4824:5;4791:39;:::i;:::-;4846:89;4928:6;4923:3;4846:89;:::i;:::-;4839:96;;4944:52;4989:6;4984:3;4977:4;4970:5;4966:16;4944:52;:::i;:::-;5021:6;5016:3;5012:16;5005:23;;4767:267;4657:377;;;;:::o;5040:366::-;5182:3;5203:67;5267:2;5262:3;5203:67;:::i;:::-;5196:74;;5279:93;5368:3;5279:93;:::i;:::-;5397:2;5392:3;5388:12;5381:19;;5040:366;;;:::o;5412:::-;5554:3;5575:67;5639:2;5634:3;5575:67;:::i;:::-;5568:74;;5651:93;5740:3;5651:93;:::i;:::-;5769:2;5764:3;5760:12;5753:19;;5412:366;;;:::o;5784:::-;5926:3;5947:67;6011:2;6006:3;5947:67;:::i;:::-;5940:74;;6023:93;6112:3;6023:93;:::i;:::-;6141:2;6136:3;6132:12;6125:19;;5784:366;;;:::o;6156:118::-;6243:24;6261:5;6243:24;:::i;:::-;6238:3;6231:37;6156:118;;:::o;6280:275::-;6412:3;6434:95;6525:3;6516:6;6434:95;:::i;:::-;6427:102;;6546:3;6539:10;;6280:275;;;;:::o;6561:222::-;6654:4;6692:2;6681:9;6677:18;6669:26;;6705:71;6773:1;6762:9;6758:17;6749:6;6705:71;:::i;:::-;6561:222;;;;:::o;6789:589::-;6986:4;7024:2;7013:9;7009:18;7001:26;;7073:9;7067:4;7063:20;7059:1;7048:9;7044:17;7037:47;7101:78;7174:4;7165:6;7101:78;:::i;:::-;7093:86;;7189:72;7257:2;7246:9;7242:18;7233:6;7189:72;:::i;:::-;7271:100;7367:2;7356:9;7352:18;7343:6;7271:100;:::i;:::-;6789:589;;;;;;:::o;7384:419::-;7550:4;7588:2;7577:9;7573:18;7565:26;;7637:9;7631:4;7627:20;7623:1;7612:9;7608:17;7601:47;7665:131;7791:4;7665:131;:::i;:::-;7657:139;;7384:419;;;:::o;7809:::-;7975:4;8013:2;8002:9;7998:18;7990:26;;8062:9;8056:4;8052:20;8048:1;8037:9;8033:17;8026:47;8090:131;8216:4;8090:131;:::i;:::-;8082:139;;7809:419;;;:::o;8234:::-;8400:4;8438:2;8427:9;8423:18;8415:26;;8487:9;8481:4;8477:20;8473:1;8462:9;8458:17;8451:47;8515:131;8641:4;8515:131;:::i;:::-;8507:139;;8234:419;;;:::o;8659:222::-;8752:4;8790:2;8779:9;8775:18;8767:26;;8803:71;8871:1;8860:9;8856:17;8847:6;8803:71;:::i;:::-;8659:222;;;;:::o;8887:129::-;8921:6;8948:20;;:::i;:::-;8938:30;;8977:33;9005:4;8997:6;8977:33;:::i;:::-;8887:129;;;:::o;9022:75::-;9055:6;9088:2;9082:9;9072:19;;9022:75;:::o;9103:308::-;9165:4;9255:18;9247:6;9244:30;9241:56;;;9277:18;;:::i;:::-;9241:56;9315:29;9337:6;9315:29;:::i;:::-;9307:37;;9399:4;9393;9389:15;9381:23;;9103:308;;;:::o;9417:99::-;9469:6;9503:5;9497:12;9487:22;;9417:99;;;:::o;9522:169::-;9606:11;9640:6;9635:3;9628:19;9680:4;9675:3;9671:14;9656:29;;9522:169;;;;:::o;9697:148::-;9799:11;9836:3;9821:18;;9697:148;;;;:::o;9851:96::-;9888:7;9917:24;9935:5;9917:24;:::i;:::-;9906:35;;9851:96;;;:::o;9953:76::-;9989:7;10018:5;10007:16;;9953:76;;;:::o;10035:126::-;10072:7;10112:42;10105:5;10101:54;10090:65;;10035:126;;;:::o;10167:77::-;10204:7;10233:5;10222:16;;10167:77;;;:::o;10250:105::-;10286:7;10326:22;10319:5;10315:34;10304:45;;10250:105;;;:::o;10361:154::-;10439:9;10472:37;10503:5;10472:37;:::i;:::-;10459:50;;10361:154;;;:::o;10521:126::-;10571:9;10604:37;10635:5;10604:37;:::i;:::-;10591:50;;10521:126;;;:::o;10653:113::-;10703:9;10736:24;10754:5;10736:24;:::i;:::-;10723:37;;10653:113;;;:::o;10772:154::-;10856:6;10851:3;10846;10833:30;10918:1;10909:6;10904:3;10900:16;10893:27;10772:154;;;:::o;10932:307::-;11000:1;11010:113;11024:6;11021:1;11018:13;11010:113;;;11109:1;11104:3;11100:11;11094:18;11090:1;11085:3;11081:11;11074:39;11046:2;11043:1;11039:10;11034:15;;11010:113;;;11141:6;11138:1;11135:13;11132:101;;;11221:1;11212:6;11207:3;11203:16;11196:27;11132:101;10981:258;10932:307;;;:::o;11245:320::-;11289:6;11326:1;11320:4;11316:12;11306:22;;11373:1;11367:4;11363:12;11394:18;11384:81;;11450:4;11442:6;11438:17;11428:27;;11384:81;11512:2;11504:6;11501:14;11481:18;11478:38;11475:84;;;11531:18;;:::i;:::-;11475:84;11296:269;11245:320;;;:::o;11571:281::-;11654:27;11676:4;11654:27;:::i;:::-;11646:6;11642:40;11784:6;11772:10;11769:22;11748:18;11736:10;11733:34;11730:62;11727:88;;;11795:18;;:::i;:::-;11727:88;11835:10;11831:2;11824:22;11614:238;11571:281;;:::o;11858:233::-;11897:3;11920:24;11938:5;11920:24;:::i;:::-;11911:33;;11966:66;11959:5;11956:77;11953:103;;;12036:18;;:::i;:::-;11953:103;12083:1;12076:5;12072:13;12065:20;;11858:233;;;:::o;12097:180::-;12145:77;12142:1;12135:88;12242:4;12239:1;12232:15;12266:4;12263:1;12256:15;12283:180;12331:77;12328:1;12321:88;12428:4;12425:1;12418:15;12452:4;12449:1;12442:15;12469:180;12517:77;12514:1;12507:88;12614:4;12611:1;12604:15;12638:4;12635:1;12628:15;12655:180;12703:77;12700:1;12693:88;12800:4;12797:1;12790:15;12824:4;12821:1;12814:15;12841:117;12950:1;12947;12940:12;12964:117;13073:1;13070;13063:12;13087:117;13196:1;13193;13186:12;13210:117;13319:1;13316;13309:12;13333:102;13374:6;13425:2;13421:7;13416:2;13409:5;13405:14;13401:28;13391:38;;13333:102;;;:::o;13441:225::-;13581:34;13577:1;13569:6;13565:14;13558:58;13650:8;13645:2;13637:6;13633:15;13626:33;13441:225;:::o;13672:174::-;13812:26;13808:1;13800:6;13796:14;13789:50;13672:174;:::o;13852:182::-;13992:34;13988:1;13980:6;13976:14;13969:58;13852:182;:::o;14040:122::-;14113:24;14131:5;14113:24;:::i;:::-;14106:5;14103:35;14093:63;;14152:1;14149;14142:12;14093:63;14040:122;:::o;14168:120::-;14240:23;14257:5;14240:23;:::i;:::-;14233:5;14230:34;14220:62;;14278:1;14275;14268:12;14220:62;14168:120;:::o;14294:122::-;14367:24;14385:5;14367:24;:::i;:::-;14360:5;14357:35;14347:63;;14406:1;14403;14396:12;14347:63;14294:122;:::o;14422:120::-;14494:23;14511:5;14494:23;:::i;:::-;14487:5;14484:34;14474:62;;14532:1;14529;14522:12;14474:62;14422:120;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"996600","executionCost":"infinite","totalCost":"infinite"},"external":{"addPriceFeed(string,address,address)":"infinite","getPrice(address)":"infinite","owner()":"2588","priceFeeds(uint256)":"infinite","renounceOwnership()":"30420","transferOwnership(address)":"30835"},"internal":{"getPriceFeed(address)":"infinite"}},"methodIdentifiers":{"addPriceFeed(string,address,address)":"8c35423e","getPrice(address)":"41976e09","owner()":"8da5cb5b","priceFeeds(uint256)":"10c7f0b9","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"priceFeeds\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PriceChecker.sol\":\"PriceChecker\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/PriceChecker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract PriceChecker is Ownable {\\r\\n    _priceFeed[] public priceFeeds;\\r\\n\\r\\n    struct _priceFeed {\\r\\n        string name;\\r\\n        address token;\\r\\n        AggregatorV3Interface priceFeed;\\r\\n    }\\r\\n\\r\\n    //only using PriceFeeds pegged to USD\\r\\n    function addPriceFeed(\\r\\n        string memory _name,\\r\\n        address _token,\\r\\n        address _address\\r\\n    ) external onlyOwner {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n        bool isAdded = false;\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (\\r\\n                keccak256(abi.encodePacked(_name)) ==\\r\\n                keccak256(abi.encodePacked(pricefeed[i].name))\\r\\n            ) {\\r\\n                isAdded = true;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        require(!isAdded, \\\"Price Feed already added\\\");\\r\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(_address);\\r\\n        priceFeeds.push(_priceFeed(_name, _token, priceFeed));\\r\\n    }\\r\\n\\r\\n    function getPriceFeed(\\r\\n        address _token\\r\\n    ) internal view returns (AggregatorV3Interface priceFeed) {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (_token == pricefeed[i].token) {\\r\\n                return pricefeed[i].priceFeed;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getPrice(address _address) external view returns (uint256) {\\r\\n        AggregatorV3Interface priceFeed = getPriceFeed(_address);\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(answer);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf1e1d97a9c555133c6a90fdc333e79e819ffaffd68d9c9579684b49413dda07c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":53,"contract":"contracts/PriceChecker.sol:PriceChecker","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":2246,"contract":"contracts/PriceChecker.sol:PriceChecker","label":"priceFeeds","offset":0,"slot":"1","type":"t_array(t_struct(_priceFeed)2254_storage)dyn_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(_priceFeed)2254_storage)dyn_storage":{"base":"t_struct(_priceFeed)2254_storage","encoding":"dynamic_array","label":"struct PriceChecker._priceFeed[]","numberOfBytes":"32"},"t_contract(AggregatorV3Interface)45":{"encoding":"inplace","label":"contract AggregatorV3Interface","numberOfBytes":"20"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(_priceFeed)2254_storage":{"encoding":"inplace","label":"struct PriceChecker._priceFeed","members":[{"astId":2248,"contract":"contracts/PriceChecker.sol:PriceChecker","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":2250,"contract":"contracts/PriceChecker.sol:PriceChecker","label":"token","offset":0,"slot":"1","type":"t_address"},{"astId":2253,"contract":"contracts/PriceChecker.sol:PriceChecker","label":"priceFeed","offset":0,"slot":"2","type":"t_contract(AggregatorV3Interface)45"}],"numberOfBytes":"96"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/TradingFees.sol":{"TradingFees":{"abi":[{"inputs":[{"internalType":"address","name":"_priceCheckerAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"aDAI","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_refToken","type":"address"},{"internalType":"uint256","name":"_fees","type":"uint256"}],"name":"amountTokensToDeduct","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_fees","type":"uint256"}],"name":"amountaDAIToDeduct","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_rate","type":"uint256"},{"internalType":"address","name":"_refToken","type":"address"}],"name":"calculateFees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_fees","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"checkSufficientaDAI","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"daiToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_PriceCheckeraddress","type":"address"}],"name":"setPriceCheckerAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_Walletaddress","type":"address"}],"name":"setWalletAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2452":{"entryPoint":null,"id":2452,"parameterSlots":1,"returnSlots":0},"@_69":{"entryPoint":null,"id":69,"parameterSlots":0,"returnSlots":0},"@_msgSender_170":{"entryPoint":341,"id":170,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_157":{"entryPoint":349,"id":157,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":545,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":568,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":618,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":638,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":670,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":675,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1199:9","statements":[{"body":{"nodeType":"YulBlock","src":"70:80:9","statements":[{"nodeType":"YulAssignment","src":"80:22:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"89:5:9"},"nodeType":"YulFunctionCall","src":"89:13:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"80:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"138:5:9"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"111:26:9"},"nodeType":"YulFunctionCall","src":"111:33:9"},"nodeType":"YulExpressionStatement","src":"111:33:9"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"56:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:9","type":""}],"src":"7:143:9"},{"body":{"nodeType":"YulBlock","src":"233:274:9","statements":[{"body":{"nodeType":"YulBlock","src":"279:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"281:77:9"},"nodeType":"YulFunctionCall","src":"281:79:9"},"nodeType":"YulExpressionStatement","src":"281:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"254:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"263:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"250:3:9"},"nodeType":"YulFunctionCall","src":"250:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"275:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"246:3:9"},"nodeType":"YulFunctionCall","src":"246:32:9"},"nodeType":"YulIf","src":"243:119:9"},{"nodeType":"YulBlock","src":"372:128:9","statements":[{"nodeType":"YulVariableDeclaration","src":"387:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"401:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"391:6:9","type":""}]},{"nodeType":"YulAssignment","src":"416:74:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"462:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"473:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"458:3:9"},"nodeType":"YulFunctionCall","src":"458:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"482:7:9"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"426:31:9"},"nodeType":"YulFunctionCall","src":"426:64:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"416:6:9"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"203:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"214:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"226:6:9","type":""}],"src":"156:351:9"},{"body":{"nodeType":"YulBlock","src":"553:35:9","statements":[{"nodeType":"YulAssignment","src":"563:19:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"579:2:9","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"573:5:9"},"nodeType":"YulFunctionCall","src":"573:9:9"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"563:6:9"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"546:6:9","type":""}],"src":"513:75:9"},{"body":{"nodeType":"YulBlock","src":"639:51:9","statements":[{"nodeType":"YulAssignment","src":"649:35:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"678:5:9"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"660:17:9"},"nodeType":"YulFunctionCall","src":"660:24:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"649:7:9"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"621:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"631:7:9","type":""}],"src":"594:96:9"},{"body":{"nodeType":"YulBlock","src":"741:81:9","statements":[{"nodeType":"YulAssignment","src":"751:65:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"766:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"773:42:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"762:3:9"},"nodeType":"YulFunctionCall","src":"762:54:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"751:7:9"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"723:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"733:7:9","type":""}],"src":"696:126:9"},{"body":{"nodeType":"YulBlock","src":"917:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"934:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"937:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"927:6:9"},"nodeType":"YulFunctionCall","src":"927:12:9"},"nodeType":"YulExpressionStatement","src":"927:12:9"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"828:117:9"},{"body":{"nodeType":"YulBlock","src":"1040:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1057:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1060:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1050:6:9"},"nodeType":"YulFunctionCall","src":"1050:12:9"},"nodeType":"YulExpressionStatement","src":"1050:12:9"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"951:117:9"},{"body":{"nodeType":"YulBlock","src":"1117:79:9","statements":[{"body":{"nodeType":"YulBlock","src":"1174:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1183:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1186:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1176:6:9"},"nodeType":"YulFunctionCall","src":"1176:12:9"},"nodeType":"YulExpressionStatement","src":"1176:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1140:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1165:5:9"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1147:17:9"},"nodeType":"YulFunctionCall","src":"1147:24:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1137:2:9"},"nodeType":"YulFunctionCall","src":"1137:35:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1130:6:9"},"nodeType":"YulFunctionCall","src":"1130:43:9"},"nodeType":"YulIf","src":"1127:63:9"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1110:5:9","type":""}],"src":"1074:122:9"}]},"contents":"{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n","id":9,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6080604052670de0b6b3a764000060015573ba8dced3512925e52fe67b1b5329187589072a55600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073add98b0342e4094ec32f3b67ccfd3242c876ff7a600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550348015620000c757600080fd5b506040516200113f3803806200113f8339818101604052810190620000ed919062000238565b6200010d620001016200015560201b60201c565b6200015d60201b60201c565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620002bd565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200023281620002a3565b92915050565b6000602082840312156200025157620002506200029e565b5b6000620002618482850162000221565b91505092915050565b600062000277826200027e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b620002ae816200026a565b8114620002ba57600080fd5b50565b610e7280620002cd6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063ac1a386a11610071578063ac1a386a14610154578063b136e39a14610170578063b98ee4191461018c578063be22f546146101bc578063ca8963f1146101da578063f2fde38b1461020a576100a9565b80631a38a4fb146100ae578063513ffedd146100cc578063715018a6146100fc5780638da5cb5b14610106578063a42963e914610124575b600080fd5b6100b6610226565b6040516100c39190610b95565b60405180910390f35b6100e660048036038101906100e19190610acf565b61024c565b6040516100f39190610c34565b60405180910390f35b61010461038a565b005b61010e61039e565b60405161011b9190610b95565b60405180910390f35b61013e60048036038101906101399190610a35565b6103c7565b60405161014b9190610c34565b60405180910390f35b61016e600480360381019061016991906109c8565b6104e5565b005b61018a600480360381019061018591906109c8565b610531565b005b6101a660048036038101906101a191906109f5565b61057d565b6040516101b39190610c34565b60405180910390f35b6101c461067a565b6040516101d19190610b95565b60405180910390f35b6101f460048036038101906101ef9190610a8f565b6106a0565b6040516102019190610bd9565b60405180910390f35b610224600480360381019061021f91906109c8565b61078f565b005b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09846040518263ffffffff1660e01b81526004016102aa9190610b95565b60206040518083038186803b1580156102c257600080fd5b505afa1580156102d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fa9190610a62565b9050600061036260015461035461031f6402540be4008661081390919063ffffffff16565b6103466001546103388b8d61081390919063ffffffff16565b61082990919063ffffffff16565b61081390919063ffffffff16565b61082990919063ffffffff16565b9050600061037b6127108361082990919063ffffffff16565b90508093505050509392505050565b61039261083f565b61039c60006108bd565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016104479190610b95565b60206040518083038186803b15801561045f57600080fd5b505afa158015610473573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104979190610a62565b905060006104d96104b66402540be4008461081390919063ffffffff16565b6104cb6001548761081390919063ffffffff16565b61082990919063ffffffff16565b90508092505050919050565b6104ed61083f565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61053961083f565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09856040518263ffffffff1660e01b81526004016105db9190610b95565b60206040518083038186803b1580156105f357600080fd5b505afa158015610607573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062b9190610a62565b9050600061066d61064a6402540be4008461081390919063ffffffff16565b61065f6001548761081390919063ffffffff16565b61082990919063ffffffff16565b9050809250505092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106ac846103c7565b90506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cd5d767c600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518363ffffffff1660e01b815260040161072f929190610bb0565b60206040518083038186803b15801561074757600080fd5b505afa15801561075b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077f9190610a62565b9050818110159250505092915050565b61079761083f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610807576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fe90610bf4565b60405180910390fd5b610810816108bd565b50565b600081836108219190610c91565b905092915050565b600081836108379190610c60565b905092915050565b610847610981565b73ffffffffffffffffffffffffffffffffffffffff1661086561039e565b73ffffffffffffffffffffffffffffffffffffffff16146108bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b290610c14565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60008135905061099881610e0e565b92915050565b6000813590506109ad81610e25565b92915050565b6000815190506109c281610e25565b92915050565b6000602082840312156109de576109dd610d91565b5b60006109ec84828501610989565b91505092915050565b60008060408385031215610a0c57610a0b610d91565b5b6000610a1a85828601610989565b9250506020610a2b8582860161099e565b9150509250929050565b600060208284031215610a4b57610a4a610d91565b5b6000610a598482850161099e565b91505092915050565b600060208284031215610a7857610a77610d91565b5b6000610a86848285016109b3565b91505092915050565b60008060408385031215610aa657610aa5610d91565b5b6000610ab48582860161099e565b9250506020610ac585828601610989565b9150509250929050565b600080600060608486031215610ae857610ae7610d91565b5b6000610af68682870161099e565b9350506020610b078682870161099e565b9250506040610b1886828701610989565b9150509250925092565b610b2b81610ceb565b82525050565b610b3a81610cfd565b82525050565b6000610b4d602683610c4f565b9150610b5882610d96565b604082019050919050565b6000610b70602083610c4f565b9150610b7b82610de5565b602082019050919050565b610b8f81610d29565b82525050565b6000602082019050610baa6000830184610b22565b92915050565b6000604082019050610bc56000830185610b22565b610bd26020830184610b22565b9392505050565b6000602082019050610bee6000830184610b31565b92915050565b60006020820190508181036000830152610c0d81610b40565b9050919050565b60006020820190508181036000830152610c2d81610b63565b9050919050565b6000602082019050610c496000830184610b86565b92915050565b600082825260208201905092915050565b6000610c6b82610d29565b9150610c7683610d29565b925082610c8657610c85610d62565b5b828204905092915050565b6000610c9c82610d29565b9150610ca783610d29565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ce057610cdf610d33565b5b828202905092915050565b6000610cf682610d09565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610e1781610ceb565b8114610e2257600080fd5b50565b610e2e81610d29565b8114610e3957600080fd5b5056fea2646970667358221220c2736791ed5d1b247a6d7a282bef8b4a35701d784cb957653b724836d46e298064736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 SSTORE PUSH20 0xBA8DCED3512925E52FE67B1B5329187589072A55 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xADD98B0342E4094EC32F3B67CCFD3242C876FF7A PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0xC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x113F CODESIZE SUB DUP1 PUSH3 0x113F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0xED SWAP2 SWAP1 PUSH3 0x238 JUMP JUMPDEST PUSH3 0x10D PUSH3 0x101 PUSH3 0x155 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x15D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x2BD JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x232 DUP2 PUSH3 0x2A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x251 JUMPI PUSH3 0x250 PUSH3 0x29E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x261 DUP5 DUP3 DUP6 ADD PUSH3 0x221 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x277 DUP3 PUSH3 0x27E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2AE DUP2 PUSH3 0x26A JUMP JUMPDEST DUP2 EQ PUSH3 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xE72 DUP1 PUSH3 0x2CD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAC1A386A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xAC1A386A EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xB136E39A EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0xB98EE419 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xBE22F546 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0xCA8963F1 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x20A JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x1A38A4FB EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x513FFEDD EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xA42963E9 EQ PUSH2 0x124 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x226 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xACF JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x38A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10E PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11B SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x139 SWAP2 SWAP1 PUSH2 0xA35 JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x201 SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x78F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x362 PUSH1 0x1 SLOAD PUSH2 0x354 PUSH2 0x31F PUSH5 0x2540BE400 DUP7 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x346 PUSH1 0x1 SLOAD PUSH2 0x338 DUP12 DUP14 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x37B PUSH2 0x2710 DUP4 PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x392 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x39C PUSH1 0x0 PUSH2 0x8BD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x447 SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x473 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x497 SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4D9 PUSH2 0x4B6 PUSH5 0x2540BE400 DUP5 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4CB PUSH1 0x1 SLOAD DUP8 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4ED PUSH2 0x83F JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x539 PUSH2 0x83F JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x607 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62B SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x66D PUSH2 0x64A PUSH5 0x2540BE400 DUP5 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x65F PUSH1 0x1 SLOAD DUP8 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6AC DUP5 PUSH2 0x3C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCD5D767C PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72F SWAP3 SWAP2 SWAP1 PUSH2 0xBB0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x77F SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x797 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x807 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FE SWAP1 PUSH2 0xBF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x810 DUP2 PUSH2 0x8BD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x821 SWAP2 SWAP1 PUSH2 0xC91 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x837 SWAP2 SWAP1 PUSH2 0xC60 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x847 PUSH2 0x981 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x865 PUSH2 0x39E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B2 SWAP1 PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x998 DUP2 PUSH2 0xE0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9AD DUP2 PUSH2 0xE25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x9C2 DUP2 PUSH2 0xE25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9DE JUMPI PUSH2 0x9DD PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9EC DUP5 DUP3 DUP6 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA0C JUMPI PUSH2 0xA0B PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA1A DUP6 DUP3 DUP7 ADD PUSH2 0x989 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA2B DUP6 DUP3 DUP7 ADD PUSH2 0x99E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA4B JUMPI PUSH2 0xA4A PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA59 DUP5 DUP3 DUP6 ADD PUSH2 0x99E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA78 JUMPI PUSH2 0xA77 PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA86 DUP5 DUP3 DUP6 ADD PUSH2 0x9B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAA6 JUMPI PUSH2 0xAA5 PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAB4 DUP6 DUP3 DUP7 ADD PUSH2 0x99E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAC5 DUP6 DUP3 DUP7 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xAE8 JUMPI PUSH2 0xAE7 PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAF6 DUP7 DUP3 DUP8 ADD PUSH2 0x99E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB07 DUP7 DUP3 DUP8 ADD PUSH2 0x99E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB18 DUP7 DUP3 DUP8 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xB2B DUP2 PUSH2 0xCEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB3A DUP2 PUSH2 0xCFD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB4D PUSH1 0x26 DUP4 PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP PUSH2 0xB58 DUP3 PUSH2 0xD96 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB70 PUSH1 0x20 DUP4 PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP PUSH2 0xB7B DUP3 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8F DUP2 PUSH2 0xD29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBAA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB22 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBC5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xB22 JUMP JUMPDEST PUSH2 0xBD2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB22 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBEE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC0D DUP2 PUSH2 0xB40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC2D DUP2 PUSH2 0xB63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC49 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC6B DUP3 PUSH2 0xD29 JUMP JUMPDEST SWAP2 POP PUSH2 0xC76 DUP4 PUSH2 0xD29 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xC86 JUMPI PUSH2 0xC85 PUSH2 0xD62 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9C DUP3 PUSH2 0xD29 JUMP JUMPDEST SWAP2 POP PUSH2 0xCA7 DUP4 PUSH2 0xD29 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xCE0 JUMPI PUSH2 0xCDF PUSH2 0xD33 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF6 DUP3 PUSH2 0xD09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xE17 DUP2 PUSH2 0xCEB JUMP JUMPDEST DUP2 EQ PUSH2 0xE22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xE2E DUP2 PUSH2 0xD29 JUMP JUMPDEST DUP2 EQ PUSH2 0xE39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 PUSH20 0x6791ED5D1B247A6D7A282BEF8B4A35701D784CB9 JUMPI PUSH6 0x3B724836D46E 0x29 DUP1 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"382:2965:6:-:0;;;1009:8;990:27;;1067:42;1024:86;;;;;;;;;;;;;;;;;;;;1172:42;1142:73;;;;;;;;;;;;;;;;;;;;1298:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:1;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1376:20:6;1351:9;;:46;;;;;;;;;;;;;;;;;;1298:107;382:2965;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2433:187:1:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;7:143:9:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;382:2965:6:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_100":{"entryPoint":2111,"id":100,"parameterSlots":0,"returnSlots":0},"@_msgSender_170":{"entryPoint":2433,"id":170,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_157":{"entryPoint":2237,"id":157,"parameterSlots":1,"returnSlots":0},"@aDAI_2434":{"entryPoint":550,"id":2434,"parameterSlots":0,"returnSlots":0},"@amountTokensToDeduct_2578":{"entryPoint":1405,"id":2578,"parameterSlots":2,"returnSlots":1},"@amountaDAIToDeduct_2541":{"entryPoint":967,"id":2541,"parameterSlots":1,"returnSlots":1},"@calculateFees_2506":{"entryPoint":588,"id":2506,"parameterSlots":3,"returnSlots":1},"@checkSufficientaDAI_2606":{"entryPoint":1696,"id":2606,"parameterSlots":2,"returnSlots":1},"@daiToken_2428":{"entryPoint":1658,"id":2428,"parameterSlots":0,"returnSlots":0},"@div_401":{"entryPoint":2089,"id":401,"parameterSlots":2,"returnSlots":1},"@mul_386":{"entryPoint":2067,"id":386,"parameterSlots":2,"returnSlots":1},"@owner_86":{"entryPoint":926,"id":86,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_114":{"entryPoint":906,"id":114,"parameterSlots":0,"returnSlots":0},"@setPriceCheckerAddress_2634":{"entryPoint":1329,"id":2634,"parameterSlots":1,"returnSlots":0},"@setWalletAddress_2620":{"entryPoint":1253,"id":2620,"parameterSlots":1,"returnSlots":0},"@transferOwnership_137":{"entryPoint":1935,"id":137,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":2441,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2462,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":2483,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2504,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2549,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":2613,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":2658,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":2703,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_address":{"entryPoint":2767,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2850,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2865,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":2880,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":2915,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2950,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2965,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":2992,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3033,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3060,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3092,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3124,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3151,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":3168,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":3217,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3307,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3325,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3337,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3369,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3379,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":3426,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3473,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":3478,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":3557,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3598,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3621,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8529:9","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:9","statements":[{"nodeType":"YulAssignment","src":"69:29:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:9"},"nodeType":"YulFunctionCall","src":"78:20:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:9"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:9"},"nodeType":"YulFunctionCall","src":"107:33:9"},"nodeType":"YulExpressionStatement","src":"107:33:9"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:9","type":""}],"src":"7:139:9"},{"body":{"nodeType":"YulBlock","src":"204:87:9","statements":[{"nodeType":"YulAssignment","src":"214:29:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"236:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"223:12:9"},"nodeType":"YulFunctionCall","src":"223:20:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"214:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"279:5:9"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"252:26:9"},"nodeType":"YulFunctionCall","src":"252:33:9"},"nodeType":"YulExpressionStatement","src":"252:33:9"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"182:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"190:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"198:5:9","type":""}],"src":"152:139:9"},{"body":{"nodeType":"YulBlock","src":"360:80:9","statements":[{"nodeType":"YulAssignment","src":"370:22:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"385:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"379:5:9"},"nodeType":"YulFunctionCall","src":"379:13:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"370:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"428:5:9"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"401:26:9"},"nodeType":"YulFunctionCall","src":"401:33:9"},"nodeType":"YulExpressionStatement","src":"401:33:9"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"338:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"346:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"354:5:9","type":""}],"src":"297:143:9"},{"body":{"nodeType":"YulBlock","src":"512:263:9","statements":[{"body":{"nodeType":"YulBlock","src":"558:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"560:77:9"},"nodeType":"YulFunctionCall","src":"560:79:9"},"nodeType":"YulExpressionStatement","src":"560:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"533:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"542:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"529:3:9"},"nodeType":"YulFunctionCall","src":"529:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"554:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"525:3:9"},"nodeType":"YulFunctionCall","src":"525:32:9"},"nodeType":"YulIf","src":"522:119:9"},{"nodeType":"YulBlock","src":"651:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"666:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"680:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"670:6:9","type":""}]},{"nodeType":"YulAssignment","src":"695:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"730:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"741:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"726:3:9"},"nodeType":"YulFunctionCall","src":"726:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"750:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"705:20:9"},"nodeType":"YulFunctionCall","src":"705:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"695:6:9"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"482:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"493:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"505:6:9","type":""}],"src":"446:329:9"},{"body":{"nodeType":"YulBlock","src":"864:391:9","statements":[{"body":{"nodeType":"YulBlock","src":"910:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"912:77:9"},"nodeType":"YulFunctionCall","src":"912:79:9"},"nodeType":"YulExpressionStatement","src":"912:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"885:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"894:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"881:3:9"},"nodeType":"YulFunctionCall","src":"881:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"906:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"877:3:9"},"nodeType":"YulFunctionCall","src":"877:32:9"},"nodeType":"YulIf","src":"874:119:9"},{"nodeType":"YulBlock","src":"1003:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1018:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1032:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1022:6:9","type":""}]},{"nodeType":"YulAssignment","src":"1047:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1082:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1093:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1078:3:9"},"nodeType":"YulFunctionCall","src":"1078:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1102:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1057:20:9"},"nodeType":"YulFunctionCall","src":"1057:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1047:6:9"}]}]},{"nodeType":"YulBlock","src":"1130:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1145:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1159:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1149:6:9","type":""}]},{"nodeType":"YulAssignment","src":"1175:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1210:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1221:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1206:3:9"},"nodeType":"YulFunctionCall","src":"1206:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1230:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1185:20:9"},"nodeType":"YulFunctionCall","src":"1185:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1175:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"826:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"837:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"849:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"857:6:9","type":""}],"src":"781:474:9"},{"body":{"nodeType":"YulBlock","src":"1327:263:9","statements":[{"body":{"nodeType":"YulBlock","src":"1373:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1375:77:9"},"nodeType":"YulFunctionCall","src":"1375:79:9"},"nodeType":"YulExpressionStatement","src":"1375:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1348:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"1357:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1344:3:9"},"nodeType":"YulFunctionCall","src":"1344:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"1369:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1340:3:9"},"nodeType":"YulFunctionCall","src":"1340:32:9"},"nodeType":"YulIf","src":"1337:119:9"},{"nodeType":"YulBlock","src":"1466:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1481:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1495:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1485:6:9","type":""}]},{"nodeType":"YulAssignment","src":"1510:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1545:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1556:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1541:3:9"},"nodeType":"YulFunctionCall","src":"1541:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1565:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1520:20:9"},"nodeType":"YulFunctionCall","src":"1520:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1510:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1297:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1308:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1320:6:9","type":""}],"src":"1261:329:9"},{"body":{"nodeType":"YulBlock","src":"1673:274:9","statements":[{"body":{"nodeType":"YulBlock","src":"1719:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1721:77:9"},"nodeType":"YulFunctionCall","src":"1721:79:9"},"nodeType":"YulExpressionStatement","src":"1721:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1694:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"1703:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1690:3:9"},"nodeType":"YulFunctionCall","src":"1690:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"1715:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1686:3:9"},"nodeType":"YulFunctionCall","src":"1686:32:9"},"nodeType":"YulIf","src":"1683:119:9"},{"nodeType":"YulBlock","src":"1812:128:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1827:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1841:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1831:6:9","type":""}]},{"nodeType":"YulAssignment","src":"1856:74:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1902:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1913:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1898:3:9"},"nodeType":"YulFunctionCall","src":"1898:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1922:7:9"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"1866:31:9"},"nodeType":"YulFunctionCall","src":"1866:64:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1856:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1643:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1654:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1666:6:9","type":""}],"src":"1596:351:9"},{"body":{"nodeType":"YulBlock","src":"2036:391:9","statements":[{"body":{"nodeType":"YulBlock","src":"2082:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2084:77:9"},"nodeType":"YulFunctionCall","src":"2084:79:9"},"nodeType":"YulExpressionStatement","src":"2084:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2057:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"2066:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2053:3:9"},"nodeType":"YulFunctionCall","src":"2053:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"2078:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2049:3:9"},"nodeType":"YulFunctionCall","src":"2049:32:9"},"nodeType":"YulIf","src":"2046:119:9"},{"nodeType":"YulBlock","src":"2175:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2190:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2204:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2194:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2219:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2254:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2265:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2250:3:9"},"nodeType":"YulFunctionCall","src":"2250:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2274:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2229:20:9"},"nodeType":"YulFunctionCall","src":"2229:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2219:6:9"}]}]},{"nodeType":"YulBlock","src":"2302:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2317:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2331:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2321:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2347:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2382:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2393:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2378:3:9"},"nodeType":"YulFunctionCall","src":"2378:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2402:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2357:20:9"},"nodeType":"YulFunctionCall","src":"2357:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2347:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1998:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2009:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2021:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2029:6:9","type":""}],"src":"1953:474:9"},{"body":{"nodeType":"YulBlock","src":"2533:519:9","statements":[{"body":{"nodeType":"YulBlock","src":"2579:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2581:77:9"},"nodeType":"YulFunctionCall","src":"2581:79:9"},"nodeType":"YulExpressionStatement","src":"2581:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2554:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"2563:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2550:3:9"},"nodeType":"YulFunctionCall","src":"2550:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"2575:2:9","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2546:3:9"},"nodeType":"YulFunctionCall","src":"2546:32:9"},"nodeType":"YulIf","src":"2543:119:9"},{"nodeType":"YulBlock","src":"2672:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2687:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2701:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2691:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2716:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2751:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2762:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2747:3:9"},"nodeType":"YulFunctionCall","src":"2747:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2771:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2726:20:9"},"nodeType":"YulFunctionCall","src":"2726:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2716:6:9"}]}]},{"nodeType":"YulBlock","src":"2799:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2814:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2828:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2818:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2844:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2879:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2890:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2875:3:9"},"nodeType":"YulFunctionCall","src":"2875:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2899:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2854:20:9"},"nodeType":"YulFunctionCall","src":"2854:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2844:6:9"}]}]},{"nodeType":"YulBlock","src":"2927:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2942:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2956:2:9","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2946:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2972:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3007:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"3018:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3003:3:9"},"nodeType":"YulFunctionCall","src":"3003:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3027:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2982:20:9"},"nodeType":"YulFunctionCall","src":"2982:53:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2972:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2487:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2498:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2510:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2518:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2526:6:9","type":""}],"src":"2433:619:9"},{"body":{"nodeType":"YulBlock","src":"3123:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3140:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3163:5:9"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3145:17:9"},"nodeType":"YulFunctionCall","src":"3145:24:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3133:6:9"},"nodeType":"YulFunctionCall","src":"3133:37:9"},"nodeType":"YulExpressionStatement","src":"3133:37:9"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3111:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3118:3:9","type":""}],"src":"3058:118:9"},{"body":{"nodeType":"YulBlock","src":"3241:50:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3258:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3278:5:9"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3263:14:9"},"nodeType":"YulFunctionCall","src":"3263:21:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3251:6:9"},"nodeType":"YulFunctionCall","src":"3251:34:9"},"nodeType":"YulExpressionStatement","src":"3251:34:9"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3229:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3236:3:9","type":""}],"src":"3182:109:9"},{"body":{"nodeType":"YulBlock","src":"3443:220:9","statements":[{"nodeType":"YulAssignment","src":"3453:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3519:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"3524:2:9","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3460:58:9"},"nodeType":"YulFunctionCall","src":"3460:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3453:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3625:3:9"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"3536:88:9"},"nodeType":"YulFunctionCall","src":"3536:93:9"},"nodeType":"YulExpressionStatement","src":"3536:93:9"},{"nodeType":"YulAssignment","src":"3638:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3649:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"3654:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3645:3:9"},"nodeType":"YulFunctionCall","src":"3645:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3638:3:9"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3431:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3439:3:9","type":""}],"src":"3297:366:9"},{"body":{"nodeType":"YulBlock","src":"3815:220:9","statements":[{"nodeType":"YulAssignment","src":"3825:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3891:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"3896:2:9","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3832:58:9"},"nodeType":"YulFunctionCall","src":"3832:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3825:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3997:3:9"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"3908:88:9"},"nodeType":"YulFunctionCall","src":"3908:93:9"},"nodeType":"YulExpressionStatement","src":"3908:93:9"},{"nodeType":"YulAssignment","src":"4010:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4021:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"4026:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4017:3:9"},"nodeType":"YulFunctionCall","src":"4017:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4010:3:9"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3803:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3811:3:9","type":""}],"src":"3669:366:9"},{"body":{"nodeType":"YulBlock","src":"4106:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4123:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4146:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4128:17:9"},"nodeType":"YulFunctionCall","src":"4128:24:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4116:6:9"},"nodeType":"YulFunctionCall","src":"4116:37:9"},"nodeType":"YulExpressionStatement","src":"4116:37:9"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4094:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4101:3:9","type":""}],"src":"4041:118:9"},{"body":{"nodeType":"YulBlock","src":"4263:124:9","statements":[{"nodeType":"YulAssignment","src":"4273:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4285:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4296:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4281:3:9"},"nodeType":"YulFunctionCall","src":"4281:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4273:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4353:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4366:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4377:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4362:3:9"},"nodeType":"YulFunctionCall","src":"4362:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4309:43:9"},"nodeType":"YulFunctionCall","src":"4309:71:9"},"nodeType":"YulExpressionStatement","src":"4309:71:9"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4235:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4247:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4258:4:9","type":""}],"src":"4165:222:9"},{"body":{"nodeType":"YulBlock","src":"4519:206:9","statements":[{"nodeType":"YulAssignment","src":"4529:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4541:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4552:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4537:3:9"},"nodeType":"YulFunctionCall","src":"4537:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4529:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4609:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4622:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4633:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4618:3:9"},"nodeType":"YulFunctionCall","src":"4618:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4565:43:9"},"nodeType":"YulFunctionCall","src":"4565:71:9"},"nodeType":"YulExpressionStatement","src":"4565:71:9"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4690:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4703:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4714:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4699:3:9"},"nodeType":"YulFunctionCall","src":"4699:18:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4646:43:9"},"nodeType":"YulFunctionCall","src":"4646:72:9"},"nodeType":"YulExpressionStatement","src":"4646:72:9"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4483:9:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4495:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4503:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4514:4:9","type":""}],"src":"4393:332:9"},{"body":{"nodeType":"YulBlock","src":"4823:118:9","statements":[{"nodeType":"YulAssignment","src":"4833:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4845:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4856:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4841:3:9"},"nodeType":"YulFunctionCall","src":"4841:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4833:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4907:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4920:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4931:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4916:3:9"},"nodeType":"YulFunctionCall","src":"4916:17:9"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"4869:37:9"},"nodeType":"YulFunctionCall","src":"4869:65:9"},"nodeType":"YulExpressionStatement","src":"4869:65:9"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4795:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4807:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4818:4:9","type":""}],"src":"4731:210:9"},{"body":{"nodeType":"YulBlock","src":"5118:248:9","statements":[{"nodeType":"YulAssignment","src":"5128:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5140:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5151:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5136:3:9"},"nodeType":"YulFunctionCall","src":"5136:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5128:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5175:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5186:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5171:3:9"},"nodeType":"YulFunctionCall","src":"5171:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5194:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"5200:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5190:3:9"},"nodeType":"YulFunctionCall","src":"5190:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5164:6:9"},"nodeType":"YulFunctionCall","src":"5164:47:9"},"nodeType":"YulExpressionStatement","src":"5164:47:9"},{"nodeType":"YulAssignment","src":"5220:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5354:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5228:124:9"},"nodeType":"YulFunctionCall","src":"5228:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5220:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5098:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5113:4:9","type":""}],"src":"4947:419:9"},{"body":{"nodeType":"YulBlock","src":"5543:248:9","statements":[{"nodeType":"YulAssignment","src":"5553:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5565:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5576:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5561:3:9"},"nodeType":"YulFunctionCall","src":"5561:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5553:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5600:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5611:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5596:3:9"},"nodeType":"YulFunctionCall","src":"5596:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5619:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"5625:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5615:3:9"},"nodeType":"YulFunctionCall","src":"5615:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5589:6:9"},"nodeType":"YulFunctionCall","src":"5589:47:9"},"nodeType":"YulExpressionStatement","src":"5589:47:9"},{"nodeType":"YulAssignment","src":"5645:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5779:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5653:124:9"},"nodeType":"YulFunctionCall","src":"5653:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5645:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5523:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5538:4:9","type":""}],"src":"5372:419:9"},{"body":{"nodeType":"YulBlock","src":"5895:124:9","statements":[{"nodeType":"YulAssignment","src":"5905:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5917:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5928:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5913:3:9"},"nodeType":"YulFunctionCall","src":"5913:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5905:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5985:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5998:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"6009:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5994:3:9"},"nodeType":"YulFunctionCall","src":"5994:17:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5941:43:9"},"nodeType":"YulFunctionCall","src":"5941:71:9"},"nodeType":"YulExpressionStatement","src":"5941:71:9"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5867:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5879:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5890:4:9","type":""}],"src":"5797:222:9"},{"body":{"nodeType":"YulBlock","src":"6065:35:9","statements":[{"nodeType":"YulAssignment","src":"6075:19:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6091:2:9","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6085:5:9"},"nodeType":"YulFunctionCall","src":"6085:9:9"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6075:6:9"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6058:6:9","type":""}],"src":"6025:75:9"},{"body":{"nodeType":"YulBlock","src":"6202:73:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6219:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"6224:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6212:6:9"},"nodeType":"YulFunctionCall","src":"6212:19:9"},"nodeType":"YulExpressionStatement","src":"6212:19:9"},{"nodeType":"YulAssignment","src":"6240:29:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6259:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"6264:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6255:3:9"},"nodeType":"YulFunctionCall","src":"6255:14:9"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6240:11:9"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6174:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"6179:6:9","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6190:11:9","type":""}],"src":"6106:169:9"},{"body":{"nodeType":"YulBlock","src":"6323:143:9","statements":[{"nodeType":"YulAssignment","src":"6333:25:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6356:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6338:17:9"},"nodeType":"YulFunctionCall","src":"6338:20:9"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6333:1:9"}]},{"nodeType":"YulAssignment","src":"6367:25:9","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6390:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6372:17:9"},"nodeType":"YulFunctionCall","src":"6372:20:9"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6367:1:9"}]},{"body":{"nodeType":"YulBlock","src":"6414:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"6416:16:9"},"nodeType":"YulFunctionCall","src":"6416:18:9"},"nodeType":"YulExpressionStatement","src":"6416:18:9"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6411:1:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6404:6:9"},"nodeType":"YulFunctionCall","src":"6404:9:9"},"nodeType":"YulIf","src":"6401:35:9"},{"nodeType":"YulAssignment","src":"6446:14:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6455:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"6458:1:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6451:3:9"},"nodeType":"YulFunctionCall","src":"6451:9:9"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6446:1:9"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6312:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"6315:1:9","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"6321:1:9","type":""}],"src":"6281:185:9"},{"body":{"nodeType":"YulBlock","src":"6520:300:9","statements":[{"nodeType":"YulAssignment","src":"6530:25:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6553:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6535:17:9"},"nodeType":"YulFunctionCall","src":"6535:20:9"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6530:1:9"}]},{"nodeType":"YulAssignment","src":"6564:25:9","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6587:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6569:17:9"},"nodeType":"YulFunctionCall","src":"6569:20:9"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6564:1:9"}]},{"body":{"nodeType":"YulBlock","src":"6762:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6764:16:9"},"nodeType":"YulFunctionCall","src":"6764:18:9"},"nodeType":"YulExpressionStatement","src":"6764:18:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6674:1:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6667:6:9"},"nodeType":"YulFunctionCall","src":"6667:9:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6660:6:9"},"nodeType":"YulFunctionCall","src":"6660:17:9"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6682:1:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6689:66:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"6757:1:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6685:3:9"},"nodeType":"YulFunctionCall","src":"6685:74:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6679:2:9"},"nodeType":"YulFunctionCall","src":"6679:81:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6656:3:9"},"nodeType":"YulFunctionCall","src":"6656:105:9"},"nodeType":"YulIf","src":"6653:131:9"},{"nodeType":"YulAssignment","src":"6794:20:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6809:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"6812:1:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6805:3:9"},"nodeType":"YulFunctionCall","src":"6805:9:9"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"6794:7:9"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6503:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"6506:1:9","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"6512:7:9","type":""}],"src":"6472:348:9"},{"body":{"nodeType":"YulBlock","src":"6871:51:9","statements":[{"nodeType":"YulAssignment","src":"6881:35:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6910:5:9"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"6892:17:9"},"nodeType":"YulFunctionCall","src":"6892:24:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6881:7:9"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6853:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6863:7:9","type":""}],"src":"6826:96:9"},{"body":{"nodeType":"YulBlock","src":"6970:48:9","statements":[{"nodeType":"YulAssignment","src":"6980:32:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7005:5:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6998:6:9"},"nodeType":"YulFunctionCall","src":"6998:13:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6991:6:9"},"nodeType":"YulFunctionCall","src":"6991:21:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6980:7:9"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6952:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6962:7:9","type":""}],"src":"6928:90:9"},{"body":{"nodeType":"YulBlock","src":"7069:81:9","statements":[{"nodeType":"YulAssignment","src":"7079:65:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7094:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"7101:42:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7090:3:9"},"nodeType":"YulFunctionCall","src":"7090:54:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7079:7:9"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7051:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7061:7:9","type":""}],"src":"7024:126:9"},{"body":{"nodeType":"YulBlock","src":"7201:32:9","statements":[{"nodeType":"YulAssignment","src":"7211:16:9","value":{"name":"value","nodeType":"YulIdentifier","src":"7222:5:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7211:7:9"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7183:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7193:7:9","type":""}],"src":"7156:77:9"},{"body":{"nodeType":"YulBlock","src":"7267:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7284:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7287:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7277:6:9"},"nodeType":"YulFunctionCall","src":"7277:88:9"},"nodeType":"YulExpressionStatement","src":"7277:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7381:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7384:4:9","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7374:6:9"},"nodeType":"YulFunctionCall","src":"7374:15:9"},"nodeType":"YulExpressionStatement","src":"7374:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7405:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7408:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7398:6:9"},"nodeType":"YulFunctionCall","src":"7398:15:9"},"nodeType":"YulExpressionStatement","src":"7398:15:9"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"7239:180:9"},{"body":{"nodeType":"YulBlock","src":"7453:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7470:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7473:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7463:6:9"},"nodeType":"YulFunctionCall","src":"7463:88:9"},"nodeType":"YulExpressionStatement","src":"7463:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7567:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7570:4:9","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7560:6:9"},"nodeType":"YulFunctionCall","src":"7560:15:9"},"nodeType":"YulExpressionStatement","src":"7560:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7591:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7594:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7584:6:9"},"nodeType":"YulFunctionCall","src":"7584:15:9"},"nodeType":"YulExpressionStatement","src":"7584:15:9"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"7425:180:9"},{"body":{"nodeType":"YulBlock","src":"7700:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7717:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7720:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7710:6:9"},"nodeType":"YulFunctionCall","src":"7710:12:9"},"nodeType":"YulExpressionStatement","src":"7710:12:9"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"7611:117:9"},{"body":{"nodeType":"YulBlock","src":"7823:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7840:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7843:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7833:6:9"},"nodeType":"YulFunctionCall","src":"7833:12:9"},"nodeType":"YulExpressionStatement","src":"7833:12:9"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"7734:117:9"},{"body":{"nodeType":"YulBlock","src":"7963:119:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7985:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"7993:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7981:3:9"},"nodeType":"YulFunctionCall","src":"7981:14:9"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"7997:34:9","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7974:6:9"},"nodeType":"YulFunctionCall","src":"7974:58:9"},"nodeType":"YulExpressionStatement","src":"7974:58:9"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8053:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"8061:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8049:3:9"},"nodeType":"YulFunctionCall","src":"8049:15:9"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"8066:8:9","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8042:6:9"},"nodeType":"YulFunctionCall","src":"8042:33:9"},"nodeType":"YulExpressionStatement","src":"8042:33:9"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7955:6:9","type":""}],"src":"7857:225:9"},{"body":{"nodeType":"YulBlock","src":"8194:76:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8216:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"8224:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8212:3:9"},"nodeType":"YulFunctionCall","src":"8212:14:9"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"8228:34:9","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8205:6:9"},"nodeType":"YulFunctionCall","src":"8205:58:9"},"nodeType":"YulExpressionStatement","src":"8205:58:9"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8186:6:9","type":""}],"src":"8088:182:9"},{"body":{"nodeType":"YulBlock","src":"8319:79:9","statements":[{"body":{"nodeType":"YulBlock","src":"8376:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8385:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8388:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8378:6:9"},"nodeType":"YulFunctionCall","src":"8378:12:9"},"nodeType":"YulExpressionStatement","src":"8378:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8342:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8367:5:9"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8349:17:9"},"nodeType":"YulFunctionCall","src":"8349:24:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8339:2:9"},"nodeType":"YulFunctionCall","src":"8339:35:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8332:6:9"},"nodeType":"YulFunctionCall","src":"8332:43:9"},"nodeType":"YulIf","src":"8329:63:9"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8312:5:9","type":""}],"src":"8276:122:9"},{"body":{"nodeType":"YulBlock","src":"8447:79:9","statements":[{"body":{"nodeType":"YulBlock","src":"8504:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8513:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8516:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8506:6:9"},"nodeType":"YulFunctionCall","src":"8506:12:9"},"nodeType":"YulExpressionStatement","src":"8506:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8470:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8495:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8477:17:9"},"nodeType":"YulFunctionCall","src":"8477:24:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8467:2:9"},"nodeType":"YulFunctionCall","src":"8467:35:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8460:6:9"},"nodeType":"YulFunctionCall","src":"8460:43:9"},"nodeType":"YulIf","src":"8457:63:9"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8440:5:9","type":""}],"src":"8404:122:9"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":9,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c8063ac1a386a11610071578063ac1a386a14610154578063b136e39a14610170578063b98ee4191461018c578063be22f546146101bc578063ca8963f1146101da578063f2fde38b1461020a576100a9565b80631a38a4fb146100ae578063513ffedd146100cc578063715018a6146100fc5780638da5cb5b14610106578063a42963e914610124575b600080fd5b6100b6610226565b6040516100c39190610b95565b60405180910390f35b6100e660048036038101906100e19190610acf565b61024c565b6040516100f39190610c34565b60405180910390f35b61010461038a565b005b61010e61039e565b60405161011b9190610b95565b60405180910390f35b61013e60048036038101906101399190610a35565b6103c7565b60405161014b9190610c34565b60405180910390f35b61016e600480360381019061016991906109c8565b6104e5565b005b61018a600480360381019061018591906109c8565b610531565b005b6101a660048036038101906101a191906109f5565b61057d565b6040516101b39190610c34565b60405180910390f35b6101c461067a565b6040516101d19190610b95565b60405180910390f35b6101f460048036038101906101ef9190610a8f565b6106a0565b6040516102019190610bd9565b60405180910390f35b610224600480360381019061021f91906109c8565b61078f565b005b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09846040518263ffffffff1660e01b81526004016102aa9190610b95565b60206040518083038186803b1580156102c257600080fd5b505afa1580156102d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fa9190610a62565b9050600061036260015461035461031f6402540be4008661081390919063ffffffff16565b6103466001546103388b8d61081390919063ffffffff16565b61082990919063ffffffff16565b61081390919063ffffffff16565b61082990919063ffffffff16565b9050600061037b6127108361082990919063ffffffff16565b90508093505050509392505050565b61039261083f565b61039c60006108bd565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016104479190610b95565b60206040518083038186803b15801561045f57600080fd5b505afa158015610473573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104979190610a62565b905060006104d96104b66402540be4008461081390919063ffffffff16565b6104cb6001548761081390919063ffffffff16565b61082990919063ffffffff16565b90508092505050919050565b6104ed61083f565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61053961083f565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09856040518263ffffffff1660e01b81526004016105db9190610b95565b60206040518083038186803b1580156105f357600080fd5b505afa158015610607573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062b9190610a62565b9050600061066d61064a6402540be4008461081390919063ffffffff16565b61065f6001548761081390919063ffffffff16565b61082990919063ffffffff16565b9050809250505092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106ac846103c7565b90506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cd5d767c600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518363ffffffff1660e01b815260040161072f929190610bb0565b60206040518083038186803b15801561074757600080fd5b505afa15801561075b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077f9190610a62565b9050818110159250505092915050565b61079761083f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610807576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fe90610bf4565b60405180910390fd5b610810816108bd565b50565b600081836108219190610c91565b905092915050565b600081836108379190610c60565b905092915050565b610847610981565b73ffffffffffffffffffffffffffffffffffffffff1661086561039e565b73ffffffffffffffffffffffffffffffffffffffff16146108bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b290610c14565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60008135905061099881610e0e565b92915050565b6000813590506109ad81610e25565b92915050565b6000815190506109c281610e25565b92915050565b6000602082840312156109de576109dd610d91565b5b60006109ec84828501610989565b91505092915050565b60008060408385031215610a0c57610a0b610d91565b5b6000610a1a85828601610989565b9250506020610a2b8582860161099e565b9150509250929050565b600060208284031215610a4b57610a4a610d91565b5b6000610a598482850161099e565b91505092915050565b600060208284031215610a7857610a77610d91565b5b6000610a86848285016109b3565b91505092915050565b60008060408385031215610aa657610aa5610d91565b5b6000610ab48582860161099e565b9250506020610ac585828601610989565b9150509250929050565b600080600060608486031215610ae857610ae7610d91565b5b6000610af68682870161099e565b9350506020610b078682870161099e565b9250506040610b1886828701610989565b9150509250925092565b610b2b81610ceb565b82525050565b610b3a81610cfd565b82525050565b6000610b4d602683610c4f565b9150610b5882610d96565b604082019050919050565b6000610b70602083610c4f565b9150610b7b82610de5565b602082019050919050565b610b8f81610d29565b82525050565b6000602082019050610baa6000830184610b22565b92915050565b6000604082019050610bc56000830185610b22565b610bd26020830184610b22565b9392505050565b6000602082019050610bee6000830184610b31565b92915050565b60006020820190508181036000830152610c0d81610b40565b9050919050565b60006020820190508181036000830152610c2d81610b63565b9050919050565b6000602082019050610c496000830184610b86565b92915050565b600082825260208201905092915050565b6000610c6b82610d29565b9150610c7683610d29565b925082610c8657610c85610d62565b5b828204905092915050565b6000610c9c82610d29565b9150610ca783610d29565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ce057610cdf610d33565b5b828202905092915050565b6000610cf682610d09565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610e1781610ceb565b8114610e2257600080fd5b50565b610e2e81610d29565b8114610e3957600080fd5b5056fea2646970667358221220c2736791ed5d1b247a6d7a282bef8b4a35701d784cb957653b724836d46e298064736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAC1A386A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xAC1A386A EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xB136E39A EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0xB98EE419 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xBE22F546 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0xCA8963F1 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x20A JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x1A38A4FB EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x513FFEDD EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xA42963E9 EQ PUSH2 0x124 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x226 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xACF JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x38A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10E PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11B SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x139 SWAP2 SWAP1 PUSH2 0xA35 JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x201 SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x78F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x362 PUSH1 0x1 SLOAD PUSH2 0x354 PUSH2 0x31F PUSH5 0x2540BE400 DUP7 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x346 PUSH1 0x1 SLOAD PUSH2 0x338 DUP12 DUP14 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x37B PUSH2 0x2710 DUP4 PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x392 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x39C PUSH1 0x0 PUSH2 0x8BD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x447 SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x473 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x497 SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4D9 PUSH2 0x4B6 PUSH5 0x2540BE400 DUP5 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4CB PUSH1 0x1 SLOAD DUP8 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4ED PUSH2 0x83F JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x539 PUSH2 0x83F JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x607 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62B SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x66D PUSH2 0x64A PUSH5 0x2540BE400 DUP5 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x65F PUSH1 0x1 SLOAD DUP8 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6AC DUP5 PUSH2 0x3C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCD5D767C PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72F SWAP3 SWAP2 SWAP1 PUSH2 0xBB0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x77F SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x797 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x807 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FE SWAP1 PUSH2 0xBF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x810 DUP2 PUSH2 0x8BD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x821 SWAP2 SWAP1 PUSH2 0xC91 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x837 SWAP2 SWAP1 PUSH2 0xC60 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x847 PUSH2 0x981 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x865 PUSH2 0x39E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B2 SWAP1 PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x998 DUP2 PUSH2 0xE0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9AD DUP2 PUSH2 0xE25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x9C2 DUP2 PUSH2 0xE25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9DE JUMPI PUSH2 0x9DD PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9EC DUP5 DUP3 DUP6 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA0C JUMPI PUSH2 0xA0B PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA1A DUP6 DUP3 DUP7 ADD PUSH2 0x989 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA2B DUP6 DUP3 DUP7 ADD PUSH2 0x99E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA4B JUMPI PUSH2 0xA4A PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA59 DUP5 DUP3 DUP6 ADD PUSH2 0x99E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA78 JUMPI PUSH2 0xA77 PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA86 DUP5 DUP3 DUP6 ADD PUSH2 0x9B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAA6 JUMPI PUSH2 0xAA5 PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAB4 DUP6 DUP3 DUP7 ADD PUSH2 0x99E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAC5 DUP6 DUP3 DUP7 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xAE8 JUMPI PUSH2 0xAE7 PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAF6 DUP7 DUP3 DUP8 ADD PUSH2 0x99E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB07 DUP7 DUP3 DUP8 ADD PUSH2 0x99E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB18 DUP7 DUP3 DUP8 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xB2B DUP2 PUSH2 0xCEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB3A DUP2 PUSH2 0xCFD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB4D PUSH1 0x26 DUP4 PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP PUSH2 0xB58 DUP3 PUSH2 0xD96 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB70 PUSH1 0x20 DUP4 PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP PUSH2 0xB7B DUP3 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8F DUP2 PUSH2 0xD29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBAA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB22 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBC5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xB22 JUMP JUMPDEST PUSH2 0xBD2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB22 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBEE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC0D DUP2 PUSH2 0xB40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC2D DUP2 PUSH2 0xB63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC49 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC6B DUP3 PUSH2 0xD29 JUMP JUMPDEST SWAP2 POP PUSH2 0xC76 DUP4 PUSH2 0xD29 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xC86 JUMPI PUSH2 0xC85 PUSH2 0xD62 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9C DUP3 PUSH2 0xD29 JUMP JUMPDEST SWAP2 POP PUSH2 0xCA7 DUP4 PUSH2 0xD29 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xCE0 JUMPI PUSH2 0xCDF PUSH2 0xD33 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF6 DUP3 PUSH2 0xD09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xE17 DUP2 PUSH2 0xCEB JUMP JUMPDEST DUP2 EQ PUSH2 0xE22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xE2E DUP2 PUSH2 0xD29 JUMP JUMPDEST DUP2 EQ PUSH2 0xE39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 PUSH20 0x6791ED5D1B247A6D7A282BEF8B4A35701D784CB9 JUMPI PUSH6 0x3B724836D46E 0x29 DUP1 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"382:2965:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1142:73;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1413:680;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:1;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2142:272:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3059:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3184:160;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2466:311;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1024:86;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2785:266;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1142:73:6;;;;;;;;;;;;;:::o;1413:680::-;1542:7;1789:20;1812:9;;;;;;;;;;;:18;;;1831:9;1812:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1789:52;;1872:13;1888:108;1987:8;;1903:68;1944:26;1961:8;1944:12;:16;;:26;;;;:::i;:::-;1904:34;1929:8;;1905:18;1917:5;1905:7;:11;;:18;;;;:::i;:::-;1904:24;;:34;;;;:::i;:::-;1903:40;;:68;;;;:::i;:::-;1888:98;;:108;;;;:::i;:::-;1872:124;;2007:12;2022:18;2032:7;2022:5;:9;;:18;;;;:::i;:::-;2007:33;;2060:4;2053:11;;;;;1413:680;;;;;:::o;1831:101:1:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2142:272:6:-;2206:7;2226:18;2247:9;;;;;;;;;;;:18;;;2266:8;;;;;;;;;;;2247:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2226:49;;2313:11;2327:49;2351:24;2366:8;2351:10;:14;;:24;;;;:::i;:::-;2327:19;2337:8;;2327:5;:9;;:19;;;;:::i;:::-;:23;;:49;;;;:::i;:::-;2313:63;;2402:3;2387:19;;;;2142:272;;;:::o;3059:117::-;1094:13:1;:11;:13::i;:::-;3153:14:6::1;3137:6;;:31;;;;;;;;;;;;;;;;;;3059:117:::0;:::o;3184:160::-;1094:13:1;:11;:13::i;:::-;3315:20:6::1;3290:9;;:46;;;;;;;;;;;;;;;;;;3184:160:::0;:::o;2466:311::-;2576:7;2596:20;2619:9;;;;;;;;;;;:18;;;2638:9;2619:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2596:52;;2674:11;2688:51;2712:26;2729:8;2712:12;:16;;:26;;;;:::i;:::-;2688:19;2698:8;;2688:5;:9;;:19;;;;:::i;:::-;:23;;:51;;;;:::i;:::-;2674:65;;2765:3;2750:19;;;;2466:311;;;;:::o;1024:86::-;;;;;;;;;;;;;:::o;2785:266::-;2890:4;2907:14;2924:25;2943:5;2924:18;:25::i;:::-;2907:42;;2960:15;2978:6;;;;;;;;;;;:15;;;2994:4;;;;;;;;;;;3000:5;2978:28;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2960:46;;3037:6;3026:7;:17;;3019:24;;;;2785:266;;;;:::o;2081:198:1:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;3465:96:3:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;1359:130:1:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;7:139:9:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:143::-;354:5;385:6;379:13;370:22;;401:33;428:5;401:33;:::i;:::-;297:143;;;;:::o;446:329::-;505:6;554:2;542:9;533:7;529:23;525:32;522:119;;;560:79;;:::i;:::-;522:119;680:1;705:53;750:7;741:6;730:9;726:22;705:53;:::i;:::-;695:63;;651:117;446:329;;;;:::o;781:474::-;849:6;857;906:2;894:9;885:7;881:23;877:32;874:119;;;912:79;;:::i;:::-;874:119;1032:1;1057:53;1102:7;1093:6;1082:9;1078:22;1057:53;:::i;:::-;1047:63;;1003:117;1159:2;1185:53;1230:7;1221:6;1210:9;1206:22;1185:53;:::i;:::-;1175:63;;1130:118;781:474;;;;;:::o;1261:329::-;1320:6;1369:2;1357:9;1348:7;1344:23;1340:32;1337:119;;;1375:79;;:::i;:::-;1337:119;1495:1;1520:53;1565:7;1556:6;1545:9;1541:22;1520:53;:::i;:::-;1510:63;;1466:117;1261:329;;;;:::o;1596:351::-;1666:6;1715:2;1703:9;1694:7;1690:23;1686:32;1683:119;;;1721:79;;:::i;:::-;1683:119;1841:1;1866:64;1922:7;1913:6;1902:9;1898:22;1866:64;:::i;:::-;1856:74;;1812:128;1596:351;;;;:::o;1953:474::-;2021:6;2029;2078:2;2066:9;2057:7;2053:23;2049:32;2046:119;;;2084:79;;:::i;:::-;2046:119;2204:1;2229:53;2274:7;2265:6;2254:9;2250:22;2229:53;:::i;:::-;2219:63;;2175:117;2331:2;2357:53;2402:7;2393:6;2382:9;2378:22;2357:53;:::i;:::-;2347:63;;2302:118;1953:474;;;;;:::o;2433:619::-;2510:6;2518;2526;2575:2;2563:9;2554:7;2550:23;2546:32;2543:119;;;2581:79;;:::i;:::-;2543:119;2701:1;2726:53;2771:7;2762:6;2751:9;2747:22;2726:53;:::i;:::-;2716:63;;2672:117;2828:2;2854:53;2899:7;2890:6;2879:9;2875:22;2854:53;:::i;:::-;2844:63;;2799:118;2956:2;2982:53;3027:7;3018:6;3007:9;3003:22;2982:53;:::i;:::-;2972:63;;2927:118;2433:619;;;;;:::o;3058:118::-;3145:24;3163:5;3145:24;:::i;:::-;3140:3;3133:37;3058:118;;:::o;3182:109::-;3263:21;3278:5;3263:21;:::i;:::-;3258:3;3251:34;3182:109;;:::o;3297:366::-;3439:3;3460:67;3524:2;3519:3;3460:67;:::i;:::-;3453:74;;3536:93;3625:3;3536:93;:::i;:::-;3654:2;3649:3;3645:12;3638:19;;3297:366;;;:::o;3669:::-;3811:3;3832:67;3896:2;3891:3;3832:67;:::i;:::-;3825:74;;3908:93;3997:3;3908:93;:::i;:::-;4026:2;4021:3;4017:12;4010:19;;3669:366;;;:::o;4041:118::-;4128:24;4146:5;4128:24;:::i;:::-;4123:3;4116:37;4041:118;;:::o;4165:222::-;4258:4;4296:2;4285:9;4281:18;4273:26;;4309:71;4377:1;4366:9;4362:17;4353:6;4309:71;:::i;:::-;4165:222;;;;:::o;4393:332::-;4514:4;4552:2;4541:9;4537:18;4529:26;;4565:71;4633:1;4622:9;4618:17;4609:6;4565:71;:::i;:::-;4646:72;4714:2;4703:9;4699:18;4690:6;4646:72;:::i;:::-;4393:332;;;;;:::o;4731:210::-;4818:4;4856:2;4845:9;4841:18;4833:26;;4869:65;4931:1;4920:9;4916:17;4907:6;4869:65;:::i;:::-;4731:210;;;;:::o;4947:419::-;5113:4;5151:2;5140:9;5136:18;5128:26;;5200:9;5194:4;5190:20;5186:1;5175:9;5171:17;5164:47;5228:131;5354:4;5228:131;:::i;:::-;5220:139;;4947:419;;;:::o;5372:::-;5538:4;5576:2;5565:9;5561:18;5553:26;;5625:9;5619:4;5615:20;5611:1;5600:9;5596:17;5589:47;5653:131;5779:4;5653:131;:::i;:::-;5645:139;;5372:419;;;:::o;5797:222::-;5890:4;5928:2;5917:9;5913:18;5905:26;;5941:71;6009:1;5998:9;5994:17;5985:6;5941:71;:::i;:::-;5797:222;;;;:::o;6106:169::-;6190:11;6224:6;6219:3;6212:19;6264:4;6259:3;6255:14;6240:29;;6106:169;;;;:::o;6281:185::-;6321:1;6338:20;6356:1;6338:20;:::i;:::-;6333:25;;6372:20;6390:1;6372:20;:::i;:::-;6367:25;;6411:1;6401:35;;6416:18;;:::i;:::-;6401:35;6458:1;6455;6451:9;6446:14;;6281:185;;;;:::o;6472:348::-;6512:7;6535:20;6553:1;6535:20;:::i;:::-;6530:25;;6569:20;6587:1;6569:20;:::i;:::-;6564:25;;6757:1;6689:66;6685:74;6682:1;6679:81;6674:1;6667:9;6660:17;6656:105;6653:131;;;6764:18;;:::i;:::-;6653:131;6812:1;6809;6805:9;6794:20;;6472:348;;;;:::o;6826:96::-;6863:7;6892:24;6910:5;6892:24;:::i;:::-;6881:35;;6826:96;;;:::o;6928:90::-;6962:7;7005:5;6998:13;6991:21;6980:32;;6928:90;;;:::o;7024:126::-;7061:7;7101:42;7094:5;7090:54;7079:65;;7024:126;;;:::o;7156:77::-;7193:7;7222:5;7211:16;;7156:77;;;:::o;7239:180::-;7287:77;7284:1;7277:88;7384:4;7381:1;7374:15;7408:4;7405:1;7398:15;7425:180;7473:77;7470:1;7463:88;7570:4;7567:1;7560:15;7594:4;7591:1;7584:15;7734:117;7843:1;7840;7833:12;7857:225;7997:34;7993:1;7985:6;7981:14;7974:58;8066:8;8061:2;8053:6;8049:15;8042:33;7857:225;:::o;8088:182::-;8228:34;8224:1;8216:6;8212:14;8205:58;8088:182;:::o;8276:122::-;8349:24;8367:5;8349:24;:::i;:::-;8342:5;8339:35;8329:63;;8388:1;8385;8378:12;8329:63;8276:122;:::o;8404:::-;8477:24;8495:5;8477:24;:::i;:::-;8470:5;8467:35;8457:63;;8516:1;8513;8506:12;8457:63;8404:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"739600","executionCost":"infinite","totalCost":"infinite"},"external":{"aDAI()":"2515","amountTokensToDeduct(address,uint256)":"infinite","amountaDAIToDeduct(uint256)":"infinite","calculateFees(uint256,uint256,address)":"infinite","checkSufficientaDAI(uint256,address)":"infinite","daiToken()":"2580","owner()":"2589","renounceOwnership()":"30443","setPriceCheckerAddress(address)":"27008","setWalletAddress(address)":"26986","transferOwnership(address)":"30857"}},"methodIdentifiers":{"aDAI()":"1a38a4fb","amountTokensToDeduct(address,uint256)":"b98ee419","amountaDAIToDeduct(uint256)":"a42963e9","calculateFees(uint256,uint256,address)":"513ffedd","checkSufficientaDAI(uint256,address)":"ca8963f1","daiToken()":"be22f546","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setPriceCheckerAddress(address)":"b136e39a","setWalletAddress(address)":"ac1a386a","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceCheckerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"aDAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_refToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fees\",\"type\":\"uint256\"}],\"name\":\"amountTokensToDeduct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fees\",\"type\":\"uint256\"}],\"name\":\"amountaDAIToDeduct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_refToken\",\"type\":\"address\"}],\"name\":\"calculateFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fees\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"checkSufficientaDAI\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daiToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_PriceCheckeraddress\",\"type\":\"address\"}],\"name\":\"setPriceCheckerAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Walletaddress\",\"type\":\"address\"}],\"name\":\"setWalletAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TradingFees.sol\":\"TradingFees\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/Exchange.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./PriceChecker.sol\\\";\\r\\nimport \\\"./TradingFees.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Exchange is Ownable {\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n    PriceChecker priceChecker;\\r\\n    TradingFees tradingFees;\\r\\n    Wallet wallet;\\r\\n\\r\\n    uint256 decimals = 10 ** 18;\\r\\n    address public ethToken = address(0);\\r\\n\\r\\n    //Token Address List available in DEX\\r\\n    _tokenInfo[] public tokenList;\\r\\n\\r\\n    //s_orderBook mappping: tokenAddress -> Side -> Order Array\\r\\n    mapping(address => mapping(uint256 => _Order[])) public s_orderBook;\\r\\n\\r\\n    mapping(address => mapping(uint256 => _filledOrder[]))\\r\\n        public s_filledOrders;\\r\\n\\r\\n    uint256 public s_orderId = 0;\\r\\n    bool private s_isManual = true;\\r\\n\\r\\n    struct _tokenInfo {\\r\\n        address add;\\r\\n        uint256 decimals;\\r\\n    }\\r\\n\\r\\n    struct _fillOrderValues {\\r\\n        uint256 rate;\\r\\n        uint256 amount;\\r\\n    }\\r\\n\\r\\n    //Structs representing an order that has unique id, user and amounts to give and get between two tokens to exchange\\r\\n    struct _Order {\\r\\n        uint256 id;\\r\\n        Side side;\\r\\n        address user;\\r\\n        address tokenA;\\r\\n        uint256 amountA;\\r\\n        address tokenB;\\r\\n        uint256 amountB;\\r\\n        uint256 rate; // TokenB/TokenA = price in terms of TokenB\\r\\n        uint256 originalAmountA;\\r\\n        uint256 originalAmountB;\\r\\n        bool waiveFees;\\r\\n    }\\r\\n\\r\\n    //For any order that is filled even if it is partially filled or fully filled\\r\\n    struct _filledOrder {\\r\\n        uint256 id;\\r\\n        Side side;\\r\\n        address user;\\r\\n        address tokenA;\\r\\n        address tokenB;\\r\\n        uint256 amountFilled;\\r\\n        uint256 fillRate;\\r\\n        uint256 originalRate;\\r\\n        uint256 originalAmountA;\\r\\n        uint256 originalAmountB;\\r\\n        bool feesWaived;\\r\\n        uint256 feesPaid; //in terms of ETH\\r\\n    }\\r\\n\\r\\n    enum Side {\\r\\n        BUY,\\r\\n        SELL\\r\\n    }\\r\\n\\r\\n    //add events\\r\\n    /// @notice Event when an order is placed on an exchange\\r\\n    event Order(\\r\\n        uint256 id,\\r\\n        Side side,\\r\\n        address user,\\r\\n        address tokenA,\\r\\n        uint256 amountA,\\r\\n        address tokenB,\\r\\n        uint256 amountB,\\r\\n        uint256 rate,\\r\\n        uint256 originalAmountA,\\r\\n        uint256 originalAmountB,\\r\\n        bool waiveFees\\r\\n    );\\r\\n\\r\\n    /// @notice Event when an order is cancelled\\r\\n    event Cancel(\\r\\n        uint256 id,\\r\\n        Side side,\\r\\n        address user,\\r\\n        address tokenA,\\r\\n        uint256 amountA,\\r\\n        address tokenB,\\r\\n        uint256 amountB,\\r\\n        uint256 rate,\\r\\n        uint256 originalAmountA,\\r\\n        uint256 originalAmountB,\\r\\n        bool waiveFees\\r\\n    );\\r\\n\\r\\n    event fillBuyOrder(\\r\\n        _Order remainingOrder,\\r\\n        uint256 amountBought,\\r\\n        uint256 fillBuyRate,\\r\\n        bool feesWaived,\\r\\n        uint256 feesPaid\\r\\n    );\\r\\n\\r\\n    event fillSellOrder(\\r\\n        _Order remainingOrder,\\r\\n        uint256 amountSold,\\r\\n        uint256 fillSellRate,\\r\\n        bool feesWaived,\\r\\n        uint256 feesPaid\\r\\n    );\\r\\n\\r\\n    constructor(address _wallet, address _fees, address _priceChecker) {\\r\\n        wallet = Wallet(_wallet);\\r\\n        tradingFees = TradingFees(_fees);\\r\\n        priceChecker = PriceChecker(_priceChecker);\\r\\n    }\\r\\n\\r\\n    function createLimitBuyOrder(\\r\\n        // TokenA/TokenB\\r\\n        address _tokenA,\\r\\n        uint256 _amountA,\\r\\n        address _tokenB,\\r\\n        uint256 _amountB,\\r\\n        uint256 _rate,\\r\\n        bool _waiveFees\\r\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\r\\n        //Amount user has deposited in the DEX must be >= value he wants to buy\\r\\n        require(\\r\\n            wallet.balanceOf(_tokenB, msg.sender).sub(\\r\\n                wallet.getlockedFunds(msg.sender, _tokenB)\\r\\n            ) >= _amountB,\\r\\n            \\\"Insufficient Funds\\\"\\r\\n        );\\r\\n\\r\\n        wallet.updateLockedFunds(msg.sender, _tokenB, _amountB, true);\\r\\n\\r\\n        s_orderBook[_tokenA][uint256(Side.BUY)].push(\\r\\n            _Order(\\r\\n                s_orderId,\\r\\n                Side.BUY,\\r\\n                msg.sender,\\r\\n                _tokenA,\\r\\n                _amountA,\\r\\n                _tokenB,\\r\\n                _amountB,\\r\\n                _rate,\\r\\n                _amountA,\\r\\n                _amountB,\\r\\n                _waiveFees\\r\\n            )\\r\\n        );\\r\\n\\r\\n        emit Order(\\r\\n            s_orderId,\\r\\n            Side.BUY,\\r\\n            msg.sender,\\r\\n            _tokenA,\\r\\n            _amountA,\\r\\n            _tokenB,\\r\\n            _amountB,\\r\\n            _rate,\\r\\n            _amountA,\\r\\n            _amountB,\\r\\n            _waiveFees\\r\\n        );\\r\\n\\r\\n        s_orderId = s_orderId.add(1);\\r\\n    }\\r\\n\\r\\n    function createLimitSellOrder(\\r\\n        address _tokenA,\\r\\n        uint256 _amountA,\\r\\n        address _tokenB,\\r\\n        uint256 _amountB,\\r\\n        uint256 _rate,\\r\\n        bool _waiveFees\\r\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\r\\n        //Amount of tokens user deposit in DEX must be >= the amount of tokens they want to sell\\r\\n        require(\\r\\n            wallet.balanceOf(_tokenA, msg.sender).sub(\\r\\n                wallet.getlockedFunds(msg.sender, _tokenA)\\r\\n            ) >= _amountA,\\r\\n            \\\"Insufficient Funds\\\"\\r\\n        );\\r\\n\\r\\n        //Lock the funds (tokens) in the wallet\\r\\n        wallet.updateLockedFunds(msg.sender, _tokenA, _amountA, true);\\r\\n\\r\\n        s_orderBook[_tokenA][uint256(Side.SELL)].push(\\r\\n            _Order(\\r\\n                s_orderId,\\r\\n                Side.SELL,\\r\\n                msg.sender,\\r\\n                _tokenA,\\r\\n                _amountA,\\r\\n                _tokenB,\\r\\n                _amountB,\\r\\n                _rate,\\r\\n                _amountA,\\r\\n                _amountB,\\r\\n                _waiveFees\\r\\n            )\\r\\n        );\\r\\n\\r\\n        emit Order(\\r\\n            s_orderId,\\r\\n            Side.SELL,\\r\\n            msg.sender,\\r\\n            _tokenA,\\r\\n            _amountA,\\r\\n            _tokenB,\\r\\n            _amountB,\\r\\n            _rate,\\r\\n            _amountA,\\r\\n            _amountB,\\r\\n            _waiveFees\\r\\n        );\\r\\n\\r\\n        s_orderId = s_orderId.add(1);\\r\\n    }\\r\\n\\r\\n    function cancelOrder(\\r\\n        Side side,\\r\\n        uint256 _id,\\r\\n        address _token\\r\\n    ) public validOrder(_id, side, _token) validToken(_token) {\\r\\n        _Order[] storage _order = s_orderBook[_token][uint256(side)];\\r\\n        uint256 size = _order.length;\\r\\n        _Order memory order;\\r\\n\\r\\n        uint256 index;\\r\\n        for (uint256 i = 0; i < size; i++) {\\r\\n            if (_order[i].id == _id) {\\r\\n                index = i;\\r\\n                order = _order[i];\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        //Manual cancellation of orders\\r\\n        if (s_isManual) {\\r\\n            require(msg.sender == order.user, \\\"Not Owner\\\");\\r\\n\\r\\n            //Unlock funds\\r\\n            if (side == Side.BUY) {\\r\\n                wallet.updateLockedFunds(\\r\\n                    msg.sender,\\r\\n                    order.tokenB,\\r\\n                    order.amountB,\\r\\n                    false\\r\\n                );\\r\\n            } else if (side == Side.SELL) {\\r\\n                wallet.updateLockedFunds(\\r\\n                    msg.sender,\\r\\n                    order.tokenA,\\r\\n                    order.amountA,\\r\\n                    false\\r\\n                );\\r\\n            }\\r\\n        }\\r\\n\\r\\n        for (uint256 j = index; j < size - 1; j++) {\\r\\n            _order[j] = _order[j.add(1)];\\r\\n        }\\r\\n        delete _order[size.sub(1)];\\r\\n        _order.pop();\\r\\n\\r\\n        s_orderBook[_token][uint256(side)] = _order;\\r\\n\\r\\n        emit Cancel(\\r\\n            _id,\\r\\n            order.side,\\r\\n            order.user,\\r\\n            order.tokenA,\\r\\n            order.amountA,\\r\\n            order.tokenB,\\r\\n            order.amountB,\\r\\n            order.rate,\\r\\n            order.originalAmountA,\\r\\n            order.originalAmountB,\\r\\n            order.waiveFees\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function fillOrder(\\r\\n        Side side,\\r\\n        uint256 _id,\\r\\n        address _token,\\r\\n        _fillOrderValues memory a\\r\\n    ) internal validOrder(_id, side, _token) validToken(_token) {\\r\\n        uint256 _side = uint256(side);\\r\\n        (_Order memory order, uint256 index) = getOrderFromArray(\\r\\n            _token,\\r\\n            _side,\\r\\n            _id\\r\\n        );\\r\\n\\r\\n        require(order.amountA >= a.amount, \\\"Invalid Order Amount to fill\\\");\\r\\n\\r\\n        order.amountA = order.amountA.sub(a.amount);\\r\\n        order.amountB = order.amountB.sub(\\r\\n            order.rate.mul(a.amount).div(decimals)\\r\\n        );\\r\\n        s_orderBook[_token][_side][index].amountA = order.amountA;\\r\\n        s_orderBook[_token][_side][index].amountB = order.amountB;\\r\\n\\r\\n        uint256 fees = tradingFees.calculateFees(\\r\\n            a.amount,\\r\\n            a.rate,\\r\\n            order.tokenB\\r\\n        ); //fees in terms of USD value 18dp\\r\\n        bool feesWaived = order.waiveFees &&\\r\\n            tradingFees.checkSufficientaDAI(fees, order.user);\\r\\n\\r\\n        if (side == Side.BUY) {\\r\\n            fillBuyOrders(order, a.amount, a.rate, feesWaived, fees);\\r\\n            emit fillBuyOrder(order, a.amount, a.rate, feesWaived, fees);\\r\\n        } else if (side == Side.SELL) {\\r\\n            fillSellOrders(order, a.amount, a.rate, feesWaived, fees);\\r\\n            emit fillSellOrder(order, a.amount, a.rate, feesWaived, fees);\\r\\n        }\\r\\n\\r\\n        if (order.amountA == 0) {\\r\\n            s_isManual = false;\\r\\n            cancelOrder(side, order.id, order.tokenA); //remove filled orders\\r\\n            s_isManual = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function fillBuyOrders(\\r\\n        _Order memory order,\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        bool feesWaived,\\r\\n        uint256 fees\\r\\n    ) internal {\\r\\n        if (feesWaived) {\\r\\n            //Deduct aDAI\\r\\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\\r\\n            wallet.updateBalance(\\r\\n                tradingFees.aDAI(),\\r\\n                order.user,\\r\\n                aDAIToDeduct,\\r\\n                false\\r\\n            );\\r\\n            //Credit Bought tokens\\r\\n            wallet.updateBalance(order.tokenA, order.user, _amount, true);\\r\\n        } else {\\r\\n            uint256 amountTokenToDeduct = tradingFees.amountTokensToDeduct(\\r\\n                order.tokenA,\\r\\n                fees\\r\\n            );\\r\\n            //Credit Bought tokens after minusing fees\\r\\n            wallet.updateBalance(\\r\\n                order.tokenA,\\r\\n                order.user,\\r\\n                _amount.sub(amountTokenToDeduct),\\r\\n                true\\r\\n            );\\r\\n        }\\r\\n\\r\\n        //Original Locked Funds unlocked\\r\\n        wallet.updateLockedFunds(\\r\\n            order.user,\\r\\n            order.tokenB,\\r\\n            (order.rate.mul(_amount)).div(decimals),\\r\\n            false\\r\\n        );\\r\\n\\r\\n        //buyer update\\r\\n        //Buyer balance deducted from what he paid\\r\\n        wallet.updateBalance(\\r\\n            order.tokenB,\\r\\n            order.user,\\r\\n            (_rate.mul(_amount)).div(decimals),\\r\\n            false\\r\\n        );\\r\\n\\r\\n        s_filledOrders[order.user][0].push(\\r\\n            _filledOrder(\\r\\n                order.id,\\r\\n                order.side,\\r\\n                order.user,\\r\\n                order.tokenA,\\r\\n                order.tokenB,\\r\\n                _amount,\\r\\n                _rate,\\r\\n                order.rate,\\r\\n                order.originalAmountA,\\r\\n                order.originalAmountB,\\r\\n                feesWaived,\\r\\n                fees\\r\\n            )\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function fillSellOrders(\\r\\n        _Order memory order,\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        bool feesWaived,\\r\\n        uint256 fees\\r\\n    ) internal {\\r\\n        if (feesWaived) {\\r\\n            //Deduct aDAI\\r\\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\\r\\n            wallet.updateBalance(tradingFees.aDAI(), order.user, aDAIToDeduct, false);\\r\\n            //Credit Earned tokens\\r\\n            wallet.updateBalance(\\r\\n                order.tokenB,\\r\\n                order.user,\\r\\n                (_rate.mul(_amount)).div(decimals),\\r\\n                true\\r\\n            );\\r\\n        } else {\\r\\n            uint256 amountTokensToDeduct = tradingFees.amountTokensToDeduct(\\r\\n                order.tokenB,\\r\\n                fees\\r\\n            );\\r\\n            //Credit Earned tokens after minusing fees\\r\\n            wallet.updateBalance(\\r\\n                order.tokenB,\\r\\n                order.user,\\r\\n                (_rate.mul(_amount)).div(decimals).sub(amountTokensToDeduct),\\r\\n                true\\r\\n            );\\r\\n        }\\r\\n\\r\\n        wallet.updateLockedFunds(order.user, order.tokenA, _amount, false);\\r\\n        //seller update\\r\\n        wallet.updateBalance(order.tokenA, order.user, _amount, false);\\r\\n    }\\r\\n\\r\\n    function matchOrders(\\r\\n        address _token,\\r\\n        uint256 _id,\\r\\n        Side side\\r\\n    ) internal validOrder(_id, side, _token) validToken(_token) {\\r\\n        uint256 saleTokenAmt;\\r\\n\\r\\n        if (side == Side.BUY) {\\r\\n            //Retrieve sell order to match\\r\\n            _Order[] memory _sellOrder = s_orderBook[_token][1];\\r\\n            for (uint256 i = 0; i < _sellOrder.length; i++) {\\r\\n                //Retrieve buy order to be filled\\r\\n                (_Order memory buyOrderToFill, ) = getOrderFromArray(\\r\\n                    _token,\\r\\n                    uint8(side),\\r\\n                    _id\\r\\n                );\\r\\n                //sell order hit buyer's limit price & tokenB matches\\r\\n                if (\\r\\n                    _sellOrder[i].rate <= buyOrderToFill.rate &&\\r\\n                    buyOrderToFill.tokenB == _sellOrder[i].tokenB\\r\\n                ) {\\r\\n                    _Order memory sellOrder = _sellOrder[i];\\r\\n                    //if buyer's amount to buy > seller's amount to sell\\r\\n                    if (buyOrderToFill.amountA > sellOrder.amountA) {\\r\\n                        saleTokenAmt = sellOrder.amountA;\\r\\n                    }\\r\\n                    //if seller's amount to sell >= buyer's amount to buy\\r\\n                    else if (buyOrderToFill.amountA <= sellOrder.amountA) {\\r\\n                        saleTokenAmt = buyOrderToFill.amountA;\\r\\n                    }\\r\\n\\r\\n                    //Verify current balance\\r\\n                    require(\\r\\n                        wallet.balanceOf(\\r\\n                            buyOrderToFill.tokenB,\\r\\n                            buyOrderToFill.user\\r\\n                        ) >= (saleTokenAmt.mul(sellOrder.rate)).div(decimals),\\r\\n                        \\\"Insufficient Buyer Token Balance\\\"\\r\\n                    );\\r\\n                    require(\\r\\n                        wallet.balanceOf(_token, sellOrder.user) >=\\r\\n                            saleTokenAmt,\\r\\n                        \\\"Insufficient Seller Token Balance\\\"\\r\\n                    );\\r\\n\\r\\n                    //update orders\\r\\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\\r\\n                        sellOrder.rate,\\r\\n                        saleTokenAmt\\r\\n                    );\\r\\n                    fillOrder(Side.BUY, _id, _token, fillOrderValues);\\r\\n                    fillOrder(Side.SELL, sellOrder.id, _token, fillOrderValues);\\r\\n                }\\r\\n\\r\\n                bool orderExist = orderExists(_id, side, _token);\\r\\n                if (!orderExist) break;\\r\\n            }\\r\\n        } else if (side == Side.SELL) {\\r\\n            //Retrieve buy order to match\\r\\n            _Order[] memory _buyOrder = s_orderBook[_token][0];\\r\\n            for (uint256 i = 0; i < _buyOrder.length; i++) {\\r\\n                //Retrieve sell order to be filled\\r\\n                (_Order memory sellOrderToFill, ) = getOrderFromArray(\\r\\n                    _token,\\r\\n                    1,\\r\\n                    _id\\r\\n                );\\r\\n                //sell order hit buyer's limit price\\r\\n                if (\\r\\n                    _buyOrder[i].rate >= sellOrderToFill.rate &&\\r\\n                    _buyOrder[i].tokenB == sellOrderToFill.tokenB\\r\\n                ) {\\r\\n                    _Order memory order = _buyOrder[i];\\r\\n\\r\\n                    //if seller's amount to sell > buyer's amount to buy\\r\\n                    if (sellOrderToFill.amountA > order.amountA) {\\r\\n                        saleTokenAmt = order.amountA;\\r\\n                    }\\r\\n                    //if buyer's amount to buy > seller's amount to sell\\r\\n                    else if (sellOrderToFill.amountA <= order.amountA) {\\r\\n                        saleTokenAmt = sellOrderToFill.amountA;\\r\\n                    }\\r\\n                    //Verify current balance\\r\\n                    require(\\r\\n                        wallet.balanceOf(_token, sellOrderToFill.user) >=\\r\\n                            saleTokenAmt,\\r\\n                        \\\"Insufficient Seller Token Balance\\\"\\r\\n                    );\\r\\n                    require(\\r\\n                        wallet.balanceOf(order.tokenB, order.user) >=\\r\\n                            (saleTokenAmt.mul(order.rate)).div(decimals),\\r\\n                        \\\"Insufficient Buyer Token Balance\\\"\\r\\n                    );\\r\\n\\r\\n                    //update orders\\r\\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\\r\\n                        order.rate,\\r\\n                        saleTokenAmt\\r\\n                    );\\r\\n                    fillOrder(Side.SELL, _id, _token, fillOrderValues);\\r\\n                    fillOrder(Side.BUY, order.id, _token, fillOrderValues);\\r\\n                }\\r\\n                bool orderExist = orderExists(_id, side, _token);\\r\\n                if (!orderExist) break;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getOrderLength(\\r\\n        Side side,\\r\\n        address _token\\r\\n    ) public view returns (uint256) {\\r\\n        return s_orderBook[_token][uint256(side)].length;\\r\\n    }\\r\\n\\r\\n    // function getOrder(\\r\\n    //     address _token,\\r\\n    //     uint256 index,\\r\\n    //     Side side\\r\\n    // )\\r\\n    //     public\\r\\n    //     view\\r\\n    //     returns (\\r\\n    //         uint256, //id\\r\\n    //         uint256, //Side\\r\\n    //         address, //user\\r\\n    //         address, //tokenA\\r\\n    //         uint256, //amountA\\r\\n    //         address, //tokenB\\r\\n    //         uint256, //amountB\\r\\n    //         uint256, //rate -> TokenB/TokenA\\r\\n    //         uint256, //originalAmountA\\r\\n    //         uint256, //originalAmountB\\r\\n    //         bool //feesWaived enabled\\r\\n    //     )\\r\\n    // {\\r\\n    //     _Order memory order = s_orderBook[_token][uint256(side)][index];\\r\\n    //     return (\\r\\n    //         order.id,\\r\\n    //         uint256(order.side),\\r\\n    //         order.user,\\r\\n    //         order.tokenA,\\r\\n    //         order.amountA,\\r\\n    //         order.tokenB,\\r\\n    //         order.amountB,\\r\\n    //         order.rate,\\r\\n    //         order.originalAmountA,\\r\\n    //         order.originalAmountB,\\r\\n    //         order.waiveFees\\r\\n    //     );\\r\\n    // }\\r\\n\\r\\n    function getFilledOrderLength(\\r\\n        address _user,\\r\\n        Side side\\r\\n    ) public view returns (uint256) {\\r\\n        return s_filledOrders[_user][uint256(side)].length;\\r\\n    }\\r\\n\\r\\n    // function getFilledOrder(\\r\\n    //     address _user,\\r\\n    //     Side side,\\r\\n    //     uint256 index\\r\\n    // )\\r\\n    //     public\\r\\n    //     view\\r\\n    //     returns (\\r\\n    //         uint256, //id\\r\\n    //         uint256, //side\\r\\n    //         address, //user\\r\\n    //         address, //tokenA\\r\\n    //         address, //tokenB\\r\\n    //         uint256, //amountFilled\\r\\n    //         uint256, //fillRate\\r\\n    //         uint256, //originalRate\\r\\n    //         uint256, //originalAmountA\\r\\n    //         uint256, //originalAmountB\\r\\n    //         bool, //feesWaived\\r\\n    //         uint256 //feesPaid\\r\\n    //     )\\r\\n    // {\\r\\n    //     _filledOrder memory filledOrder = s_filledOrders[_user][uint256(side)][\\r\\n    //         index\\r\\n    //     ];\\r\\n    //     return (\\r\\n    //         filledOrder.id,\\r\\n    //         uint256(filledOrder.side),\\r\\n    //         filledOrder.user,\\r\\n    //         filledOrder.tokenA,\\r\\n    //         filledOrder.tokenB,\\r\\n    //         filledOrder.amountFilled,\\r\\n    //         filledOrder.fillRate,\\r\\n    //         filledOrder.originalRate,\\r\\n    //         filledOrder.originalAmountA,\\r\\n    //         filledOrder.originalAmountB,\\r\\n    //         filledOrder.feesWaived,\\r\\n    //         filledOrder.feesPaid\\r\\n    //     );\\r\\n    // }\\r\\n\\r\\n    function getOrderFromArray(\\r\\n        address _token,\\r\\n        uint256 side,\\r\\n        uint256 _id\\r\\n    ) public view returns (_Order memory, uint256) {\\r\\n        uint256 i = 0;\\r\\n        _Order[] memory _order = s_orderBook[_token][side];\\r\\n        _Order memory order;\\r\\n        for (i; i < _order.length; i++) {\\r\\n            if (_order[i].id == _id) {\\r\\n                order = _order[i];\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        return (order, i);\\r\\n    }\\r\\n\\r\\n    function orderExists(\\r\\n        uint256 _id,\\r\\n        Side side,\\r\\n        address _token\\r\\n    ) public view returns (bool) {\\r\\n        _Order[] memory orders = s_orderBook[_token][uint256(side)];\\r\\n\\r\\n        for (uint256 i = 0; i < orders.length; i++) {\\r\\n            if (orders[i].id == _id) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function addToken(address _token, uint256 _decimals) public onlyOwner {\\r\\n        require(!isVerifiedToken(_token), \\\"Token already verified\\\");\\r\\n        tokenList.push(_tokenInfo(_token, _decimals));\\r\\n    }\\r\\n\\r\\n    function isVerifiedToken(address _token) public view returns (bool) {\\r\\n        //uint256 size = tokenList.length;\\r\\n\\r\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\r\\n            if (tokenList[i].add == _token) return true;\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function getTokenInfo(address _token) public view returns (uint256) {\\r\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\r\\n            if (tokenList[i].add == _token) {\\r\\n                return tokenList[i].decimals;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\\r\\n        wallet = Wallet(_Walletaddress);\\r\\n    }\\r\\n\\r\\n    function setPriceCheckerAddress(\\r\\n        address _PriceCheckeraddress\\r\\n    ) public onlyOwner {\\r\\n        priceChecker = PriceChecker(_PriceCheckeraddress);\\r\\n    }\\r\\n\\r\\n    function setTradingFees(address _tradingFees) public onlyOwner {\\r\\n        tradingFees = TradingFees(_tradingFees);\\r\\n    }\\r\\n\\r\\n    modifier validOrder(\\r\\n        uint256 _id,\\r\\n        Side side,\\r\\n        address _token\\r\\n    ) {\\r\\n        require(orderExists(_id, side, _token), \\\"Invalid Order ID\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier validToken(address _token) {\\r\\n        require(isVerifiedToken(_token), \\\"Token unavailable in DEX\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf501729978c3f815bbaf8920d1d3173c46363cd8cd17ae52a57d2ea2d9a3e7f8\",\"license\":\"MIT\"},\"contracts/PriceChecker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract PriceChecker is Ownable {\\r\\n    _priceFeed[] public priceFeeds;\\r\\n\\r\\n    struct _priceFeed {\\r\\n        string name;\\r\\n        address token;\\r\\n        AggregatorV3Interface priceFeed;\\r\\n    }\\r\\n\\r\\n    //only using PriceFeeds pegged to USD\\r\\n    function addPriceFeed(\\r\\n        string memory _name,\\r\\n        address _token,\\r\\n        address _address\\r\\n    ) external onlyOwner {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n        bool isAdded = false;\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (\\r\\n                keccak256(abi.encodePacked(_name)) ==\\r\\n                keccak256(abi.encodePacked(pricefeed[i].name))\\r\\n            ) {\\r\\n                isAdded = true;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        require(!isAdded, \\\"Price Feed already added\\\");\\r\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(_address);\\r\\n        priceFeeds.push(_priceFeed(_name, _token, priceFeed));\\r\\n    }\\r\\n\\r\\n    function getPriceFeed(\\r\\n        address _token\\r\\n    ) internal view returns (AggregatorV3Interface priceFeed) {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (_token == pricefeed[i].token) {\\r\\n                return pricefeed[i].priceFeed;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getPrice(address _address) external view returns (uint256) {\\r\\n        AggregatorV3Interface priceFeed = getPriceFeed(_address);\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(answer);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf1e1d97a9c555133c6a90fdc333e79e819ffaffd68d9c9579684b49413dda07c\",\"license\":\"MIT\"},\"contracts/TradingFees.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./PriceChecker.sol\\\";\\r\\nimport \\\"./Wallet.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract TradingFees is Ownable {\\r\\n    //When trading, have an option toggle to waive trading fees or not using deposited aETH\\r\\n    //Users have to first deposit aETH tokens into the Exchange contract to waive, aETH tokens are not for trading\\r\\n    //When a trade order goes through, trading fees of the trade fulfilled  = trade amount x trade price x 0.01,\\r\\n    //contract checks how much aETH is deposited and what is the value of aETH, if sufficient to waive fees fully, deduct balance in deposit\\r\\n    //and waive trading fees\\r\\n\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n\\r\\n    uint256 decimals = 10 ** 18;\\r\\n    address public daiToken =\\r\\n        address(0xBa8DCeD3512925e52FE67b1b5329187589072A55); //based on Aave contract\\r\\n    address public aDAI = address(0xADD98B0342e4094Ec32f3b67Ccfd3242C876ff7a); //based on Aave contract\\r\\n    PriceChecker priceFeed;\\r\\n    Wallet wallet;\\r\\n\\r\\n    constructor(address _priceCheckerAddress) {\\r\\n        priceFeed = PriceChecker(_priceCheckerAddress);\\r\\n    }\\r\\n\\r\\n    function calculateFees(\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        address _refToken\\r\\n    ) public view returns (uint256) {\\r\\n        //Calculated based on TokenB price, require actual price in 18dp\\r\\n        //trading fees is 0.1% of trade = 0.001\\r\\n        //moving up 18dp is 0.001 x 10**18 = 10**14\\r\\n        //have to fetch tokenPrice from PriceFeed\\r\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8dp originally\\r\\n        uint256 value = (\\r\\n            ((_amount.mul(_rate)).div(decimals)).mul(priceOfToken.mul(10 ** 10))\\r\\n        ).div(decimals);\\r\\n        uint256 fees = value.div(10 ** 4);\\r\\n\\r\\n        return fees; //based on USD value\\r\\n    }\\r\\n\\r\\n    //Amount of DAI to deduct from fees\\r\\n    function amountaDAIToDeduct(uint256 _fees) public view returns (uint256) {\\r\\n        uint256 aDAI_Price = priceFeed.getPrice(daiToken); // in 8 decimals initially\\r\\n        uint256 amt = _fees.mul(decimals).div(aDAI_Price.mul(10 ** 10));\\r\\n        return uint256(amt);\\r\\n    }\\r\\n\\r\\n    //Amount of Tokens to deduct from fees\\r\\n    function amountTokensToDeduct(\\r\\n        address _refToken,\\r\\n        uint256 _fees\\r\\n    ) public view returns (uint256) {\\r\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8decimals\\r\\n        uint256 amt = _fees.mul(decimals).div(priceOfToken.mul(10 ** 10));\\r\\n        return uint256(amt);\\r\\n    }\\r\\n\\r\\n    function checkSufficientaDAI(\\r\\n        uint256 _fees,\\r\\n        address _user\\r\\n    ) public view returns (bool) {\\r\\n        uint256 amtDAI = amountaDAIToDeduct(_fees);\\r\\n        uint256 balance = wallet.s_tokens(aDAI, _user);\\r\\n\\r\\n        return balance >= amtDAI;\\r\\n    }\\r\\n\\r\\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\\r\\n        wallet = Wallet(_Walletaddress);\\r\\n    }\\r\\n\\r\\n    function setPriceCheckerAddress(\\r\\n        address _PriceCheckeraddress\\r\\n    ) public onlyOwner {\\r\\n        priceFeed = PriceChecker(_PriceCheckeraddress);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x570e96da947a0e3017464615810b58bca9033d9fd045ff00077aa59313ee1d66\",\"license\":\"MIT\"},\"contracts/Wallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./interface/IERC20.sol\\\";\\r\\nimport \\\"./Exchange.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Wallet is Ownable {\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n\\r\\n    address public immutable Owner;\\r\\n\\r\\n    //For prevention of reentrancy\\r\\n    bool private locked;\\r\\n\\r\\n    address public ethToken = address(0);\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) public s_tokens; //tokenAdress -> msg.sender -> tokenAmt\\r\\n    mapping(address => mapping(address => uint256)) public lockedFunds;\\r\\n\\r\\n    Exchange exchange;\\r\\n    IERC20 token;\\r\\n\\r\\n    event Deposit(address token, address user, uint256 amount, uint256 balance);\\r\\n\\r\\n    /// @notice Event when amount withdrawn exchange\\r\\n    event Withdraw(\\r\\n        address token,\\r\\n        address user,\\r\\n        uint256 amount,\\r\\n        uint256 balance\\r\\n    );\\r\\n\\r\\n    constructor() {\\r\\n        Owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    function depositETH() external payable {\\r\\n        updateBalance(ethToken, msg.sender, msg.value, true);\\r\\n\\r\\n        emit Deposit(\\r\\n            ethToken,\\r\\n            msg.sender,\\r\\n            msg.value,\\r\\n            balanceOf(ethToken, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdrawETH(uint256 _amount) external {\\r\\n        require(\\r\\n            balanceOf(ethToken, msg.sender).sub(\\r\\n                getlockedFunds(msg.sender, ethToken)\\r\\n            ) >= _amount,\\r\\n            \\\"Insufficient balance ETH to withdraw\\\"\\r\\n        );\\r\\n        require(!locked, \\\"Reentrant call detected!\\\");\\r\\n        locked = true;\\r\\n        updateBalance(ethToken, msg.sender, _amount, false);\\r\\n        locked = false;\\r\\n        (bool success, ) = msg.sender.call{value: _amount}(\\\"\\\");\\r\\n        require(success, \\\"failed to send amount\\\");\\r\\n\\r\\n        emit Withdraw(\\r\\n            ethToken,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(ethToken, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    //from and transferFrom is from ERC20 contract\\r\\n    //_token should be an ERC20 token\\r\\n    function depositToken(\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        uint256 _decimals\\r\\n    ) external {\\r\\n        require(_token != ethToken);\\r\\n        require(\\r\\n            exchange.isVerifiedToken(_token),\\r\\n            \\\"Token not verified on Exchange\\\"\\r\\n        );\\r\\n        //need to add a check to prove that it is an ERC20 token\\r\\n        token = IERC20(_token);\\r\\n\\r\\n        //Requires approval first\\r\\n        require(\\r\\n            token.transferFrom(msg.sender, address(this), _amount),\\r\\n            \\\"No Approval yet\\\"\\r\\n        );\\r\\n        uint256 decimals = 18;\\r\\n        if (_decimals == 18) {\\r\\n            updateBalance(_token, msg.sender, _amount, true);\\r\\n        } else\\r\\n            updateBalance(\\r\\n                _token,\\r\\n                msg.sender,\\r\\n                _amount.mul(10 ** decimals.sub(_decimals)),\\r\\n                true\\r\\n            );\\r\\n\\r\\n        emit Deposit(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(_token, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdrawToken(\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        uint256 _decimals\\r\\n    ) external {\\r\\n        require(_token != ethToken);\\r\\n        require(\\r\\n            exchange.isVerifiedToken(_token),\\r\\n            \\\"Token not verified on Exchange\\\"\\r\\n        );\\r\\n\\r\\n        require(\\r\\n            balanceOf(_token, msg.sender).sub(\\r\\n                getlockedFunds(msg.sender, _token)\\r\\n            ) >= _amount,\\r\\n            \\\"Insufficient Tokens to withdraw\\\"\\r\\n        );\\r\\n        require(!locked, \\\"Reentrant call detected!\\\");\\r\\n        locked = true;\\r\\n\\r\\n        token = IERC20(_token);\\r\\n        uint256 decimals = 18;\\r\\n        if (_decimals == 18) {\\r\\n            updateBalance(_token, msg.sender, _amount, false);\\r\\n            require(token.transfer(msg.sender, _amount));\\r\\n        } else {\\r\\n            updateBalance(\\r\\n                _token,\\r\\n                msg.sender,\\r\\n                _amount.mul(10 ** decimals.sub(_decimals)),\\r\\n                false\\r\\n            );\\r\\n            require(\\r\\n                token.transfer(\\r\\n                    msg.sender,\\r\\n                    _amount.div(10 ** decimals.sub(_decimals))\\r\\n                )\\r\\n            );\\r\\n        }\\r\\n\\r\\n        locked = false;\\r\\n        emit Withdraw(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(_token, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getlockedFunds(\\r\\n        address _user,\\r\\n        address _token\\r\\n    ) public view returns (uint256) {\\r\\n        return lockedFunds[_user][_token];\\r\\n    }\\r\\n\\r\\n    function updateLockedFunds(\\r\\n        address _user,\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) public isAuthorised {\\r\\n        if (isAdd) {\\r\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].add(\\r\\n                _amount\\r\\n            );\\r\\n        } else if (!isAdd) {\\r\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].sub(\\r\\n                _amount\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //balance of specific tokens in the dex owned by specific user\\r\\n    function balanceOf(\\r\\n        address _token,\\r\\n        address _user\\r\\n    ) public view returns (uint256) {\\r\\n        return s_tokens[_token][_user];\\r\\n    }\\r\\n\\r\\n    function updateBalance(\\r\\n        address _token,\\r\\n        address _user,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) public isAuthorised {\\r\\n        if (isAdd) {\\r\\n            s_tokens[_token][_user] = s_tokens[_token][_user].add(_amount);\\r\\n        } else if (!isAdd) {\\r\\n            s_tokens[_token][_user] = s_tokens[_token][_user].sub(_amount);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function updateExchangeAddress(address _exchangeAddress) public onlyOwner {\\r\\n        exchange = Exchange(_exchangeAddress);\\r\\n    }\\r\\n\\r\\n    modifier isAuthorised() {\\r\\n        require(\\r\\n            msg.sender == address(this) || msg.sender == address(exchange),\\r\\n            \\\"Unauthorised Function Call\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf57179a3c0d338a6d94c7dadc3ee6873838e3af70c690754689b9c1c00aea67c\",\"license\":\"MIT\"},\"contracts/interface/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IERC20 {\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256 remaining);\\r\\n\\r\\n    function approve(\\r\\n        address spender,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function balanceOf(address owner) external view returns (uint256 balance);\\r\\n\\r\\n    function decimals() external view returns (uint8 decimalPlaces);\\r\\n\\r\\n    function decreaseApproval(\\r\\n        address spender,\\r\\n        uint256 subtractedValue\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function increaseApproval(\\r\\n        address spender,\\r\\n        uint256 addedValue\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function name() external view returns (string memory tokenName);\\r\\n\\r\\n    function symbol() external view returns (string memory tokenSymbol);\\r\\n\\r\\n    function totalSupply() external view returns (uint256 totalTokensIssued);\\r\\n\\r\\n    function transfer(\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n}\\r\\n\",\"keccak256\":\"0xef48d46afc4efefcd6d7f1799f25aee5d8fcd588e2aaa80a84af726128194326\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":53,"contract":"contracts/TradingFees.sol:TradingFees","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":2422,"contract":"contracts/TradingFees.sol:TradingFees","label":"decimals","offset":0,"slot":"1","type":"t_uint256"},{"astId":2428,"contract":"contracts/TradingFees.sol:TradingFees","label":"daiToken","offset":0,"slot":"2","type":"t_address"},{"astId":2434,"contract":"contracts/TradingFees.sol:TradingFees","label":"aDAI","offset":0,"slot":"3","type":"t_address"},{"astId":2437,"contract":"contracts/TradingFees.sol:TradingFees","label":"priceFeed","offset":0,"slot":"4","type":"t_contract(PriceChecker)2405"},{"astId":2440,"contract":"contracts/TradingFees.sol:TradingFees","label":"wallet","offset":0,"slot":"5","type":"t_contract(Wallet)3199"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(PriceChecker)2405":{"encoding":"inplace","label":"contract PriceChecker","numberOfBytes":"20"},"t_contract(Wallet)3199":{"encoding":"inplace","label":"contract Wallet","numberOfBytes":"20"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Wallet.sol":{"Wallet":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"balance","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"balance","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"Owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_user","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"depositETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_decimals","type":"uint256"}],"name":"depositToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"ethToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"address","name":"_token","type":"address"}],"name":"getlockedFunds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"lockedFunds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"s_tokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_user","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bool","name":"isAdd","type":"bool"}],"name":"updateBalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_exchangeAddress","type":"address"}],"name":"updateExchangeAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bool","name":"isAdd","type":"bool"}],"name":"updateLockedFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdrawETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_decimals","type":"uint256"}],"name":"withdrawToken","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2705":{"entryPoint":null,"id":2705,"parameterSlots":0,"returnSlots":0},"@_69":{"entryPoint":null,"id":69,"parameterSlots":0,"returnSlots":0},"@_msgSender_170":{"entryPoint":171,"id":170,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_157":{"entryPoint":179,"id":157,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"60a06040526000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005257600080fd5b5061006f6100646100ab60201b60201c565b6100b360201b60201c565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050610177565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60805160601c61241e620001966000396000610fe4015261241e6000f3fe6080604052600436106100f35760003560e01c806399c6d2de1161008a578063f14210a611610059578063f14210a614610314578063f2fde38b1461033d578063f6326fb314610366578063f7888aec14610370576100f3565b806399c6d2de1461025a578063b4a99a4e14610283578063c5ab4602146102ae578063cd5d767c146102d7576100f3565b8063715018a6116100c6578063715018a6146101c45780637bf1a627146101db5780638da5cb5b1461020657806396c0ec5514610231576100f3565b806331415a65146100f857806346a8f820146101215780634bdde1cf1461014a5780634fc121db14610187575b600080fd5b34801561010457600080fd5b5061011f600480360381019061011a919061197c565b6103ad565b005b34801561012d57600080fd5b50610148600480360381019061014391906119e9565b6103f9565b005b34801561015657600080fd5b50610171600480360381019061016c91906119a9565b6106f5565b60405161017e9190611e6e565b60405180910390f35b34801561019357600080fd5b506101ae60048036038101906101a991906119a9565b61071a565b6040516101bb9190611e6e565b60405180910390f35b3480156101d057600080fd5b506101d96107a1565b005b3480156101e757600080fd5b506101f06107b5565b6040516101fd9190611c8e565b60405180910390f35b34801561021257600080fd5b5061021b6107db565b6040516102289190611c8e565b60405180910390f35b34801561023d57600080fd5b5061025860048036038101906102539190611a50565b610804565b005b34801561026657600080fd5b50610281600480360381019061027c9190611a50565b610cc1565b005b34801561028f57600080fd5b50610298610fe2565b6040516102a59190611c8e565b60405180910390f35b3480156102ba57600080fd5b506102d560048036038101906102d091906119e9565b611006565b005b3480156102e357600080fd5b506102fe60048036038101906102f991906119a9565b611302565b60405161030b9190611e6e565b60405180910390f35b34801561032057600080fd5b5061033b60048036038101906103369190611ad0565b611327565b005b34801561034957600080fd5b50610364600480360381019061035f919061197c565b6115c0565b005b61036e611644565b005b34801561037c57600080fd5b50610397600480360381019061039291906119a9565b6116ff565b6040516103a49190611e6e565b60405180910390f35b6103b5611786565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806104805750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6104bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b690611e2e565b60405180910390fd5b80156105d95761055482600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461180490919063ffffffff16565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506106ef565b806106ee5761066d82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461181a90919063ffffffff16565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b50505050565b6003602052816000526040600020602052806000526040600020600091509150505481565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6107a9611786565b6107b36000611830565b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561085f57600080fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631027b219846040518263ffffffff1660e01b81526004016108ba9190611c8e565b60206040518083038186803b1580156108d257600080fd5b505afa1580156108e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090a9190611aa3565b610949576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094090611dce565b60405180910390fd5b8161096f610957338661071a565b61096186336116ff565b61181a90919063ffffffff16565b10156109b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a790611e0e565b60405180910390fd5b600060149054906101000a900460ff1615610a00576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f790611d4e565b60405180910390fd5b6001600060146101000a81548160ff02191690831515021790555082600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000601290506012821415610b3557610a788433856000611006565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610ad5929190611d25565b602060405180830381600087803b158015610aef57600080fd5b505af1158015610b03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b279190611aa3565b610b3057600080fd5b610c5b565b610b728433610b6b610b50868661181a90919063ffffffff16565b600a610b5c9190611f7f565b876118f490919063ffffffff16565b6000611006565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33610be2610bc7868661181a90919063ffffffff16565b600a610bd39190611f7f565b8761190a90919063ffffffff16565b6040518363ffffffff1660e01b8152600401610bff929190611d25565b602060405180830381600087803b158015610c1957600080fd5b505af1158015610c2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c519190611aa3565b610c5a57600080fd5b5b60008060146101000a81548160ff0219169083151502179055507ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567843385610ca388336116ff565b604051610cb39493929190611ce0565b60405180910390a150505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d1c57600080fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631027b219846040518263ffffffff1660e01b8152600401610d779190611c8e565b60206040518083038186803b158015610d8f57600080fd5b505afa158015610da3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc79190611aa3565b610e06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfd90611dce565b60405180910390fd5b82600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610ea693929190611ca9565b602060405180830381600087803b158015610ec057600080fd5b505af1158015610ed4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef89190611aa3565b610f37576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2e90611e4e565b60405180910390fd5b6000601290506012821415610f5857610f538433856001611006565b610f96565b610f958433610f8e610f73868661181a90919063ffffffff16565b600a610f7f9190611f7f565b876118f490919063ffffffff16565b6001611006565b5b7fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7843385610fc488336116ff565b604051610fd49493929190611ce0565b60405180910390a150505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061108d5750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6110cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110c390611e2e565b60405180910390fd5b80156111e65761116182600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461180490919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506112fc565b806112fb5761127a82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461181a90919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b50505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b8061139161135733600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661071a565b611383600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336116ff565b61181a90919063ffffffff16565b10156113d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c990611dae565b60405180910390fd5b600060149054906101000a900460ff1615611422576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141990611d4e565b60405180910390fd5b6001600060146101000a81548160ff02191690831515021790555061146c600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633836000611006565b60008060146101000a81548160ff02191690831515021790555060003373ffffffffffffffffffffffffffffffffffffffff16826040516114ac90611c79565b60006040518083038185875af1925050503d80600081146114e9576040519150601f19603f3d011682016040523d82523d6000602084013e6114ee565b606091505b5050905080611532576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152990611d8e565b60405180910390fd5b7ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633846115a4600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336116ff565b6040516115b49493929190611ce0565b60405180910390a15050565b6115c8611786565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611638576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162f90611d6e565b60405180910390fd5b61164181611830565b50565b611673600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633346001611006565b7fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633346116e5600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336116ff565b6040516116f59493929190611ce0565b60405180910390a1565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61178e611920565b73ffffffffffffffffffffffffffffffffffffffff166117ac6107db565b73ffffffffffffffffffffffffffffffffffffffff1614611802576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f990611dee565b60405180910390fd5b565b600081836118129190611ea5565b905092915050565b6000818361182891906120f7565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008183611902919061209d565b905092915050565b600081836119189190611efb565b905092915050565b600033905090565b600081359050611937816123a3565b92915050565b60008135905061194c816123ba565b92915050565b600081519050611961816123ba565b92915050565b600081359050611976816123d1565b92915050565b600060208284031215611992576119916121d1565b5b60006119a084828501611928565b91505092915050565b600080604083850312156119c0576119bf6121d1565b5b60006119ce85828601611928565b92505060206119df85828601611928565b9150509250929050565b60008060008060808587031215611a0357611a026121d1565b5b6000611a1187828801611928565b9450506020611a2287828801611928565b9350506040611a3387828801611967565b9250506060611a448782880161193d565b91505092959194509250565b600080600060608486031215611a6957611a686121d1565b5b6000611a7786828701611928565b9350506020611a8886828701611967565b9250506040611a9986828701611967565b9150509250925092565b600060208284031215611ab957611ab86121d1565b5b6000611ac784828501611952565b91505092915050565b600060208284031215611ae657611ae56121d1565b5b6000611af484828501611967565b91505092915050565b611b068161212b565b82525050565b6000611b19601883611e94565b9150611b24826121e3565b602082019050919050565b6000611b3c602683611e94565b9150611b478261220c565b604082019050919050565b6000611b5f601583611e94565b9150611b6a8261225b565b602082019050919050565b6000611b82602483611e94565b9150611b8d82612284565b604082019050919050565b6000611ba5601e83611e94565b9150611bb0826122d3565b602082019050919050565b6000611bc8602083611e94565b9150611bd3826122fc565b602082019050919050565b6000611beb601f83611e94565b9150611bf682612325565b602082019050919050565b6000611c0e601a83611e94565b9150611c198261234e565b602082019050919050565b6000611c31600083611e89565b9150611c3c82612377565b600082019050919050565b6000611c54600f83611e94565b9150611c5f8261237a565b602082019050919050565b611c7381612169565b82525050565b6000611c8482611c24565b9150819050919050565b6000602082019050611ca36000830184611afd565b92915050565b6000606082019050611cbe6000830186611afd565b611ccb6020830185611afd565b611cd86040830184611c6a565b949350505050565b6000608082019050611cf56000830187611afd565b611d026020830186611afd565b611d0f6040830185611c6a565b611d1c6060830184611c6a565b95945050505050565b6000604082019050611d3a6000830185611afd565b611d476020830184611c6a565b9392505050565b60006020820190508181036000830152611d6781611b0c565b9050919050565b60006020820190508181036000830152611d8781611b2f565b9050919050565b60006020820190508181036000830152611da781611b52565b9050919050565b60006020820190508181036000830152611dc781611b75565b9050919050565b60006020820190508181036000830152611de781611b98565b9050919050565b60006020820190508181036000830152611e0781611bbb565b9050919050565b60006020820190508181036000830152611e2781611bde565b9050919050565b60006020820190508181036000830152611e4781611c01565b9050919050565b60006020820190508181036000830152611e6781611c47565b9050919050565b6000602082019050611e836000830184611c6a565b92915050565b600081905092915050565b600082825260208201905092915050565b6000611eb082612169565b9150611ebb83612169565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611ef057611eef612173565b5b828201905092915050565b6000611f0682612169565b9150611f1183612169565b925082611f2157611f206121a2565b5b828204905092915050565b6000808291508390505b6001851115611f7657808604811115611f5257611f51612173565b5b6001851615611f615780820291505b8081029050611f6f856121d6565b9450611f36565b94509492505050565b6000611f8a82612169565b9150611f9583612169565b9250611fc27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611fca565b905092915050565b600082611fda5760019050612096565b81611fe85760009050612096565b8160018114611ffe576002811461200857612037565b6001915050612096565b60ff84111561201a57612019612173565b5b8360020a91508482111561203157612030612173565b5b50612096565b5060208310610133831016604e8410600b841016171561206c5782820a90508381111561206757612066612173565b5b612096565b6120798484846001611f2c565b925090508184048111156120905761208f612173565b5b81810290505b9392505050565b60006120a882612169565b91506120b383612169565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156120ec576120eb612173565b5b828202905092915050565b600061210282612169565b915061210d83612169565b9250828210156121205761211f612173565b5b828203905092915050565b600061213682612149565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b60008160011c9050919050565b7f5265656e7472616e742063616c6c206465746563746564210000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f6661696c656420746f2073656e6420616d6f756e740000000000000000000000600082015250565b7f496e73756666696369656e742062616c616e63652045544820746f207769746860008201527f6472617700000000000000000000000000000000000000000000000000000000602082015250565b7f546f6b656e206e6f74207665726966696564206f6e2045786368616e67650000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e73756666696369656e7420546f6b656e7320746f20776974686472617700600082015250565b7f556e617574686f72697365642046756e6374696f6e2043616c6c000000000000600082015250565b50565b7f4e6f20417070726f76616c207965740000000000000000000000000000000000600082015250565b6123ac8161212b565b81146123b757600080fd5b50565b6123c38161213d565b81146123ce57600080fd5b50565b6123da81612169565b81146123e557600080fd5b5056fea2646970667358221220598d84f9513cdc4e7ac9ff12fb9877fee8a6f4316d55d84d0b0649c8692a5c9964736f6c63430008070033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x64 PUSH2 0xAB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xB3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP PUSH2 0x177 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x241E PUSH3 0x196 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0xFE4 ADD MSTORE PUSH2 0x241E PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x99C6D2DE GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xF14210A6 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xF14210A6 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xF6326FB3 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xF7888AEC EQ PUSH2 0x370 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x99C6D2DE EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xB4A99A4E EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0xC5AB4602 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0xCD5D767C EQ PUSH2 0x2D7 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x7BF1A627 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x96C0EC55 EQ PUSH2 0x231 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x31415A65 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x46A8F820 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x4BDDE1CF EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x4FC121DB EQ PUSH2 0x187 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x3AD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x19E9 JUMP JUMPDEST PUSH2 0x3F9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0x71A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x7A1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21B PUSH2 0x7DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x1A50 JUMP JUMPDEST PUSH2 0x804 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x1A50 JUMP JUMPDEST PUSH2 0xCC1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x298 PUSH2 0xFE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x19E9 JUMP JUMPDEST PUSH2 0x1006 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x1E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x1AD0 JUMP JUMPDEST PUSH2 0x1327 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x15C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36E PUSH2 0x1644 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x397 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x1E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B5 PUSH2 0x1786 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x480 JUMPI POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x5D9 JUMPI PUSH2 0x554 DUP3 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1804 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x6EF JUMP JUMPDEST DUP1 PUSH2 0x6EE JUMPI PUSH2 0x66D DUP3 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7A9 PUSH2 0x1786 JUMP JUMPDEST PUSH2 0x7B3 PUSH1 0x0 PUSH2 0x1830 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x85F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1027B219 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BA SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x90A SWAP2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST PUSH2 0x949 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x940 SWAP1 PUSH2 0x1DCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x96F PUSH2 0x957 CALLER DUP7 PUSH2 0x71A JUMP JUMPDEST PUSH2 0x961 DUP7 CALLER PUSH2 0x16FF JUMP JUMPDEST PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x9B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A7 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F7 SWAP1 PUSH2 0x1D4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x12 SWAP1 POP PUSH1 0x12 DUP3 EQ ISZERO PUSH2 0xB35 JUMPI PUSH2 0xA78 DUP5 CALLER DUP6 PUSH1 0x0 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD5 SWAP3 SWAP2 SWAP1 PUSH2 0x1D25 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB03 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB27 SWAP2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST PUSH2 0xB30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC5B JUMP JUMPDEST PUSH2 0xB72 DUP5 CALLER PUSH2 0xB6B PUSH2 0xB50 DUP7 DUP7 PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0xB5C SWAP2 SWAP1 PUSH2 0x1F7F JUMP JUMPDEST DUP8 PUSH2 0x18F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH2 0xBE2 PUSH2 0xBC7 DUP7 DUP7 PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0xBD3 SWAP2 SWAP1 PUSH2 0x1F7F JUMP JUMPDEST DUP8 PUSH2 0x190A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBFF SWAP3 SWAP2 SWAP1 PUSH2 0x1D25 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC2D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC51 SWAP2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST PUSH2 0xC5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xF341246ADAAC6F497BC2A656F546AB9E182111D630394F0C57C710A59A2CB567 DUP5 CALLER DUP6 PUSH2 0xCA3 DUP9 CALLER PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1027B219 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD77 SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDA3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDC7 SWAP2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST PUSH2 0xE06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDFD SWAP1 PUSH2 0x1DCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CA9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xED4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEF8 SWAP2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST PUSH2 0xF37 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2E SWAP1 PUSH2 0x1E4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP PUSH1 0x12 DUP3 EQ ISZERO PUSH2 0xF58 JUMPI PUSH2 0xF53 DUP5 CALLER DUP6 PUSH1 0x1 PUSH2 0x1006 JUMP JUMPDEST PUSH2 0xF96 JUMP JUMPDEST PUSH2 0xF95 DUP5 CALLER PUSH2 0xF8E PUSH2 0xF73 DUP7 DUP7 PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0xF7F SWAP2 SWAP1 PUSH2 0x1F7F JUMP JUMPDEST DUP8 PUSH2 0x18F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1006 JUMP JUMPDEST JUMPDEST PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP5 CALLER DUP6 PUSH2 0xFC4 DUP9 CALLER PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFD4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x108D JUMPI POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x10CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C3 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x11E6 JUMPI PUSH2 0x1161 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1804 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x12FC JUMP JUMPDEST DUP1 PUSH2 0x12FB JUMPI PUSH2 0x127A DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH2 0x1391 PUSH2 0x1357 CALLER PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x71A JUMP JUMPDEST PUSH2 0x1383 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x16FF JUMP JUMPDEST PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x13D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C9 SWAP1 PUSH2 0x1DAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1422 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1419 SWAP1 PUSH2 0x1D4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x146C PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH1 0x0 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x14AC SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14E9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1532 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1529 SWAP1 PUSH2 0x1D8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xF341246ADAAC6F497BC2A656F546AB9E182111D630394F0C57C710A59A2CB567 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP5 PUSH2 0x15A4 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x15C8 PUSH2 0x1786 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1638 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x162F SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1641 DUP2 PUSH2 0x1830 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1673 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER CALLVALUE PUSH1 0x1 PUSH2 0x1006 JUMP JUMPDEST PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER CALLVALUE PUSH2 0x16E5 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x178E PUSH2 0x1920 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17AC PUSH2 0x7DB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1802 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17F9 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1812 SWAP2 SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1828 SWAP2 SWAP1 PUSH2 0x20F7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1902 SWAP2 SWAP1 PUSH2 0x209D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1918 SWAP2 SWAP1 PUSH2 0x1EFB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1937 DUP2 PUSH2 0x23A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x194C DUP2 PUSH2 0x23BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1961 DUP2 PUSH2 0x23BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1976 DUP2 PUSH2 0x23D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1992 JUMPI PUSH2 0x1991 PUSH2 0x21D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19A0 DUP5 DUP3 DUP6 ADD PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19C0 JUMPI PUSH2 0x19BF PUSH2 0x21D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19CE DUP6 DUP3 DUP7 ADD PUSH2 0x1928 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19DF DUP6 DUP3 DUP7 ADD PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1A03 JUMPI PUSH2 0x1A02 PUSH2 0x21D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A11 DUP8 DUP3 DUP9 ADD PUSH2 0x1928 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1A22 DUP8 DUP3 DUP9 ADD PUSH2 0x1928 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1A33 DUP8 DUP3 DUP9 ADD PUSH2 0x1967 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1A44 DUP8 DUP3 DUP9 ADD PUSH2 0x193D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A69 JUMPI PUSH2 0x1A68 PUSH2 0x21D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A77 DUP7 DUP3 DUP8 ADD PUSH2 0x1928 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A88 DUP7 DUP3 DUP8 ADD PUSH2 0x1967 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A99 DUP7 DUP3 DUP8 ADD PUSH2 0x1967 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AB9 JUMPI PUSH2 0x1AB8 PUSH2 0x21D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AC7 DUP5 DUP3 DUP6 ADD PUSH2 0x1952 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AE6 JUMPI PUSH2 0x1AE5 PUSH2 0x21D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AF4 DUP5 DUP3 DUP6 ADD PUSH2 0x1967 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B06 DUP2 PUSH2 0x212B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B19 PUSH1 0x18 DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B24 DUP3 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B3C PUSH1 0x26 DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B47 DUP3 PUSH2 0x220C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B5F PUSH1 0x15 DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B6A DUP3 PUSH2 0x225B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B82 PUSH1 0x24 DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B8D DUP3 PUSH2 0x2284 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BA5 PUSH1 0x1E DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB0 DUP3 PUSH2 0x22D3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC8 PUSH1 0x20 DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD3 DUP3 PUSH2 0x22FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BEB PUSH1 0x1F DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF6 DUP3 PUSH2 0x2325 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0E PUSH1 0x1A DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C19 DUP3 PUSH2 0x234E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C31 PUSH1 0x0 DUP4 PUSH2 0x1E89 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C3C DUP3 PUSH2 0x2377 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C54 PUSH1 0xF DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C5F DUP3 PUSH2 0x237A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C73 DUP2 PUSH2 0x2169 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C84 DUP3 PUSH2 0x1C24 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CA3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1CBE PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x1CCB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x1CD8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C6A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1CF5 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x1D02 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x1D0F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C6A JUMP JUMPDEST PUSH2 0x1D1C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1C6A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D3A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x1D47 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C6A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D67 DUP2 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D87 DUP2 PUSH2 0x1B2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DA7 DUP2 PUSH2 0x1B52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DC7 DUP2 PUSH2 0x1B75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DE7 DUP2 PUSH2 0x1B98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E07 DUP2 PUSH2 0x1BBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E27 DUP2 PUSH2 0x1BDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E47 DUP2 PUSH2 0x1C01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E67 DUP2 PUSH2 0x1C47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E83 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB0 DUP3 PUSH2 0x2169 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EBB DUP4 PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1EF0 JUMPI PUSH2 0x1EEF PUSH2 0x2173 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F06 DUP3 PUSH2 0x2169 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F11 DUP4 PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F21 JUMPI PUSH2 0x1F20 PUSH2 0x21A2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1F76 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1F52 JUMPI PUSH2 0x1F51 PUSH2 0x2173 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1F61 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1F6F DUP6 PUSH2 0x21D6 JUMP JUMPDEST SWAP5 POP PUSH2 0x1F36 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F8A DUP3 PUSH2 0x2169 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F95 DUP4 PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP PUSH2 0x1FC2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1FCA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1FDA JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2096 JUMP JUMPDEST DUP2 PUSH2 0x1FE8 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2096 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1FFE JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2008 JUMPI PUSH2 0x2037 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2096 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x201A JUMPI PUSH2 0x2019 PUSH2 0x2173 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x2031 JUMPI PUSH2 0x2030 PUSH2 0x2173 JUMP JUMPDEST JUMPDEST POP PUSH2 0x2096 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x206C JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x2067 JUMPI PUSH2 0x2066 PUSH2 0x2173 JUMP JUMPDEST JUMPDEST PUSH2 0x2096 JUMP JUMPDEST PUSH2 0x2079 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1F2C JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x2090 JUMPI PUSH2 0x208F PUSH2 0x2173 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A8 DUP3 PUSH2 0x2169 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B3 DUP4 PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x20EC JUMPI PUSH2 0x20EB PUSH2 0x2173 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2102 DUP3 PUSH2 0x2169 JUMP JUMPDEST SWAP2 POP PUSH2 0x210D DUP4 PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2120 JUMPI PUSH2 0x211F PUSH2 0x2173 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2136 DUP3 PUSH2 0x2149 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E742063616C6C206465746563746564210000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6661696C656420746F2073656E6420616D6F756E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E63652045544820746F2077697468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472617700000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E206E6F74207665726966696564206F6E2045786368616E67650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420546F6B656E7320746F20776974686472617700 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x556E617574686F72697365642046756E6374696F6E2043616C6C000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x4E6F20417070726F76616C207965740000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x23AC DUP2 PUSH2 0x212B JUMP JUMPDEST DUP2 EQ PUSH2 0x23B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x23C3 DUP2 PUSH2 0x213D JUMP JUMPDEST DUP2 EQ PUSH2 0x23CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x23DA DUP2 PUSH2 0x2169 JUMP JUMPDEST DUP2 EQ PUSH2 0x23E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE DUP14 DUP5 0xF9 MLOAD EXTCODECOPY 0xDC 0x4E PUSH27 0xC9FF12FB9877FEE8A6F4316D55D84D0B0649C8692A5C9964736F6C PUSH4 0x43000807 STOP CALLER ","sourceMap":"388:5862:7:-:0;;;631:1;597:36;;;;;;;;;;;;;;;;;;;;1138:51;;;;;;;;;;936:32:1;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1171:10:7;1163:18;;;;;;;;;;;;388:5862;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2433:187:1:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;388:5862:7:-;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@Owner_2649":{"entryPoint":4066,"id":2649,"parameterSlots":0,"returnSlots":0},"@_checkOwner_100":{"entryPoint":6022,"id":100,"parameterSlots":0,"returnSlots":0},"@_msgSender_170":{"entryPoint":6432,"id":170,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_157":{"entryPoint":6192,"id":157,"parameterSlots":1,"returnSlots":0},"@add_356":{"entryPoint":6148,"id":356,"parameterSlots":2,"returnSlots":1},"@balanceOf_3110":{"entryPoint":5887,"id":3110,"parameterSlots":2,"returnSlots":1},"@depositETH_2731":{"entryPoint":5700,"id":2731,"parameterSlots":0,"returnSlots":0},"@depositToken_2893":{"entryPoint":3265,"id":2893,"parameterSlots":3,"returnSlots":0},"@div_401":{"entryPoint":6410,"id":401,"parameterSlots":2,"returnSlots":1},"@ethToken_2657":{"entryPoint":1973,"id":2657,"parameterSlots":0,"returnSlots":0},"@getlockedFunds_3043":{"entryPoint":1818,"id":3043,"parameterSlots":2,"returnSlots":1},"@lockedFunds_2669":{"entryPoint":1781,"id":2669,"parameterSlots":0,"returnSlots":0},"@mul_386":{"entryPoint":6388,"id":386,"parameterSlots":2,"returnSlots":1},"@owner_86":{"entryPoint":2011,"id":86,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_114":{"entryPoint":1953,"id":114,"parameterSlots":0,"returnSlots":0},"@s_tokens_2663":{"entryPoint":4866,"id":2663,"parameterSlots":0,"returnSlots":0},"@sub_371":{"entryPoint":6170,"id":371,"parameterSlots":2,"returnSlots":1},"@transferOwnership_137":{"entryPoint":5568,"id":137,"parameterSlots":1,"returnSlots":0},"@updateBalance_3161":{"entryPoint":4102,"id":3161,"parameterSlots":4,"returnSlots":0},"@updateExchangeAddress_3175":{"entryPoint":941,"id":3175,"parameterSlots":1,"returnSlots":0},"@updateLockedFunds_3094":{"entryPoint":1017,"id":3094,"parameterSlots":4,"returnSlots":0},"@withdrawETH_2804":{"entryPoint":4903,"id":2804,"parameterSlots":1,"returnSlots":0},"@withdrawToken_3027":{"entryPoint":2052,"id":3027,"parameterSlots":3,"returnSlots":0},"abi_decode_t_address":{"entryPoint":6440,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":6461,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":6482,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6503,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6524,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6569,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256t_bool":{"entryPoint":6633,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":6736,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":6819,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6864,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6909,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210_to_t_string_memory_ptr_fromStack":{"entryPoint":6924,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":6959,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4_to_t_string_memory_ptr_fromStack":{"entryPoint":6994,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4_to_t_string_memory_ptr_fromStack":{"entryPoint":7029,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a_to_t_string_memory_ptr_fromStack":{"entryPoint":7064,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":7099,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9_to_t_string_memory_ptr_fromStack":{"entryPoint":7134,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1_to_t_string_memory_ptr_fromStack":{"entryPoint":7169,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7204,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba_to_t_string_memory_ptr_fromStack":{"entryPoint":7239,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7274,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7289,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7310,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":7337,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":7392,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":7461,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7502,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7534,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7566,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7598,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7630,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7662,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7694,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7726,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7758,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7790,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7817,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7828,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7845,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":7931,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":7980,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":8063,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":8138,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":8349,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":8439,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":8491,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":8509,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":8521,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":8553,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":8563,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":8610,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":8657,"id":null,"parameterSlots":0,"returnSlots":0},"shift_right_1_unsigned":{"entryPoint":8662,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210":{"entryPoint":8675,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":8716,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4":{"entryPoint":8795,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4":{"entryPoint":8836,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a":{"entryPoint":8915,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":8956,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9":{"entryPoint":8997,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1":{"entryPoint":9038,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":9079,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba":{"entryPoint":9082,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":9123,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":9146,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":9169,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:20532:9","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:9","statements":[{"nodeType":"YulAssignment","src":"69:29:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:9"},"nodeType":"YulFunctionCall","src":"78:20:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:9"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:9"},"nodeType":"YulFunctionCall","src":"107:33:9"},"nodeType":"YulExpressionStatement","src":"107:33:9"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:9","type":""}],"src":"7:139:9"},{"body":{"nodeType":"YulBlock","src":"201:84:9","statements":[{"nodeType":"YulAssignment","src":"211:29:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"233:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"220:12:9"},"nodeType":"YulFunctionCall","src":"220:20:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"211:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"273:5:9"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"249:23:9"},"nodeType":"YulFunctionCall","src":"249:30:9"},"nodeType":"YulExpressionStatement","src":"249:30:9"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"179:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"187:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"195:5:9","type":""}],"src":"152:133:9"},{"body":{"nodeType":"YulBlock","src":"351:77:9","statements":[{"nodeType":"YulAssignment","src":"361:22:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"376:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"370:5:9"},"nodeType":"YulFunctionCall","src":"370:13:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"361:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"416:5:9"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"392:23:9"},"nodeType":"YulFunctionCall","src":"392:30:9"},"nodeType":"YulExpressionStatement","src":"392:30:9"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"329:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"337:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"345:5:9","type":""}],"src":"291:137:9"},{"body":{"nodeType":"YulBlock","src":"486:87:9","statements":[{"nodeType":"YulAssignment","src":"496:29:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"518:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"505:12:9"},"nodeType":"YulFunctionCall","src":"505:20:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"496:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"561:5:9"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"534:26:9"},"nodeType":"YulFunctionCall","src":"534:33:9"},"nodeType":"YulExpressionStatement","src":"534:33:9"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"464:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"472:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"480:5:9","type":""}],"src":"434:139:9"},{"body":{"nodeType":"YulBlock","src":"645:263:9","statements":[{"body":{"nodeType":"YulBlock","src":"691:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"693:77:9"},"nodeType":"YulFunctionCall","src":"693:79:9"},"nodeType":"YulExpressionStatement","src":"693:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"666:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"675:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"662:3:9"},"nodeType":"YulFunctionCall","src":"662:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"687:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"658:3:9"},"nodeType":"YulFunctionCall","src":"658:32:9"},"nodeType":"YulIf","src":"655:119:9"},{"nodeType":"YulBlock","src":"784:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"799:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"813:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"803:6:9","type":""}]},{"nodeType":"YulAssignment","src":"828:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"863:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"874:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"859:3:9"},"nodeType":"YulFunctionCall","src":"859:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"883:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"838:20:9"},"nodeType":"YulFunctionCall","src":"838:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"828:6:9"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"615:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"626:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"638:6:9","type":""}],"src":"579:329:9"},{"body":{"nodeType":"YulBlock","src":"997:391:9","statements":[{"body":{"nodeType":"YulBlock","src":"1043:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1045:77:9"},"nodeType":"YulFunctionCall","src":"1045:79:9"},"nodeType":"YulExpressionStatement","src":"1045:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1018:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"1027:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1014:3:9"},"nodeType":"YulFunctionCall","src":"1014:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"1039:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1010:3:9"},"nodeType":"YulFunctionCall","src":"1010:32:9"},"nodeType":"YulIf","src":"1007:119:9"},{"nodeType":"YulBlock","src":"1136:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1151:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1165:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1155:6:9","type":""}]},{"nodeType":"YulAssignment","src":"1180:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1215:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1226:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1211:3:9"},"nodeType":"YulFunctionCall","src":"1211:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1235:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1190:20:9"},"nodeType":"YulFunctionCall","src":"1190:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1180:6:9"}]}]},{"nodeType":"YulBlock","src":"1263:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1278:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1292:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1282:6:9","type":""}]},{"nodeType":"YulAssignment","src":"1308:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1343:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1354:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1339:3:9"},"nodeType":"YulFunctionCall","src":"1339:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1363:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1318:20:9"},"nodeType":"YulFunctionCall","src":"1318:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1308:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"959:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"970:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"982:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"990:6:9","type":""}],"src":"914:474:9"},{"body":{"nodeType":"YulBlock","src":"1508:645:9","statements":[{"body":{"nodeType":"YulBlock","src":"1555:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1557:77:9"},"nodeType":"YulFunctionCall","src":"1557:79:9"},"nodeType":"YulExpressionStatement","src":"1557:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1529:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"1538:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1525:3:9"},"nodeType":"YulFunctionCall","src":"1525:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"1550:3:9","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1521:3:9"},"nodeType":"YulFunctionCall","src":"1521:33:9"},"nodeType":"YulIf","src":"1518:120:9"},{"nodeType":"YulBlock","src":"1648:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1663:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1677:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1667:6:9","type":""}]},{"nodeType":"YulAssignment","src":"1692:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1727:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1738:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1723:3:9"},"nodeType":"YulFunctionCall","src":"1723:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1747:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1702:20:9"},"nodeType":"YulFunctionCall","src":"1702:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1692:6:9"}]}]},{"nodeType":"YulBlock","src":"1775:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1790:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1804:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1794:6:9","type":""}]},{"nodeType":"YulAssignment","src":"1820:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1855:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1866:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1851:3:9"},"nodeType":"YulFunctionCall","src":"1851:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1875:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1830:20:9"},"nodeType":"YulFunctionCall","src":"1830:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1820:6:9"}]}]},{"nodeType":"YulBlock","src":"1903:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1918:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1932:2:9","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1922:6:9","type":""}]},{"nodeType":"YulAssignment","src":"1948:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1983:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1994:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:9"},"nodeType":"YulFunctionCall","src":"1979:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2003:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1958:20:9"},"nodeType":"YulFunctionCall","src":"1958:53:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1948:6:9"}]}]},{"nodeType":"YulBlock","src":"2031:115:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2046:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2060:2:9","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2050:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2076:60:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2108:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2119:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2104:3:9"},"nodeType":"YulFunctionCall","src":"2104:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2128:7:9"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"2086:17:9"},"nodeType":"YulFunctionCall","src":"2086:50:9"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2076:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1454:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1465:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1477:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1485:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1493:6:9","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1501:6:9","type":""}],"src":"1394:759:9"},{"body":{"nodeType":"YulBlock","src":"2259:519:9","statements":[{"body":{"nodeType":"YulBlock","src":"2305:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2307:77:9"},"nodeType":"YulFunctionCall","src":"2307:79:9"},"nodeType":"YulExpressionStatement","src":"2307:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2280:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"2289:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2276:3:9"},"nodeType":"YulFunctionCall","src":"2276:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"2301:2:9","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2272:3:9"},"nodeType":"YulFunctionCall","src":"2272:32:9"},"nodeType":"YulIf","src":"2269:119:9"},{"nodeType":"YulBlock","src":"2398:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2413:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2427:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2417:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2442:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2477:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2488:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2473:3:9"},"nodeType":"YulFunctionCall","src":"2473:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2497:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2452:20:9"},"nodeType":"YulFunctionCall","src":"2452:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2442:6:9"}]}]},{"nodeType":"YulBlock","src":"2525:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2540:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2554:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2544:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2570:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2605:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2616:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2601:3:9"},"nodeType":"YulFunctionCall","src":"2601:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2625:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2580:20:9"},"nodeType":"YulFunctionCall","src":"2580:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2570:6:9"}]}]},{"nodeType":"YulBlock","src":"2653:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2668:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2682:2:9","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2672:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2698:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2733:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2744:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2729:3:9"},"nodeType":"YulFunctionCall","src":"2729:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2753:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2708:20:9"},"nodeType":"YulFunctionCall","src":"2708:53:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2698:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2213:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2224:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2236:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2244:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2252:6:9","type":""}],"src":"2159:619:9"},{"body":{"nodeType":"YulBlock","src":"2858:271:9","statements":[{"body":{"nodeType":"YulBlock","src":"2904:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2906:77:9"},"nodeType":"YulFunctionCall","src":"2906:79:9"},"nodeType":"YulExpressionStatement","src":"2906:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2879:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2875:3:9"},"nodeType":"YulFunctionCall","src":"2875:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"2900:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2871:3:9"},"nodeType":"YulFunctionCall","src":"2871:32:9"},"nodeType":"YulIf","src":"2868:119:9"},{"nodeType":"YulBlock","src":"2997:125:9","statements":[{"nodeType":"YulVariableDeclaration","src":"3012:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"3026:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3016:6:9","type":""}]},{"nodeType":"YulAssignment","src":"3041:71:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3084:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"3095:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3080:3:9"},"nodeType":"YulFunctionCall","src":"3080:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3104:7:9"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"3051:28:9"},"nodeType":"YulFunctionCall","src":"3051:61:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3041:6:9"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2828:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2839:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2851:6:9","type":""}],"src":"2784:345:9"},{"body":{"nodeType":"YulBlock","src":"3201:263:9","statements":[{"body":{"nodeType":"YulBlock","src":"3247:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3249:77:9"},"nodeType":"YulFunctionCall","src":"3249:79:9"},"nodeType":"YulExpressionStatement","src":"3249:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3222:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"3231:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3218:3:9"},"nodeType":"YulFunctionCall","src":"3218:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"3243:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3214:3:9"},"nodeType":"YulFunctionCall","src":"3214:32:9"},"nodeType":"YulIf","src":"3211:119:9"},{"nodeType":"YulBlock","src":"3340:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"3355:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"3369:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3359:6:9","type":""}]},{"nodeType":"YulAssignment","src":"3384:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"3430:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:9"},"nodeType":"YulFunctionCall","src":"3415:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3439:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3394:20:9"},"nodeType":"YulFunctionCall","src":"3394:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3384:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3171:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3182:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3194:6:9","type":""}],"src":"3135:329:9"},{"body":{"nodeType":"YulBlock","src":"3535:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3552:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3575:5:9"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3557:17:9"},"nodeType":"YulFunctionCall","src":"3557:24:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3545:6:9"},"nodeType":"YulFunctionCall","src":"3545:37:9"},"nodeType":"YulExpressionStatement","src":"3545:37:9"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3523:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3530:3:9","type":""}],"src":"3470:118:9"},{"body":{"nodeType":"YulBlock","src":"3740:220:9","statements":[{"nodeType":"YulAssignment","src":"3750:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3816:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"3821:2:9","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3757:58:9"},"nodeType":"YulFunctionCall","src":"3757:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3750:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3922:3:9"}],"functionName":{"name":"store_literal_in_memory_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","nodeType":"YulIdentifier","src":"3833:88:9"},"nodeType":"YulFunctionCall","src":"3833:93:9"},"nodeType":"YulExpressionStatement","src":"3833:93:9"},{"nodeType":"YulAssignment","src":"3935:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3946:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"3951:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3942:3:9"},"nodeType":"YulFunctionCall","src":"3942:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3935:3:9"}]}]},"name":"abi_encode_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3728:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3736:3:9","type":""}],"src":"3594:366:9"},{"body":{"nodeType":"YulBlock","src":"4112:220:9","statements":[{"nodeType":"YulAssignment","src":"4122:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4188:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"4193:2:9","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4129:58:9"},"nodeType":"YulFunctionCall","src":"4129:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4122:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4294:3:9"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"4205:88:9"},"nodeType":"YulFunctionCall","src":"4205:93:9"},"nodeType":"YulExpressionStatement","src":"4205:93:9"},{"nodeType":"YulAssignment","src":"4307:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4318:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"4323:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4314:3:9"},"nodeType":"YulFunctionCall","src":"4314:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4307:3:9"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4100:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4108:3:9","type":""}],"src":"3966:366:9"},{"body":{"nodeType":"YulBlock","src":"4484:220:9","statements":[{"nodeType":"YulAssignment","src":"4494:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4560:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"4565:2:9","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4501:58:9"},"nodeType":"YulFunctionCall","src":"4501:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4494:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4666:3:9"}],"functionName":{"name":"store_literal_in_memory_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4","nodeType":"YulIdentifier","src":"4577:88:9"},"nodeType":"YulFunctionCall","src":"4577:93:9"},"nodeType":"YulExpressionStatement","src":"4577:93:9"},{"nodeType":"YulAssignment","src":"4679:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4690:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"4695:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4686:3:9"},"nodeType":"YulFunctionCall","src":"4686:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4679:3:9"}]}]},"name":"abi_encode_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4472:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4480:3:9","type":""}],"src":"4338:366:9"},{"body":{"nodeType":"YulBlock","src":"4856:220:9","statements":[{"nodeType":"YulAssignment","src":"4866:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4932:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"4937:2:9","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4873:58:9"},"nodeType":"YulFunctionCall","src":"4873:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4866:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5038:3:9"}],"functionName":{"name":"store_literal_in_memory_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4","nodeType":"YulIdentifier","src":"4949:88:9"},"nodeType":"YulFunctionCall","src":"4949:93:9"},"nodeType":"YulExpressionStatement","src":"4949:93:9"},{"nodeType":"YulAssignment","src":"5051:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5062:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"5067:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5058:3:9"},"nodeType":"YulFunctionCall","src":"5058:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5051:3:9"}]}]},"name":"abi_encode_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4844:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4852:3:9","type":""}],"src":"4710:366:9"},{"body":{"nodeType":"YulBlock","src":"5228:220:9","statements":[{"nodeType":"YulAssignment","src":"5238:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5304:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"5309:2:9","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5245:58:9"},"nodeType":"YulFunctionCall","src":"5245:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5238:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5410:3:9"}],"functionName":{"name":"store_literal_in_memory_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a","nodeType":"YulIdentifier","src":"5321:88:9"},"nodeType":"YulFunctionCall","src":"5321:93:9"},"nodeType":"YulExpressionStatement","src":"5321:93:9"},{"nodeType":"YulAssignment","src":"5423:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5434:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"5439:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5430:3:9"},"nodeType":"YulFunctionCall","src":"5430:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5423:3:9"}]}]},"name":"abi_encode_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5216:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5224:3:9","type":""}],"src":"5082:366:9"},{"body":{"nodeType":"YulBlock","src":"5600:220:9","statements":[{"nodeType":"YulAssignment","src":"5610:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5676:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"5681:2:9","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5617:58:9"},"nodeType":"YulFunctionCall","src":"5617:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5610:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5782:3:9"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"5693:88:9"},"nodeType":"YulFunctionCall","src":"5693:93:9"},"nodeType":"YulExpressionStatement","src":"5693:93:9"},{"nodeType":"YulAssignment","src":"5795:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5806:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"5811:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5802:3:9"},"nodeType":"YulFunctionCall","src":"5802:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5795:3:9"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5588:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5596:3:9","type":""}],"src":"5454:366:9"},{"body":{"nodeType":"YulBlock","src":"5972:220:9","statements":[{"nodeType":"YulAssignment","src":"5982:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6048:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"6053:2:9","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5989:58:9"},"nodeType":"YulFunctionCall","src":"5989:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5982:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6154:3:9"}],"functionName":{"name":"store_literal_in_memory_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9","nodeType":"YulIdentifier","src":"6065:88:9"},"nodeType":"YulFunctionCall","src":"6065:93:9"},"nodeType":"YulExpressionStatement","src":"6065:93:9"},{"nodeType":"YulAssignment","src":"6167:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6178:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"6183:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6174:3:9"},"nodeType":"YulFunctionCall","src":"6174:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6167:3:9"}]}]},"name":"abi_encode_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5960:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5968:3:9","type":""}],"src":"5826:366:9"},{"body":{"nodeType":"YulBlock","src":"6344:220:9","statements":[{"nodeType":"YulAssignment","src":"6354:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6420:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"6425:2:9","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6361:58:9"},"nodeType":"YulFunctionCall","src":"6361:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6354:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6526:3:9"}],"functionName":{"name":"store_literal_in_memory_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1","nodeType":"YulIdentifier","src":"6437:88:9"},"nodeType":"YulFunctionCall","src":"6437:93:9"},"nodeType":"YulExpressionStatement","src":"6437:93:9"},{"nodeType":"YulAssignment","src":"6539:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6550:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"6555:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6546:3:9"},"nodeType":"YulFunctionCall","src":"6546:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6539:3:9"}]}]},"name":"abi_encode_t_stringliteral_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6332:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6340:3:9","type":""}],"src":"6198:366:9"},{"body":{"nodeType":"YulBlock","src":"6733:235:9","statements":[{"nodeType":"YulAssignment","src":"6743:90:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6826:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"6831:1:9","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"6750:75:9"},"nodeType":"YulFunctionCall","src":"6750:83:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6743:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6931:3:9"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"6842:88:9"},"nodeType":"YulFunctionCall","src":"6842:93:9"},"nodeType":"YulExpressionStatement","src":"6842:93:9"},{"nodeType":"YulAssignment","src":"6944:18:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6955:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"6960:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6951:3:9"},"nodeType":"YulFunctionCall","src":"6951:11:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6944:3:9"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6721:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6729:3:9","type":""}],"src":"6570:398:9"},{"body":{"nodeType":"YulBlock","src":"7120:220:9","statements":[{"nodeType":"YulAssignment","src":"7130:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7196:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"7201:2:9","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7137:58:9"},"nodeType":"YulFunctionCall","src":"7137:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7130:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7302:3:9"}],"functionName":{"name":"store_literal_in_memory_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba","nodeType":"YulIdentifier","src":"7213:88:9"},"nodeType":"YulFunctionCall","src":"7213:93:9"},"nodeType":"YulExpressionStatement","src":"7213:93:9"},{"nodeType":"YulAssignment","src":"7315:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7326:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"7331:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7322:3:9"},"nodeType":"YulFunctionCall","src":"7322:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7315:3:9"}]}]},"name":"abi_encode_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7108:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7116:3:9","type":""}],"src":"6974:366:9"},{"body":{"nodeType":"YulBlock","src":"7411:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7428:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7451:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7433:17:9"},"nodeType":"YulFunctionCall","src":"7433:24:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7421:6:9"},"nodeType":"YulFunctionCall","src":"7421:37:9"},"nodeType":"YulExpressionStatement","src":"7421:37:9"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7399:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7406:3:9","type":""}],"src":"7346:118:9"},{"body":{"nodeType":"YulBlock","src":"7658:191:9","statements":[{"nodeType":"YulAssignment","src":"7669:154:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7819:3:9"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"7676:141:9"},"nodeType":"YulFunctionCall","src":"7676:147:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7669:3:9"}]},{"nodeType":"YulAssignment","src":"7833:10:9","value":{"name":"pos","nodeType":"YulIdentifier","src":"7840:3:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7833:3:9"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7645:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7654:3:9","type":""}],"src":"7470:379:9"},{"body":{"nodeType":"YulBlock","src":"7953:124:9","statements":[{"nodeType":"YulAssignment","src":"7963:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7975:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7986:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7971:3:9"},"nodeType":"YulFunctionCall","src":"7971:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7963:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8043:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8056:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8067:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8052:3:9"},"nodeType":"YulFunctionCall","src":"8052:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7999:43:9"},"nodeType":"YulFunctionCall","src":"7999:71:9"},"nodeType":"YulExpressionStatement","src":"7999:71:9"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7925:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7937:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7948:4:9","type":""}],"src":"7855:222:9"},{"body":{"nodeType":"YulBlock","src":"8237:288:9","statements":[{"nodeType":"YulAssignment","src":"8247:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8259:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8270:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8255:3:9"},"nodeType":"YulFunctionCall","src":"8255:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8247:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8327:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8340:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8351:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8336:3:9"},"nodeType":"YulFunctionCall","src":"8336:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8283:43:9"},"nodeType":"YulFunctionCall","src":"8283:71:9"},"nodeType":"YulExpressionStatement","src":"8283:71:9"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8408:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8421:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8432:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8417:3:9"},"nodeType":"YulFunctionCall","src":"8417:18:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8364:43:9"},"nodeType":"YulFunctionCall","src":"8364:72:9"},"nodeType":"YulExpressionStatement","src":"8364:72:9"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8490:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8503:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8514:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8499:3:9"},"nodeType":"YulFunctionCall","src":"8499:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8446:43:9"},"nodeType":"YulFunctionCall","src":"8446:72:9"},"nodeType":"YulExpressionStatement","src":"8446:72:9"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8193:9:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8205:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8213:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8221:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8232:4:9","type":""}],"src":"8083:442:9"},{"body":{"nodeType":"YulBlock","src":"8713:371:9","statements":[{"nodeType":"YulAssignment","src":"8723:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8735:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8746:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8731:3:9"},"nodeType":"YulFunctionCall","src":"8731:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8723:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8804:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8817:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8828:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8813:3:9"},"nodeType":"YulFunctionCall","src":"8813:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8760:43:9"},"nodeType":"YulFunctionCall","src":"8760:71:9"},"nodeType":"YulExpressionStatement","src":"8760:71:9"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8885:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8898:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8909:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8894:3:9"},"nodeType":"YulFunctionCall","src":"8894:18:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8841:43:9"},"nodeType":"YulFunctionCall","src":"8841:72:9"},"nodeType":"YulExpressionStatement","src":"8841:72:9"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8967:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8980:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8991:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8976:3:9"},"nodeType":"YulFunctionCall","src":"8976:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8923:43:9"},"nodeType":"YulFunctionCall","src":"8923:72:9"},"nodeType":"YulExpressionStatement","src":"8923:72:9"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"9049:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9062:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9073:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9058:3:9"},"nodeType":"YulFunctionCall","src":"9058:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9005:43:9"},"nodeType":"YulFunctionCall","src":"9005:72:9"},"nodeType":"YulExpressionStatement","src":"9005:72:9"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8661:9:9","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8673:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8681:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8689:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8697:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8708:4:9","type":""}],"src":"8531:553:9"},{"body":{"nodeType":"YulBlock","src":"9216:206:9","statements":[{"nodeType":"YulAssignment","src":"9226:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9238:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9249:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9234:3:9"},"nodeType":"YulFunctionCall","src":"9234:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9226:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9306:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9319:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9315:3:9"},"nodeType":"YulFunctionCall","src":"9315:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9262:43:9"},"nodeType":"YulFunctionCall","src":"9262:71:9"},"nodeType":"YulExpressionStatement","src":"9262:71:9"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9387:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9400:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9411:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9396:3:9"},"nodeType":"YulFunctionCall","src":"9396:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9343:43:9"},"nodeType":"YulFunctionCall","src":"9343:72:9"},"nodeType":"YulExpressionStatement","src":"9343:72:9"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9180:9:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9192:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9200:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9211:4:9","type":""}],"src":"9090:332:9"},{"body":{"nodeType":"YulBlock","src":"9599:248:9","statements":[{"nodeType":"YulAssignment","src":"9609:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9621:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9632:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9617:3:9"},"nodeType":"YulFunctionCall","src":"9617:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9609:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9656:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9667:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9652:3:9"},"nodeType":"YulFunctionCall","src":"9652:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9675:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"9681:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9671:3:9"},"nodeType":"YulFunctionCall","src":"9671:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9645:6:9"},"nodeType":"YulFunctionCall","src":"9645:47:9"},"nodeType":"YulExpressionStatement","src":"9645:47:9"},{"nodeType":"YulAssignment","src":"9701:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9835:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9709:124:9"},"nodeType":"YulFunctionCall","src":"9709:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9701:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9579:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9594:4:9","type":""}],"src":"9428:419:9"},{"body":{"nodeType":"YulBlock","src":"10024:248:9","statements":[{"nodeType":"YulAssignment","src":"10034:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10046:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10057:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10042:3:9"},"nodeType":"YulFunctionCall","src":"10042:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10034:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10081:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10092:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10077:3:9"},"nodeType":"YulFunctionCall","src":"10077:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10100:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"10106:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10096:3:9"},"nodeType":"YulFunctionCall","src":"10096:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10070:6:9"},"nodeType":"YulFunctionCall","src":"10070:47:9"},"nodeType":"YulExpressionStatement","src":"10070:47:9"},{"nodeType":"YulAssignment","src":"10126:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10260:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10134:124:9"},"nodeType":"YulFunctionCall","src":"10134:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10126:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10004:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10019:4:9","type":""}],"src":"9853:419:9"},{"body":{"nodeType":"YulBlock","src":"10449:248:9","statements":[{"nodeType":"YulAssignment","src":"10459:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10471:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10482:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10467:3:9"},"nodeType":"YulFunctionCall","src":"10467:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10459:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10506:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10517:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10502:3:9"},"nodeType":"YulFunctionCall","src":"10502:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10525:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"10531:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10521:3:9"},"nodeType":"YulFunctionCall","src":"10521:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10495:6:9"},"nodeType":"YulFunctionCall","src":"10495:47:9"},"nodeType":"YulExpressionStatement","src":"10495:47:9"},{"nodeType":"YulAssignment","src":"10551:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10685:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10559:124:9"},"nodeType":"YulFunctionCall","src":"10559:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10551:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10429:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10444:4:9","type":""}],"src":"10278:419:9"},{"body":{"nodeType":"YulBlock","src":"10874:248:9","statements":[{"nodeType":"YulAssignment","src":"10884:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10896:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10907:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10892:3:9"},"nodeType":"YulFunctionCall","src":"10892:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10884:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10931:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10942:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10927:3:9"},"nodeType":"YulFunctionCall","src":"10927:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10950:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"10956:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10946:3:9"},"nodeType":"YulFunctionCall","src":"10946:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10920:6:9"},"nodeType":"YulFunctionCall","src":"10920:47:9"},"nodeType":"YulExpressionStatement","src":"10920:47:9"},{"nodeType":"YulAssignment","src":"10976:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11110:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10984:124:9"},"nodeType":"YulFunctionCall","src":"10984:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10976:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10854:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10869:4:9","type":""}],"src":"10703:419:9"},{"body":{"nodeType":"YulBlock","src":"11299:248:9","statements":[{"nodeType":"YulAssignment","src":"11309:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11321:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11332:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11317:3:9"},"nodeType":"YulFunctionCall","src":"11317:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11309:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11356:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11367:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11352:3:9"},"nodeType":"YulFunctionCall","src":"11352:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11375:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"11381:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11371:3:9"},"nodeType":"YulFunctionCall","src":"11371:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11345:6:9"},"nodeType":"YulFunctionCall","src":"11345:47:9"},"nodeType":"YulExpressionStatement","src":"11345:47:9"},{"nodeType":"YulAssignment","src":"11401:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11535:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11409:124:9"},"nodeType":"YulFunctionCall","src":"11409:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11401:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11279:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11294:4:9","type":""}],"src":"11128:419:9"},{"body":{"nodeType":"YulBlock","src":"11724:248:9","statements":[{"nodeType":"YulAssignment","src":"11734:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11746:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11757:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11742:3:9"},"nodeType":"YulFunctionCall","src":"11742:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11734:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11781:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11792:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11777:3:9"},"nodeType":"YulFunctionCall","src":"11777:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11800:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"11806:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11796:3:9"},"nodeType":"YulFunctionCall","src":"11796:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11770:6:9"},"nodeType":"YulFunctionCall","src":"11770:47:9"},"nodeType":"YulExpressionStatement","src":"11770:47:9"},{"nodeType":"YulAssignment","src":"11826:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11960:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11834:124:9"},"nodeType":"YulFunctionCall","src":"11834:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11826:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11704:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11719:4:9","type":""}],"src":"11553:419:9"},{"body":{"nodeType":"YulBlock","src":"12149:248:9","statements":[{"nodeType":"YulAssignment","src":"12159:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12171:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12182:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12167:3:9"},"nodeType":"YulFunctionCall","src":"12167:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12159:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12206:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12217:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12202:3:9"},"nodeType":"YulFunctionCall","src":"12202:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12225:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"12231:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12221:3:9"},"nodeType":"YulFunctionCall","src":"12221:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12195:6:9"},"nodeType":"YulFunctionCall","src":"12195:47:9"},"nodeType":"YulExpressionStatement","src":"12195:47:9"},{"nodeType":"YulAssignment","src":"12251:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12385:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12259:124:9"},"nodeType":"YulFunctionCall","src":"12259:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12251:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12129:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12144:4:9","type":""}],"src":"11978:419:9"},{"body":{"nodeType":"YulBlock","src":"12574:248:9","statements":[{"nodeType":"YulAssignment","src":"12584:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12596:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12607:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12592:3:9"},"nodeType":"YulFunctionCall","src":"12592:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12584:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12631:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12642:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12627:3:9"},"nodeType":"YulFunctionCall","src":"12627:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12650:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"12656:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12646:3:9"},"nodeType":"YulFunctionCall","src":"12646:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12620:6:9"},"nodeType":"YulFunctionCall","src":"12620:47:9"},"nodeType":"YulExpressionStatement","src":"12620:47:9"},{"nodeType":"YulAssignment","src":"12676:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12810:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12684:124:9"},"nodeType":"YulFunctionCall","src":"12684:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12676:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12554:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12569:4:9","type":""}],"src":"12403:419:9"},{"body":{"nodeType":"YulBlock","src":"12999:248:9","statements":[{"nodeType":"YulAssignment","src":"13009:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13021:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13032:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13017:3:9"},"nodeType":"YulFunctionCall","src":"13017:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13009:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13056:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13067:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13052:3:9"},"nodeType":"YulFunctionCall","src":"13052:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13075:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"13081:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13071:3:9"},"nodeType":"YulFunctionCall","src":"13071:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13045:6:9"},"nodeType":"YulFunctionCall","src":"13045:47:9"},"nodeType":"YulExpressionStatement","src":"13045:47:9"},{"nodeType":"YulAssignment","src":"13101:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13235:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13109:124:9"},"nodeType":"YulFunctionCall","src":"13109:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13101:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12979:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12994:4:9","type":""}],"src":"12828:419:9"},{"body":{"nodeType":"YulBlock","src":"13351:124:9","statements":[{"nodeType":"YulAssignment","src":"13361:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13373:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13384:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13369:3:9"},"nodeType":"YulFunctionCall","src":"13369:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13361:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13441:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13454:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13465:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13450:3:9"},"nodeType":"YulFunctionCall","src":"13450:17:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13397:43:9"},"nodeType":"YulFunctionCall","src":"13397:71:9"},"nodeType":"YulExpressionStatement","src":"13397:71:9"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13323:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13335:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13346:4:9","type":""}],"src":"13253:222:9"},{"body":{"nodeType":"YulBlock","src":"13521:35:9","statements":[{"nodeType":"YulAssignment","src":"13531:19:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13547:2:9","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13541:5:9"},"nodeType":"YulFunctionCall","src":"13541:9:9"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13531:6:9"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"13514:6:9","type":""}],"src":"13481:75:9"},{"body":{"nodeType":"YulBlock","src":"13675:34:9","statements":[{"nodeType":"YulAssignment","src":"13685:18:9","value":{"name":"pos","nodeType":"YulIdentifier","src":"13700:3:9"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13685:11:9"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13647:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"13652:6:9","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13663:11:9","type":""}],"src":"13562:147:9"},{"body":{"nodeType":"YulBlock","src":"13811:73:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13828:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"13833:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13821:6:9"},"nodeType":"YulFunctionCall","src":"13821:19:9"},"nodeType":"YulExpressionStatement","src":"13821:19:9"},{"nodeType":"YulAssignment","src":"13849:29:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13868:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"13873:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13864:3:9"},"nodeType":"YulFunctionCall","src":"13864:14:9"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13849:11:9"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13783:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"13788:6:9","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13799:11:9","type":""}],"src":"13715:169:9"},{"body":{"nodeType":"YulBlock","src":"13934:261:9","statements":[{"nodeType":"YulAssignment","src":"13944:25:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13967:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13949:17:9"},"nodeType":"YulFunctionCall","src":"13949:20:9"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"13944:1:9"}]},{"nodeType":"YulAssignment","src":"13978:25:9","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14001:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13983:17:9"},"nodeType":"YulFunctionCall","src":"13983:20:9"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"13978:1:9"}]},{"body":{"nodeType":"YulBlock","src":"14141:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14143:16:9"},"nodeType":"YulFunctionCall","src":"14143:18:9"},"nodeType":"YulExpressionStatement","src":"14143:18:9"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14062:1:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14069:66:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"14137:1:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14065:3:9"},"nodeType":"YulFunctionCall","src":"14065:74:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14059:2:9"},"nodeType":"YulFunctionCall","src":"14059:81:9"},"nodeType":"YulIf","src":"14056:107:9"},{"nodeType":"YulAssignment","src":"14173:16:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14184:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"14187:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14180:3:9"},"nodeType":"YulFunctionCall","src":"14180:9:9"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"14173:3:9"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13921:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"13924:1:9","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"13930:3:9","type":""}],"src":"13890:305:9"},{"body":{"nodeType":"YulBlock","src":"14243:143:9","statements":[{"nodeType":"YulAssignment","src":"14253:25:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14276:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14258:17:9"},"nodeType":"YulFunctionCall","src":"14258:20:9"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"14253:1:9"}]},{"nodeType":"YulAssignment","src":"14287:25:9","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14310:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14292:17:9"},"nodeType":"YulFunctionCall","src":"14292:20:9"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"14287:1:9"}]},{"body":{"nodeType":"YulBlock","src":"14334:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"14336:16:9"},"nodeType":"YulFunctionCall","src":"14336:18:9"},"nodeType":"YulExpressionStatement","src":"14336:18:9"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14331:1:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14324:6:9"},"nodeType":"YulFunctionCall","src":"14324:9:9"},"nodeType":"YulIf","src":"14321:35:9"},{"nodeType":"YulAssignment","src":"14366:14:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14375:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"14378:1:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"14371:3:9"},"nodeType":"YulFunctionCall","src":"14371:9:9"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"14366:1:9"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14232:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"14235:1:9","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"14241:1:9","type":""}],"src":"14201:185:9"},{"body":{"nodeType":"YulBlock","src":"14465:775:9","statements":[{"nodeType":"YulAssignment","src":"14475:15:9","value":{"name":"_power","nodeType":"YulIdentifier","src":"14484:6:9"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"14475:5:9"}]},{"nodeType":"YulAssignment","src":"14499:14:9","value":{"name":"_base","nodeType":"YulIdentifier","src":"14508:5:9"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"14499:4:9"}]},{"body":{"nodeType":"YulBlock","src":"14557:677:9","statements":[{"body":{"nodeType":"YulBlock","src":"14645:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14647:16:9"},"nodeType":"YulFunctionCall","src":"14647:18:9"},"nodeType":"YulExpressionStatement","src":"14647:18:9"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"14623:4:9"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"14633:3:9"},{"name":"base","nodeType":"YulIdentifier","src":"14638:4:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"14629:3:9"},"nodeType":"YulFunctionCall","src":"14629:14:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14620:2:9"},"nodeType":"YulFunctionCall","src":"14620:24:9"},"nodeType":"YulIf","src":"14617:50:9"},{"body":{"nodeType":"YulBlock","src":"14712:419:9","statements":[{"nodeType":"YulAssignment","src":"15092:25:9","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"15105:5:9"},{"name":"base","nodeType":"YulIdentifier","src":"15112:4:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15101:3:9"},"nodeType":"YulFunctionCall","src":"15101:16:9"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"15092:5:9"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"14687:8:9"},{"kind":"number","nodeType":"YulLiteral","src":"14697:1:9","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14683:3:9"},"nodeType":"YulFunctionCall","src":"14683:16:9"},"nodeType":"YulIf","src":"14680:451:9"},{"nodeType":"YulAssignment","src":"15144:23:9","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"15156:4:9"},{"name":"base","nodeType":"YulIdentifier","src":"15162:4:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15152:3:9"},"nodeType":"YulFunctionCall","src":"15152:15:9"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"15144:4:9"}]},{"nodeType":"YulAssignment","src":"15180:44:9","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"15215:8:9"}],"functionName":{"name":"shift_right_1_unsigned","nodeType":"YulIdentifier","src":"15192:22:9"},"nodeType":"YulFunctionCall","src":"15192:32:9"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"15180:8:9"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"14533:8:9"},{"kind":"number","nodeType":"YulLiteral","src":"14543:1:9","type":"","value":"1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14530:2:9"},"nodeType":"YulFunctionCall","src":"14530:15:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14546:2:9","statements":[]},"pre":{"nodeType":"YulBlock","src":"14526:3:9","statements":[]},"src":"14522:712:9"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nodeType":"YulTypedName","src":"14420:6:9","type":""},{"name":"_base","nodeType":"YulTypedName","src":"14428:5:9","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"14435:8:9","type":""},{"name":"max","nodeType":"YulTypedName","src":"14445:3:9","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"14453:5:9","type":""},{"name":"base","nodeType":"YulTypedName","src":"14460:4:9","type":""}],"src":"14392:848:9"},{"body":{"nodeType":"YulBlock","src":"15312:219:9","statements":[{"nodeType":"YulAssignment","src":"15322:31:9","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"15348:4:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15330:17:9"},"nodeType":"YulFunctionCall","src":"15330:23:9"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"15322:4:9"}]},{"nodeType":"YulAssignment","src":"15362:39:9","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"15392:8:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15374:17:9"},"nodeType":"YulFunctionCall","src":"15374:27:9"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"15362:8:9"}]},{"nodeType":"YulAssignment","src":"15411:113:9","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"15441:4:9"},{"name":"exponent","nodeType":"YulIdentifier","src":"15447:8:9"},{"kind":"number","nodeType":"YulLiteral","src":"15457:66:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"15420:20:9"},"nodeType":"YulFunctionCall","src":"15420:104:9"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"15411:5:9"}]}]},"name":"checked_exp_t_uint256_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"15287:4:9","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"15293:8:9","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"15306:5:9","type":""}],"src":"15246:285:9"},{"body":{"nodeType":"YulBlock","src":"15597:1013:9","statements":[{"body":{"nodeType":"YulBlock","src":"15792:20:9","statements":[{"nodeType":"YulAssignment","src":"15794:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"15803:1:9","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"15794:5:9"}]},{"nodeType":"YulLeave","src":"15805:5:9"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"15782:8:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15775:6:9"},"nodeType":"YulFunctionCall","src":"15775:16:9"},"nodeType":"YulIf","src":"15772:40:9"},{"body":{"nodeType":"YulBlock","src":"15837:20:9","statements":[{"nodeType":"YulAssignment","src":"15839:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"15848:1:9","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"15839:5:9"}]},{"nodeType":"YulLeave","src":"15850:5:9"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"15831:4:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15824:6:9"},"nodeType":"YulFunctionCall","src":"15824:12:9"},"nodeType":"YulIf","src":"15821:36:9"},{"cases":[{"body":{"nodeType":"YulBlock","src":"15967:20:9","statements":[{"nodeType":"YulAssignment","src":"15969:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"15978:1:9","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"15969:5:9"}]},{"nodeType":"YulLeave","src":"15980:5:9"}]},"nodeType":"YulCase","src":"15960:27:9","value":{"kind":"number","nodeType":"YulLiteral","src":"15965:1:9","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"16011:176:9","statements":[{"body":{"nodeType":"YulBlock","src":"16046:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16048:16:9"},"nodeType":"YulFunctionCall","src":"16048:18:9"},"nodeType":"YulExpressionStatement","src":"16048:18:9"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"16031:8:9"},{"kind":"number","nodeType":"YulLiteral","src":"16041:3:9","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16028:2:9"},"nodeType":"YulFunctionCall","src":"16028:17:9"},"nodeType":"YulIf","src":"16025:43:9"},{"nodeType":"YulAssignment","src":"16081:25:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16094:1:9","type":"","value":"2"},{"name":"exponent","nodeType":"YulIdentifier","src":"16097:8:9"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"16090:3:9"},"nodeType":"YulFunctionCall","src":"16090:16:9"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"16081:5:9"}]},{"body":{"nodeType":"YulBlock","src":"16137:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16139:16:9"},"nodeType":"YulFunctionCall","src":"16139:18:9"},"nodeType":"YulExpressionStatement","src":"16139:18:9"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"16125:5:9"},{"name":"max","nodeType":"YulIdentifier","src":"16132:3:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16122:2:9"},"nodeType":"YulFunctionCall","src":"16122:14:9"},"nodeType":"YulIf","src":"16119:40:9"},{"nodeType":"YulLeave","src":"16172:5:9"}]},"nodeType":"YulCase","src":"15996:191:9","value":{"kind":"number","nodeType":"YulLiteral","src":"16001:1:9","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"15917:4:9"},"nodeType":"YulSwitch","src":"15910:277:9"},{"body":{"nodeType":"YulBlock","src":"16319:123:9","statements":[{"nodeType":"YulAssignment","src":"16333:28:9","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"16346:4:9"},{"name":"exponent","nodeType":"YulIdentifier","src":"16352:8:9"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"16342:3:9"},"nodeType":"YulFunctionCall","src":"16342:19:9"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"16333:5:9"}]},{"body":{"nodeType":"YulBlock","src":"16392:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16394:16:9"},"nodeType":"YulFunctionCall","src":"16394:18:9"},"nodeType":"YulExpressionStatement","src":"16394:18:9"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"16380:5:9"},{"name":"max","nodeType":"YulIdentifier","src":"16387:3:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16377:2:9"},"nodeType":"YulFunctionCall","src":"16377:14:9"},"nodeType":"YulIf","src":"16374:40:9"},{"nodeType":"YulLeave","src":"16427:5:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"16222:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"16228:2:9","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16219:2:9"},"nodeType":"YulFunctionCall","src":"16219:12:9"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"16236:8:9"},{"kind":"number","nodeType":"YulLiteral","src":"16246:2:9","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16233:2:9"},"nodeType":"YulFunctionCall","src":"16233:16:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16215:3:9"},"nodeType":"YulFunctionCall","src":"16215:35:9"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"16271:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"16277:3:9","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16268:2:9"},"nodeType":"YulFunctionCall","src":"16268:13:9"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"16286:8:9"},{"kind":"number","nodeType":"YulLiteral","src":"16296:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16283:2:9"},"nodeType":"YulFunctionCall","src":"16283:16:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16264:3:9"},"nodeType":"YulFunctionCall","src":"16264:36:9"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"16199:2:9"},"nodeType":"YulFunctionCall","src":"16199:111:9"},"nodeType":"YulIf","src":"16196:246:9"},{"nodeType":"YulAssignment","src":"16452:57:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16486:1:9","type":"","value":"1"},{"name":"base","nodeType":"YulIdentifier","src":"16489:4:9"},{"name":"exponent","nodeType":"YulIdentifier","src":"16495:8:9"},{"name":"max","nodeType":"YulIdentifier","src":"16505:3:9"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"16467:18:9"},"nodeType":"YulFunctionCall","src":"16467:42:9"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"16452:5:9"},{"name":"base","nodeType":"YulIdentifier","src":"16459:4:9"}]},{"body":{"nodeType":"YulBlock","src":"16548:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16550:16:9"},"nodeType":"YulFunctionCall","src":"16550:18:9"},"nodeType":"YulExpressionStatement","src":"16550:18:9"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"16525:5:9"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"16536:3:9"},{"name":"base","nodeType":"YulIdentifier","src":"16541:4:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16532:3:9"},"nodeType":"YulFunctionCall","src":"16532:14:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16522:2:9"},"nodeType":"YulFunctionCall","src":"16522:25:9"},"nodeType":"YulIf","src":"16519:51:9"},{"nodeType":"YulAssignment","src":"16579:25:9","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"16592:5:9"},{"name":"base","nodeType":"YulIdentifier","src":"16599:4:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16588:3:9"},"nodeType":"YulFunctionCall","src":"16588:16:9"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"16579:5:9"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"15567:4:9","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"15573:8:9","type":""},{"name":"max","nodeType":"YulTypedName","src":"15583:3:9","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"15591:5:9","type":""}],"src":"15537:1073:9"},{"body":{"nodeType":"YulBlock","src":"16664:300:9","statements":[{"nodeType":"YulAssignment","src":"16674:25:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16697:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16679:17:9"},"nodeType":"YulFunctionCall","src":"16679:20:9"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"16674:1:9"}]},{"nodeType":"YulAssignment","src":"16708:25:9","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16731:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16713:17:9"},"nodeType":"YulFunctionCall","src":"16713:20:9"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16708:1:9"}]},{"body":{"nodeType":"YulBlock","src":"16906:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16908:16:9"},"nodeType":"YulFunctionCall","src":"16908:18:9"},"nodeType":"YulExpressionStatement","src":"16908:18:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16818:1:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16811:6:9"},"nodeType":"YulFunctionCall","src":"16811:9:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16804:6:9"},"nodeType":"YulFunctionCall","src":"16804:17:9"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16826:1:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16833:66:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"16901:1:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16829:3:9"},"nodeType":"YulFunctionCall","src":"16829:74:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16823:2:9"},"nodeType":"YulFunctionCall","src":"16823:81:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16800:3:9"},"nodeType":"YulFunctionCall","src":"16800:105:9"},"nodeType":"YulIf","src":"16797:131:9"},{"nodeType":"YulAssignment","src":"16938:20:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16953:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"16956:1:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16949:3:9"},"nodeType":"YulFunctionCall","src":"16949:9:9"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"16938:7:9"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16647:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"16650:1:9","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"16656:7:9","type":""}],"src":"16616:348:9"},{"body":{"nodeType":"YulBlock","src":"17015:146:9","statements":[{"nodeType":"YulAssignment","src":"17025:25:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17048:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17030:17:9"},"nodeType":"YulFunctionCall","src":"17030:20:9"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17025:1:9"}]},{"nodeType":"YulAssignment","src":"17059:25:9","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17082:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17064:17:9"},"nodeType":"YulFunctionCall","src":"17064:20:9"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17059:1:9"}]},{"body":{"nodeType":"YulBlock","src":"17106:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17108:16:9"},"nodeType":"YulFunctionCall","src":"17108:18:9"},"nodeType":"YulExpressionStatement","src":"17108:18:9"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17100:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"17103:1:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17097:2:9"},"nodeType":"YulFunctionCall","src":"17097:8:9"},"nodeType":"YulIf","src":"17094:34:9"},{"nodeType":"YulAssignment","src":"17138:17:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17150:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"17153:1:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17146:3:9"},"nodeType":"YulFunctionCall","src":"17146:9:9"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"17138:4:9"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17001:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"17004:1:9","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"17010:4:9","type":""}],"src":"16970:191:9"},{"body":{"nodeType":"YulBlock","src":"17212:51:9","statements":[{"nodeType":"YulAssignment","src":"17222:35:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17251:5:9"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"17233:17:9"},"nodeType":"YulFunctionCall","src":"17233:24:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17222:7:9"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17194:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17204:7:9","type":""}],"src":"17167:96:9"},{"body":{"nodeType":"YulBlock","src":"17311:48:9","statements":[{"nodeType":"YulAssignment","src":"17321:32:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17346:5:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17339:6:9"},"nodeType":"YulFunctionCall","src":"17339:13:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17332:6:9"},"nodeType":"YulFunctionCall","src":"17332:21:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17321:7:9"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17293:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17303:7:9","type":""}],"src":"17269:90:9"},{"body":{"nodeType":"YulBlock","src":"17410:81:9","statements":[{"nodeType":"YulAssignment","src":"17420:65:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17435:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"17442:42:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17431:3:9"},"nodeType":"YulFunctionCall","src":"17431:54:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17420:7:9"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17392:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17402:7:9","type":""}],"src":"17365:126:9"},{"body":{"nodeType":"YulBlock","src":"17542:32:9","statements":[{"nodeType":"YulAssignment","src":"17552:16:9","value":{"name":"value","nodeType":"YulIdentifier","src":"17563:5:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17552:7:9"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17524:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17534:7:9","type":""}],"src":"17497:77:9"},{"body":{"nodeType":"YulBlock","src":"17608:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17625:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17628:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17618:6:9"},"nodeType":"YulFunctionCall","src":"17618:88:9"},"nodeType":"YulExpressionStatement","src":"17618:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17722:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17725:4:9","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17715:6:9"},"nodeType":"YulFunctionCall","src":"17715:15:9"},"nodeType":"YulExpressionStatement","src":"17715:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17746:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17749:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17739:6:9"},"nodeType":"YulFunctionCall","src":"17739:15:9"},"nodeType":"YulExpressionStatement","src":"17739:15:9"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"17580:180:9"},{"body":{"nodeType":"YulBlock","src":"17794:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17811:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17814:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17804:6:9"},"nodeType":"YulFunctionCall","src":"17804:88:9"},"nodeType":"YulExpressionStatement","src":"17804:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17908:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17911:4:9","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17901:6:9"},"nodeType":"YulFunctionCall","src":"17901:15:9"},"nodeType":"YulExpressionStatement","src":"17901:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17932:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17935:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17925:6:9"},"nodeType":"YulFunctionCall","src":"17925:15:9"},"nodeType":"YulExpressionStatement","src":"17925:15:9"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"17766:180:9"},{"body":{"nodeType":"YulBlock","src":"18041:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18058:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18061:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18051:6:9"},"nodeType":"YulFunctionCall","src":"18051:12:9"},"nodeType":"YulExpressionStatement","src":"18051:12:9"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"17952:117:9"},{"body":{"nodeType":"YulBlock","src":"18164:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18181:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18184:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18174:6:9"},"nodeType":"YulFunctionCall","src":"18174:12:9"},"nodeType":"YulExpressionStatement","src":"18174:12:9"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"18075:117:9"},{"body":{"nodeType":"YulBlock","src":"18249:51:9","statements":[{"nodeType":"YulAssignment","src":"18259:34:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18284:1:9","type":"","value":"1"},{"name":"value","nodeType":"YulIdentifier","src":"18287:5:9"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18280:3:9"},"nodeType":"YulFunctionCall","src":"18280:13:9"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"18259:8:9"}]}]},"name":"shift_right_1_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18230:5:9","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"18240:8:9","type":""}],"src":"18198:102:9"},{"body":{"nodeType":"YulBlock","src":"18412:68:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18434:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"18442:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18430:3:9"},"nodeType":"YulFunctionCall","src":"18430:14:9"},{"hexValue":"5265656e7472616e742063616c6c20646574656374656421","kind":"string","nodeType":"YulLiteral","src":"18446:26:9","type":"","value":"Reentrant call detected!"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18423:6:9"},"nodeType":"YulFunctionCall","src":"18423:50:9"},"nodeType":"YulExpressionStatement","src":"18423:50:9"}]},"name":"store_literal_in_memory_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18404:6:9","type":""}],"src":"18306:174:9"},{"body":{"nodeType":"YulBlock","src":"18592:119:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18614:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"18622:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18610:3:9"},"nodeType":"YulFunctionCall","src":"18610:14:9"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"18626:34:9","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18603:6:9"},"nodeType":"YulFunctionCall","src":"18603:58:9"},"nodeType":"YulExpressionStatement","src":"18603:58:9"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18682:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"18690:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18678:3:9"},"nodeType":"YulFunctionCall","src":"18678:15:9"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"18695:8:9","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18671:6:9"},"nodeType":"YulFunctionCall","src":"18671:33:9"},"nodeType":"YulExpressionStatement","src":"18671:33:9"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18584:6:9","type":""}],"src":"18486:225:9"},{"body":{"nodeType":"YulBlock","src":"18823:65:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18845:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"18853:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18841:3:9"},"nodeType":"YulFunctionCall","src":"18841:14:9"},{"hexValue":"6661696c656420746f2073656e6420616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"18857:23:9","type":"","value":"failed to send amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18834:6:9"},"nodeType":"YulFunctionCall","src":"18834:47:9"},"nodeType":"YulExpressionStatement","src":"18834:47:9"}]},"name":"store_literal_in_memory_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18815:6:9","type":""}],"src":"18717:171:9"},{"body":{"nodeType":"YulBlock","src":"19000:117:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19022:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"19030:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19018:3:9"},"nodeType":"YulFunctionCall","src":"19018:14:9"},{"hexValue":"496e73756666696369656e742062616c616e63652045544820746f2077697468","kind":"string","nodeType":"YulLiteral","src":"19034:34:9","type":"","value":"Insufficient balance ETH to with"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19011:6:9"},"nodeType":"YulFunctionCall","src":"19011:58:9"},"nodeType":"YulExpressionStatement","src":"19011:58:9"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19090:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"19098:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19086:3:9"},"nodeType":"YulFunctionCall","src":"19086:15:9"},{"hexValue":"64726177","kind":"string","nodeType":"YulLiteral","src":"19103:6:9","type":"","value":"draw"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19079:6:9"},"nodeType":"YulFunctionCall","src":"19079:31:9"},"nodeType":"YulExpressionStatement","src":"19079:31:9"}]},"name":"store_literal_in_memory_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18992:6:9","type":""}],"src":"18894:223:9"},{"body":{"nodeType":"YulBlock","src":"19229:74:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19251:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"19259:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19247:3:9"},"nodeType":"YulFunctionCall","src":"19247:14:9"},{"hexValue":"546f6b656e206e6f74207665726966696564206f6e2045786368616e6765","kind":"string","nodeType":"YulLiteral","src":"19263:32:9","type":"","value":"Token not verified on Exchange"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19240:6:9"},"nodeType":"YulFunctionCall","src":"19240:56:9"},"nodeType":"YulExpressionStatement","src":"19240:56:9"}]},"name":"store_literal_in_memory_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19221:6:9","type":""}],"src":"19123:180:9"},{"body":{"nodeType":"YulBlock","src":"19415:76:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19437:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"19445:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19433:3:9"},"nodeType":"YulFunctionCall","src":"19433:14:9"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"19449:34:9","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19426:6:9"},"nodeType":"YulFunctionCall","src":"19426:58:9"},"nodeType":"YulExpressionStatement","src":"19426:58:9"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19407:6:9","type":""}],"src":"19309:182:9"},{"body":{"nodeType":"YulBlock","src":"19603:75:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19625:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"19633:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19621:3:9"},"nodeType":"YulFunctionCall","src":"19621:14:9"},{"hexValue":"496e73756666696369656e7420546f6b656e7320746f207769746864726177","kind":"string","nodeType":"YulLiteral","src":"19637:33:9","type":"","value":"Insufficient Tokens to withdraw"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19614:6:9"},"nodeType":"YulFunctionCall","src":"19614:57:9"},"nodeType":"YulExpressionStatement","src":"19614:57:9"}]},"name":"store_literal_in_memory_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19595:6:9","type":""}],"src":"19497:181:9"},{"body":{"nodeType":"YulBlock","src":"19790:70:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19812:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"19820:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19808:3:9"},"nodeType":"YulFunctionCall","src":"19808:14:9"},{"hexValue":"556e617574686f72697365642046756e6374696f6e2043616c6c","kind":"string","nodeType":"YulLiteral","src":"19824:28:9","type":"","value":"Unauthorised Function Call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19801:6:9"},"nodeType":"YulFunctionCall","src":"19801:52:9"},"nodeType":"YulExpressionStatement","src":"19801:52:9"}]},"name":"store_literal_in_memory_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19782:6:9","type":""}],"src":"19684:176:9"},{"body":{"nodeType":"YulBlock","src":"19972:8:9","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19964:6:9","type":""}],"src":"19866:114:9"},{"body":{"nodeType":"YulBlock","src":"20092:59:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20114:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"20122:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20110:3:9"},"nodeType":"YulFunctionCall","src":"20110:14:9"},{"hexValue":"4e6f20417070726f76616c20796574","kind":"string","nodeType":"YulLiteral","src":"20126:17:9","type":"","value":"No Approval yet"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20103:6:9"},"nodeType":"YulFunctionCall","src":"20103:41:9"},"nodeType":"YulExpressionStatement","src":"20103:41:9"}]},"name":"store_literal_in_memory_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20084:6:9","type":""}],"src":"19986:165:9"},{"body":{"nodeType":"YulBlock","src":"20200:79:9","statements":[{"body":{"nodeType":"YulBlock","src":"20257:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20266:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20269:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20259:6:9"},"nodeType":"YulFunctionCall","src":"20259:12:9"},"nodeType":"YulExpressionStatement","src":"20259:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20223:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20248:5:9"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"20230:17:9"},"nodeType":"YulFunctionCall","src":"20230:24:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20220:2:9"},"nodeType":"YulFunctionCall","src":"20220:35:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20213:6:9"},"nodeType":"YulFunctionCall","src":"20213:43:9"},"nodeType":"YulIf","src":"20210:63:9"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20193:5:9","type":""}],"src":"20157:122:9"},{"body":{"nodeType":"YulBlock","src":"20325:76:9","statements":[{"body":{"nodeType":"YulBlock","src":"20379:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20388:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20391:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20381:6:9"},"nodeType":"YulFunctionCall","src":"20381:12:9"},"nodeType":"YulExpressionStatement","src":"20381:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20348:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20370:5:9"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"20355:14:9"},"nodeType":"YulFunctionCall","src":"20355:21:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20345:2:9"},"nodeType":"YulFunctionCall","src":"20345:32:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20338:6:9"},"nodeType":"YulFunctionCall","src":"20338:40:9"},"nodeType":"YulIf","src":"20335:60:9"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20318:5:9","type":""}],"src":"20285:116:9"},{"body":{"nodeType":"YulBlock","src":"20450:79:9","statements":[{"body":{"nodeType":"YulBlock","src":"20507:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20516:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20519:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20509:6:9"},"nodeType":"YulFunctionCall","src":"20509:12:9"},"nodeType":"YulExpressionStatement","src":"20509:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20473:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20498:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20480:17:9"},"nodeType":"YulFunctionCall","src":"20480:24:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20470:2:9"},"nodeType":"YulFunctionCall","src":"20470:35:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20463:6:9"},"nodeType":"YulFunctionCall","src":"20463:43:9"},"nodeType":"YulIf","src":"20460:63:9"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20443:5:9","type":""}],"src":"20407:122:9"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bool(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function store_literal_in_memory_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reentrant call detected!\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"failed to send amount\")\n\n    }\n\n    function store_literal_in_memory_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance ETH to with\")\n\n        mstore(add(memPtr, 32), \"draw\")\n\n    }\n\n    function store_literal_in_memory_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token not verified on Exchange\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient Tokens to withdraw\")\n\n    }\n\n    function store_literal_in_memory_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Unauthorised Function Call\")\n\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function store_literal_in_memory_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba(memPtr) {\n\n        mstore(add(memPtr, 0), \"No Approval yet\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":9,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2649":[{"length":32,"start":4068}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x99C6D2DE GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xF14210A6 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xF14210A6 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xF6326FB3 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xF7888AEC EQ PUSH2 0x370 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x99C6D2DE EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xB4A99A4E EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0xC5AB4602 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0xCD5D767C EQ PUSH2 0x2D7 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x7BF1A627 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x96C0EC55 EQ PUSH2 0x231 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x31415A65 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x46A8F820 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x4BDDE1CF EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x4FC121DB EQ PUSH2 0x187 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x3AD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x19E9 JUMP JUMPDEST PUSH2 0x3F9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0x71A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x7A1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21B PUSH2 0x7DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x1A50 JUMP JUMPDEST PUSH2 0x804 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x1A50 JUMP JUMPDEST PUSH2 0xCC1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x298 PUSH2 0xFE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x19E9 JUMP JUMPDEST PUSH2 0x1006 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x1E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x1AD0 JUMP JUMPDEST PUSH2 0x1327 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x15C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36E PUSH2 0x1644 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x397 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x1E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B5 PUSH2 0x1786 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x480 JUMPI POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x5D9 JUMPI PUSH2 0x554 DUP3 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1804 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x6EF JUMP JUMPDEST DUP1 PUSH2 0x6EE JUMPI PUSH2 0x66D DUP3 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7A9 PUSH2 0x1786 JUMP JUMPDEST PUSH2 0x7B3 PUSH1 0x0 PUSH2 0x1830 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x85F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1027B219 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BA SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x90A SWAP2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST PUSH2 0x949 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x940 SWAP1 PUSH2 0x1DCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x96F PUSH2 0x957 CALLER DUP7 PUSH2 0x71A JUMP JUMPDEST PUSH2 0x961 DUP7 CALLER PUSH2 0x16FF JUMP JUMPDEST PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x9B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A7 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F7 SWAP1 PUSH2 0x1D4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x12 SWAP1 POP PUSH1 0x12 DUP3 EQ ISZERO PUSH2 0xB35 JUMPI PUSH2 0xA78 DUP5 CALLER DUP6 PUSH1 0x0 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD5 SWAP3 SWAP2 SWAP1 PUSH2 0x1D25 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB03 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB27 SWAP2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST PUSH2 0xB30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC5B JUMP JUMPDEST PUSH2 0xB72 DUP5 CALLER PUSH2 0xB6B PUSH2 0xB50 DUP7 DUP7 PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0xB5C SWAP2 SWAP1 PUSH2 0x1F7F JUMP JUMPDEST DUP8 PUSH2 0x18F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH2 0xBE2 PUSH2 0xBC7 DUP7 DUP7 PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0xBD3 SWAP2 SWAP1 PUSH2 0x1F7F JUMP JUMPDEST DUP8 PUSH2 0x190A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBFF SWAP3 SWAP2 SWAP1 PUSH2 0x1D25 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC2D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC51 SWAP2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST PUSH2 0xC5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xF341246ADAAC6F497BC2A656F546AB9E182111D630394F0C57C710A59A2CB567 DUP5 CALLER DUP6 PUSH2 0xCA3 DUP9 CALLER PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1027B219 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD77 SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDA3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDC7 SWAP2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST PUSH2 0xE06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDFD SWAP1 PUSH2 0x1DCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CA9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xED4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEF8 SWAP2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST PUSH2 0xF37 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2E SWAP1 PUSH2 0x1E4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP PUSH1 0x12 DUP3 EQ ISZERO PUSH2 0xF58 JUMPI PUSH2 0xF53 DUP5 CALLER DUP6 PUSH1 0x1 PUSH2 0x1006 JUMP JUMPDEST PUSH2 0xF96 JUMP JUMPDEST PUSH2 0xF95 DUP5 CALLER PUSH2 0xF8E PUSH2 0xF73 DUP7 DUP7 PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0xF7F SWAP2 SWAP1 PUSH2 0x1F7F JUMP JUMPDEST DUP8 PUSH2 0x18F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1006 JUMP JUMPDEST JUMPDEST PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP5 CALLER DUP6 PUSH2 0xFC4 DUP9 CALLER PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFD4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x108D JUMPI POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x10CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C3 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x11E6 JUMPI PUSH2 0x1161 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1804 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x12FC JUMP JUMPDEST DUP1 PUSH2 0x12FB JUMPI PUSH2 0x127A DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH2 0x1391 PUSH2 0x1357 CALLER PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x71A JUMP JUMPDEST PUSH2 0x1383 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x16FF JUMP JUMPDEST PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x13D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C9 SWAP1 PUSH2 0x1DAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1422 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1419 SWAP1 PUSH2 0x1D4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x146C PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH1 0x0 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x14AC SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14E9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1532 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1529 SWAP1 PUSH2 0x1D8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xF341246ADAAC6F497BC2A656F546AB9E182111D630394F0C57C710A59A2CB567 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP5 PUSH2 0x15A4 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x15C8 PUSH2 0x1786 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1638 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x162F SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1641 DUP2 PUSH2 0x1830 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1673 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER CALLVALUE PUSH1 0x1 PUSH2 0x1006 JUMP JUMPDEST PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER CALLVALUE PUSH2 0x16E5 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x178E PUSH2 0x1920 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17AC PUSH2 0x7DB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1802 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17F9 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1812 SWAP2 SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1828 SWAP2 SWAP1 PUSH2 0x20F7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1902 SWAP2 SWAP1 PUSH2 0x209D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1918 SWAP2 SWAP1 PUSH2 0x1EFB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1937 DUP2 PUSH2 0x23A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x194C DUP2 PUSH2 0x23BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1961 DUP2 PUSH2 0x23BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1976 DUP2 PUSH2 0x23D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1992 JUMPI PUSH2 0x1991 PUSH2 0x21D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19A0 DUP5 DUP3 DUP6 ADD PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19C0 JUMPI PUSH2 0x19BF PUSH2 0x21D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19CE DUP6 DUP3 DUP7 ADD PUSH2 0x1928 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19DF DUP6 DUP3 DUP7 ADD PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1A03 JUMPI PUSH2 0x1A02 PUSH2 0x21D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A11 DUP8 DUP3 DUP9 ADD PUSH2 0x1928 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1A22 DUP8 DUP3 DUP9 ADD PUSH2 0x1928 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1A33 DUP8 DUP3 DUP9 ADD PUSH2 0x1967 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1A44 DUP8 DUP3 DUP9 ADD PUSH2 0x193D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A69 JUMPI PUSH2 0x1A68 PUSH2 0x21D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A77 DUP7 DUP3 DUP8 ADD PUSH2 0x1928 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A88 DUP7 DUP3 DUP8 ADD PUSH2 0x1967 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A99 DUP7 DUP3 DUP8 ADD PUSH2 0x1967 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AB9 JUMPI PUSH2 0x1AB8 PUSH2 0x21D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AC7 DUP5 DUP3 DUP6 ADD PUSH2 0x1952 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AE6 JUMPI PUSH2 0x1AE5 PUSH2 0x21D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AF4 DUP5 DUP3 DUP6 ADD PUSH2 0x1967 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B06 DUP2 PUSH2 0x212B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B19 PUSH1 0x18 DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B24 DUP3 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B3C PUSH1 0x26 DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B47 DUP3 PUSH2 0x220C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B5F PUSH1 0x15 DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B6A DUP3 PUSH2 0x225B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B82 PUSH1 0x24 DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B8D DUP3 PUSH2 0x2284 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BA5 PUSH1 0x1E DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB0 DUP3 PUSH2 0x22D3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC8 PUSH1 0x20 DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD3 DUP3 PUSH2 0x22FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BEB PUSH1 0x1F DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF6 DUP3 PUSH2 0x2325 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0E PUSH1 0x1A DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C19 DUP3 PUSH2 0x234E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C31 PUSH1 0x0 DUP4 PUSH2 0x1E89 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C3C DUP3 PUSH2 0x2377 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C54 PUSH1 0xF DUP4 PUSH2 0x1E94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C5F DUP3 PUSH2 0x237A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C73 DUP2 PUSH2 0x2169 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C84 DUP3 PUSH2 0x1C24 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CA3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1CBE PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x1CCB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x1CD8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C6A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1CF5 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x1D02 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x1D0F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C6A JUMP JUMPDEST PUSH2 0x1D1C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1C6A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D3A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x1D47 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C6A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D67 DUP2 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D87 DUP2 PUSH2 0x1B2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DA7 DUP2 PUSH2 0x1B52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DC7 DUP2 PUSH2 0x1B75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DE7 DUP2 PUSH2 0x1B98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E07 DUP2 PUSH2 0x1BBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E27 DUP2 PUSH2 0x1BDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E47 DUP2 PUSH2 0x1C01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E67 DUP2 PUSH2 0x1C47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E83 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB0 DUP3 PUSH2 0x2169 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EBB DUP4 PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1EF0 JUMPI PUSH2 0x1EEF PUSH2 0x2173 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F06 DUP3 PUSH2 0x2169 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F11 DUP4 PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F21 JUMPI PUSH2 0x1F20 PUSH2 0x21A2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1F76 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1F52 JUMPI PUSH2 0x1F51 PUSH2 0x2173 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1F61 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1F6F DUP6 PUSH2 0x21D6 JUMP JUMPDEST SWAP5 POP PUSH2 0x1F36 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F8A DUP3 PUSH2 0x2169 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F95 DUP4 PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP PUSH2 0x1FC2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1FCA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1FDA JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2096 JUMP JUMPDEST DUP2 PUSH2 0x1FE8 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2096 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1FFE JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2008 JUMPI PUSH2 0x2037 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2096 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x201A JUMPI PUSH2 0x2019 PUSH2 0x2173 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x2031 JUMPI PUSH2 0x2030 PUSH2 0x2173 JUMP JUMPDEST JUMPDEST POP PUSH2 0x2096 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x206C JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x2067 JUMPI PUSH2 0x2066 PUSH2 0x2173 JUMP JUMPDEST JUMPDEST PUSH2 0x2096 JUMP JUMPDEST PUSH2 0x2079 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1F2C JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x2090 JUMPI PUSH2 0x208F PUSH2 0x2173 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A8 DUP3 PUSH2 0x2169 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B3 DUP4 PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x20EC JUMPI PUSH2 0x20EB PUSH2 0x2173 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2102 DUP3 PUSH2 0x2169 JUMP JUMPDEST SWAP2 POP PUSH2 0x210D DUP4 PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2120 JUMPI PUSH2 0x211F PUSH2 0x2173 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2136 DUP3 PUSH2 0x2149 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E742063616C6C206465746563746564210000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6661696C656420746F2073656E6420616D6F756E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E63652045544820746F2077697468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472617700000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E206E6F74207665726966696564206F6E2045786368616E67650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420546F6B656E7320746F20776974686472617700 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x556E617574686F72697365642046756E6374696F6E2043616C6C000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x4E6F20417070726F76616C207965740000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x23AC DUP2 PUSH2 0x212B JUMP JUMPDEST DUP2 EQ PUSH2 0x23B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x23C3 DUP2 PUSH2 0x213D JUMP JUMPDEST DUP2 EQ PUSH2 0x23CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x23DA DUP2 PUSH2 0x2169 JUMP JUMPDEST DUP2 EQ PUSH2 0x23E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE DUP14 DUP5 0xF9 MLOAD EXTCODECOPY 0xDC 0x4E PUSH27 0xC9FF12FB9877FEE8A6F4316D55D84D0B0649C8692A5C9964736F6C PUSH4 0x43000807 STOP CALLER ","sourceMap":"388:5862:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5916:130;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4848:451;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;752:66;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4678:162;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:1;;;;;;;;;;;;;:::i;:::-;;597:36:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3304:1366:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2272:1024;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;494:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5537:371;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;642:63;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1469:704;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1197:264:7;;;:::i;:::-;;5375:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5916:130;1094:13:1;:11;:13::i;:::-;6021:16:7::1;6001:8;;:37;;;;;;;;;;;;;;;;;;5916:130:::0;:::o;4848:451::-;6133:4;6111:27;;:10;:27;;;:62;;;;6164:8;;;;;;;;;;;6142:31;;:10;:31;;;6111:62;6089:138;;;;;;;;;;;;:::i;:::-;;;;;;;;;5013:5:::1;5009:283;;;5064:71;5113:7;5064:11;:18;5076:5;5064:18;;;;;;;;;;;;;;;:26;5083:6;5064:26;;;;;;;;;;;;;;;;:30;;:71;;;;:::i;:::-;5035:11;:18;5047:5;5035:18;;;;;;;;;;;;;;;:26;5054:6;5035:26;;;;;;;;;;;;;;;:100;;;;5009:283;;;5158:5;5153:139;;5209:71;5258:7;5209:11;:18;5221:5;5209:18;;;;;;;;;;;;;;;:26;5228:6;5209:26;;;;;;;;;;;;;;;;:30;;:71;;;;:::i;:::-;5180:11;:18;5192:5;5180:18;;;;;;;;;;;;;;;:26;5199:6;5180:26;;;;;;;;;;;;;;;:100;;;;5153:139;5009:283;4848:451:::0;;;;:::o;752:66::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4678:162::-;4779:7;4806:11;:18;4818:5;4806:18;;;;;;;;;;;;;;;:26;4825:6;4806:26;;;;;;;;;;;;;;;;4799:33;;4678:162;;;;:::o;1831:101:1:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;597:36:7:-;;;;;;;;;;;;;:::o;1201:85:1:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;3304:1366:7:-;3451:8;;;;;;;;;;;3441:18;;:6;:18;;;;3433:27;;;;;;3493:8;;;;;;;;;;;:24;;;3518:6;3493:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3471:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;3723:7;3618:101;3670:34;3685:10;3697:6;3670:14;:34::i;:::-;3618:29;3628:6;3636:10;3618:9;:29::i;:::-;:33;;:101;;;;:::i;:::-;:112;;3596:193;;;;;;;;;;;;:::i;:::-;;;;;;;;;3809:6;;;;;;;;;;;3808:7;3800:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;3864:4;3855:6;;:13;;;;;;;;;;;;;;;;;;3896:6;3881:5;;:22;;;;;;;;;;;;;;;;;;3914:16;3933:2;3914:21;;3963:2;3950:9;:15;3946:543;;;3982:49;3996:6;4004:10;4016:7;4025:5;3982:13;:49::i;:::-;4054:5;;;;;;;;;;;:14;;;4069:10;4081:7;4054:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4046:44;;;;;;3946:543;;;4123:167;4155:6;4180:10;4209:42;4227:23;4240:9;4227:8;:12;;:23;;;;:::i;:::-;4221:2;:29;;;;:::i;:::-;4209:7;:11;;:42;;;;:::i;:::-;4270:5;4123:13;:167::i;:::-;4331:5;;;;;;;;;;;:14;;;4368:10;4401:42;4419:23;4432:9;4419:8;:12;;:23;;;;:::i;:::-;4413:2;:29;;;;:::i;:::-;4401:7;:11;;:42;;;;:::i;:::-;4331:131;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4305:172;;;;;;3946:543;4510:5;4501:6;;:14;;;;;;;;;;;;;;;;;;4531:131;4554:6;4575:10;4600:7;4622:29;4632:6;4640:10;4622:9;:29::i;:::-;4531:131;;;;;;;;;:::i;:::-;;;;;;;;3422:1248;3304:1366;;;:::o;2272:1024::-;2418:8;;;;;;;;;;;2408:18;;:6;:18;;;;2400:27;;;;;;2460:8;;;;;;;;;;;:24;;;2485:6;2460:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2438:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;2642:6;2627:5;;:22;;;;;;;;;;;;;;;;;;2719:5;;;;;;;;;;;:18;;;2738:10;2758:4;2765:7;2719:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2697:119;;;;;;;;;;;;:::i;:::-;;;;;;;;;2827:16;2846:2;2827:21;;2876:2;2863:9;:15;2859:281;;;2895:48;2909:6;2917:10;2929:7;2938:4;2895:13;:48::i;:::-;2859:281;;;2974:166;3006:6;3031:10;3060:42;3078:23;3091:9;3078:8;:12;;:23;;;;:::i;:::-;3072:2;:29;;;;:::i;:::-;3060:7;:11;;:42;;;;:::i;:::-;3121:4;2974:13;:166::i;:::-;2859:281;3158:130;3180:6;3201:10;3226:7;3248:29;3258:6;3266:10;3248:9;:29::i;:::-;3158:130;;;;;;;;;:::i;:::-;;;;;;;;2389:907;2272:1024;;;:::o;494:30::-;;;:::o;5537:371::-;6133:4;6111:27;;:10;:27;;;:62;;;;6164:8;;;;;;;;;;;6142:31;;:10;:31;;;6111:62;6089:138;;;;;;;;;;;;:::i;:::-;;;;;;;;;5698:5:::1;5694:207;;;5746:36;5774:7;5746:8;:16;5755:6;5746:16;;;;;;;;;;;;;;;:23;5763:5;5746:23;;;;;;;;;;;;;;;;:27;;:36;;;;:::i;:::-;5720:8;:16;5729:6;5720:16;;;;;;;;;;;;;;;:23;5737:5;5720:23;;;;;;;;;;;;;;;:62;;;;5694:207;;;5805:5;5800:101;;5853:36;5881:7;5853:8;:16;5862:6;5853:16;;;;;;;;;;;;;;;:23;5870:5;5853:23;;;;;;;;;;;;;;;;:27;;:36;;;;:::i;:::-;5827:8;:16;5836:6;5827:16;;;;;;;;;;;;;;;:23;5844:5;5827:23;;;;;;;;;;;;;;;:62;;;;5800:101;5694:207;5537:371:::0;;;;:::o;642:63::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1469:704::-;1658:7;1549:105;1603:36;1618:10;1630:8;;;;;;;;;;;1603:14;:36::i;:::-;1549:31;1559:8;;;;;;;;;;;1569:10;1549:9;:31::i;:::-;:35;;:105;;;;:::i;:::-;:116;;1527:202;;;;;;;;;;;;:::i;:::-;;;;;;;;;1749:6;;;;;;;;;;;1748:7;1740:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;1804:4;1795:6;;:13;;;;;;;;;;;;;;;;;;1819:51;1833:8;;;;;;;;;;;1843:10;1855:7;1864:5;1819:13;:51::i;:::-;1890:5;1881:6;;:14;;;;;;;;;;;;;;;;;;1907:12;1925:10;:15;;1948:7;1925:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1906:54;;;1979:7;1971:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2030:135;2053:8;;;;;;;;;;;2076:10;2101:7;2123:31;2133:8;;;;;;;;;;;2143:10;2123:9;:31::i;:::-;2030:135;;;;;;;;;:::i;:::-;;;;;;;;1516:657;1469:704;:::o;2081:198:1:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1197:264:7:-;1247:52;1261:8;;;;;;;;;;;1271:10;1283:9;1294:4;1247:13;:52::i;:::-;1317:136;1339:8;;;;;;;;;;;1362:10;1387:9;1411:31;1421:8;;;;;;;;;;;1431:10;1411:9;:31::i;:::-;1317:136;;;;;;;;;:::i;:::-;;;;;;;;1197:264::o;5375:154::-;5471:7;5498:8;:16;5507:6;5498:16;;;;;;;;;;;;;;;:23;5515:5;5498:23;;;;;;;;;;;;;;;;5491:30;;5375:154;;;;:::o;1359:130:1:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2755:96:3:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3122:::-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;2433:187:1:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;3465:96:3:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;640::2:-;693:7;719:10;712:17;;640:96;:::o;7:139:9:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:133::-;195:5;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;152:133;;;;:::o;291:137::-;345:5;376:6;370:13;361:22;;392:30;416:5;392:30;:::i;:::-;291:137;;;;:::o;434:139::-;480:5;518:6;505:20;496:29;;534:33;561:5;534:33;:::i;:::-;434:139;;;;:::o;579:329::-;638:6;687:2;675:9;666:7;662:23;658:32;655:119;;;693:79;;:::i;:::-;655:119;813:1;838:53;883:7;874:6;863:9;859:22;838:53;:::i;:::-;828:63;;784:117;579:329;;;;:::o;914:474::-;982:6;990;1039:2;1027:9;1018:7;1014:23;1010:32;1007:119;;;1045:79;;:::i;:::-;1007:119;1165:1;1190:53;1235:7;1226:6;1215:9;1211:22;1190:53;:::i;:::-;1180:63;;1136:117;1292:2;1318:53;1363:7;1354:6;1343:9;1339:22;1318:53;:::i;:::-;1308:63;;1263:118;914:474;;;;;:::o;1394:759::-;1477:6;1485;1493;1501;1550:3;1538:9;1529:7;1525:23;1521:33;1518:120;;;1557:79;;:::i;:::-;1518:120;1677:1;1702:53;1747:7;1738:6;1727:9;1723:22;1702:53;:::i;:::-;1692:63;;1648:117;1804:2;1830:53;1875:7;1866:6;1855:9;1851:22;1830:53;:::i;:::-;1820:63;;1775:118;1932:2;1958:53;2003:7;1994:6;1983:9;1979:22;1958:53;:::i;:::-;1948:63;;1903:118;2060:2;2086:50;2128:7;2119:6;2108:9;2104:22;2086:50;:::i;:::-;2076:60;;2031:115;1394:759;;;;;;;:::o;2159:619::-;2236:6;2244;2252;2301:2;2289:9;2280:7;2276:23;2272:32;2269:119;;;2307:79;;:::i;:::-;2269:119;2427:1;2452:53;2497:7;2488:6;2477:9;2473:22;2452:53;:::i;:::-;2442:63;;2398:117;2554:2;2580:53;2625:7;2616:6;2605:9;2601:22;2580:53;:::i;:::-;2570:63;;2525:118;2682:2;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2653:118;2159:619;;;;;:::o;2784:345::-;2851:6;2900:2;2888:9;2879:7;2875:23;2871:32;2868:119;;;2906:79;;:::i;:::-;2868:119;3026:1;3051:61;3104:7;3095:6;3084:9;3080:22;3051:61;:::i;:::-;3041:71;;2997:125;2784:345;;;;:::o;3135:329::-;3194:6;3243:2;3231:9;3222:7;3218:23;3214:32;3211:119;;;3249:79;;:::i;:::-;3211:119;3369:1;3394:53;3439:7;3430:6;3419:9;3415:22;3394:53;:::i;:::-;3384:63;;3340:117;3135:329;;;;:::o;3470:118::-;3557:24;3575:5;3557:24;:::i;:::-;3552:3;3545:37;3470:118;;:::o;3594:366::-;3736:3;3757:67;3821:2;3816:3;3757:67;:::i;:::-;3750:74;;3833:93;3922:3;3833:93;:::i;:::-;3951:2;3946:3;3942:12;3935:19;;3594:366;;;:::o;3966:::-;4108:3;4129:67;4193:2;4188:3;4129:67;:::i;:::-;4122:74;;4205:93;4294:3;4205:93;:::i;:::-;4323:2;4318:3;4314:12;4307:19;;3966:366;;;:::o;4338:::-;4480:3;4501:67;4565:2;4560:3;4501:67;:::i;:::-;4494:74;;4577:93;4666:3;4577:93;:::i;:::-;4695:2;4690:3;4686:12;4679:19;;4338:366;;;:::o;4710:::-;4852:3;4873:67;4937:2;4932:3;4873:67;:::i;:::-;4866:74;;4949:93;5038:3;4949:93;:::i;:::-;5067:2;5062:3;5058:12;5051:19;;4710:366;;;:::o;5082:::-;5224:3;5245:67;5309:2;5304:3;5245:67;:::i;:::-;5238:74;;5321:93;5410:3;5321:93;:::i;:::-;5439:2;5434:3;5430:12;5423:19;;5082:366;;;:::o;5454:::-;5596:3;5617:67;5681:2;5676:3;5617:67;:::i;:::-;5610:74;;5693:93;5782:3;5693:93;:::i;:::-;5811:2;5806:3;5802:12;5795:19;;5454:366;;;:::o;5826:::-;5968:3;5989:67;6053:2;6048:3;5989:67;:::i;:::-;5982:74;;6065:93;6154:3;6065:93;:::i;:::-;6183:2;6178:3;6174:12;6167:19;;5826:366;;;:::o;6198:::-;6340:3;6361:67;6425:2;6420:3;6361:67;:::i;:::-;6354:74;;6437:93;6526:3;6437:93;:::i;:::-;6555:2;6550:3;6546:12;6539:19;;6198:366;;;:::o;6570:398::-;6729:3;6750:83;6831:1;6826:3;6750:83;:::i;:::-;6743:90;;6842:93;6931:3;6842:93;:::i;:::-;6960:1;6955:3;6951:11;6944:18;;6570:398;;;:::o;6974:366::-;7116:3;7137:67;7201:2;7196:3;7137:67;:::i;:::-;7130:74;;7213:93;7302:3;7213:93;:::i;:::-;7331:2;7326:3;7322:12;7315:19;;6974:366;;;:::o;7346:118::-;7433:24;7451:5;7433:24;:::i;:::-;7428:3;7421:37;7346:118;;:::o;7470:379::-;7654:3;7676:147;7819:3;7676:147;:::i;:::-;7669:154;;7840:3;7833:10;;7470:379;;;:::o;7855:222::-;7948:4;7986:2;7975:9;7971:18;7963:26;;7999:71;8067:1;8056:9;8052:17;8043:6;7999:71;:::i;:::-;7855:222;;;;:::o;8083:442::-;8232:4;8270:2;8259:9;8255:18;8247:26;;8283:71;8351:1;8340:9;8336:17;8327:6;8283:71;:::i;:::-;8364:72;8432:2;8421:9;8417:18;8408:6;8364:72;:::i;:::-;8446;8514:2;8503:9;8499:18;8490:6;8446:72;:::i;:::-;8083:442;;;;;;:::o;8531:553::-;8708:4;8746:3;8735:9;8731:19;8723:27;;8760:71;8828:1;8817:9;8813:17;8804:6;8760:71;:::i;:::-;8841:72;8909:2;8898:9;8894:18;8885:6;8841:72;:::i;:::-;8923;8991:2;8980:9;8976:18;8967:6;8923:72;:::i;:::-;9005;9073:2;9062:9;9058:18;9049:6;9005:72;:::i;:::-;8531:553;;;;;;;:::o;9090:332::-;9211:4;9249:2;9238:9;9234:18;9226:26;;9262:71;9330:1;9319:9;9315:17;9306:6;9262:71;:::i;:::-;9343:72;9411:2;9400:9;9396:18;9387:6;9343:72;:::i;:::-;9090:332;;;;;:::o;9428:419::-;9594:4;9632:2;9621:9;9617:18;9609:26;;9681:9;9675:4;9671:20;9667:1;9656:9;9652:17;9645:47;9709:131;9835:4;9709:131;:::i;:::-;9701:139;;9428:419;;;:::o;9853:::-;10019:4;10057:2;10046:9;10042:18;10034:26;;10106:9;10100:4;10096:20;10092:1;10081:9;10077:17;10070:47;10134:131;10260:4;10134:131;:::i;:::-;10126:139;;9853:419;;;:::o;10278:::-;10444:4;10482:2;10471:9;10467:18;10459:26;;10531:9;10525:4;10521:20;10517:1;10506:9;10502:17;10495:47;10559:131;10685:4;10559:131;:::i;:::-;10551:139;;10278:419;;;:::o;10703:::-;10869:4;10907:2;10896:9;10892:18;10884:26;;10956:9;10950:4;10946:20;10942:1;10931:9;10927:17;10920:47;10984:131;11110:4;10984:131;:::i;:::-;10976:139;;10703:419;;;:::o;11128:::-;11294:4;11332:2;11321:9;11317:18;11309:26;;11381:9;11375:4;11371:20;11367:1;11356:9;11352:17;11345:47;11409:131;11535:4;11409:131;:::i;:::-;11401:139;;11128:419;;;:::o;11553:::-;11719:4;11757:2;11746:9;11742:18;11734:26;;11806:9;11800:4;11796:20;11792:1;11781:9;11777:17;11770:47;11834:131;11960:4;11834:131;:::i;:::-;11826:139;;11553:419;;;:::o;11978:::-;12144:4;12182:2;12171:9;12167:18;12159:26;;12231:9;12225:4;12221:20;12217:1;12206:9;12202:17;12195:47;12259:131;12385:4;12259:131;:::i;:::-;12251:139;;11978:419;;;:::o;12403:::-;12569:4;12607:2;12596:9;12592:18;12584:26;;12656:9;12650:4;12646:20;12642:1;12631:9;12627:17;12620:47;12684:131;12810:4;12684:131;:::i;:::-;12676:139;;12403:419;;;:::o;12828:::-;12994:4;13032:2;13021:9;13017:18;13009:26;;13081:9;13075:4;13071:20;13067:1;13056:9;13052:17;13045:47;13109:131;13235:4;13109:131;:::i;:::-;13101:139;;12828:419;;;:::o;13253:222::-;13346:4;13384:2;13373:9;13369:18;13361:26;;13397:71;13465:1;13454:9;13450:17;13441:6;13397:71;:::i;:::-;13253:222;;;;:::o;13562:147::-;13663:11;13700:3;13685:18;;13562:147;;;;:::o;13715:169::-;13799:11;13833:6;13828:3;13821:19;13873:4;13868:3;13864:14;13849:29;;13715:169;;;;:::o;13890:305::-;13930:3;13949:20;13967:1;13949:20;:::i;:::-;13944:25;;13983:20;14001:1;13983:20;:::i;:::-;13978:25;;14137:1;14069:66;14065:74;14062:1;14059:81;14056:107;;;14143:18;;:::i;:::-;14056:107;14187:1;14184;14180:9;14173:16;;13890:305;;;;:::o;14201:185::-;14241:1;14258:20;14276:1;14258:20;:::i;:::-;14253:25;;14292:20;14310:1;14292:20;:::i;:::-;14287:25;;14331:1;14321:35;;14336:18;;:::i;:::-;14321:35;14378:1;14375;14371:9;14366:14;;14201:185;;;;:::o;14392:848::-;14453:5;14460:4;14484:6;14475:15;;14508:5;14499:14;;14522:712;14543:1;14533:8;14530:15;14522:712;;;14638:4;14633:3;14629:14;14623:4;14620:24;14617:50;;;14647:18;;:::i;:::-;14617:50;14697:1;14687:8;14683:16;14680:451;;;15112:4;15105:5;15101:16;15092:25;;14680:451;15162:4;15156;15152:15;15144:23;;15192:32;15215:8;15192:32;:::i;:::-;15180:44;;14522:712;;;14392:848;;;;;;;:::o;15246:285::-;15306:5;15330:23;15348:4;15330:23;:::i;:::-;15322:31;;15374:27;15392:8;15374:27;:::i;:::-;15362:39;;15420:104;15457:66;15447:8;15441:4;15420:104;:::i;:::-;15411:113;;15246:285;;;;:::o;15537:1073::-;15591:5;15782:8;15772:40;;15803:1;15794:10;;15805:5;;15772:40;15831:4;15821:36;;15848:1;15839:10;;15850:5;;15821:36;15917:4;15965:1;15960:27;;;;16001:1;15996:191;;;;15910:277;;15960:27;15978:1;15969:10;;15980:5;;;15996:191;16041:3;16031:8;16028:17;16025:43;;;16048:18;;:::i;:::-;16025:43;16097:8;16094:1;16090:16;16081:25;;16132:3;16125:5;16122:14;16119:40;;;16139:18;;:::i;:::-;16119:40;16172:5;;;15910:277;;16296:2;16286:8;16283:16;16277:3;16271:4;16268:13;16264:36;16246:2;16236:8;16233:16;16228:2;16222:4;16219:12;16215:35;16199:111;16196:246;;;16352:8;16346:4;16342:19;16333:28;;16387:3;16380:5;16377:14;16374:40;;;16394:18;;:::i;:::-;16374:40;16427:5;;16196:246;16467:42;16505:3;16495:8;16489:4;16486:1;16467:42;:::i;:::-;16452:57;;;;16541:4;16536:3;16532:14;16525:5;16522:25;16519:51;;;16550:18;;:::i;:::-;16519:51;16599:4;16592:5;16588:16;16579:25;;15537:1073;;;;;;:::o;16616:348::-;16656:7;16679:20;16697:1;16679:20;:::i;:::-;16674:25;;16713:20;16731:1;16713:20;:::i;:::-;16708:25;;16901:1;16833:66;16829:74;16826:1;16823:81;16818:1;16811:9;16804:17;16800:105;16797:131;;;16908:18;;:::i;:::-;16797:131;16956:1;16953;16949:9;16938:20;;16616:348;;;;:::o;16970:191::-;17010:4;17030:20;17048:1;17030:20;:::i;:::-;17025:25;;17064:20;17082:1;17064:20;:::i;:::-;17059:25;;17103:1;17100;17097:8;17094:34;;;17108:18;;:::i;:::-;17094:34;17153:1;17150;17146:9;17138:17;;16970:191;;;;:::o;17167:96::-;17204:7;17233:24;17251:5;17233:24;:::i;:::-;17222:35;;17167:96;;;:::o;17269:90::-;17303:7;17346:5;17339:13;17332:21;17321:32;;17269:90;;;:::o;17365:126::-;17402:7;17442:42;17435:5;17431:54;17420:65;;17365:126;;;:::o;17497:77::-;17534:7;17563:5;17552:16;;17497:77;;;:::o;17580:180::-;17628:77;17625:1;17618:88;17725:4;17722:1;17715:15;17749:4;17746:1;17739:15;17766:180;17814:77;17811:1;17804:88;17911:4;17908:1;17901:15;17935:4;17932:1;17925:15;18075:117;18184:1;18181;18174:12;18198:102;18240:8;18287:5;18284:1;18280:13;18259:34;;18198:102;;;:::o;18306:174::-;18446:26;18442:1;18434:6;18430:14;18423:50;18306:174;:::o;18486:225::-;18626:34;18622:1;18614:6;18610:14;18603:58;18695:8;18690:2;18682:6;18678:15;18671:33;18486:225;:::o;18717:171::-;18857:23;18853:1;18845:6;18841:14;18834:47;18717:171;:::o;18894:223::-;19034:34;19030:1;19022:6;19018:14;19011:58;19103:6;19098:2;19090:6;19086:15;19079:31;18894:223;:::o;19123:180::-;19263:32;19259:1;19251:6;19247:14;19240:56;19123:180;:::o;19309:182::-;19449:34;19445:1;19437:6;19433:14;19426:58;19309:182;:::o;19497:181::-;19637:33;19633:1;19625:6;19621:14;19614:57;19497:181;:::o;19684:176::-;19824:28;19820:1;19812:6;19808:14;19801:52;19684:176;:::o;19866:114::-;;:::o;19986:165::-;20126:17;20122:1;20114:6;20110:14;20103:41;19986:165;:::o;20157:122::-;20230:24;20248:5;20230:24;:::i;:::-;20223:5;20220:35;20210:63;;20269:1;20266;20259:12;20210:63;20157:122;:::o;20285:116::-;20355:21;20370:5;20355:21;:::i;:::-;20348:5;20345:32;20335:60;;20391:1;20388;20381:12;20335:60;20285:116;:::o;20407:122::-;20480:24;20498:5;20480:24;:::i;:::-;20473:5;20470:35;20460:63;;20519:1;20516;20509:12;20460:63;20407:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1849200","executionCost":"infinite","totalCost":"infinite"},"external":{"Owner()":"infinite","balanceOf(address,address)":"infinite","depositETH()":"infinite","depositToken(address,uint256,uint256)":"infinite","ethToken()":"2559","getlockedFunds(address,address)":"infinite","lockedFunds(address,address)":"infinite","owner()":"2589","renounceOwnership()":"30421","s_tokens(address,address)":"infinite","transferOwnership(address)":"30791","updateBalance(address,address,uint256,bool)":"infinite","updateExchangeAddress(address)":"27010","updateLockedFunds(address,address,uint256,bool)":"infinite","withdrawETH(uint256)":"infinite","withdrawToken(address,uint256,uint256)":"infinite"}},"methodIdentifiers":{"Owner()":"b4a99a4e","balanceOf(address,address)":"f7888aec","depositETH()":"f6326fb3","depositToken(address,uint256,uint256)":"99c6d2de","ethToken()":"7bf1a627","getlockedFunds(address,address)":"4fc121db","lockedFunds(address,address)":"4bdde1cf","owner()":"8da5cb5b","renounceOwnership()":"715018a6","s_tokens(address,address)":"cd5d767c","transferOwnership(address)":"f2fde38b","updateBalance(address,address,uint256,bool)":"c5ab4602","updateExchangeAddress(address)":"31415a65","updateLockedFunds(address,address,uint256,bool)":"46a8f820","withdrawETH(uint256)":"f14210a6","withdrawToken(address,uint256,uint256)":"96c0ec55"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getlockedFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_tokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAdd\",\"type\":\"bool\"}],\"name\":\"updateBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_exchangeAddress\",\"type\":\"address\"}],\"name\":\"updateExchangeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAdd\",\"type\":\"bool\"}],\"name\":\"updateLockedFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Withdraw(address,address,uint256,uint256)\":{\"notice\":\"Event when amount withdrawn exchange\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Wallet.sol\":\"Wallet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/Exchange.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./PriceChecker.sol\\\";\\r\\nimport \\\"./TradingFees.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Exchange is Ownable {\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n    PriceChecker priceChecker;\\r\\n    TradingFees tradingFees;\\r\\n    Wallet wallet;\\r\\n\\r\\n    uint256 decimals = 10 ** 18;\\r\\n    address public ethToken = address(0);\\r\\n\\r\\n    //Token Address List available in DEX\\r\\n    _tokenInfo[] public tokenList;\\r\\n\\r\\n    //s_orderBook mappping: tokenAddress -> Side -> Order Array\\r\\n    mapping(address => mapping(uint256 => _Order[])) public s_orderBook;\\r\\n\\r\\n    mapping(address => mapping(uint256 => _filledOrder[]))\\r\\n        public s_filledOrders;\\r\\n\\r\\n    uint256 public s_orderId = 0;\\r\\n    bool private s_isManual = true;\\r\\n\\r\\n    struct _tokenInfo {\\r\\n        address add;\\r\\n        uint256 decimals;\\r\\n    }\\r\\n\\r\\n    struct _fillOrderValues {\\r\\n        uint256 rate;\\r\\n        uint256 amount;\\r\\n    }\\r\\n\\r\\n    //Structs representing an order that has unique id, user and amounts to give and get between two tokens to exchange\\r\\n    struct _Order {\\r\\n        uint256 id;\\r\\n        Side side;\\r\\n        address user;\\r\\n        address tokenA;\\r\\n        uint256 amountA;\\r\\n        address tokenB;\\r\\n        uint256 amountB;\\r\\n        uint256 rate; // TokenB/TokenA = price in terms of TokenB\\r\\n        uint256 originalAmountA;\\r\\n        uint256 originalAmountB;\\r\\n        bool waiveFees;\\r\\n    }\\r\\n\\r\\n    //For any order that is filled even if it is partially filled or fully filled\\r\\n    struct _filledOrder {\\r\\n        uint256 id;\\r\\n        Side side;\\r\\n        address user;\\r\\n        address tokenA;\\r\\n        address tokenB;\\r\\n        uint256 amountFilled;\\r\\n        uint256 fillRate;\\r\\n        uint256 originalRate;\\r\\n        uint256 originalAmountA;\\r\\n        uint256 originalAmountB;\\r\\n        bool feesWaived;\\r\\n        uint256 feesPaid; //in terms of ETH\\r\\n    }\\r\\n\\r\\n    enum Side {\\r\\n        BUY,\\r\\n        SELL\\r\\n    }\\r\\n\\r\\n    //add events\\r\\n    /// @notice Event when an order is placed on an exchange\\r\\n    event Order(\\r\\n        uint256 id,\\r\\n        Side side,\\r\\n        address user,\\r\\n        address tokenA,\\r\\n        uint256 amountA,\\r\\n        address tokenB,\\r\\n        uint256 amountB,\\r\\n        uint256 rate,\\r\\n        uint256 originalAmountA,\\r\\n        uint256 originalAmountB,\\r\\n        bool waiveFees\\r\\n    );\\r\\n\\r\\n    /// @notice Event when an order is cancelled\\r\\n    event Cancel(\\r\\n        uint256 id,\\r\\n        Side side,\\r\\n        address user,\\r\\n        address tokenA,\\r\\n        uint256 amountA,\\r\\n        address tokenB,\\r\\n        uint256 amountB,\\r\\n        uint256 rate,\\r\\n        uint256 originalAmountA,\\r\\n        uint256 originalAmountB,\\r\\n        bool waiveFees\\r\\n    );\\r\\n\\r\\n    event fillBuyOrder(\\r\\n        _Order remainingOrder,\\r\\n        uint256 amountBought,\\r\\n        uint256 fillBuyRate,\\r\\n        bool feesWaived,\\r\\n        uint256 feesPaid\\r\\n    );\\r\\n\\r\\n    event fillSellOrder(\\r\\n        _Order remainingOrder,\\r\\n        uint256 amountSold,\\r\\n        uint256 fillSellRate,\\r\\n        bool feesWaived,\\r\\n        uint256 feesPaid\\r\\n    );\\r\\n\\r\\n    constructor(address _wallet, address _fees, address _priceChecker) {\\r\\n        wallet = Wallet(_wallet);\\r\\n        tradingFees = TradingFees(_fees);\\r\\n        priceChecker = PriceChecker(_priceChecker);\\r\\n    }\\r\\n\\r\\n    function createLimitBuyOrder(\\r\\n        // TokenA/TokenB\\r\\n        address _tokenA,\\r\\n        uint256 _amountA,\\r\\n        address _tokenB,\\r\\n        uint256 _amountB,\\r\\n        uint256 _rate,\\r\\n        bool _waiveFees\\r\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\r\\n        //Amount user has deposited in the DEX must be >= value he wants to buy\\r\\n        require(\\r\\n            wallet.balanceOf(_tokenB, msg.sender).sub(\\r\\n                wallet.getlockedFunds(msg.sender, _tokenB)\\r\\n            ) >= _amountB,\\r\\n            \\\"Insufficient Funds\\\"\\r\\n        );\\r\\n\\r\\n        wallet.updateLockedFunds(msg.sender, _tokenB, _amountB, true);\\r\\n\\r\\n        s_orderBook[_tokenA][uint256(Side.BUY)].push(\\r\\n            _Order(\\r\\n                s_orderId,\\r\\n                Side.BUY,\\r\\n                msg.sender,\\r\\n                _tokenA,\\r\\n                _amountA,\\r\\n                _tokenB,\\r\\n                _amountB,\\r\\n                _rate,\\r\\n                _amountA,\\r\\n                _amountB,\\r\\n                _waiveFees\\r\\n            )\\r\\n        );\\r\\n\\r\\n        emit Order(\\r\\n            s_orderId,\\r\\n            Side.BUY,\\r\\n            msg.sender,\\r\\n            _tokenA,\\r\\n            _amountA,\\r\\n            _tokenB,\\r\\n            _amountB,\\r\\n            _rate,\\r\\n            _amountA,\\r\\n            _amountB,\\r\\n            _waiveFees\\r\\n        );\\r\\n\\r\\n        s_orderId = s_orderId.add(1);\\r\\n    }\\r\\n\\r\\n    function createLimitSellOrder(\\r\\n        address _tokenA,\\r\\n        uint256 _amountA,\\r\\n        address _tokenB,\\r\\n        uint256 _amountB,\\r\\n        uint256 _rate,\\r\\n        bool _waiveFees\\r\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\r\\n        //Amount of tokens user deposit in DEX must be >= the amount of tokens they want to sell\\r\\n        require(\\r\\n            wallet.balanceOf(_tokenA, msg.sender).sub(\\r\\n                wallet.getlockedFunds(msg.sender, _tokenA)\\r\\n            ) >= _amountA,\\r\\n            \\\"Insufficient Funds\\\"\\r\\n        );\\r\\n\\r\\n        //Lock the funds (tokens) in the wallet\\r\\n        wallet.updateLockedFunds(msg.sender, _tokenA, _amountA, true);\\r\\n\\r\\n        s_orderBook[_tokenA][uint256(Side.SELL)].push(\\r\\n            _Order(\\r\\n                s_orderId,\\r\\n                Side.SELL,\\r\\n                msg.sender,\\r\\n                _tokenA,\\r\\n                _amountA,\\r\\n                _tokenB,\\r\\n                _amountB,\\r\\n                _rate,\\r\\n                _amountA,\\r\\n                _amountB,\\r\\n                _waiveFees\\r\\n            )\\r\\n        );\\r\\n\\r\\n        emit Order(\\r\\n            s_orderId,\\r\\n            Side.SELL,\\r\\n            msg.sender,\\r\\n            _tokenA,\\r\\n            _amountA,\\r\\n            _tokenB,\\r\\n            _amountB,\\r\\n            _rate,\\r\\n            _amountA,\\r\\n            _amountB,\\r\\n            _waiveFees\\r\\n        );\\r\\n\\r\\n        s_orderId = s_orderId.add(1);\\r\\n    }\\r\\n\\r\\n    function cancelOrder(\\r\\n        Side side,\\r\\n        uint256 _id,\\r\\n        address _token\\r\\n    ) public validOrder(_id, side, _token) validToken(_token) {\\r\\n        _Order[] storage _order = s_orderBook[_token][uint256(side)];\\r\\n        uint256 size = _order.length;\\r\\n        _Order memory order;\\r\\n\\r\\n        uint256 index;\\r\\n        for (uint256 i = 0; i < size; i++) {\\r\\n            if (_order[i].id == _id) {\\r\\n                index = i;\\r\\n                order = _order[i];\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        //Manual cancellation of orders\\r\\n        if (s_isManual) {\\r\\n            require(msg.sender == order.user, \\\"Not Owner\\\");\\r\\n\\r\\n            //Unlock funds\\r\\n            if (side == Side.BUY) {\\r\\n                wallet.updateLockedFunds(\\r\\n                    msg.sender,\\r\\n                    order.tokenB,\\r\\n                    order.amountB,\\r\\n                    false\\r\\n                );\\r\\n            } else if (side == Side.SELL) {\\r\\n                wallet.updateLockedFunds(\\r\\n                    msg.sender,\\r\\n                    order.tokenA,\\r\\n                    order.amountA,\\r\\n                    false\\r\\n                );\\r\\n            }\\r\\n        }\\r\\n\\r\\n        for (uint256 j = index; j < size - 1; j++) {\\r\\n            _order[j] = _order[j.add(1)];\\r\\n        }\\r\\n        delete _order[size.sub(1)];\\r\\n        _order.pop();\\r\\n\\r\\n        s_orderBook[_token][uint256(side)] = _order;\\r\\n\\r\\n        emit Cancel(\\r\\n            _id,\\r\\n            order.side,\\r\\n            order.user,\\r\\n            order.tokenA,\\r\\n            order.amountA,\\r\\n            order.tokenB,\\r\\n            order.amountB,\\r\\n            order.rate,\\r\\n            order.originalAmountA,\\r\\n            order.originalAmountB,\\r\\n            order.waiveFees\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function fillOrder(\\r\\n        Side side,\\r\\n        uint256 _id,\\r\\n        address _token,\\r\\n        _fillOrderValues memory a\\r\\n    ) internal validOrder(_id, side, _token) validToken(_token) {\\r\\n        uint256 _side = uint256(side);\\r\\n        (_Order memory order, uint256 index) = getOrderFromArray(\\r\\n            _token,\\r\\n            _side,\\r\\n            _id\\r\\n        );\\r\\n\\r\\n        require(order.amountA >= a.amount, \\\"Invalid Order Amount to fill\\\");\\r\\n\\r\\n        order.amountA = order.amountA.sub(a.amount);\\r\\n        order.amountB = order.amountB.sub(\\r\\n            order.rate.mul(a.amount).div(decimals)\\r\\n        );\\r\\n        s_orderBook[_token][_side][index].amountA = order.amountA;\\r\\n        s_orderBook[_token][_side][index].amountB = order.amountB;\\r\\n\\r\\n        uint256 fees = tradingFees.calculateFees(\\r\\n            a.amount,\\r\\n            a.rate,\\r\\n            order.tokenB\\r\\n        ); //fees in terms of USD value 18dp\\r\\n        bool feesWaived = order.waiveFees &&\\r\\n            tradingFees.checkSufficientaDAI(fees, order.user);\\r\\n\\r\\n        if (side == Side.BUY) {\\r\\n            fillBuyOrders(order, a.amount, a.rate, feesWaived, fees);\\r\\n            emit fillBuyOrder(order, a.amount, a.rate, feesWaived, fees);\\r\\n        } else if (side == Side.SELL) {\\r\\n            fillSellOrders(order, a.amount, a.rate, feesWaived, fees);\\r\\n            emit fillSellOrder(order, a.amount, a.rate, feesWaived, fees);\\r\\n        }\\r\\n\\r\\n        if (order.amountA == 0) {\\r\\n            s_isManual = false;\\r\\n            cancelOrder(side, order.id, order.tokenA); //remove filled orders\\r\\n            s_isManual = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function fillBuyOrders(\\r\\n        _Order memory order,\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        bool feesWaived,\\r\\n        uint256 fees\\r\\n    ) internal {\\r\\n        if (feesWaived) {\\r\\n            //Deduct aDAI\\r\\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\\r\\n            wallet.updateBalance(\\r\\n                tradingFees.aDAI(),\\r\\n                order.user,\\r\\n                aDAIToDeduct,\\r\\n                false\\r\\n            );\\r\\n            //Credit Bought tokens\\r\\n            wallet.updateBalance(order.tokenA, order.user, _amount, true);\\r\\n        } else {\\r\\n            uint256 amountTokenToDeduct = tradingFees.amountTokensToDeduct(\\r\\n                order.tokenA,\\r\\n                fees\\r\\n            );\\r\\n            //Credit Bought tokens after minusing fees\\r\\n            wallet.updateBalance(\\r\\n                order.tokenA,\\r\\n                order.user,\\r\\n                _amount.sub(amountTokenToDeduct),\\r\\n                true\\r\\n            );\\r\\n        }\\r\\n\\r\\n        //Original Locked Funds unlocked\\r\\n        wallet.updateLockedFunds(\\r\\n            order.user,\\r\\n            order.tokenB,\\r\\n            (order.rate.mul(_amount)).div(decimals),\\r\\n            false\\r\\n        );\\r\\n\\r\\n        //buyer update\\r\\n        //Buyer balance deducted from what he paid\\r\\n        wallet.updateBalance(\\r\\n            order.tokenB,\\r\\n            order.user,\\r\\n            (_rate.mul(_amount)).div(decimals),\\r\\n            false\\r\\n        );\\r\\n\\r\\n        s_filledOrders[order.user][0].push(\\r\\n            _filledOrder(\\r\\n                order.id,\\r\\n                order.side,\\r\\n                order.user,\\r\\n                order.tokenA,\\r\\n                order.tokenB,\\r\\n                _amount,\\r\\n                _rate,\\r\\n                order.rate,\\r\\n                order.originalAmountA,\\r\\n                order.originalAmountB,\\r\\n                feesWaived,\\r\\n                fees\\r\\n            )\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function fillSellOrders(\\r\\n        _Order memory order,\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        bool feesWaived,\\r\\n        uint256 fees\\r\\n    ) internal {\\r\\n        if (feesWaived) {\\r\\n            //Deduct aDAI\\r\\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\\r\\n            wallet.updateBalance(tradingFees.aDAI(), order.user, aDAIToDeduct, false);\\r\\n            //Credit Earned tokens\\r\\n            wallet.updateBalance(\\r\\n                order.tokenB,\\r\\n                order.user,\\r\\n                (_rate.mul(_amount)).div(decimals),\\r\\n                true\\r\\n            );\\r\\n        } else {\\r\\n            uint256 amountTokensToDeduct = tradingFees.amountTokensToDeduct(\\r\\n                order.tokenB,\\r\\n                fees\\r\\n            );\\r\\n            //Credit Earned tokens after minusing fees\\r\\n            wallet.updateBalance(\\r\\n                order.tokenB,\\r\\n                order.user,\\r\\n                (_rate.mul(_amount)).div(decimals).sub(amountTokensToDeduct),\\r\\n                true\\r\\n            );\\r\\n        }\\r\\n\\r\\n        wallet.updateLockedFunds(order.user, order.tokenA, _amount, false);\\r\\n        //seller update\\r\\n        wallet.updateBalance(order.tokenA, order.user, _amount, false);\\r\\n    }\\r\\n\\r\\n    function matchOrders(\\r\\n        address _token,\\r\\n        uint256 _id,\\r\\n        Side side\\r\\n    ) internal validOrder(_id, side, _token) validToken(_token) {\\r\\n        uint256 saleTokenAmt;\\r\\n\\r\\n        if (side == Side.BUY) {\\r\\n            //Retrieve sell order to match\\r\\n            _Order[] memory _sellOrder = s_orderBook[_token][1];\\r\\n            for (uint256 i = 0; i < _sellOrder.length; i++) {\\r\\n                //Retrieve buy order to be filled\\r\\n                (_Order memory buyOrderToFill, ) = getOrderFromArray(\\r\\n                    _token,\\r\\n                    uint8(side),\\r\\n                    _id\\r\\n                );\\r\\n                //sell order hit buyer's limit price & tokenB matches\\r\\n                if (\\r\\n                    _sellOrder[i].rate <= buyOrderToFill.rate &&\\r\\n                    buyOrderToFill.tokenB == _sellOrder[i].tokenB\\r\\n                ) {\\r\\n                    _Order memory sellOrder = _sellOrder[i];\\r\\n                    //if buyer's amount to buy > seller's amount to sell\\r\\n                    if (buyOrderToFill.amountA > sellOrder.amountA) {\\r\\n                        saleTokenAmt = sellOrder.amountA;\\r\\n                    }\\r\\n                    //if seller's amount to sell >= buyer's amount to buy\\r\\n                    else if (buyOrderToFill.amountA <= sellOrder.amountA) {\\r\\n                        saleTokenAmt = buyOrderToFill.amountA;\\r\\n                    }\\r\\n\\r\\n                    //Verify current balance\\r\\n                    require(\\r\\n                        wallet.balanceOf(\\r\\n                            buyOrderToFill.tokenB,\\r\\n                            buyOrderToFill.user\\r\\n                        ) >= (saleTokenAmt.mul(sellOrder.rate)).div(decimals),\\r\\n                        \\\"Insufficient Buyer Token Balance\\\"\\r\\n                    );\\r\\n                    require(\\r\\n                        wallet.balanceOf(_token, sellOrder.user) >=\\r\\n                            saleTokenAmt,\\r\\n                        \\\"Insufficient Seller Token Balance\\\"\\r\\n                    );\\r\\n\\r\\n                    //update orders\\r\\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\\r\\n                        sellOrder.rate,\\r\\n                        saleTokenAmt\\r\\n                    );\\r\\n                    fillOrder(Side.BUY, _id, _token, fillOrderValues);\\r\\n                    fillOrder(Side.SELL, sellOrder.id, _token, fillOrderValues);\\r\\n                }\\r\\n\\r\\n                bool orderExist = orderExists(_id, side, _token);\\r\\n                if (!orderExist) break;\\r\\n            }\\r\\n        } else if (side == Side.SELL) {\\r\\n            //Retrieve buy order to match\\r\\n            _Order[] memory _buyOrder = s_orderBook[_token][0];\\r\\n            for (uint256 i = 0; i < _buyOrder.length; i++) {\\r\\n                //Retrieve sell order to be filled\\r\\n                (_Order memory sellOrderToFill, ) = getOrderFromArray(\\r\\n                    _token,\\r\\n                    1,\\r\\n                    _id\\r\\n                );\\r\\n                //sell order hit buyer's limit price\\r\\n                if (\\r\\n                    _buyOrder[i].rate >= sellOrderToFill.rate &&\\r\\n                    _buyOrder[i].tokenB == sellOrderToFill.tokenB\\r\\n                ) {\\r\\n                    _Order memory order = _buyOrder[i];\\r\\n\\r\\n                    //if seller's amount to sell > buyer's amount to buy\\r\\n                    if (sellOrderToFill.amountA > order.amountA) {\\r\\n                        saleTokenAmt = order.amountA;\\r\\n                    }\\r\\n                    //if buyer's amount to buy > seller's amount to sell\\r\\n                    else if (sellOrderToFill.amountA <= order.amountA) {\\r\\n                        saleTokenAmt = sellOrderToFill.amountA;\\r\\n                    }\\r\\n                    //Verify current balance\\r\\n                    require(\\r\\n                        wallet.balanceOf(_token, sellOrderToFill.user) >=\\r\\n                            saleTokenAmt,\\r\\n                        \\\"Insufficient Seller Token Balance\\\"\\r\\n                    );\\r\\n                    require(\\r\\n                        wallet.balanceOf(order.tokenB, order.user) >=\\r\\n                            (saleTokenAmt.mul(order.rate)).div(decimals),\\r\\n                        \\\"Insufficient Buyer Token Balance\\\"\\r\\n                    );\\r\\n\\r\\n                    //update orders\\r\\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\\r\\n                        order.rate,\\r\\n                        saleTokenAmt\\r\\n                    );\\r\\n                    fillOrder(Side.SELL, _id, _token, fillOrderValues);\\r\\n                    fillOrder(Side.BUY, order.id, _token, fillOrderValues);\\r\\n                }\\r\\n                bool orderExist = orderExists(_id, side, _token);\\r\\n                if (!orderExist) break;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getOrderLength(\\r\\n        Side side,\\r\\n        address _token\\r\\n    ) public view returns (uint256) {\\r\\n        return s_orderBook[_token][uint256(side)].length;\\r\\n    }\\r\\n\\r\\n    // function getOrder(\\r\\n    //     address _token,\\r\\n    //     uint256 index,\\r\\n    //     Side side\\r\\n    // )\\r\\n    //     public\\r\\n    //     view\\r\\n    //     returns (\\r\\n    //         uint256, //id\\r\\n    //         uint256, //Side\\r\\n    //         address, //user\\r\\n    //         address, //tokenA\\r\\n    //         uint256, //amountA\\r\\n    //         address, //tokenB\\r\\n    //         uint256, //amountB\\r\\n    //         uint256, //rate -> TokenB/TokenA\\r\\n    //         uint256, //originalAmountA\\r\\n    //         uint256, //originalAmountB\\r\\n    //         bool //feesWaived enabled\\r\\n    //     )\\r\\n    // {\\r\\n    //     _Order memory order = s_orderBook[_token][uint256(side)][index];\\r\\n    //     return (\\r\\n    //         order.id,\\r\\n    //         uint256(order.side),\\r\\n    //         order.user,\\r\\n    //         order.tokenA,\\r\\n    //         order.amountA,\\r\\n    //         order.tokenB,\\r\\n    //         order.amountB,\\r\\n    //         order.rate,\\r\\n    //         order.originalAmountA,\\r\\n    //         order.originalAmountB,\\r\\n    //         order.waiveFees\\r\\n    //     );\\r\\n    // }\\r\\n\\r\\n    function getFilledOrderLength(\\r\\n        address _user,\\r\\n        Side side\\r\\n    ) public view returns (uint256) {\\r\\n        return s_filledOrders[_user][uint256(side)].length;\\r\\n    }\\r\\n\\r\\n    // function getFilledOrder(\\r\\n    //     address _user,\\r\\n    //     Side side,\\r\\n    //     uint256 index\\r\\n    // )\\r\\n    //     public\\r\\n    //     view\\r\\n    //     returns (\\r\\n    //         uint256, //id\\r\\n    //         uint256, //side\\r\\n    //         address, //user\\r\\n    //         address, //tokenA\\r\\n    //         address, //tokenB\\r\\n    //         uint256, //amountFilled\\r\\n    //         uint256, //fillRate\\r\\n    //         uint256, //originalRate\\r\\n    //         uint256, //originalAmountA\\r\\n    //         uint256, //originalAmountB\\r\\n    //         bool, //feesWaived\\r\\n    //         uint256 //feesPaid\\r\\n    //     )\\r\\n    // {\\r\\n    //     _filledOrder memory filledOrder = s_filledOrders[_user][uint256(side)][\\r\\n    //         index\\r\\n    //     ];\\r\\n    //     return (\\r\\n    //         filledOrder.id,\\r\\n    //         uint256(filledOrder.side),\\r\\n    //         filledOrder.user,\\r\\n    //         filledOrder.tokenA,\\r\\n    //         filledOrder.tokenB,\\r\\n    //         filledOrder.amountFilled,\\r\\n    //         filledOrder.fillRate,\\r\\n    //         filledOrder.originalRate,\\r\\n    //         filledOrder.originalAmountA,\\r\\n    //         filledOrder.originalAmountB,\\r\\n    //         filledOrder.feesWaived,\\r\\n    //         filledOrder.feesPaid\\r\\n    //     );\\r\\n    // }\\r\\n\\r\\n    function getOrderFromArray(\\r\\n        address _token,\\r\\n        uint256 side,\\r\\n        uint256 _id\\r\\n    ) public view returns (_Order memory, uint256) {\\r\\n        uint256 i = 0;\\r\\n        _Order[] memory _order = s_orderBook[_token][side];\\r\\n        _Order memory order;\\r\\n        for (i; i < _order.length; i++) {\\r\\n            if (_order[i].id == _id) {\\r\\n                order = _order[i];\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        return (order, i);\\r\\n    }\\r\\n\\r\\n    function orderExists(\\r\\n        uint256 _id,\\r\\n        Side side,\\r\\n        address _token\\r\\n    ) public view returns (bool) {\\r\\n        _Order[] memory orders = s_orderBook[_token][uint256(side)];\\r\\n\\r\\n        for (uint256 i = 0; i < orders.length; i++) {\\r\\n            if (orders[i].id == _id) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function addToken(address _token, uint256 _decimals) public onlyOwner {\\r\\n        require(!isVerifiedToken(_token), \\\"Token already verified\\\");\\r\\n        tokenList.push(_tokenInfo(_token, _decimals));\\r\\n    }\\r\\n\\r\\n    function isVerifiedToken(address _token) public view returns (bool) {\\r\\n        //uint256 size = tokenList.length;\\r\\n\\r\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\r\\n            if (tokenList[i].add == _token) return true;\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function getTokenInfo(address _token) public view returns (uint256) {\\r\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\r\\n            if (tokenList[i].add == _token) {\\r\\n                return tokenList[i].decimals;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\\r\\n        wallet = Wallet(_Walletaddress);\\r\\n    }\\r\\n\\r\\n    function setPriceCheckerAddress(\\r\\n        address _PriceCheckeraddress\\r\\n    ) public onlyOwner {\\r\\n        priceChecker = PriceChecker(_PriceCheckeraddress);\\r\\n    }\\r\\n\\r\\n    function setTradingFees(address _tradingFees) public onlyOwner {\\r\\n        tradingFees = TradingFees(_tradingFees);\\r\\n    }\\r\\n\\r\\n    modifier validOrder(\\r\\n        uint256 _id,\\r\\n        Side side,\\r\\n        address _token\\r\\n    ) {\\r\\n        require(orderExists(_id, side, _token), \\\"Invalid Order ID\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier validToken(address _token) {\\r\\n        require(isVerifiedToken(_token), \\\"Token unavailable in DEX\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf501729978c3f815bbaf8920d1d3173c46363cd8cd17ae52a57d2ea2d9a3e7f8\",\"license\":\"MIT\"},\"contracts/PriceChecker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract PriceChecker is Ownable {\\r\\n    _priceFeed[] public priceFeeds;\\r\\n\\r\\n    struct _priceFeed {\\r\\n        string name;\\r\\n        address token;\\r\\n        AggregatorV3Interface priceFeed;\\r\\n    }\\r\\n\\r\\n    //only using PriceFeeds pegged to USD\\r\\n    function addPriceFeed(\\r\\n        string memory _name,\\r\\n        address _token,\\r\\n        address _address\\r\\n    ) external onlyOwner {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n        bool isAdded = false;\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (\\r\\n                keccak256(abi.encodePacked(_name)) ==\\r\\n                keccak256(abi.encodePacked(pricefeed[i].name))\\r\\n            ) {\\r\\n                isAdded = true;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        require(!isAdded, \\\"Price Feed already added\\\");\\r\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(_address);\\r\\n        priceFeeds.push(_priceFeed(_name, _token, priceFeed));\\r\\n    }\\r\\n\\r\\n    function getPriceFeed(\\r\\n        address _token\\r\\n    ) internal view returns (AggregatorV3Interface priceFeed) {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (_token == pricefeed[i].token) {\\r\\n                return pricefeed[i].priceFeed;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getPrice(address _address) external view returns (uint256) {\\r\\n        AggregatorV3Interface priceFeed = getPriceFeed(_address);\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(answer);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf1e1d97a9c555133c6a90fdc333e79e819ffaffd68d9c9579684b49413dda07c\",\"license\":\"MIT\"},\"contracts/TradingFees.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./PriceChecker.sol\\\";\\r\\nimport \\\"./Wallet.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract TradingFees is Ownable {\\r\\n    //When trading, have an option toggle to waive trading fees or not using deposited aETH\\r\\n    //Users have to first deposit aETH tokens into the Exchange contract to waive, aETH tokens are not for trading\\r\\n    //When a trade order goes through, trading fees of the trade fulfilled  = trade amount x trade price x 0.01,\\r\\n    //contract checks how much aETH is deposited and what is the value of aETH, if sufficient to waive fees fully, deduct balance in deposit\\r\\n    //and waive trading fees\\r\\n\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n\\r\\n    uint256 decimals = 10 ** 18;\\r\\n    address public daiToken =\\r\\n        address(0xBa8DCeD3512925e52FE67b1b5329187589072A55); //based on Aave contract\\r\\n    address public aDAI = address(0xADD98B0342e4094Ec32f3b67Ccfd3242C876ff7a); //based on Aave contract\\r\\n    PriceChecker priceFeed;\\r\\n    Wallet wallet;\\r\\n\\r\\n    constructor(address _priceCheckerAddress) {\\r\\n        priceFeed = PriceChecker(_priceCheckerAddress);\\r\\n    }\\r\\n\\r\\n    function calculateFees(\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        address _refToken\\r\\n    ) public view returns (uint256) {\\r\\n        //Calculated based on TokenB price, require actual price in 18dp\\r\\n        //trading fees is 0.1% of trade = 0.001\\r\\n        //moving up 18dp is 0.001 x 10**18 = 10**14\\r\\n        //have to fetch tokenPrice from PriceFeed\\r\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8dp originally\\r\\n        uint256 value = (\\r\\n            ((_amount.mul(_rate)).div(decimals)).mul(priceOfToken.mul(10 ** 10))\\r\\n        ).div(decimals);\\r\\n        uint256 fees = value.div(10 ** 4);\\r\\n\\r\\n        return fees; //based on USD value\\r\\n    }\\r\\n\\r\\n    //Amount of DAI to deduct from fees\\r\\n    function amountaDAIToDeduct(uint256 _fees) public view returns (uint256) {\\r\\n        uint256 aDAI_Price = priceFeed.getPrice(daiToken); // in 8 decimals initially\\r\\n        uint256 amt = _fees.mul(decimals).div(aDAI_Price.mul(10 ** 10));\\r\\n        return uint256(amt);\\r\\n    }\\r\\n\\r\\n    //Amount of Tokens to deduct from fees\\r\\n    function amountTokensToDeduct(\\r\\n        address _refToken,\\r\\n        uint256 _fees\\r\\n    ) public view returns (uint256) {\\r\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8decimals\\r\\n        uint256 amt = _fees.mul(decimals).div(priceOfToken.mul(10 ** 10));\\r\\n        return uint256(amt);\\r\\n    }\\r\\n\\r\\n    function checkSufficientaDAI(\\r\\n        uint256 _fees,\\r\\n        address _user\\r\\n    ) public view returns (bool) {\\r\\n        uint256 amtDAI = amountaDAIToDeduct(_fees);\\r\\n        uint256 balance = wallet.s_tokens(aDAI, _user);\\r\\n\\r\\n        return balance >= amtDAI;\\r\\n    }\\r\\n\\r\\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\\r\\n        wallet = Wallet(_Walletaddress);\\r\\n    }\\r\\n\\r\\n    function setPriceCheckerAddress(\\r\\n        address _PriceCheckeraddress\\r\\n    ) public onlyOwner {\\r\\n        priceFeed = PriceChecker(_PriceCheckeraddress);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x570e96da947a0e3017464615810b58bca9033d9fd045ff00077aa59313ee1d66\",\"license\":\"MIT\"},\"contracts/Wallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./interface/IERC20.sol\\\";\\r\\nimport \\\"./Exchange.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Wallet is Ownable {\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n\\r\\n    address public immutable Owner;\\r\\n\\r\\n    //For prevention of reentrancy\\r\\n    bool private locked;\\r\\n\\r\\n    address public ethToken = address(0);\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) public s_tokens; //tokenAdress -> msg.sender -> tokenAmt\\r\\n    mapping(address => mapping(address => uint256)) public lockedFunds;\\r\\n\\r\\n    Exchange exchange;\\r\\n    IERC20 token;\\r\\n\\r\\n    event Deposit(address token, address user, uint256 amount, uint256 balance);\\r\\n\\r\\n    /// @notice Event when amount withdrawn exchange\\r\\n    event Withdraw(\\r\\n        address token,\\r\\n        address user,\\r\\n        uint256 amount,\\r\\n        uint256 balance\\r\\n    );\\r\\n\\r\\n    constructor() {\\r\\n        Owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    function depositETH() external payable {\\r\\n        updateBalance(ethToken, msg.sender, msg.value, true);\\r\\n\\r\\n        emit Deposit(\\r\\n            ethToken,\\r\\n            msg.sender,\\r\\n            msg.value,\\r\\n            balanceOf(ethToken, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdrawETH(uint256 _amount) external {\\r\\n        require(\\r\\n            balanceOf(ethToken, msg.sender).sub(\\r\\n                getlockedFunds(msg.sender, ethToken)\\r\\n            ) >= _amount,\\r\\n            \\\"Insufficient balance ETH to withdraw\\\"\\r\\n        );\\r\\n        require(!locked, \\\"Reentrant call detected!\\\");\\r\\n        locked = true;\\r\\n        updateBalance(ethToken, msg.sender, _amount, false);\\r\\n        locked = false;\\r\\n        (bool success, ) = msg.sender.call{value: _amount}(\\\"\\\");\\r\\n        require(success, \\\"failed to send amount\\\");\\r\\n\\r\\n        emit Withdraw(\\r\\n            ethToken,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(ethToken, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    //from and transferFrom is from ERC20 contract\\r\\n    //_token should be an ERC20 token\\r\\n    function depositToken(\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        uint256 _decimals\\r\\n    ) external {\\r\\n        require(_token != ethToken);\\r\\n        require(\\r\\n            exchange.isVerifiedToken(_token),\\r\\n            \\\"Token not verified on Exchange\\\"\\r\\n        );\\r\\n        //need to add a check to prove that it is an ERC20 token\\r\\n        token = IERC20(_token);\\r\\n\\r\\n        //Requires approval first\\r\\n        require(\\r\\n            token.transferFrom(msg.sender, address(this), _amount),\\r\\n            \\\"No Approval yet\\\"\\r\\n        );\\r\\n        uint256 decimals = 18;\\r\\n        if (_decimals == 18) {\\r\\n            updateBalance(_token, msg.sender, _amount, true);\\r\\n        } else\\r\\n            updateBalance(\\r\\n                _token,\\r\\n                msg.sender,\\r\\n                _amount.mul(10 ** decimals.sub(_decimals)),\\r\\n                true\\r\\n            );\\r\\n\\r\\n        emit Deposit(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(_token, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdrawToken(\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        uint256 _decimals\\r\\n    ) external {\\r\\n        require(_token != ethToken);\\r\\n        require(\\r\\n            exchange.isVerifiedToken(_token),\\r\\n            \\\"Token not verified on Exchange\\\"\\r\\n        );\\r\\n\\r\\n        require(\\r\\n            balanceOf(_token, msg.sender).sub(\\r\\n                getlockedFunds(msg.sender, _token)\\r\\n            ) >= _amount,\\r\\n            \\\"Insufficient Tokens to withdraw\\\"\\r\\n        );\\r\\n        require(!locked, \\\"Reentrant call detected!\\\");\\r\\n        locked = true;\\r\\n\\r\\n        token = IERC20(_token);\\r\\n        uint256 decimals = 18;\\r\\n        if (_decimals == 18) {\\r\\n            updateBalance(_token, msg.sender, _amount, false);\\r\\n            require(token.transfer(msg.sender, _amount));\\r\\n        } else {\\r\\n            updateBalance(\\r\\n                _token,\\r\\n                msg.sender,\\r\\n                _amount.mul(10 ** decimals.sub(_decimals)),\\r\\n                false\\r\\n            );\\r\\n            require(\\r\\n                token.transfer(\\r\\n                    msg.sender,\\r\\n                    _amount.div(10 ** decimals.sub(_decimals))\\r\\n                )\\r\\n            );\\r\\n        }\\r\\n\\r\\n        locked = false;\\r\\n        emit Withdraw(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(_token, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getlockedFunds(\\r\\n        address _user,\\r\\n        address _token\\r\\n    ) public view returns (uint256) {\\r\\n        return lockedFunds[_user][_token];\\r\\n    }\\r\\n\\r\\n    function updateLockedFunds(\\r\\n        address _user,\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) public isAuthorised {\\r\\n        if (isAdd) {\\r\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].add(\\r\\n                _amount\\r\\n            );\\r\\n        } else if (!isAdd) {\\r\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].sub(\\r\\n                _amount\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //balance of specific tokens in the dex owned by specific user\\r\\n    function balanceOf(\\r\\n        address _token,\\r\\n        address _user\\r\\n    ) public view returns (uint256) {\\r\\n        return s_tokens[_token][_user];\\r\\n    }\\r\\n\\r\\n    function updateBalance(\\r\\n        address _token,\\r\\n        address _user,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) public isAuthorised {\\r\\n        if (isAdd) {\\r\\n            s_tokens[_token][_user] = s_tokens[_token][_user].add(_amount);\\r\\n        } else if (!isAdd) {\\r\\n            s_tokens[_token][_user] = s_tokens[_token][_user].sub(_amount);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function updateExchangeAddress(address _exchangeAddress) public onlyOwner {\\r\\n        exchange = Exchange(_exchangeAddress);\\r\\n    }\\r\\n\\r\\n    modifier isAuthorised() {\\r\\n        require(\\r\\n            msg.sender == address(this) || msg.sender == address(exchange),\\r\\n            \\\"Unauthorised Function Call\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf57179a3c0d338a6d94c7dadc3ee6873838e3af70c690754689b9c1c00aea67c\",\"license\":\"MIT\"},\"contracts/interface/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IERC20 {\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256 remaining);\\r\\n\\r\\n    function approve(\\r\\n        address spender,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function balanceOf(address owner) external view returns (uint256 balance);\\r\\n\\r\\n    function decimals() external view returns (uint8 decimalPlaces);\\r\\n\\r\\n    function decreaseApproval(\\r\\n        address spender,\\r\\n        uint256 subtractedValue\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function increaseApproval(\\r\\n        address spender,\\r\\n        uint256 addedValue\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function name() external view returns (string memory tokenName);\\r\\n\\r\\n    function symbol() external view returns (string memory tokenSymbol);\\r\\n\\r\\n    function totalSupply() external view returns (uint256 totalTokensIssued);\\r\\n\\r\\n    function transfer(\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n}\\r\\n\",\"keccak256\":\"0xef48d46afc4efefcd6d7f1799f25aee5d8fcd588e2aaa80a84af726128194326\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":53,"contract":"contracts/Wallet.sol:Wallet","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":2651,"contract":"contracts/Wallet.sol:Wallet","label":"locked","offset":20,"slot":"0","type":"t_bool"},{"astId":2657,"contract":"contracts/Wallet.sol:Wallet","label":"ethToken","offset":0,"slot":"1","type":"t_address"},{"astId":2663,"contract":"contracts/Wallet.sol:Wallet","label":"s_tokens","offset":0,"slot":"2","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":2669,"contract":"contracts/Wallet.sol:Wallet","label":"lockedFunds","offset":0,"slot":"3","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":2672,"contract":"contracts/Wallet.sol:Wallet","label":"exchange","offset":0,"slot":"4","type":"t_contract(Exchange)2236"},{"astId":2675,"contract":"contracts/Wallet.sol:Wallet","label":"token","offset":0,"slot":"5","type":"t_contract(IERC20)3285"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(Exchange)2236":{"encoding":"inplace","label":"contract Exchange","numberOfBytes":"20"},"t_contract(IERC20)3285":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"events":{"Withdraw(address,address,uint256,uint256)":{"notice":"Event when amount withdrawn exchange"}},"kind":"user","methods":{},"version":1}}},"contracts/interface/IERC20.sol":{"IERC20":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"remaining","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"decimalPlaces","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseApproval","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseApproval","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"tokenName","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"tokenSymbol","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"totalTokensIssued","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseApproval(address,uint256)":"66188463","increaseApproval(address,uint256)":"d73dd623","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimalPlaces\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokensIssued\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IERC20 {\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256 remaining);\\r\\n\\r\\n    function approve(\\r\\n        address spender,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function balanceOf(address owner) external view returns (uint256 balance);\\r\\n\\r\\n    function decimals() external view returns (uint8 decimalPlaces);\\r\\n\\r\\n    function decreaseApproval(\\r\\n        address spender,\\r\\n        uint256 subtractedValue\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function increaseApproval(\\r\\n        address spender,\\r\\n        uint256 addedValue\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function name() external view returns (string memory tokenName);\\r\\n\\r\\n    function symbol() external view returns (string memory tokenSymbol);\\r\\n\\r\\n    function totalSupply() external view returns (uint256 totalTokensIssued);\\r\\n\\r\\n    function transfer(\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n}\\r\\n\",\"keccak256\":\"0xef48d46afc4efefcd6d7f1799f25aee5d8fcd588e2aaa80a84af726128194326\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}
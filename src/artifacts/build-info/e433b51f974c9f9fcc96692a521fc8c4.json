{"id":"e433b51f974c9f9fcc96692a521fc8c4","_format":"hh-sol-build-info-1","solcVersion":"0.8.7","solcLongVersion":"0.8.7+commit.e28d00a7","input":{"language":"Solidity","sources":{"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\nlibrary DataTypes {\n  struct ReserveData {\n    //stores the reserve configuration\n    ReserveConfigurationMap configuration;\n    //the liquidity index. Expressed in ray\n    uint128 liquidityIndex;\n    //the current supply rate. Expressed in ray\n    uint128 currentLiquidityRate;\n    //variable borrow index. Expressed in ray\n    uint128 variableBorrowIndex;\n    //the current variable borrow rate. Expressed in ray\n    uint128 currentVariableBorrowRate;\n    //the current stable borrow rate. Expressed in ray\n    uint128 currentStableBorrowRate;\n    //timestamp of last update\n    uint40 lastUpdateTimestamp;\n    //the id of the reserve. Represents the position in the list of the active reserves\n    uint16 id;\n    //aToken address\n    address aTokenAddress;\n    //stableDebtToken address\n    address stableDebtTokenAddress;\n    //variableDebtToken address\n    address variableDebtTokenAddress;\n    //address of the interest rate strategy\n    address interestRateStrategyAddress;\n    //the current treasury balance, scaled\n    uint128 accruedToTreasury;\n    //the outstanding unbacked aTokens minted through the bridging feature\n    uint128 unbacked;\n    //the outstanding debt borrowed against this asset in isolation mode\n    uint128 isolationModeTotalDebt;\n  }\n\n  struct ReserveConfigurationMap {\n    //bit 0-15: LTV\n    //bit 16-31: Liq. threshold\n    //bit 32-47: Liq. bonus\n    //bit 48-55: Decimals\n    //bit 56: reserve is active\n    //bit 57: reserve is frozen\n    //bit 58: borrowing is enabled\n    //bit 59: stable rate borrowing enabled\n    //bit 60: asset is paused\n    //bit 61: borrowing in isolation mode is enabled\n    //bit 62-63: reserved\n    //bit 64-79: reserve factor\n    //bit 80-115 borrow cap in whole tokens, borrowCap == 0 => no cap\n    //bit 116-151 supply cap in whole tokens, supplyCap == 0 => no cap\n    //bit 152-167 liquidation protocol fee\n    //bit 168-175 eMode category\n    //bit 176-211 unbacked mint cap in whole tokens, unbackedMintCap == 0 => minting disabled\n    //bit 212-251 debt ceiling for isolation mode with (ReserveConfiguration::DEBT_CEILING_DECIMALS) decimals\n    //bit 252-255 unused\n\n    uint256 data;\n  }\n\n  struct UserConfigurationMap {\n    /**\n     * @dev Bitmap of the users collaterals and borrows. It is divided in pairs of bits, one pair per asset.\n     * The first bit indicates if an asset is used as collateral by the user, the second whether an\n     * asset is borrowed by the user.\n     */\n    uint256 data;\n  }\n\n  struct EModeCategory {\n    // each eMode category has a custom ltv and liquidation threshold\n    uint16 ltv;\n    uint16 liquidationThreshold;\n    uint16 liquidationBonus;\n    // each eMode category may or may not have a custom oracle to override the individual assets price oracles\n    address priceSource;\n    string label;\n  }\n\n  enum InterestRateMode {\n    NONE,\n    STABLE,\n    VARIABLE\n  }\n\n  struct ReserveCache {\n    uint256 currScaledVariableDebt;\n    uint256 nextScaledVariableDebt;\n    uint256 currPrincipalStableDebt;\n    uint256 currAvgStableBorrowRate;\n    uint256 currTotalStableDebt;\n    uint256 nextAvgStableBorrowRate;\n    uint256 nextTotalStableDebt;\n    uint256 currLiquidityIndex;\n    uint256 nextLiquidityIndex;\n    uint256 currVariableBorrowIndex;\n    uint256 nextVariableBorrowIndex;\n    uint256 currLiquidityRate;\n    uint256 currVariableBorrowRate;\n    uint256 reserveFactor;\n    ReserveConfigurationMap reserveConfiguration;\n    address aTokenAddress;\n    address stableDebtTokenAddress;\n    address variableDebtTokenAddress;\n    uint40 reserveLastUpdateTimestamp;\n    uint40 stableDebtLastUpdateTimestamp;\n  }\n\n  struct ExecuteLiquidationCallParams {\n    uint256 reservesCount;\n    uint256 debtToCover;\n    address collateralAsset;\n    address debtAsset;\n    address user;\n    bool receiveAToken;\n    address priceOracle;\n    uint8 userEModeCategory;\n    address priceOracleSentinel;\n  }\n\n  struct ExecuteSupplyParams {\n    address asset;\n    uint256 amount;\n    address onBehalfOf;\n    uint16 referralCode;\n  }\n\n  struct ExecuteBorrowParams {\n    address asset;\n    address user;\n    address onBehalfOf;\n    uint256 amount;\n    InterestRateMode interestRateMode;\n    uint16 referralCode;\n    bool releaseUnderlying;\n    uint256 maxStableRateBorrowSizePercent;\n    uint256 reservesCount;\n    address oracle;\n    uint8 userEModeCategory;\n    address priceOracleSentinel;\n  }\n\n  struct ExecuteRepayParams {\n    address asset;\n    uint256 amount;\n    InterestRateMode interestRateMode;\n    address onBehalfOf;\n    bool useATokens;\n  }\n\n  struct ExecuteWithdrawParams {\n    address asset;\n    uint256 amount;\n    address to;\n    uint256 reservesCount;\n    address oracle;\n    uint8 userEModeCategory;\n  }\n\n  struct ExecuteSetUserEModeParams {\n    uint256 reservesCount;\n    address oracle;\n    uint8 categoryId;\n  }\n\n  struct FinalizeTransferParams {\n    address asset;\n    address from;\n    address to;\n    uint256 amount;\n    uint256 balanceFromBefore;\n    uint256 balanceToBefore;\n    uint256 reservesCount;\n    address oracle;\n    uint8 fromEModeCategory;\n  }\n\n  struct FlashloanParams {\n    address receiverAddress;\n    address[] assets;\n    uint256[] amounts;\n    uint256[] interestRateModes;\n    address onBehalfOf;\n    bytes params;\n    uint16 referralCode;\n    uint256 flashLoanPremiumToProtocol;\n    uint256 flashLoanPremiumTotal;\n    uint256 maxStableRateBorrowSizePercent;\n    uint256 reservesCount;\n    address addressesProvider;\n    uint8 userEModeCategory;\n    bool isAuthorizedFlashBorrower;\n  }\n\n  struct FlashloanSimpleParams {\n    address receiverAddress;\n    address asset;\n    uint256 amount;\n    bytes params;\n    uint16 referralCode;\n    uint256 flashLoanPremiumToProtocol;\n    uint256 flashLoanPremiumTotal;\n  }\n\n  struct FlashLoanRepaymentParams {\n    uint256 amount;\n    uint256 totalPremium;\n    uint256 flashLoanPremiumToProtocol;\n    address asset;\n    address receiverAddress;\n    uint16 referralCode;\n  }\n\n  struct CalculateUserAccountDataParams {\n    UserConfigurationMap userConfig;\n    uint256 reservesCount;\n    address user;\n    address oracle;\n    uint8 userEModeCategory;\n  }\n\n  struct ValidateBorrowParams {\n    ReserveCache reserveCache;\n    UserConfigurationMap userConfig;\n    address asset;\n    address userAddress;\n    uint256 amount;\n    InterestRateMode interestRateMode;\n    uint256 maxStableLoanPercent;\n    uint256 reservesCount;\n    address oracle;\n    uint8 userEModeCategory;\n    address priceOracleSentinel;\n    bool isolationModeActive;\n    address isolationModeCollateralAddress;\n    uint256 isolationModeDebtCeiling;\n  }\n\n  struct ValidateLiquidationCallParams {\n    ReserveCache debtReserveCache;\n    uint256 totalDebt;\n    uint256 healthFactor;\n    address priceOracleSentinel;\n  }\n\n  struct CalculateInterestRatesParams {\n    uint256 unbacked;\n    uint256 liquidityAdded;\n    uint256 liquidityTaken;\n    uint256 totalStableDebt;\n    uint256 totalVariableDebt;\n    uint256 averageStableBorrowRate;\n    uint256 reserveFactor;\n    address reserve;\n    address aToken;\n  }\n\n  struct InitReserveParams {\n    address asset;\n    address aTokenAddress;\n    address stableDebtAddress;\n    address variableDebtAddress;\n    address interestRateStrategyAddress;\n    uint16 reservesCount;\n    uint16 maxNumberReserves;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"contracts/Exchange.sol":{"content":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./PriceChecker.sol\";\r\nimport \"./TradingFees.sol\";\r\n\r\n/// @notice Library SafeMath used to prevent overflows and underflows\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract Exchange is Ownable {\r\n    using SafeMath for uint256; //for prevention of integer overflow\r\n    PriceChecker priceChecker;\r\n    TradingFees tradingFees;\r\n    Wallet wallet;\r\n\r\n    uint256 decimals = 10 ** 18;\r\n    address public ethToken = address(0);\r\n    address public aETH = address(0x22404B0e2a7067068AcdaDd8f9D586F834cCe2c5);\r\n\r\n    //Token Address List available in DEX\r\n    _tokenInfo[] public tokenList;\r\n\r\n    //s_orderBook mappping: tokenAddress -> Side -> Order Array\r\n    mapping(address => mapping(uint256 => _Order[])) public s_orderBook;\r\n\r\n    mapping(address => mapping(uint256 => _filledOrder[]))\r\n        public s_filledOrders;\r\n\r\n    uint256 public s_orderId = 0;\r\n    bool private s_isManual = true;\r\n\r\n    struct _tokenInfo {\r\n        address add;\r\n        uint256 decimals;\r\n    }\r\n\r\n    struct _fillOrderValues {\r\n        uint256 rate;\r\n        uint256 amount;\r\n    }\r\n\r\n    //Structs representing an order that has unique id, user and amounts to give and get between two tokens to exchange\r\n    struct _Order {\r\n        uint256 id;\r\n        Side side;\r\n        address user;\r\n        address tokenA;\r\n        uint256 amountA;\r\n        address tokenB;\r\n        uint256 amountB;\r\n        uint256 rate; // TokenB/TokenA = price in terms of TokenB\r\n        uint256 originalAmountA;\r\n        uint256 originalAmountB;\r\n        bool waiveFees;\r\n    }\r\n\r\n    //For any order that is filled even if it is partially filled or fully filled\r\n    struct _filledOrder {\r\n        uint256 id;\r\n        Side side;\r\n        address user;\r\n        address tokenA;\r\n        address tokenB;\r\n        uint256 amountFilled;\r\n        uint256 fillRate;\r\n        uint256 originalRate;\r\n        uint256 originalAmountA;\r\n        uint256 originalAmountB;\r\n        bool feesWaived;\r\n        uint256 feesPaid; //in terms of ETH\r\n    }\r\n\r\n    enum Side {\r\n        BUY,\r\n        SELL\r\n    }\r\n\r\n    //add events\r\n    /// @notice Event when an order is placed on an exchange\r\n    event Order(\r\n        uint256 id,\r\n        Side side,\r\n        address user,\r\n        address tokenA,\r\n        uint256 amountA,\r\n        address tokenB,\r\n        uint256 amountB,\r\n        uint256 rate,\r\n        uint256 originalAmountA,\r\n        uint256 originalAmountB,\r\n        bool waiveFees\r\n    );\r\n\r\n    /// @notice Event when an order is cancelled\r\n    event Cancel(\r\n        uint256 id,\r\n        Side side,\r\n        address user,\r\n        address tokenA,\r\n        uint256 amountA,\r\n        address tokenB,\r\n        uint256 amountB,\r\n        uint256 rate,\r\n        uint256 originalAmountA,\r\n        uint256 originalAmountB,\r\n        bool waiveFees\r\n    );\r\n\r\n    event fillBuyOrder(\r\n        _Order remainingOrder,\r\n        uint256 amountBought,\r\n        uint256 fillBuyRate,\r\n        bool feesWaived,\r\n        uint256 feesPaid\r\n    );\r\n\r\n    event fillSellOrder(\r\n        _Order remainingOrder,\r\n        uint256 amountSold,\r\n        uint256 fillSellRate,\r\n        bool feesWaived,\r\n        uint256 feesPaid\r\n    );\r\n\r\n    function createLimitBuyOrder(\r\n        // TokenA/TokenB\r\n        address _tokenA,\r\n        uint256 _amountA,\r\n        address _tokenB,\r\n        uint256 _amountB,\r\n        uint256 _rate,\r\n        bool _waiveFees\r\n    ) external validToken(_tokenA) validToken(_tokenB) {\r\n        //Amount user has deposited in the DEX must be >= value he wants to buy\r\n        require(\r\n            wallet.balanceOf(_tokenB, msg.sender).sub(\r\n                wallet.getlockedFunds(msg.sender, _tokenB)\r\n            ) >= _amountB,\r\n            \"Insufficient Funds\"\r\n        );\r\n\r\n        wallet.updateLockedFunds(msg.sender, _tokenB, _amountB, true);\r\n\r\n        s_orderBook[_tokenA][uint256(Side.BUY)].push(\r\n            _Order(\r\n                s_orderId,\r\n                Side.BUY,\r\n                msg.sender,\r\n                _tokenA,\r\n                _amountA,\r\n                _tokenB,\r\n                _amountB,\r\n                _rate,\r\n                _amountA,\r\n                _amountB,\r\n                _waiveFees\r\n            )\r\n        );\r\n\r\n        emit Order(\r\n            s_orderId,\r\n            Side.BUY,\r\n            msg.sender,\r\n            _tokenA,\r\n            _amountA,\r\n            _tokenB,\r\n            _amountB,\r\n            _rate,\r\n            _amountA,\r\n            _amountB,\r\n            _waiveFees\r\n        );\r\n\r\n        s_orderId = s_orderId.add(1);\r\n    }\r\n\r\n    function createLimitSellOrder(\r\n        address _tokenA,\r\n        uint256 _amountA,\r\n        address _tokenB,\r\n        uint256 _amountB,\r\n        uint256 _rate,\r\n        bool _waiveFees\r\n    ) external validToken(_tokenA) validToken(_tokenB) {\r\n        //Amount of tokens user deposit in DEX must be >= the amount of tokens they want to sell\r\n        require(\r\n            wallet.balanceOf(_tokenA, msg.sender).sub(\r\n                wallet.getlockedFunds(msg.sender, _tokenA)\r\n            ) >= _amountA,\r\n            \"Insufficient Funds\"\r\n        );\r\n\r\n        //Lock the funds (tokens) in the wallet\r\n        wallet.updateLockedFunds(msg.sender, _tokenA, _amountA, true);\r\n\r\n        s_orderBook[_tokenA][uint256(Side.SELL)].push(\r\n            _Order(\r\n                s_orderId,\r\n                Side.SELL,\r\n                msg.sender,\r\n                _tokenA,\r\n                _amountA,\r\n                _tokenB,\r\n                _amountB,\r\n                _rate,\r\n                _amountA,\r\n                _amountB,\r\n                _waiveFees\r\n            )\r\n        );\r\n\r\n        emit Order(\r\n            s_orderId,\r\n            Side.SELL,\r\n            msg.sender,\r\n            _tokenA,\r\n            _amountA,\r\n            _tokenB,\r\n            _amountB,\r\n            _rate,\r\n            _amountA,\r\n            _amountB,\r\n            _waiveFees\r\n        );\r\n\r\n        s_orderId = s_orderId.add(1);\r\n    }\r\n\r\n    function cancelOrder(\r\n        Side side,\r\n        uint256 _id,\r\n        address _token\r\n    ) public validOrder(_id, side, _token) validToken(_token) {\r\n        _Order[] storage _order = s_orderBook[_token][uint256(side)];\r\n        uint256 size = _order.length;\r\n        _Order memory order;\r\n\r\n        uint256 index;\r\n        for (uint256 i = 0; i < size; i++) {\r\n            if (_order[i].id == _id) {\r\n                index = i;\r\n                order = _order[i];\r\n                break;\r\n            }\r\n        }\r\n\r\n        //Manual cancellation of orders\r\n        if (s_isManual) {\r\n            require(msg.sender == order.user, \"Not Owner\");\r\n\r\n            //Unlock funds\r\n            if (side == Side.BUY) {\r\n                wallet.updateLockedFunds(\r\n                    msg.sender,\r\n                    order.tokenB,\r\n                    order.amountB,\r\n                    false\r\n                );\r\n            } else if (side == Side.SELL) {\r\n                wallet.updateLockedFunds(\r\n                    msg.sender,\r\n                    order.tokenA,\r\n                    order.amountA,\r\n                    false\r\n                );\r\n            }\r\n        }\r\n\r\n        for (uint256 j = index; j < size - 1; j++) {\r\n            _order[j] = _order[j.add(1)];\r\n        }\r\n        delete _order[size.sub(1)];\r\n        _order.pop();\r\n\r\n        s_orderBook[_token][uint256(side)] = _order;\r\n\r\n        emit Cancel(\r\n            _id,\r\n            order.side,\r\n            order.user,\r\n            order.tokenA,\r\n            order.amountA,\r\n            order.tokenB,\r\n            order.amountB,\r\n            order.rate,\r\n            order.originalAmountA,\r\n            order.originalAmountB,\r\n            order.waiveFees\r\n        );\r\n    }\r\n\r\n    function fillOrder(\r\n        Side side,\r\n        uint256 _id,\r\n        address _token,\r\n        _fillOrderValues memory a\r\n    ) internal validOrder(_id, side, _token) validToken(_token) {\r\n        uint256 _side = uint256(side);\r\n        (_Order memory order, uint256 index) = getOrderFromArray(\r\n            _token,\r\n            _side,\r\n            _id\r\n        );\r\n\r\n        require(order.amountA >= a.amount, \"Invalid Order Amount to fill\");\r\n\r\n        order.amountA = order.amountA.sub(a.amount);\r\n        order.amountB = order.amountB.sub(\r\n            order.rate.mul(a.amount).div(decimals)\r\n        );\r\n        s_orderBook[_token][_side][index].amountA = order.amountA;\r\n        s_orderBook[_token][_side][index].amountB = order.amountB;\r\n\r\n        uint256 fees = tradingFees.calculateFees(\r\n            a.amount,\r\n            a.rate,\r\n            order.tokenB\r\n        ); //fees in ETH\r\n        bool feesWaived = order.waiveFees &&\r\n            tradingFees.checkSufficientaETH(fees, order.user);\r\n\r\n        if (side == Side.BUY) {\r\n            fillBuyOrders(order, a.amount, a.rate, feesWaived, fees);\r\n            emit fillBuyOrder(order, a.amount, a.rate, feesWaived, fees);\r\n        } else if (side == Side.SELL) {\r\n            fillSellOrders(order, a.amount, a.rate, feesWaived, fees);\r\n            emit fillSellOrder(order, a.amount, a.rate, feesWaived, fees);\r\n        }\r\n\r\n        if (order.amountA == 0) {\r\n            s_isManual = false;\r\n            cancelOrder(side, order.id, order.tokenA); //remove filled orders\r\n            s_isManual = true;\r\n        }\r\n    }\r\n\r\n    function fillBuyOrders(\r\n        _Order memory order,\r\n        uint256 _amount,\r\n        uint256 _rate,\r\n        bool feesWaived,\r\n        uint256 fees\r\n    ) internal {\r\n        if (feesWaived) {\r\n            //Deduct aETH\r\n            wallet.updateBalance(aETH, order.user, fees, false);\r\n            //Credit Bought tokens\r\n            wallet.updateBalance(order.tokenA, order.user, _amount, true);\r\n        } else {\r\n            uint256 amountToDeduct = tradingFees.amountToDeduct(\r\n                order.tokenA,\r\n                fees\r\n            );\r\n            //Credit Bought tokens after minusing fees\r\n            wallet.updateBalance(\r\n                order.tokenA,\r\n                order.user,\r\n                _amount.sub(amountToDeduct),\r\n                true\r\n            );\r\n        }\r\n\r\n        //Original Locked Funds unlocked\r\n        wallet.updateLockedFunds(\r\n            order.user,\r\n            order.tokenB,\r\n            (order.rate.mul(_amount)).div(decimals),\r\n            false\r\n        );\r\n\r\n        //buyer update\r\n        //Buyer balance deducted from what he paid\r\n        wallet.updateBalance(\r\n            order.tokenB,\r\n            order.user,\r\n            (_rate.mul(_amount)).div(decimals),\r\n            false\r\n        );\r\n\r\n        s_filledOrders[order.user][0].push(\r\n            _filledOrder(\r\n                order.id,\r\n                order.side,\r\n                order.user,\r\n                order.tokenA,\r\n                order.tokenB,\r\n                _amount,\r\n                _rate,\r\n                order.rate,\r\n                order.originalAmountA,\r\n                order.originalAmountB,\r\n                feesWaived,\r\n                fees\r\n            )\r\n        );\r\n    }\r\n\r\n    function fillSellOrders(\r\n        _Order memory order,\r\n        uint256 _amount,\r\n        uint256 _rate,\r\n        bool feesWaived,\r\n        uint256 fees\r\n    ) internal {\r\n        if (feesWaived) {\r\n            //Deduct aETH\r\n            wallet.updateBalance(aETH, order.user, fees, false);\r\n            //Credit Earned tokens\r\n            wallet.updateBalance(\r\n                order.tokenB,\r\n                order.user,\r\n                (_rate.mul(_amount)).div(decimals),\r\n                true\r\n            );\r\n        } else {\r\n            uint256 amountToDeduct = tradingFees.amountToDeduct(\r\n                order.tokenB,\r\n                fees\r\n            );\r\n            //Credit Earned tokens after minusing fees\r\n            wallet.updateBalance(\r\n                order.tokenB,\r\n                order.user,\r\n                (_rate.mul(_amount)).div(decimals).sub(amountToDeduct),\r\n                true\r\n            );\r\n        }\r\n\r\n        wallet.updateLockedFunds(order.user, order.tokenA, _amount, false);\r\n        //seller update\r\n        wallet.updateBalance(order.tokenA, order.user, _amount, false);\r\n    }\r\n\r\n    function matchOrders(\r\n        address _token,\r\n        uint256 _id,\r\n        Side side\r\n    ) internal validOrder(_id, side, _token) validToken(_token) {\r\n        uint256 saleTokenAmt;\r\n\r\n        if (side == Side.BUY) {\r\n            //Retrieve sell order to match\r\n            _Order[] memory _sellOrder = s_orderBook[_token][1];\r\n            for (uint256 i = 0; i < _sellOrder.length; i++) {\r\n                //Retrieve buy order to be filled\r\n                (_Order memory buyOrderToFill, ) = getOrderFromArray(\r\n                    _token,\r\n                    uint8(side),\r\n                    _id\r\n                );\r\n                //sell order hit buyer's limit price & tokenB matches\r\n                if (\r\n                    _sellOrder[i].rate <= buyOrderToFill.rate &&\r\n                    buyOrderToFill.tokenB == _sellOrder[i].tokenB\r\n                ) {\r\n                    _Order memory sellOrder = _sellOrder[i];\r\n                    //if buyer's amount to buy > seller's amount to sell\r\n                    if (buyOrderToFill.amountA > sellOrder.amountA) {\r\n                        saleTokenAmt = sellOrder.amountA;\r\n                    }\r\n                    //if seller's amount to sell >= buyer's amount to buy\r\n                    else if (buyOrderToFill.amountA <= sellOrder.amountA) {\r\n                        saleTokenAmt = buyOrderToFill.amountA;\r\n                    }\r\n\r\n                    //Verify current balance\r\n                    require(\r\n                        wallet.balanceOf(\r\n                            buyOrderToFill.tokenB,\r\n                            buyOrderToFill.user\r\n                        ) >= (saleTokenAmt.mul(sellOrder.rate)).div(decimals),\r\n                        \"Insufficient Buyer Token Balance\"\r\n                    );\r\n                    require(\r\n                        wallet.balanceOf(_token, sellOrder.user) >=\r\n                            saleTokenAmt,\r\n                        \"Insufficient Seller Token Balance\"\r\n                    );\r\n\r\n                    //update orders\r\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\r\n                        sellOrder.rate,\r\n                        saleTokenAmt\r\n                    );\r\n                    fillOrder(Side.BUY, _id, _token, fillOrderValues);\r\n                    fillOrder(Side.SELL, sellOrder.id, _token, fillOrderValues);\r\n                }\r\n\r\n                bool orderExist = orderExists(_id, side, _token);\r\n                if (!orderExist) break;\r\n            }\r\n        } else if (side == Side.SELL) {\r\n            //Retrieve buy order to match\r\n            _Order[] memory _buyOrder = s_orderBook[_token][0];\r\n            for (uint256 i = 0; i < _buyOrder.length; i++) {\r\n                //Retrieve sell order to be filled\r\n                (_Order memory sellOrderToFill, ) = getOrderFromArray(\r\n                    _token,\r\n                    1,\r\n                    _id\r\n                );\r\n                //sell order hit buyer's limit price\r\n                if (\r\n                    _buyOrder[i].rate >= sellOrderToFill.rate &&\r\n                    _buyOrder[i].tokenB == sellOrderToFill.tokenB\r\n                ) {\r\n                    _Order memory order = _buyOrder[i];\r\n\r\n                    //if seller's amount to sell > buyer's amount to buy\r\n                    if (sellOrderToFill.amountA > order.amountA) {\r\n                        saleTokenAmt = order.amountA;\r\n                    }\r\n                    //if buyer's amount to buy > seller's amount to sell\r\n                    else if (sellOrderToFill.amountA <= order.amountA) {\r\n                        saleTokenAmt = sellOrderToFill.amountA;\r\n                    }\r\n                    //Verify current balance\r\n                    require(\r\n                        wallet.balanceOf(_token, sellOrderToFill.user) >=\r\n                            saleTokenAmt,\r\n                        \"Insufficient Seller Token Balance\"\r\n                    );\r\n                    require(\r\n                        wallet.balanceOf(order.tokenB, order.user) >=\r\n                            (saleTokenAmt.mul(order.rate)).div(decimals),\r\n                        \"Insufficient Buyer Token Balance\"\r\n                    );\r\n\r\n                    //update orders\r\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\r\n                        order.rate,\r\n                        saleTokenAmt\r\n                    );\r\n                    fillOrder(Side.SELL, _id, _token, fillOrderValues);\r\n                    fillOrder(Side.BUY, order.id, _token, fillOrderValues);\r\n                }\r\n                bool orderExist = orderExists(_id, side, _token);\r\n                if (!orderExist) break;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getOrderLength(\r\n        Side side,\r\n        address _token\r\n    ) public view returns (uint256) {\r\n        return s_orderBook[_token][uint256(side)].length;\r\n    }\r\n\r\n    // function getOrder(\r\n    //     address _token,\r\n    //     uint256 index,\r\n    //     Side side\r\n    // )\r\n    //     public\r\n    //     view\r\n    //     returns (\r\n    //         uint256, //id\r\n    //         uint256, //Side\r\n    //         address, //user\r\n    //         address, //tokenA\r\n    //         uint256, //amountA\r\n    //         address, //tokenB\r\n    //         uint256, //amountB\r\n    //         uint256, //rate -> TokenB/TokenA\r\n    //         uint256, //originalAmountA\r\n    //         uint256, //originalAmountB\r\n    //         bool //feesWaived enabled\r\n    //     )\r\n    // {\r\n    //     _Order memory order = s_orderBook[_token][uint256(side)][index];\r\n    //     return (\r\n    //         order.id,\r\n    //         uint256(order.side),\r\n    //         order.user,\r\n    //         order.tokenA,\r\n    //         order.amountA,\r\n    //         order.tokenB,\r\n    //         order.amountB,\r\n    //         order.rate,\r\n    //         order.originalAmountA,\r\n    //         order.originalAmountB,\r\n    //         order.waiveFees\r\n    //     );\r\n    // }\r\n\r\n    function getFilledOrderLength(\r\n        address _user,\r\n        Side side\r\n    ) public view returns (uint256) {\r\n        return s_filledOrders[_user][uint256(side)].length;\r\n    }\r\n\r\n    // function getFilledOrder(\r\n    //     address _user,\r\n    //     Side side,\r\n    //     uint256 index\r\n    // )\r\n    //     public\r\n    //     view\r\n    //     returns (\r\n    //         uint256, //id\r\n    //         uint256, //side\r\n    //         address, //user\r\n    //         address, //tokenA\r\n    //         address, //tokenB\r\n    //         uint256, //amountFilled\r\n    //         uint256, //fillRate\r\n    //         uint256, //originalRate\r\n    //         uint256, //originalAmountA\r\n    //         uint256, //originalAmountB\r\n    //         bool, //feesWaived\r\n    //         uint256 //feesPaid\r\n    //     )\r\n    // {\r\n    //     _filledOrder memory filledOrder = s_filledOrders[_user][uint256(side)][\r\n    //         index\r\n    //     ];\r\n    //     return (\r\n    //         filledOrder.id,\r\n    //         uint256(filledOrder.side),\r\n    //         filledOrder.user,\r\n    //         filledOrder.tokenA,\r\n    //         filledOrder.tokenB,\r\n    //         filledOrder.amountFilled,\r\n    //         filledOrder.fillRate,\r\n    //         filledOrder.originalRate,\r\n    //         filledOrder.originalAmountA,\r\n    //         filledOrder.originalAmountB,\r\n    //         filledOrder.feesWaived,\r\n    //         filledOrder.feesPaid\r\n    //     );\r\n    // }\r\n\r\n    function getOrderFromArray(\r\n        address _token,\r\n        uint256 side,\r\n        uint256 _id\r\n    ) public view returns (_Order memory, uint256) {\r\n        uint256 i = 0;\r\n        _Order[] memory _order = s_orderBook[_token][side];\r\n        _Order memory order;\r\n        for (i; i < _order.length; i++) {\r\n            if (_order[i].id == _id) {\r\n                order = _order[i];\r\n                break;\r\n            }\r\n        }\r\n        return (order, i);\r\n    }\r\n\r\n    function orderExists(\r\n        uint256 _id,\r\n        Side side,\r\n        address _token\r\n    ) public view returns (bool) {\r\n        _Order[] memory orders = s_orderBook[_token][uint256(side)];\r\n\r\n        for (uint256 i = 0; i < orders.length; i++) {\r\n            if (orders[i].id == _id) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function addToken(address _token, uint256 _decimals) public onlyOwner {\r\n        require(!isVerifiedToken(_token), \"Token already verified\");\r\n        tokenList.push(_tokenInfo(_token, _decimals));\r\n    }\r\n\r\n    function isVerifiedToken(address _token) public view returns (bool) {\r\n        //uint256 size = tokenList.length;\r\n\r\n        for (uint256 i = 0; i < tokenList.length; i++) {\r\n            if (tokenList[i].add == _token) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function getTokenInfo(address _token) public view returns (uint256) {\r\n        for (uint256 i = 0; i < tokenList.length; i++) {\r\n            if (tokenList[i].add == _token) {\r\n                return tokenList[i].decimals;\r\n            }\r\n        }\r\n    }\r\n\r\n    modifier validOrder(\r\n        uint256 _id,\r\n        Side side,\r\n        address _token\r\n    ) {\r\n        require(orderExists(_id, side, _token), \"Invalid Order ID\");\r\n        _;\r\n    }\r\n\r\n    modifier validToken(address _token) {\r\n        require(isVerifiedToken(_token), \"Token unavailable in DEX\");\r\n        _;\r\n    }\r\n}\r\n"},"contracts/interface/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    function allowance(\r\n        address owner,\r\n        address spender\r\n    ) external view returns (uint256 remaining);\r\n\r\n    function approve(\r\n        address spender,\r\n        uint256 value\r\n    ) external returns (bool success);\r\n\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    function decimals() external view returns (uint8 decimalPlaces);\r\n\r\n    function decreaseApproval(\r\n        address spender,\r\n        uint256 subtractedValue\r\n    ) external returns (bool success);\r\n\r\n    function increaseApproval(\r\n        address spender,\r\n        uint256 addedValue\r\n    ) external returns (bool success);\r\n\r\n    function name() external view returns (string memory tokenName);\r\n\r\n    function symbol() external view returns (string memory tokenSymbol);\r\n\r\n    function totalSupply() external view returns (uint256 totalTokensIssued);\r\n\r\n    function transfer(\r\n        address to,\r\n        uint256 value\r\n    ) external returns (bool success);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) external returns (bool success);\r\n}\r\n"},"contracts/interface/IPool.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0\r\npragma solidity ^0.8.0;\r\n\r\nimport {IPoolAddressesProvider} from \"./IPoolAddressesProvider.sol\";\r\nimport {DataTypes} from \"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\";\r\n\r\n/**\r\n * @title IPool\r\n * @author Aave\r\n * @notice Defines the basic interface for an Aave Pool.\r\n */\r\ninterface IPool {\r\n    /**\r\n     * @dev Emitted on mintUnbacked()\r\n     * @param reserve The address of the underlying asset of the reserve\r\n     * @param user The address initiating the supply\r\n     * @param onBehalfOf The beneficiary of the supplied assets, receiving the aTokens\r\n     * @param amount The amount of supplied assets\r\n     * @param referralCode The referral code used\r\n     */\r\n    event MintUnbacked(\r\n        address indexed reserve,\r\n        address user,\r\n        address indexed onBehalfOf,\r\n        uint256 amount,\r\n        uint16 indexed referralCode\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted on backUnbacked()\r\n     * @param reserve The address of the underlying asset of the reserve\r\n     * @param backer The address paying for the backing\r\n     * @param amount The amount added as backing\r\n     * @param fee The amount paid in fees\r\n     */\r\n    event BackUnbacked(\r\n        address indexed reserve,\r\n        address indexed backer,\r\n        uint256 amount,\r\n        uint256 fee\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted on supply()\r\n     * @param reserve The address of the underlying asset of the reserve\r\n     * @param user The address initiating the supply\r\n     * @param onBehalfOf The beneficiary of the supply, receiving the aTokens\r\n     * @param amount The amount supplied\r\n     * @param referralCode The referral code used\r\n     */\r\n    event Supply(\r\n        address indexed reserve,\r\n        address user,\r\n        address indexed onBehalfOf,\r\n        uint256 amount,\r\n        uint16 indexed referralCode\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted on withdraw()\r\n     * @param reserve The address of the underlying asset being withdrawn\r\n     * @param user The address initiating the withdrawal, owner of aTokens\r\n     * @param to The address that will receive the underlying\r\n     * @param amount The amount to be withdrawn\r\n     */\r\n    event Withdraw(\r\n        address indexed reserve,\r\n        address indexed user,\r\n        address indexed to,\r\n        uint256 amount\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted on borrow() and flashLoan() when debt needs to be opened\r\n     * @param reserve The address of the underlying asset being borrowed\r\n     * @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\r\n     * initiator of the transaction on flashLoan()\r\n     * @param onBehalfOf The address that will be getting the debt\r\n     * @param amount The amount borrowed out\r\n     * @param interestRateMode The rate mode: 1 for Stable, 2 for Variable\r\n     * @param borrowRate The numeric rate at which the user has borrowed, expressed in ray\r\n     * @param referralCode The referral code used\r\n     */\r\n    event Borrow(\r\n        address indexed reserve,\r\n        address user,\r\n        address indexed onBehalfOf,\r\n        uint256 amount,\r\n        DataTypes.InterestRateMode interestRateMode,\r\n        uint256 borrowRate,\r\n        uint16 indexed referralCode\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted on repay()\r\n     * @param reserve The address of the underlying asset of the reserve\r\n     * @param user The beneficiary of the repayment, getting his debt reduced\r\n     * @param repayer The address of the user initiating the repay(), providing the funds\r\n     * @param amount The amount repaid\r\n     * @param useATokens True if the repayment is done using aTokens, `false` if done with underlying asset directly\r\n     */\r\n    event Repay(\r\n        address indexed reserve,\r\n        address indexed user,\r\n        address indexed repayer,\r\n        uint256 amount,\r\n        bool useATokens\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted on swapBorrowRateMode()\r\n     * @param reserve The address of the underlying asset of the reserve\r\n     * @param user The address of the user swapping his rate mode\r\n     * @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\r\n     */\r\n    event SwapBorrowRateMode(\r\n        address indexed reserve,\r\n        address indexed user,\r\n        DataTypes.InterestRateMode interestRateMode\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted on borrow(), repay() and liquidationCall() when using isolated assets\r\n     * @param asset The address of the underlying asset of the reserve\r\n     * @param totalDebt The total isolation mode debt for the reserve\r\n     */\r\n    event IsolationModeTotalDebtUpdated(\r\n        address indexed asset,\r\n        uint256 totalDebt\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when the user selects a certain asset category for eMode\r\n     * @param user The address of the user\r\n     * @param categoryId The category id\r\n     */\r\n    event UserEModeSet(address indexed user, uint8 categoryId);\r\n\r\n    /**\r\n     * @dev Emitted on setUserUseReserveAsCollateral()\r\n     * @param reserve The address of the underlying asset of the reserve\r\n     * @param user The address of the user enabling the usage as collateral\r\n     */\r\n    event ReserveUsedAsCollateralEnabled(\r\n        address indexed reserve,\r\n        address indexed user\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted on setUserUseReserveAsCollateral()\r\n     * @param reserve The address of the underlying asset of the reserve\r\n     * @param user The address of the user enabling the usage as collateral\r\n     */\r\n    event ReserveUsedAsCollateralDisabled(\r\n        address indexed reserve,\r\n        address indexed user\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted on rebalanceStableBorrowRate()\r\n     * @param reserve The address of the underlying asset of the reserve\r\n     * @param user The address of the user for which the rebalance has been executed\r\n     */\r\n    event RebalanceStableBorrowRate(\r\n        address indexed reserve,\r\n        address indexed user\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted on flashLoan()\r\n     * @param target The address of the flash loan receiver contract\r\n     * @param initiator The address initiating the flash loan\r\n     * @param asset The address of the asset being flash borrowed\r\n     * @param amount The amount flash borrowed\r\n     * @param interestRateMode The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt\r\n     * @param premium The fee flash borrowed\r\n     * @param referralCode The referral code used\r\n     */\r\n    event FlashLoan(\r\n        address indexed target,\r\n        address initiator,\r\n        address indexed asset,\r\n        uint256 amount,\r\n        DataTypes.InterestRateMode interestRateMode,\r\n        uint256 premium,\r\n        uint16 indexed referralCode\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when a borrower is liquidated.\r\n     * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\r\n     * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\r\n     * @param user The address of the borrower getting liquidated\r\n     * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\r\n     * @param liquidatedCollateralAmount The amount of collateral received by the liquidator\r\n     * @param liquidator The address of the liquidator\r\n     * @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\r\n     * to receive the underlying collateral asset directly\r\n     */\r\n    event LiquidationCall(\r\n        address indexed collateralAsset,\r\n        address indexed debtAsset,\r\n        address indexed user,\r\n        uint256 debtToCover,\r\n        uint256 liquidatedCollateralAmount,\r\n        address liquidator,\r\n        bool receiveAToken\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when the state of a reserve is updated.\r\n     * @param reserve The address of the underlying asset of the reserve\r\n     * @param liquidityRate The next liquidity rate\r\n     * @param stableBorrowRate The next stable borrow rate\r\n     * @param variableBorrowRate The next variable borrow rate\r\n     * @param liquidityIndex The next liquidity index\r\n     * @param variableBorrowIndex The next variable borrow index\r\n     */\r\n    event ReserveDataUpdated(\r\n        address indexed reserve,\r\n        uint256 liquidityRate,\r\n        uint256 stableBorrowRate,\r\n        uint256 variableBorrowRate,\r\n        uint256 liquidityIndex,\r\n        uint256 variableBorrowIndex\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when the protocol treasury receives minted aTokens from the accrued interest.\r\n     * @param reserve The address of the reserve\r\n     * @param amountMinted The amount minted to the treasury\r\n     */\r\n    event MintedToTreasury(address indexed reserve, uint256 amountMinted);\r\n\r\n    /**\r\n     * @notice Mints an `amount` of aTokens to the `onBehalfOf`\r\n     * @param asset The address of the underlying asset to mint\r\n     * @param amount The amount to mint\r\n     * @param onBehalfOf The address that will receive the aTokens\r\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\r\n     *   0 if the action is executed directly by the user, without any middle-man\r\n     */\r\n    function mintUnbacked(\r\n        address asset,\r\n        uint256 amount,\r\n        address onBehalfOf,\r\n        uint16 referralCode\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Back the current unbacked underlying with `amount` and pay `fee`.\r\n     * @param asset The address of the underlying asset to back\r\n     * @param amount The amount to back\r\n     * @param fee The amount paid in fees\r\n     * @return The backed amount\r\n     */\r\n    function backUnbacked(\r\n        address asset,\r\n        uint256 amount,\r\n        uint256 fee\r\n    ) external returns (uint256);\r\n\r\n    /**\r\n     * @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\r\n     * - E.g. User supplies 100 USDC and gets in return 100 aUSDC\r\n     * @param asset The address of the underlying asset to supply\r\n     * @param amount The amount to be supplied\r\n     * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\r\n     *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\r\n     *   is a different wallet\r\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\r\n     *   0 if the action is executed directly by the user, without any middle-man\r\n     */\r\n    function supply(\r\n        address asset,\r\n        uint256 amount,\r\n        address onBehalfOf,\r\n        uint16 referralCode\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Supply with transfer approval of asset to be supplied done via permit function\r\n     * see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\r\n     * @param asset The address of the underlying asset to supply\r\n     * @param amount The amount to be supplied\r\n     * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\r\n     *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\r\n     *   is a different wallet\r\n     * @param deadline The deadline timestamp that the permit is valid\r\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\r\n     *   0 if the action is executed directly by the user, without any middle-man\r\n     * @param permitV The V parameter of ERC712 permit sig\r\n     * @param permitR The R parameter of ERC712 permit sig\r\n     * @param permitS The S parameter of ERC712 permit sig\r\n     */\r\n    function supplyWithPermit(\r\n        address asset,\r\n        uint256 amount,\r\n        address onBehalfOf,\r\n        uint16 referralCode,\r\n        uint256 deadline,\r\n        uint8 permitV,\r\n        bytes32 permitR,\r\n        bytes32 permitS\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\r\n     * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\r\n     * @param asset The address of the underlying asset to withdraw\r\n     * @param amount The underlying amount to be withdrawn\r\n     *   - Send the value type(uint256).max in order to withdraw the whole aToken balance\r\n     * @param to The address that will receive the underlying, same as msg.sender if the user\r\n     *   wants to receive it on his own wallet, or a different address if the beneficiary is a\r\n     *   different wallet\r\n     * @return The final amount withdrawn\r\n     */\r\n    function withdraw(\r\n        address asset,\r\n        uint256 amount,\r\n        address to\r\n    ) external returns (uint256);\r\n\r\n    /**\r\n     * @notice Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\r\n     * already supplied enough collateral, or he was given enough allowance by a credit delegator on the\r\n     * corresponding debt token (StableDebtToken or VariableDebtToken)\r\n     * - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\r\n     *   and 100 stable/variable debt tokens, depending on the `interestRateMode`\r\n     * @param asset The address of the underlying asset to borrow\r\n     * @param amount The amount to be borrowed\r\n     * @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\r\n     * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\r\n     *   0 if the action is executed directly by the user, without any middle-man\r\n     * @param onBehalfOf The address of the user who will receive the debt. Should be the address of the borrower itself\r\n     * calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\r\n     * if he has been given credit delegation allowance\r\n     */\r\n    function borrow(\r\n        address asset,\r\n        uint256 amount,\r\n        uint256 interestRateMode,\r\n        uint16 referralCode,\r\n        address onBehalfOf\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\r\n     * - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\r\n     * @param asset The address of the borrowed underlying asset previously borrowed\r\n     * @param amount The amount to repay\r\n     * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\r\n     * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\r\n     * @param onBehalfOf The address of the user who will get his debt reduced/removed. Should be the address of the\r\n     * user calling the function if he wants to reduce/remove his own debt, or the address of any other\r\n     * other borrower whose debt should be removed\r\n     * @return The final amount repaid\r\n     */\r\n    function repay(\r\n        address asset,\r\n        uint256 amount,\r\n        uint256 interestRateMode,\r\n        address onBehalfOf\r\n    ) external returns (uint256);\r\n\r\n    /**\r\n     * @notice Repay with transfer approval of asset to be repaid done via permit function\r\n     * see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\r\n     * @param asset The address of the borrowed underlying asset previously borrowed\r\n     * @param amount The amount to repay\r\n     * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\r\n     * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\r\n     * @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\r\n     * user calling the function if he wants to reduce/remove his own debt, or the address of any other\r\n     * other borrower whose debt should be removed\r\n     * @param deadline The deadline timestamp that the permit is valid\r\n     * @param permitV The V parameter of ERC712 permit sig\r\n     * @param permitR The R parameter of ERC712 permit sig\r\n     * @param permitS The S parameter of ERC712 permit sig\r\n     * @return The final amount repaid\r\n     */\r\n    function repayWithPermit(\r\n        address asset,\r\n        uint256 amount,\r\n        uint256 interestRateMode,\r\n        address onBehalfOf,\r\n        uint256 deadline,\r\n        uint8 permitV,\r\n        bytes32 permitR,\r\n        bytes32 permitS\r\n    ) external returns (uint256);\r\n\r\n    /**\r\n     * @notice Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the\r\n     * equivalent debt tokens\r\n     * - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens\r\n     * @dev  Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken\r\n     * balance is not enough to cover the whole debt\r\n     * @param asset The address of the borrowed underlying asset previously borrowed\r\n     * @param amount The amount to repay\r\n     * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\r\n     * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\r\n     * @return The final amount repaid\r\n     */\r\n    function repayWithATokens(\r\n        address asset,\r\n        uint256 amount,\r\n        uint256 interestRateMode\r\n    ) external returns (uint256);\r\n\r\n    /**\r\n     * @notice Allows a borrower to swap his debt between stable and variable mode, or vice versa\r\n     * @param asset The address of the underlying asset borrowed\r\n     * @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\r\n     */\r\n    function swapBorrowRateMode(\r\n        address asset,\r\n        uint256 interestRateMode\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\r\n     * - Users can be rebalanced if the following conditions are satisfied:\r\n     *     1. Usage ratio is above 95%\r\n     *     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too\r\n     *        much has been borrowed at a stable rate and suppliers are not earning enough\r\n     * @param asset The address of the underlying asset borrowed\r\n     * @param user The address of the user to be rebalanced\r\n     */\r\n    function rebalanceStableBorrowRate(address asset, address user) external;\r\n\r\n    /**\r\n     * @notice Allows suppliers to enable/disable a specific supplied asset as collateral\r\n     * @param asset The address of the underlying asset supplied\r\n     * @param useAsCollateral True if the user wants to use the supply as collateral, false otherwise\r\n     */\r\n    function setUserUseReserveAsCollateral(\r\n        address asset,\r\n        bool useAsCollateral\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\r\n     * - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\r\n     *   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\r\n     * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\r\n     * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\r\n     * @param user The address of the borrower getting liquidated\r\n     * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\r\n     * @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\r\n     * to receive the underlying collateral asset directly\r\n     */\r\n    function liquidationCall(\r\n        address collateralAsset,\r\n        address debtAsset,\r\n        address user,\r\n        uint256 debtToCover,\r\n        bool receiveAToken\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\r\n     * as long as the amount taken plus a fee is returned.\r\n     * @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\r\n     * into consideration. For further details please visit https://docs.aave.com/developers/\r\n     * @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanReceiver interface\r\n     * @param assets The addresses of the assets being flash-borrowed\r\n     * @param amounts The amounts of the assets being flash-borrowed\r\n     * @param interestRateModes Types of the debt to open if the flash loan is not returned:\r\n     *   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\r\n     *   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\r\n     *   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\r\n     * @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\r\n     * @param params Variadic packed params to pass to the receiver as extra information\r\n     * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\r\n     *   0 if the action is executed directly by the user, without any middle-man\r\n     */\r\n    function flashLoan(\r\n        address receiverAddress,\r\n        address[] calldata assets,\r\n        uint256[] calldata amounts,\r\n        uint256[] calldata interestRateModes,\r\n        address onBehalfOf,\r\n        bytes calldata params,\r\n        uint16 referralCode\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\r\n     * as long as the amount taken plus a fee is returned.\r\n     * @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\r\n     * into consideration. For further details please visit https://docs.aave.com/developers/\r\n     * @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface\r\n     * @param asset The address of the asset being flash-borrowed\r\n     * @param amount The amount of the asset being flash-borrowed\r\n     * @param params Variadic packed params to pass to the receiver as extra information\r\n     * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\r\n     *   0 if the action is executed directly by the user, without any middle-man\r\n     */\r\n    function flashLoanSimple(\r\n        address receiverAddress,\r\n        address asset,\r\n        uint256 amount,\r\n        bytes calldata params,\r\n        uint16 referralCode\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Returns the user account data across all the reserves\r\n     * @param user The address of the user\r\n     * @return totalCollateralBase The total collateral of the user in the base currency used by the price feed\r\n     * @return totalDebtBase The total debt of the user in the base currency used by the price feed\r\n     * @return availableBorrowsBase The borrowing power left of the user in the base currency used by the price feed\r\n     * @return currentLiquidationThreshold The liquidation threshold of the user\r\n     * @return ltv The loan to value of The user\r\n     * @return healthFactor The current health factor of the user\r\n     */\r\n    function getUserAccountData(\r\n        address user\r\n    )\r\n        external\r\n        view\r\n        returns (\r\n            uint256 totalCollateralBase,\r\n            uint256 totalDebtBase,\r\n            uint256 availableBorrowsBase,\r\n            uint256 currentLiquidationThreshold,\r\n            uint256 ltv,\r\n            uint256 healthFactor\r\n        );\r\n\r\n    /**\r\n     * @notice Initializes a reserve, activating it, assigning an aToken and debt tokens and an\r\n     * interest rate strategy\r\n     * @dev Only callable by the PoolConfigurator contract\r\n     * @param asset The address of the underlying asset of the reserve\r\n     * @param aTokenAddress The address of the aToken that will be assigned to the reserve\r\n     * @param stableDebtAddress The address of the StableDebtToken that will be assigned to the reserve\r\n     * @param variableDebtAddress The address of the VariableDebtToken that will be assigned to the reserve\r\n     * @param interestRateStrategyAddress The address of the interest rate strategy contract\r\n     */\r\n    function initReserve(\r\n        address asset,\r\n        address aTokenAddress,\r\n        address stableDebtAddress,\r\n        address variableDebtAddress,\r\n        address interestRateStrategyAddress\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Drop a reserve\r\n     * @dev Only callable by the PoolConfigurator contract\r\n     * @param asset The address of the underlying asset of the reserve\r\n     */\r\n    function dropReserve(address asset) external;\r\n\r\n    /**\r\n     * @notice Updates the address of the interest rate strategy contract\r\n     * @dev Only callable by the PoolConfigurator contract\r\n     * @param asset The address of the underlying asset of the reserve\r\n     * @param rateStrategyAddress The address of the interest rate strategy contract\r\n     */\r\n    function setReserveInterestRateStrategyAddress(\r\n        address asset,\r\n        address rateStrategyAddress\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Sets the configuration bitmap of the reserve as a whole\r\n     * @dev Only callable by the PoolConfigurator contract\r\n     * @param asset The address of the underlying asset of the reserve\r\n     * @param configuration The new configuration bitmap\r\n     */\r\n    function setConfiguration(\r\n        address asset,\r\n        DataTypes.ReserveConfigurationMap calldata configuration\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Returns the configuration of the reserve\r\n     * @param asset The address of the underlying asset of the reserve\r\n     * @return The configuration of the reserve\r\n     */\r\n    function getConfiguration(\r\n        address asset\r\n    ) external view returns (DataTypes.ReserveConfigurationMap memory);\r\n\r\n    /**\r\n     * @notice Returns the configuration of the user across all the reserves\r\n     * @param user The user address\r\n     * @return The configuration of the user\r\n     */\r\n    function getUserConfiguration(\r\n        address user\r\n    ) external view returns (DataTypes.UserConfigurationMap memory);\r\n\r\n    /**\r\n     * @notice Returns the normalized income of the reserve\r\n     * @param asset The address of the underlying asset of the reserve\r\n     * @return The reserve's normalized income\r\n     */\r\n    function getReserveNormalizedIncome(\r\n        address asset\r\n    ) external view returns (uint256);\r\n\r\n    /**\r\n     * @notice Returns the normalized variable debt per unit of asset\r\n     * @dev WARNING: This function is intended to be used primarily by the protocol itself to get a\r\n     * \"dynamic\" variable index based on time, current stored index and virtual rate at the current\r\n     * moment (approx. a borrower would get if opening a position). This means that is always used in\r\n     * combination with variable debt supply/balances.\r\n     * If using this function externally, consider that is possible to have an increasing normalized\r\n     * variable debt that is not equivalent to how the variable debt index would be updated in storage\r\n     * (e.g. only updates with non-zero variable debt supply)\r\n     * @param asset The address of the underlying asset of the reserve\r\n     * @return The reserve normalized variable debt\r\n     */\r\n    function getReserveNormalizedVariableDebt(\r\n        address asset\r\n    ) external view returns (uint256);\r\n\r\n    /**\r\n     * @notice Returns the state and configuration of the reserve\r\n     * @param asset The address of the underlying asset of the reserve\r\n     * @return The state and configuration data of the reserve\r\n     */\r\n    function getReserveData(\r\n        address asset\r\n    ) external view returns (DataTypes.ReserveData memory);\r\n\r\n    /**\r\n     * @notice Validates and finalizes an aToken transfer\r\n     * @dev Only callable by the overlying aToken of the `asset`\r\n     * @param asset The address of the underlying asset of the aToken\r\n     * @param from The user from which the aTokens are transferred\r\n     * @param to The user receiving the aTokens\r\n     * @param amount The amount being transferred/withdrawn\r\n     * @param balanceFromBefore The aToken balance of the `from` user before the transfer\r\n     * @param balanceToBefore The aToken balance of the `to` user before the transfer\r\n     */\r\n    function finalizeTransfer(\r\n        address asset,\r\n        address from,\r\n        address to,\r\n        uint256 amount,\r\n        uint256 balanceFromBefore,\r\n        uint256 balanceToBefore\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Returns the list of the underlying assets of all the initialized reserves\r\n     * @dev It does not include dropped reserves\r\n     * @return The addresses of the underlying assets of the initialized reserves\r\n     */\r\n    function getReservesList() external view returns (address[] memory);\r\n\r\n    /**\r\n     * @notice Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct\r\n     * @param id The id of the reserve as stored in the DataTypes.ReserveData struct\r\n     * @return The address of the reserve associated with id\r\n     */\r\n    function getReserveAddressById(uint16 id) external view returns (address);\r\n\r\n    /**\r\n     * @notice Returns the PoolAddressesProvider connected to this contract\r\n     * @return The address of the PoolAddressesProvider\r\n     */\r\n    function ADDRESSES_PROVIDER()\r\n        external\r\n        view\r\n        returns (IPoolAddressesProvider);\r\n\r\n    /**\r\n     * @notice Updates the protocol fee on the bridging\r\n     * @param bridgeProtocolFee The part of the premium sent to the protocol treasury\r\n     */\r\n    function updateBridgeProtocolFee(uint256 bridgeProtocolFee) external;\r\n\r\n    /**\r\n     * @notice Updates flash loan premiums. Flash loan premium consists of two parts:\r\n     * - A part is sent to aToken holders as extra, one time accumulated interest\r\n     * - A part is collected by the protocol treasury\r\n     * @dev The total premium is calculated on the total borrowed amount\r\n     * @dev The premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`\r\n     * @dev Only callable by the PoolConfigurator contract\r\n     * @param flashLoanPremiumTotal The total premium, expressed in bps\r\n     * @param flashLoanPremiumToProtocol The part of the premium sent to the protocol treasury, expressed in bps\r\n     */\r\n    function updateFlashloanPremiums(\r\n        uint128 flashLoanPremiumTotal,\r\n        uint128 flashLoanPremiumToProtocol\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Configures a new category for the eMode.\r\n     * @dev In eMode, the protocol allows very high borrowing power to borrow assets of the same category.\r\n     * The category 0 is reserved as it's the default for volatile assets\r\n     * @param id The id of the category\r\n     * @param config The configuration of the category\r\n     */\r\n    function configureEModeCategory(\r\n        uint8 id,\r\n        DataTypes.EModeCategory memory config\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Returns the data of an eMode category\r\n     * @param id The id of the category\r\n     * @return The configuration data of the category\r\n     */\r\n    function getEModeCategoryData(\r\n        uint8 id\r\n    ) external view returns (DataTypes.EModeCategory memory);\r\n\r\n    /**\r\n     * @notice Allows a user to use the protocol in eMode\r\n     * @param categoryId The id of the category\r\n     */\r\n    function setUserEMode(uint8 categoryId) external;\r\n\r\n    /**\r\n     * @notice Returns the eMode the user is using\r\n     * @param user The address of the user\r\n     * @return The eMode id\r\n     */\r\n    function getUserEMode(address user) external view returns (uint256);\r\n\r\n    /**\r\n     * @notice Resets the isolation mode total debt of the given asset to zero\r\n     * @dev It requires the given asset has zero debt ceiling\r\n     * @param asset The address of the underlying asset to reset the isolationModeTotalDebt\r\n     */\r\n    function resetIsolationModeTotalDebt(address asset) external;\r\n\r\n    /**\r\n     * @notice Returns the percentage of available liquidity that can be borrowed at once at stable rate\r\n     * @return The percentage of available liquidity to borrow, expressed in bps\r\n     */\r\n    function MAX_STABLE_RATE_BORROW_SIZE_PERCENT()\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    /**\r\n     * @notice Returns the total fee on flash loans\r\n     * @return The total fee on flashloans\r\n     */\r\n    function FLASHLOAN_PREMIUM_TOTAL() external view returns (uint128);\r\n\r\n    /**\r\n     * @notice Returns the part of the bridge fees sent to protocol\r\n     * @return The bridge fee sent to the protocol treasury\r\n     */\r\n    function BRIDGE_PROTOCOL_FEE() external view returns (uint256);\r\n\r\n    /**\r\n     * @notice Returns the part of the flashloan fees sent to protocol\r\n     * @return The flashloan fee sent to the protocol treasury\r\n     */\r\n    function FLASHLOAN_PREMIUM_TO_PROTOCOL() external view returns (uint128);\r\n\r\n    /**\r\n     * @notice Returns the maximum number of reserves supported to be listed in this Pool\r\n     * @return The maximum number of reserves supported\r\n     */\r\n    function MAX_NUMBER_RESERVES() external view returns (uint16);\r\n\r\n    /**\r\n     * @notice Mints the assets accrued through the reserve factor to the treasury in the form of aTokens\r\n     * @param assets The list of reserves for which the minting needs to be executed\r\n     */\r\n    function mintToTreasury(address[] calldata assets) external;\r\n\r\n    /**\r\n     * @notice Rescue and transfer tokens locked in this contract\r\n     * @param token The address of the token\r\n     * @param to The address of the recipient\r\n     * @param amount The amount of token to transfer\r\n     */\r\n    function rescueTokens(address token, address to, uint256 amount) external;\r\n\r\n    /**\r\n     * @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\r\n     * - E.g. User supplies 100 USDC and gets in return 100 aUSDC\r\n     * @dev Deprecated: Use the `supply` function instead\r\n     * @param asset The address of the underlying asset to supply\r\n     * @param amount The amount to be supplied\r\n     * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\r\n     *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\r\n     *   is a different wallet\r\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\r\n     *   0 if the action is executed directly by the user, without any middle-man\r\n     */\r\n    function deposit(\r\n        address asset,\r\n        uint256 amount,\r\n        address onBehalfOf,\r\n        uint16 referralCode\r\n    ) external;\r\n}\r\n"},"contracts/interface/IPoolAddressesProvider.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title IPoolAddressesProvider\r\n * @author Aave\r\n * @notice Defines the basic interface for a Pool Addresses Provider.\r\n */\r\ninterface IPoolAddressesProvider {\r\n    /**\r\n     * @dev Emitted when the market identifier is updated.\r\n     * @param oldMarketId The old id of the market\r\n     * @param newMarketId The new id of the market\r\n     */\r\n    event MarketIdSet(string indexed oldMarketId, string indexed newMarketId);\r\n\r\n    /**\r\n     * @dev Emitted when the pool is updated.\r\n     * @param oldAddress The old address of the Pool\r\n     * @param newAddress The new address of the Pool\r\n     */\r\n    event PoolUpdated(address indexed oldAddress, address indexed newAddress);\r\n\r\n    /**\r\n     * @dev Emitted when the pool configurator is updated.\r\n     * @param oldAddress The old address of the PoolConfigurator\r\n     * @param newAddress The new address of the PoolConfigurator\r\n     */\r\n    event PoolConfiguratorUpdated(\r\n        address indexed oldAddress,\r\n        address indexed newAddress\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when the price oracle is updated.\r\n     * @param oldAddress The old address of the PriceOracle\r\n     * @param newAddress The new address of the PriceOracle\r\n     */\r\n    event PriceOracleUpdated(\r\n        address indexed oldAddress,\r\n        address indexed newAddress\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when the ACL manager is updated.\r\n     * @param oldAddress The old address of the ACLManager\r\n     * @param newAddress The new address of the ACLManager\r\n     */\r\n    event ACLManagerUpdated(\r\n        address indexed oldAddress,\r\n        address indexed newAddress\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when the ACL admin is updated.\r\n     * @param oldAddress The old address of the ACLAdmin\r\n     * @param newAddress The new address of the ACLAdmin\r\n     */\r\n    event ACLAdminUpdated(\r\n        address indexed oldAddress,\r\n        address indexed newAddress\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when the price oracle sentinel is updated.\r\n     * @param oldAddress The old address of the PriceOracleSentinel\r\n     * @param newAddress The new address of the PriceOracleSentinel\r\n     */\r\n    event PriceOracleSentinelUpdated(\r\n        address indexed oldAddress,\r\n        address indexed newAddress\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when the pool data provider is updated.\r\n     * @param oldAddress The old address of the PoolDataProvider\r\n     * @param newAddress The new address of the PoolDataProvider\r\n     */\r\n    event PoolDataProviderUpdated(\r\n        address indexed oldAddress,\r\n        address indexed newAddress\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when a new proxy is created.\r\n     * @param id The identifier of the proxy\r\n     * @param proxyAddress The address of the created proxy contract\r\n     * @param implementationAddress The address of the implementation contract\r\n     */\r\n    event ProxyCreated(\r\n        bytes32 indexed id,\r\n        address indexed proxyAddress,\r\n        address indexed implementationAddress\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when a new non-proxied contract address is registered.\r\n     * @param id The identifier of the contract\r\n     * @param oldAddress The address of the old contract\r\n     * @param newAddress The address of the new contract\r\n     */\r\n    event AddressSet(\r\n        bytes32 indexed id,\r\n        address indexed oldAddress,\r\n        address indexed newAddress\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when the implementation of the proxy registered with id is updated\r\n     * @param id The identifier of the contract\r\n     * @param proxyAddress The address of the proxy contract\r\n     * @param oldImplementationAddress The address of the old implementation contract\r\n     * @param newImplementationAddress The address of the new implementation contract\r\n     */\r\n    event AddressSetAsProxy(\r\n        bytes32 indexed id,\r\n        address indexed proxyAddress,\r\n        address oldImplementationAddress,\r\n        address indexed newImplementationAddress\r\n    );\r\n\r\n    /**\r\n     * @notice Returns the id of the Aave market to which this contract points to.\r\n     * @return The market id\r\n     */\r\n    function getMarketId() external view returns (string memory);\r\n\r\n    /**\r\n     * @notice Associates an id with a specific PoolAddressesProvider.\r\n     * @dev This can be used to create an onchain registry of PoolAddressesProviders to\r\n     * identify and validate multiple Aave markets.\r\n     * @param newMarketId The market id\r\n     */\r\n    function setMarketId(string calldata newMarketId) external;\r\n\r\n    /**\r\n     * @notice Returns an address by its identifier.\r\n     * @dev The returned address might be an EOA or a contract, potentially proxied\r\n     * @dev It returns ZERO if there is no registered address with the given id\r\n     * @param id The id\r\n     * @return The address of the registered for the specified id\r\n     */\r\n    function getAddress(bytes32 id) external view returns (address);\r\n\r\n    /**\r\n     * @notice General function to update the implementation of a proxy registered with\r\n     * certain `id`. If there is no proxy registered, it will instantiate one and\r\n     * set as implementation the `newImplementationAddress`.\r\n     * @dev IMPORTANT Use this function carefully, only for ids that don't have an explicit\r\n     * setter function, in order to avoid unexpected consequences\r\n     * @param id The id\r\n     * @param newImplementationAddress The address of the new implementation\r\n     */\r\n    function setAddressAsProxy(\r\n        bytes32 id,\r\n        address newImplementationAddress\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Sets an address for an id replacing the address saved in the addresses map.\r\n     * @dev IMPORTANT Use this function carefully, as it will do a hard replacement\r\n     * @param id The id\r\n     * @param newAddress The address to set\r\n     */\r\n    function setAddress(bytes32 id, address newAddress) external;\r\n\r\n    /**\r\n     * @notice Returns the address of the Pool proxy.\r\n     * @return The Pool proxy address\r\n     */\r\n    function getPool() external view returns (address);\r\n\r\n    /**\r\n     * @notice Updates the implementation of the Pool, or creates a proxy\r\n     * setting the new `pool` implementation when the function is called for the first time.\r\n     * @param newPoolImpl The new Pool implementation\r\n     */\r\n    function setPoolImpl(address newPoolImpl) external;\r\n\r\n    /**\r\n     * @notice Returns the address of the PoolConfigurator proxy.\r\n     * @return The PoolConfigurator proxy address\r\n     */\r\n    function getPoolConfigurator() external view returns (address);\r\n\r\n    /**\r\n     * @notice Updates the implementation of the PoolConfigurator, or creates a proxy\r\n     * setting the new `PoolConfigurator` implementation when the function is called for the first time.\r\n     * @param newPoolConfiguratorImpl The new PoolConfigurator implementation\r\n     */\r\n    function setPoolConfiguratorImpl(address newPoolConfiguratorImpl) external;\r\n\r\n    /**\r\n     * @notice Returns the address of the price oracle.\r\n     * @return The address of the PriceOracle\r\n     */\r\n    function getPriceOracle() external view returns (address);\r\n\r\n    /**\r\n     * @notice Updates the address of the price oracle.\r\n     * @param newPriceOracle The address of the new PriceOracle\r\n     */\r\n    function setPriceOracle(address newPriceOracle) external;\r\n\r\n    /**\r\n     * @notice Returns the address of the ACL manager.\r\n     * @return The address of the ACLManager\r\n     */\r\n    function getACLManager() external view returns (address);\r\n\r\n    /**\r\n     * @notice Updates the address of the ACL manager.\r\n     * @param newAclManager The address of the new ACLManager\r\n     */\r\n    function setACLManager(address newAclManager) external;\r\n\r\n    /**\r\n     * @notice Returns the address of the ACL admin.\r\n     * @return The address of the ACL admin\r\n     */\r\n    function getACLAdmin() external view returns (address);\r\n\r\n    /**\r\n     * @notice Updates the address of the ACL admin.\r\n     * @param newAclAdmin The address of the new ACL admin\r\n     */\r\n    function setACLAdmin(address newAclAdmin) external;\r\n\r\n    /**\r\n     * @notice Returns the address of the price oracle sentinel.\r\n     * @return The address of the PriceOracleSentinel\r\n     */\r\n    function getPriceOracleSentinel() external view returns (address);\r\n\r\n    /**\r\n     * @notice Updates the address of the price oracle sentinel.\r\n     * @param newPriceOracleSentinel The address of the new PriceOracleSentinel\r\n     */\r\n    function setPriceOracleSentinel(address newPriceOracleSentinel) external;\r\n\r\n    /**\r\n     * @notice Returns the address of the data provider.\r\n     * @return The address of the DataProvider\r\n     */\r\n    function getPoolDataProvider() external view returns (address);\r\n\r\n    /**\r\n     * @notice Updates the address of the data provider.\r\n     * @param newDataProvider The address of the new DataProvider\r\n     */\r\n    function setPoolDataProvider(address newDataProvider) external;\r\n}\r\n"},"contracts/PriceChecker.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract PriceChecker is Ownable {\r\n    // We could make this public, but then we'd have to deploy it\r\n    _priceFeed[] public priceFeeds;\r\n\r\n    struct _priceFeed {\r\n        string name;\r\n        address token;\r\n        AggregatorV3Interface priceFeed;\r\n    }\r\n\r\n    //only using PriceFeeds pegged to USD\r\n    function addPriceFeed(\r\n        string memory _name,\r\n        address _token,\r\n        address _address\r\n    ) external onlyOwner {\r\n        _priceFeed[] memory pricefeed = priceFeeds;\r\n        bool isAdded = false;\r\n        for (uint256 i = 0; i < pricefeed.length; i++) {\r\n            if (\r\n                keccak256(abi.encodePacked(_name)) ==\r\n                keccak256(abi.encodePacked(pricefeed[i].name))\r\n            ) {\r\n                isAdded = true;\r\n                break;\r\n            }\r\n        }\r\n        require(!isAdded, \"Price Feed already added\");\r\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(_address);\r\n        priceFeeds.push(_priceFeed(_name, _token, priceFeed));\r\n    }\r\n\r\n    function getPriceFeed(\r\n        address _token\r\n    ) internal view returns (AggregatorV3Interface priceFeed) {\r\n        _priceFeed[] memory pricefeed = priceFeeds;\r\n\r\n        for (uint256 i = 0; i < pricefeed.length; i++) {\r\n            if (_token == pricefeed[i].token) {\r\n                return pricefeed[i].priceFeed;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getPrice(address _address) external view returns (uint256) {\r\n        // Goerli ETH / USD Address\r\n        // https://docs.chain.link/docs/ethereum-addresses/\r\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\r\n        //     0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\r\n        // );\r\n        AggregatorV3Interface priceFeed = getPriceFeed(_address);\r\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\r\n        // ETH/USD rate in 18 digit\r\n        return uint256(answer);\r\n        // or (Both will do the same thing)\r\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\r\n    }\r\n}\r\n"},"contracts/TradingFees.sol":{"content":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./PriceChecker.sol\";\r\nimport \"./Wallet.sol\";\r\nimport \"./Exchange.sol\";\r\n\r\n/// @notice Library SafeMath used to prevent overflows and underflows\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract TradingFees is Ownable {\r\n    //This wallet holds the trading fees collected\r\n    //When trading, have an option toggle to waive trading fees or not using deposited aETH\r\n    //Users have to first deposit aETH tokens into the Exchange contract to waive, aETH tokens are not for trading\r\n    //When a trade order goes through, trading fees of the trade fulfilled  = trade amount x trade price x 0.01,\r\n    //contract checks how much aETH is deposited and what is the value of aETH, if sufficient to waive fees fully, deduct balance in deposit\r\n    //and waive trading fees\r\n\r\n    using SafeMath for uint256; //for prevention of integer overflow\r\n\r\n    uint256 decimals = 10 ** 18;\r\n    address public ethToken = address(0);\r\n    address public aETH = address(0x22404B0e2a7067068AcdaDd8f9D586F834cCe2c5);\r\n    PriceChecker priceFeed;\r\n    Wallet wallet;\r\n    Exchange exchange;\r\n\r\n    function calculateFees(\r\n        uint256 _amount,\r\n        uint256 _rate,\r\n        address _refToken\r\n    ) external view returns (uint256) {\r\n        //Calculated based on TokenB price, require actual price in 18dp\r\n        //trading fees is 0.1% of trade = 0.001\r\n        //moving up 18dp is 0.001 x 10**18 = 10**14\r\n        //have to fetch tokenPrice from PriceFeed\r\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 18decimals\r\n        uint256 value = (((_amount.mul(_rate)).div(decimals)).mul(priceOfToken))\r\n            .div(decimals);\r\n        uint256 fees = value.div(10 ** 4);\r\n\r\n        //Convert to aETH value\r\n        uint256 aETH_Price = priceFeed.getPrice(ethToken);\r\n\r\n        uint256 amountOfETH = (fees.mul(decimals)).div(aETH_Price);\r\n\r\n        return amountOfETH; //still in 18decimals\r\n    }\r\n\r\n    //Note fees in amountOfETH\r\n    function amountToDeduct(\r\n        address _refToken,\r\n        uint256 fees\r\n    ) external view returns (uint256) {\r\n        uint256 aETH_Price = priceFeed.getPrice(ethToken);\r\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 18decimals\r\n        uint256 value = aETH_Price.mul(fees);\r\n        return value.div(priceOfToken);\r\n    }\r\n\r\n    function checkSufficientaETH(\r\n        uint256 _amount,\r\n        address _user\r\n    ) external view returns (bool) {\r\n        uint256 balance = wallet.s_tokens(aETH, _user);\r\n\r\n        return balance >= _amount;\r\n    }\r\n}\r\n"},"contracts/Wallet.sol":{"content":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./interface/IERC20.sol\";\r\nimport \"./Exchange.sol\";\r\n\r\n/// @notice Library SafeMath used to prevent overflows and underflows\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract Wallet is Ownable {\r\n    using SafeMath for uint256; //for prevention of integer overflow\r\n\r\n    address public immutable Owner;\r\n\r\n    //For prevention of reentrancy\r\n    bool private locked;\r\n\r\n    address public ethToken = address(0);\r\n    address public aETH = address(0x22404B0e2a7067068AcdaDd8f9D586F834cCe2c5);\r\n\r\n    mapping(address => mapping(address => uint256)) public s_tokens; //tokenAdress -> msg.sender -> tokenAmt\r\n    mapping(address => mapping(address => uint256)) public lockedFunds;\r\n\r\n    Exchange exchange;\r\n    IERC20 token;\r\n\r\n    event Deposit(address token, address user, uint256 amount, uint256 balance);\r\n\r\n    /// @notice Event when amount withdrawn exchange\r\n    event Withdraw(\r\n        address token,\r\n        address user,\r\n        uint256 amount,\r\n        uint256 balance\r\n    );\r\n\r\n    constructor() {\r\n        Owner = msg.sender;\r\n    }\r\n\r\n    function depositETH() external payable {\r\n        updateBalance(ethToken, msg.sender, msg.value, true);\r\n\r\n        emit Deposit(\r\n            ethToken,\r\n            msg.sender,\r\n            msg.value,\r\n            balanceOf(ethToken, msg.sender)\r\n        );\r\n    }\r\n\r\n    function withdrawETH(uint256 _amount) external {\r\n        require(\r\n            balanceOf(ethToken, msg.sender).sub(\r\n                getlockedFunds(msg.sender, ethToken)\r\n            ) >= _amount,\r\n            \"Insufficient balance ETH to withdraw\"\r\n        );\r\n        require(!locked, \"Reentrant call detected!\");\r\n        locked = true;\r\n        updateBalance(ethToken, msg.sender, _amount, false);\r\n        locked = false;\r\n        (bool success, ) = msg.sender.call{value: _amount}(\"\");\r\n        require(success, \"failed to send amount\");\r\n\r\n        emit Withdraw(\r\n            ethToken,\r\n            msg.sender,\r\n            _amount,\r\n            balanceOf(ethToken, msg.sender)\r\n        );\r\n    }\r\n\r\n    //from and transferFrom is from ERC20 contract\r\n    //_token should be an ERC20 token\r\n    function depositToken(\r\n        address _token,\r\n        uint256 _amount,\r\n        uint256 _decimals\r\n    ) external {\r\n        require(_token != ethToken);\r\n        require(\r\n            exchange.isVerifiedToken(_token),\r\n            \"Token not verified on Exchange\"\r\n        );\r\n        //need to add a check to prove that it is an ERC20 token\r\n        token = IERC20(_token);\r\n\r\n        //Requires approval first\r\n        require(\r\n            token.transferFrom(msg.sender, address(this), _amount),\r\n            \"No Approval yet\"\r\n        );\r\n        uint256 decimals = 18;\r\n        if (_decimals == 18) {\r\n            updateBalance(_token, msg.sender, _amount, true);\r\n        } else\r\n            updateBalance(\r\n                _token,\r\n                msg.sender,\r\n                _amount.mul(10 ** decimals.sub(_decimals)),\r\n                true\r\n            );\r\n\r\n        emit Deposit(\r\n            _token,\r\n            msg.sender,\r\n            _amount,\r\n            balanceOf(_token, msg.sender)\r\n        );\r\n    }\r\n\r\n    function withdrawToken(\r\n        address _token,\r\n        uint256 _amount,\r\n        uint256 _decimals\r\n    ) external {\r\n        require(_token != ethToken);\r\n        require(\r\n            exchange.isVerifiedToken(_token),\r\n            \"Token not verified on Exchange\"\r\n        );\r\n\r\n        require(\r\n            balanceOf(_token, msg.sender).sub(\r\n                getlockedFunds(msg.sender, _token)\r\n            ) >= _amount,\r\n            \"Insufficient Tokens to withdraw\"\r\n        );\r\n        require(!locked, \"Reentrant call detected!\");\r\n        locked = true;\r\n\r\n        token = IERC20(_token);\r\n        uint256 decimals = 18;\r\n        if (_decimals == 18) {\r\n            updateBalance(_token, msg.sender, _amount, false);\r\n            require(token.transfer(msg.sender, _amount));\r\n        } else {\r\n            updateBalance(\r\n                _token,\r\n                msg.sender,\r\n                _amount.mul(10 ** decimals.sub(_decimals)),\r\n                false\r\n            );\r\n            require(\r\n                token.transfer(\r\n                    msg.sender,\r\n                    _amount.div(10 ** decimals.sub(_decimals))\r\n                )\r\n            );\r\n        }\r\n\r\n        locked = false;\r\n        emit Withdraw(\r\n            _token,\r\n            msg.sender,\r\n            _amount,\r\n            balanceOf(_token, msg.sender)\r\n        );\r\n    }\r\n\r\n    function getlockedFunds(\r\n        address _user,\r\n        address _token\r\n    ) public view returns (uint256) {\r\n        return lockedFunds[_user][_token];\r\n    }\r\n\r\n    function updateLockedFunds(\r\n        address _user,\r\n        address _token,\r\n        uint256 _amount,\r\n        bool isAdd\r\n    ) public isAuthorised {\r\n        if (isAdd) {\r\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].add(\r\n                _amount\r\n            );\r\n        } else if (!isAdd) {\r\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].sub(\r\n                _amount\r\n            );\r\n        }\r\n    }\r\n\r\n    //balance of specific tokens in the dex owned by specific user\r\n    function balanceOf(\r\n        address _token,\r\n        address _user\r\n    ) public view returns (uint256) {\r\n        return s_tokens[_token][_user];\r\n    }\r\n\r\n    function updateBalance(\r\n        address _token,\r\n        address _user,\r\n        uint256 _amount,\r\n        bool isAdd\r\n    ) public isAuthorised {\r\n        if (isAdd) {\r\n            s_tokens[_token][_user] = s_tokens[_token][_user].add(_amount);\r\n        } else if (!isAdd) {\r\n            s_tokens[_token][_user] = s_tokens[_token][_user].sub(_amount);\r\n        }\r\n    }\r\n\r\n    function updateExchangeAddress(\r\n        address _exchangeAddress\r\n    ) external onlyOwner {\r\n        exchange = Exchange(_exchangeAddress);\r\n    }\r\n\r\n    modifier isAuthorised() {\r\n        require(\r\n            msg.sender == address(this) || msg.sender == address(exchange),\r\n            \"Unauthorised Function Call\"\r\n        );\r\n        _;\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"6321","formattedMessage":"Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> contracts/Exchange.sol:684:64:\n    |\n684 |     function getTokenInfo(address _token) public view returns (uint256) {\n    |                                                                ^^^^^^^\n\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":21328,"file":"contracts/Exchange.sol","start":21321},"type":"Warning"}],"sources":{"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol":{"ast":{"absolutePath":"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol","exportedSymbols":{"DataTypes":[351]},"id":352,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":351,"linearizedBaseContracts":[351],"name":"DataTypes","nameLocation":"70:9:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"DataTypes.ReserveData","id":33,"members":[{"constant":false,"id":4,"mutability":"mutable","name":"configuration","nameLocation":"172:13:0","nodeType":"VariableDeclaration","scope":33,"src":"148:37:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$36_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"},"typeName":{"id":3,"nodeType":"UserDefinedTypeName","pathNode":{"id":2,"name":"ReserveConfigurationMap","nodeType":"IdentifierPath","referencedDeclaration":36,"src":"148:23:0"},"referencedDeclaration":36,"src":"148:23:0","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$36_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"}},"visibility":"internal"},{"constant":false,"id":6,"mutability":"mutable","name":"liquidityIndex","nameLocation":"243:14:0","nodeType":"VariableDeclaration","scope":33,"src":"235:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5,"name":"uint128","nodeType":"ElementaryTypeName","src":"235:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":8,"mutability":"mutable","name":"currentLiquidityRate","nameLocation":"319:20:0","nodeType":"VariableDeclaration","scope":33,"src":"311:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":7,"name":"uint128","nodeType":"ElementaryTypeName","src":"311:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":10,"mutability":"mutable","name":"variableBorrowIndex","nameLocation":"399:19:0","nodeType":"VariableDeclaration","scope":33,"src":"391:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":9,"name":"uint128","nodeType":"ElementaryTypeName","src":"391:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":12,"mutability":"mutable","name":"currentVariableBorrowRate","nameLocation":"489:25:0","nodeType":"VariableDeclaration","scope":33,"src":"481:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":11,"name":"uint128","nodeType":"ElementaryTypeName","src":"481:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":14,"mutability":"mutable","name":"currentStableBorrowRate","nameLocation":"583:23:0","nodeType":"VariableDeclaration","scope":33,"src":"575:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":13,"name":"uint128","nodeType":"ElementaryTypeName","src":"575:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":16,"mutability":"mutable","name":"lastUpdateTimestamp","nameLocation":"650:19:0","nodeType":"VariableDeclaration","scope":33,"src":"643:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":15,"name":"uint40","nodeType":"ElementaryTypeName","src":"643:6:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"id","nameLocation":"770:2:0","nodeType":"VariableDeclaration","scope":33,"src":"763:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":17,"name":"uint16","nodeType":"ElementaryTypeName","src":"763:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"aTokenAddress","nameLocation":"807:13:0","nodeType":"VariableDeclaration","scope":33,"src":"799:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"799:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"mutability":"mutable","name":"stableDebtTokenAddress","nameLocation":"864:22:0","nodeType":"VariableDeclaration","scope":33,"src":"856:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"856:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":24,"mutability":"mutable","name":"variableDebtTokenAddress","nameLocation":"932:24:0","nodeType":"VariableDeclaration","scope":33,"src":"924:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23,"name":"address","nodeType":"ElementaryTypeName","src":"924:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":26,"mutability":"mutable","name":"interestRateStrategyAddress","nameLocation":"1014:27:0","nodeType":"VariableDeclaration","scope":33,"src":"1006:35:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":25,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":28,"mutability":"mutable","name":"accruedToTreasury","nameLocation":"1098:17:0","nodeType":"VariableDeclaration","scope":33,"src":"1090:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":27,"name":"uint128","nodeType":"ElementaryTypeName","src":"1090:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":30,"mutability":"mutable","name":"unbacked","nameLocation":"1204:8:0","nodeType":"VariableDeclaration","scope":33,"src":"1196:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":29,"name":"uint128","nodeType":"ElementaryTypeName","src":"1196:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":32,"mutability":"mutable","name":"isolationModeTotalDebt","nameLocation":"1299:22:0","nodeType":"VariableDeclaration","scope":33,"src":"1291:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":31,"name":"uint128","nodeType":"ElementaryTypeName","src":"1291:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"name":"ReserveData","nameLocation":"91:11:0","nodeType":"StructDefinition","scope":351,"src":"84:1242:0","visibility":"public"},{"canonicalName":"DataTypes.ReserveConfigurationMap","id":36,"members":[{"constant":false,"id":35,"mutability":"mutable","name":"data","nameLocation":"2212:4:0","nodeType":"VariableDeclaration","scope":36,"src":"2204:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ReserveConfigurationMap","nameLocation":"1337:23:0","nodeType":"StructDefinition","scope":351,"src":"1330:891:0","visibility":"public"},{"canonicalName":"DataTypes.UserConfigurationMap","id":40,"members":[{"constant":false,"id":39,"mutability":"mutable","name":"data","nameLocation":"2530:4:0","nodeType":"VariableDeclaration","scope":40,"src":"2522:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"2522:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UserConfigurationMap","nameLocation":"2232:20:0","nodeType":"StructDefinition","scope":351,"src":"2225:314:0","visibility":"public"},{"canonicalName":"DataTypes.EModeCategory","id":51,"members":[{"constant":false,"id":42,"mutability":"mutable","name":"ltv","nameLocation":"2647:3:0","nodeType":"VariableDeclaration","scope":51,"src":"2640:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":41,"name":"uint16","nodeType":"ElementaryTypeName","src":"2640:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":44,"mutability":"mutable","name":"liquidationThreshold","nameLocation":"2663:20:0","nodeType":"VariableDeclaration","scope":51,"src":"2656:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":43,"name":"uint16","nodeType":"ElementaryTypeName","src":"2656:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":46,"mutability":"mutable","name":"liquidationBonus","nameLocation":"2696:16:0","nodeType":"VariableDeclaration","scope":51,"src":"2689:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":45,"name":"uint16","nodeType":"ElementaryTypeName","src":"2689:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":48,"mutability":"mutable","name":"priceSource","nameLocation":"2837:11:0","nodeType":"VariableDeclaration","scope":51,"src":"2829:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":47,"name":"address","nodeType":"ElementaryTypeName","src":"2829:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":50,"mutability":"mutable","name":"label","nameLocation":"2861:5:0","nodeType":"VariableDeclaration","scope":51,"src":"2854:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":49,"name":"string","nodeType":"ElementaryTypeName","src":"2854:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"EModeCategory","nameLocation":"2550:13:0","nodeType":"StructDefinition","scope":351,"src":"2543:328:0","visibility":"public"},{"canonicalName":"DataTypes.InterestRateMode","id":55,"members":[{"id":52,"name":"NONE","nameLocation":"2903:4:0","nodeType":"EnumValue","src":"2903:4:0"},{"id":53,"name":"STABLE","nameLocation":"2913:6:0","nodeType":"EnumValue","src":"2913:6:0"},{"id":54,"name":"VARIABLE","nameLocation":"2925:8:0","nodeType":"EnumValue","src":"2925:8:0"}],"name":"InterestRateMode","nameLocation":"2880:16:0","nodeType":"EnumDefinition","src":"2875:62:0"},{"canonicalName":"DataTypes.ReserveCache","id":97,"members":[{"constant":false,"id":57,"mutability":"mutable","name":"currScaledVariableDebt","nameLocation":"2975:22:0","nodeType":"VariableDeclaration","scope":97,"src":"2967:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":56,"name":"uint256","nodeType":"ElementaryTypeName","src":"2967:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":59,"mutability":"mutable","name":"nextScaledVariableDebt","nameLocation":"3011:22:0","nodeType":"VariableDeclaration","scope":97,"src":"3003:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58,"name":"uint256","nodeType":"ElementaryTypeName","src":"3003:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":61,"mutability":"mutable","name":"currPrincipalStableDebt","nameLocation":"3047:23:0","nodeType":"VariableDeclaration","scope":97,"src":"3039:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60,"name":"uint256","nodeType":"ElementaryTypeName","src":"3039:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":63,"mutability":"mutable","name":"currAvgStableBorrowRate","nameLocation":"3084:23:0","nodeType":"VariableDeclaration","scope":97,"src":"3076:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62,"name":"uint256","nodeType":"ElementaryTypeName","src":"3076:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"currTotalStableDebt","nameLocation":"3121:19:0","nodeType":"VariableDeclaration","scope":97,"src":"3113:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":64,"name":"uint256","nodeType":"ElementaryTypeName","src":"3113:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"nextAvgStableBorrowRate","nameLocation":"3154:23:0","nodeType":"VariableDeclaration","scope":97,"src":"3146:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":66,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":69,"mutability":"mutable","name":"nextTotalStableDebt","nameLocation":"3191:19:0","nodeType":"VariableDeclaration","scope":97,"src":"3183:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":68,"name":"uint256","nodeType":"ElementaryTypeName","src":"3183:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":71,"mutability":"mutable","name":"currLiquidityIndex","nameLocation":"3224:18:0","nodeType":"VariableDeclaration","scope":97,"src":"3216:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":70,"name":"uint256","nodeType":"ElementaryTypeName","src":"3216:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":73,"mutability":"mutable","name":"nextLiquidityIndex","nameLocation":"3256:18:0","nodeType":"VariableDeclaration","scope":97,"src":"3248:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":72,"name":"uint256","nodeType":"ElementaryTypeName","src":"3248:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":75,"mutability":"mutable","name":"currVariableBorrowIndex","nameLocation":"3288:23:0","nodeType":"VariableDeclaration","scope":97,"src":"3280:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":74,"name":"uint256","nodeType":"ElementaryTypeName","src":"3280:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":77,"mutability":"mutable","name":"nextVariableBorrowIndex","nameLocation":"3325:23:0","nodeType":"VariableDeclaration","scope":97,"src":"3317:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":76,"name":"uint256","nodeType":"ElementaryTypeName","src":"3317:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":79,"mutability":"mutable","name":"currLiquidityRate","nameLocation":"3362:17:0","nodeType":"VariableDeclaration","scope":97,"src":"3354:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":78,"name":"uint256","nodeType":"ElementaryTypeName","src":"3354:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":81,"mutability":"mutable","name":"currVariableBorrowRate","nameLocation":"3393:22:0","nodeType":"VariableDeclaration","scope":97,"src":"3385:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":80,"name":"uint256","nodeType":"ElementaryTypeName","src":"3385:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":83,"mutability":"mutable","name":"reserveFactor","nameLocation":"3429:13:0","nodeType":"VariableDeclaration","scope":97,"src":"3421:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82,"name":"uint256","nodeType":"ElementaryTypeName","src":"3421:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":86,"mutability":"mutable","name":"reserveConfiguration","nameLocation":"3472:20:0","nodeType":"VariableDeclaration","scope":97,"src":"3448:44:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$36_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"},"typeName":{"id":85,"nodeType":"UserDefinedTypeName","pathNode":{"id":84,"name":"ReserveConfigurationMap","nodeType":"IdentifierPath","referencedDeclaration":36,"src":"3448:23:0"},"referencedDeclaration":36,"src":"3448:23:0","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$36_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"}},"visibility":"internal"},{"constant":false,"id":88,"mutability":"mutable","name":"aTokenAddress","nameLocation":"3506:13:0","nodeType":"VariableDeclaration","scope":97,"src":"3498:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":87,"name":"address","nodeType":"ElementaryTypeName","src":"3498:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":90,"mutability":"mutable","name":"stableDebtTokenAddress","nameLocation":"3533:22:0","nodeType":"VariableDeclaration","scope":97,"src":"3525:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89,"name":"address","nodeType":"ElementaryTypeName","src":"3525:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":92,"mutability":"mutable","name":"variableDebtTokenAddress","nameLocation":"3569:24:0","nodeType":"VariableDeclaration","scope":97,"src":"3561:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"3561:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":94,"mutability":"mutable","name":"reserveLastUpdateTimestamp","nameLocation":"3606:26:0","nodeType":"VariableDeclaration","scope":97,"src":"3599:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":93,"name":"uint40","nodeType":"ElementaryTypeName","src":"3599:6:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":96,"mutability":"mutable","name":"stableDebtLastUpdateTimestamp","nameLocation":"3645:29:0","nodeType":"VariableDeclaration","scope":97,"src":"3638:36:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":95,"name":"uint40","nodeType":"ElementaryTypeName","src":"3638:6:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"name":"ReserveCache","nameLocation":"2948:12:0","nodeType":"StructDefinition","scope":351,"src":"2941:738:0","visibility":"public"},{"canonicalName":"DataTypes.ExecuteLiquidationCallParams","id":116,"members":[{"constant":false,"id":99,"mutability":"mutable","name":"reservesCount","nameLocation":"3733:13:0","nodeType":"VariableDeclaration","scope":116,"src":"3725:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":98,"name":"uint256","nodeType":"ElementaryTypeName","src":"3725:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":101,"mutability":"mutable","name":"debtToCover","nameLocation":"3760:11:0","nodeType":"VariableDeclaration","scope":116,"src":"3752:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100,"name":"uint256","nodeType":"ElementaryTypeName","src":"3752:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":103,"mutability":"mutable","name":"collateralAsset","nameLocation":"3785:15:0","nodeType":"VariableDeclaration","scope":116,"src":"3777:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":102,"name":"address","nodeType":"ElementaryTypeName","src":"3777:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":105,"mutability":"mutable","name":"debtAsset","nameLocation":"3814:9:0","nodeType":"VariableDeclaration","scope":116,"src":"3806:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":104,"name":"address","nodeType":"ElementaryTypeName","src":"3806:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":107,"mutability":"mutable","name":"user","nameLocation":"3837:4:0","nodeType":"VariableDeclaration","scope":116,"src":"3829:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":106,"name":"address","nodeType":"ElementaryTypeName","src":"3829:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":109,"mutability":"mutable","name":"receiveAToken","nameLocation":"3852:13:0","nodeType":"VariableDeclaration","scope":116,"src":"3847:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":108,"name":"bool","nodeType":"ElementaryTypeName","src":"3847:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":111,"mutability":"mutable","name":"priceOracle","nameLocation":"3879:11:0","nodeType":"VariableDeclaration","scope":116,"src":"3871:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":110,"name":"address","nodeType":"ElementaryTypeName","src":"3871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":113,"mutability":"mutable","name":"userEModeCategory","nameLocation":"3902:17:0","nodeType":"VariableDeclaration","scope":116,"src":"3896:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":112,"name":"uint8","nodeType":"ElementaryTypeName","src":"3896:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":115,"mutability":"mutable","name":"priceOracleSentinel","nameLocation":"3933:19:0","nodeType":"VariableDeclaration","scope":116,"src":"3925:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":114,"name":"address","nodeType":"ElementaryTypeName","src":"3925:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"ExecuteLiquidationCallParams","nameLocation":"3690:28:0","nodeType":"StructDefinition","scope":351,"src":"3683:274:0","visibility":"public"},{"canonicalName":"DataTypes.ExecuteSupplyParams","id":125,"members":[{"constant":false,"id":118,"mutability":"mutable","name":"asset","nameLocation":"4002:5:0","nodeType":"VariableDeclaration","scope":125,"src":"3994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"3994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":120,"mutability":"mutable","name":"amount","nameLocation":"4021:6:0","nodeType":"VariableDeclaration","scope":125,"src":"4013:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":119,"name":"uint256","nodeType":"ElementaryTypeName","src":"4013:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":122,"mutability":"mutable","name":"onBehalfOf","nameLocation":"4041:10:0","nodeType":"VariableDeclaration","scope":125,"src":"4033:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":121,"name":"address","nodeType":"ElementaryTypeName","src":"4033:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":124,"mutability":"mutable","name":"referralCode","nameLocation":"4064:12:0","nodeType":"VariableDeclaration","scope":125,"src":"4057:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":123,"name":"uint16","nodeType":"ElementaryTypeName","src":"4057:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"name":"ExecuteSupplyParams","nameLocation":"3968:19:0","nodeType":"StructDefinition","scope":351,"src":"3961:120:0","visibility":"public"},{"canonicalName":"DataTypes.ExecuteBorrowParams","id":151,"members":[{"constant":false,"id":127,"mutability":"mutable","name":"asset","nameLocation":"4126:5:0","nodeType":"VariableDeclaration","scope":151,"src":"4118:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":126,"name":"address","nodeType":"ElementaryTypeName","src":"4118:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":129,"mutability":"mutable","name":"user","nameLocation":"4145:4:0","nodeType":"VariableDeclaration","scope":151,"src":"4137:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"4137:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":131,"mutability":"mutable","name":"onBehalfOf","nameLocation":"4163:10:0","nodeType":"VariableDeclaration","scope":151,"src":"4155:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":130,"name":"address","nodeType":"ElementaryTypeName","src":"4155:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"amount","nameLocation":"4187:6:0","nodeType":"VariableDeclaration","scope":151,"src":"4179:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":132,"name":"uint256","nodeType":"ElementaryTypeName","src":"4179:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":136,"mutability":"mutable","name":"interestRateMode","nameLocation":"4216:16:0","nodeType":"VariableDeclaration","scope":151,"src":"4199:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$55","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":135,"nodeType":"UserDefinedTypeName","pathNode":{"id":134,"name":"InterestRateMode","nodeType":"IdentifierPath","referencedDeclaration":55,"src":"4199:16:0"},"referencedDeclaration":55,"src":"4199:16:0","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$55","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"internal"},{"constant":false,"id":138,"mutability":"mutable","name":"referralCode","nameLocation":"4245:12:0","nodeType":"VariableDeclaration","scope":151,"src":"4238:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":137,"name":"uint16","nodeType":"ElementaryTypeName","src":"4238:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":140,"mutability":"mutable","name":"releaseUnderlying","nameLocation":"4268:17:0","nodeType":"VariableDeclaration","scope":151,"src":"4263:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":139,"name":"bool","nodeType":"ElementaryTypeName","src":"4263:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":142,"mutability":"mutable","name":"maxStableRateBorrowSizePercent","nameLocation":"4299:30:0","nodeType":"VariableDeclaration","scope":151,"src":"4291:38:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":141,"name":"uint256","nodeType":"ElementaryTypeName","src":"4291:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":144,"mutability":"mutable","name":"reservesCount","nameLocation":"4343:13:0","nodeType":"VariableDeclaration","scope":151,"src":"4335:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":143,"name":"uint256","nodeType":"ElementaryTypeName","src":"4335:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":146,"mutability":"mutable","name":"oracle","nameLocation":"4370:6:0","nodeType":"VariableDeclaration","scope":151,"src":"4362:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"4362:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":148,"mutability":"mutable","name":"userEModeCategory","nameLocation":"4388:17:0","nodeType":"VariableDeclaration","scope":151,"src":"4382:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":147,"name":"uint8","nodeType":"ElementaryTypeName","src":"4382:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":150,"mutability":"mutable","name":"priceOracleSentinel","nameLocation":"4419:19:0","nodeType":"VariableDeclaration","scope":151,"src":"4411:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":149,"name":"address","nodeType":"ElementaryTypeName","src":"4411:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"ExecuteBorrowParams","nameLocation":"4092:19:0","nodeType":"StructDefinition","scope":351,"src":"4085:358:0","visibility":"public"},{"canonicalName":"DataTypes.ExecuteRepayParams","id":163,"members":[{"constant":false,"id":153,"mutability":"mutable","name":"asset","nameLocation":"4487:5:0","nodeType":"VariableDeclaration","scope":163,"src":"4479:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"4479:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"amount","nameLocation":"4506:6:0","nodeType":"VariableDeclaration","scope":163,"src":"4498:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"4498:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"interestRateMode","nameLocation":"4535:16:0","nodeType":"VariableDeclaration","scope":163,"src":"4518:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$55","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":157,"nodeType":"UserDefinedTypeName","pathNode":{"id":156,"name":"InterestRateMode","nodeType":"IdentifierPath","referencedDeclaration":55,"src":"4518:16:0"},"referencedDeclaration":55,"src":"4518:16:0","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$55","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"onBehalfOf","nameLocation":"4565:10:0","nodeType":"VariableDeclaration","scope":163,"src":"4557:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":159,"name":"address","nodeType":"ElementaryTypeName","src":"4557:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"useATokens","nameLocation":"4586:10:0","nodeType":"VariableDeclaration","scope":163,"src":"4581:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":161,"name":"bool","nodeType":"ElementaryTypeName","src":"4581:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ExecuteRepayParams","nameLocation":"4454:18:0","nodeType":"StructDefinition","scope":351,"src":"4447:154:0","visibility":"public"},{"canonicalName":"DataTypes.ExecuteWithdrawParams","id":176,"members":[{"constant":false,"id":165,"mutability":"mutable","name":"asset","nameLocation":"4648:5:0","nodeType":"VariableDeclaration","scope":176,"src":"4640:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":164,"name":"address","nodeType":"ElementaryTypeName","src":"4640:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":167,"mutability":"mutable","name":"amount","nameLocation":"4667:6:0","nodeType":"VariableDeclaration","scope":176,"src":"4659:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":166,"name":"uint256","nodeType":"ElementaryTypeName","src":"4659:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":169,"mutability":"mutable","name":"to","nameLocation":"4687:2:0","nodeType":"VariableDeclaration","scope":176,"src":"4679:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":168,"name":"address","nodeType":"ElementaryTypeName","src":"4679:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"reservesCount","nameLocation":"4703:13:0","nodeType":"VariableDeclaration","scope":176,"src":"4695:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":170,"name":"uint256","nodeType":"ElementaryTypeName","src":"4695:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"oracle","nameLocation":"4730:6:0","nodeType":"VariableDeclaration","scope":176,"src":"4722:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":172,"name":"address","nodeType":"ElementaryTypeName","src":"4722:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"userEModeCategory","nameLocation":"4748:17:0","nodeType":"VariableDeclaration","scope":176,"src":"4742:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":174,"name":"uint8","nodeType":"ElementaryTypeName","src":"4742:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"ExecuteWithdrawParams","nameLocation":"4612:21:0","nodeType":"StructDefinition","scope":351,"src":"4605:165:0","visibility":"public"},{"canonicalName":"DataTypes.ExecuteSetUserEModeParams","id":183,"members":[{"constant":false,"id":178,"mutability":"mutable","name":"reservesCount","nameLocation":"4821:13:0","nodeType":"VariableDeclaration","scope":183,"src":"4813:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":177,"name":"uint256","nodeType":"ElementaryTypeName","src":"4813:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"oracle","nameLocation":"4848:6:0","nodeType":"VariableDeclaration","scope":183,"src":"4840:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"4840:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"categoryId","nameLocation":"4866:10:0","nodeType":"VariableDeclaration","scope":183,"src":"4860:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":181,"name":"uint8","nodeType":"ElementaryTypeName","src":"4860:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"ExecuteSetUserEModeParams","nameLocation":"4781:25:0","nodeType":"StructDefinition","scope":351,"src":"4774:107:0","visibility":"public"},{"canonicalName":"DataTypes.FinalizeTransferParams","id":202,"members":[{"constant":false,"id":185,"mutability":"mutable","name":"asset","nameLocation":"4929:5:0","nodeType":"VariableDeclaration","scope":202,"src":"4921:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"4921:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"from","nameLocation":"4948:4:0","nodeType":"VariableDeclaration","scope":202,"src":"4940:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"4940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":189,"mutability":"mutable","name":"to","nameLocation":"4966:2:0","nodeType":"VariableDeclaration","scope":202,"src":"4958:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":188,"name":"address","nodeType":"ElementaryTypeName","src":"4958:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"amount","nameLocation":"4982:6:0","nodeType":"VariableDeclaration","scope":202,"src":"4974:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":190,"name":"uint256","nodeType":"ElementaryTypeName","src":"4974:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":193,"mutability":"mutable","name":"balanceFromBefore","nameLocation":"5002:17:0","nodeType":"VariableDeclaration","scope":202,"src":"4994:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":192,"name":"uint256","nodeType":"ElementaryTypeName","src":"4994:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"balanceToBefore","nameLocation":"5033:15:0","nodeType":"VariableDeclaration","scope":202,"src":"5025:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":194,"name":"uint256","nodeType":"ElementaryTypeName","src":"5025:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"reservesCount","nameLocation":"5062:13:0","nodeType":"VariableDeclaration","scope":202,"src":"5054:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":196,"name":"uint256","nodeType":"ElementaryTypeName","src":"5054:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"oracle","nameLocation":"5089:6:0","nodeType":"VariableDeclaration","scope":202,"src":"5081:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":198,"name":"address","nodeType":"ElementaryTypeName","src":"5081:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"fromEModeCategory","nameLocation":"5107:17:0","nodeType":"VariableDeclaration","scope":202,"src":"5101:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":200,"name":"uint8","nodeType":"ElementaryTypeName","src":"5101:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"FinalizeTransferParams","nameLocation":"4892:22:0","nodeType":"StructDefinition","scope":351,"src":"4885:244:0","visibility":"public"},{"canonicalName":"DataTypes.FlashloanParams","id":234,"members":[{"constant":false,"id":204,"mutability":"mutable","name":"receiverAddress","nameLocation":"5170:15:0","nodeType":"VariableDeclaration","scope":234,"src":"5162:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":203,"name":"address","nodeType":"ElementaryTypeName","src":"5162:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"assets","nameLocation":"5201:6:0","nodeType":"VariableDeclaration","scope":234,"src":"5191:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"5191:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":206,"nodeType":"ArrayTypeName","src":"5191:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":210,"mutability":"mutable","name":"amounts","nameLocation":"5223:7:0","nodeType":"VariableDeclaration","scope":234,"src":"5213:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":208,"name":"uint256","nodeType":"ElementaryTypeName","src":"5213:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":209,"nodeType":"ArrayTypeName","src":"5213:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":213,"mutability":"mutable","name":"interestRateModes","nameLocation":"5246:17:0","nodeType":"VariableDeclaration","scope":234,"src":"5236:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":211,"name":"uint256","nodeType":"ElementaryTypeName","src":"5236:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":212,"nodeType":"ArrayTypeName","src":"5236:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":215,"mutability":"mutable","name":"onBehalfOf","nameLocation":"5277:10:0","nodeType":"VariableDeclaration","scope":234,"src":"5269:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":214,"name":"address","nodeType":"ElementaryTypeName","src":"5269:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":217,"mutability":"mutable","name":"params","nameLocation":"5299:6:0","nodeType":"VariableDeclaration","scope":234,"src":"5293:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":216,"name":"bytes","nodeType":"ElementaryTypeName","src":"5293:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":219,"mutability":"mutable","name":"referralCode","nameLocation":"5318:12:0","nodeType":"VariableDeclaration","scope":234,"src":"5311:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":218,"name":"uint16","nodeType":"ElementaryTypeName","src":"5311:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"flashLoanPremiumToProtocol","nameLocation":"5344:26:0","nodeType":"VariableDeclaration","scope":234,"src":"5336:34:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"flashLoanPremiumTotal","nameLocation":"5384:21:0","nodeType":"VariableDeclaration","scope":234,"src":"5376:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":225,"mutability":"mutable","name":"maxStableRateBorrowSizePercent","nameLocation":"5419:30:0","nodeType":"VariableDeclaration","scope":234,"src":"5411:38:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"5411:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":227,"mutability":"mutable","name":"reservesCount","nameLocation":"5463:13:0","nodeType":"VariableDeclaration","scope":234,"src":"5455:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":226,"name":"uint256","nodeType":"ElementaryTypeName","src":"5455:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":229,"mutability":"mutable","name":"addressesProvider","nameLocation":"5490:17:0","nodeType":"VariableDeclaration","scope":234,"src":"5482:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"5482:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":231,"mutability":"mutable","name":"userEModeCategory","nameLocation":"5519:17:0","nodeType":"VariableDeclaration","scope":234,"src":"5513:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":230,"name":"uint8","nodeType":"ElementaryTypeName","src":"5513:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":233,"mutability":"mutable","name":"isAuthorizedFlashBorrower","nameLocation":"5547:25:0","nodeType":"VariableDeclaration","scope":234,"src":"5542:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":232,"name":"bool","nodeType":"ElementaryTypeName","src":"5542:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"FlashloanParams","nameLocation":"5140:15:0","nodeType":"StructDefinition","scope":351,"src":"5133:444:0","visibility":"public"},{"canonicalName":"DataTypes.FlashloanSimpleParams","id":249,"members":[{"constant":false,"id":236,"mutability":"mutable","name":"receiverAddress","nameLocation":"5624:15:0","nodeType":"VariableDeclaration","scope":249,"src":"5616:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":235,"name":"address","nodeType":"ElementaryTypeName","src":"5616:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":238,"mutability":"mutable","name":"asset","nameLocation":"5653:5:0","nodeType":"VariableDeclaration","scope":249,"src":"5645:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":237,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":240,"mutability":"mutable","name":"amount","nameLocation":"5672:6:0","nodeType":"VariableDeclaration","scope":249,"src":"5664:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":239,"name":"uint256","nodeType":"ElementaryTypeName","src":"5664:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":242,"mutability":"mutable","name":"params","nameLocation":"5690:6:0","nodeType":"VariableDeclaration","scope":249,"src":"5684:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":241,"name":"bytes","nodeType":"ElementaryTypeName","src":"5684:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":244,"mutability":"mutable","name":"referralCode","nameLocation":"5709:12:0","nodeType":"VariableDeclaration","scope":249,"src":"5702:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":243,"name":"uint16","nodeType":"ElementaryTypeName","src":"5702:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":246,"mutability":"mutable","name":"flashLoanPremiumToProtocol","nameLocation":"5735:26:0","nodeType":"VariableDeclaration","scope":249,"src":"5727:34:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":245,"name":"uint256","nodeType":"ElementaryTypeName","src":"5727:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":248,"mutability":"mutable","name":"flashLoanPremiumTotal","nameLocation":"5775:21:0","nodeType":"VariableDeclaration","scope":249,"src":"5767:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":247,"name":"uint256","nodeType":"ElementaryTypeName","src":"5767:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FlashloanSimpleParams","nameLocation":"5588:21:0","nodeType":"StructDefinition","scope":351,"src":"5581:220:0","visibility":"public"},{"canonicalName":"DataTypes.FlashLoanRepaymentParams","id":262,"members":[{"constant":false,"id":251,"mutability":"mutable","name":"amount","nameLocation":"5851:6:0","nodeType":"VariableDeclaration","scope":262,"src":"5843:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":250,"name":"uint256","nodeType":"ElementaryTypeName","src":"5843:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":253,"mutability":"mutable","name":"totalPremium","nameLocation":"5871:12:0","nodeType":"VariableDeclaration","scope":262,"src":"5863:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":252,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":255,"mutability":"mutable","name":"flashLoanPremiumToProtocol","nameLocation":"5897:26:0","nodeType":"VariableDeclaration","scope":262,"src":"5889:34:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":254,"name":"uint256","nodeType":"ElementaryTypeName","src":"5889:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":257,"mutability":"mutable","name":"asset","nameLocation":"5937:5:0","nodeType":"VariableDeclaration","scope":262,"src":"5929:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"5929:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":259,"mutability":"mutable","name":"receiverAddress","nameLocation":"5956:15:0","nodeType":"VariableDeclaration","scope":262,"src":"5948:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":258,"name":"address","nodeType":"ElementaryTypeName","src":"5948:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"referralCode","nameLocation":"5984:12:0","nodeType":"VariableDeclaration","scope":262,"src":"5977:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":260,"name":"uint16","nodeType":"ElementaryTypeName","src":"5977:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"name":"FlashLoanRepaymentParams","nameLocation":"5812:24:0","nodeType":"StructDefinition","scope":351,"src":"5805:196:0","visibility":"public"},{"canonicalName":"DataTypes.CalculateUserAccountDataParams","id":274,"members":[{"constant":false,"id":265,"mutability":"mutable","name":"userConfig","nameLocation":"6070:10:0","nodeType":"VariableDeclaration","scope":274,"src":"6049:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$40_storage_ptr","typeString":"struct DataTypes.UserConfigurationMap"},"typeName":{"id":264,"nodeType":"UserDefinedTypeName","pathNode":{"id":263,"name":"UserConfigurationMap","nodeType":"IdentifierPath","referencedDeclaration":40,"src":"6049:20:0"},"referencedDeclaration":40,"src":"6049:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$40_storage_ptr","typeString":"struct DataTypes.UserConfigurationMap"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"reservesCount","nameLocation":"6094:13:0","nodeType":"VariableDeclaration","scope":274,"src":"6086:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":266,"name":"uint256","nodeType":"ElementaryTypeName","src":"6086:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":269,"mutability":"mutable","name":"user","nameLocation":"6121:4:0","nodeType":"VariableDeclaration","scope":274,"src":"6113:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"6113:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":271,"mutability":"mutable","name":"oracle","nameLocation":"6139:6:0","nodeType":"VariableDeclaration","scope":274,"src":"6131:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":270,"name":"address","nodeType":"ElementaryTypeName","src":"6131:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":273,"mutability":"mutable","name":"userEModeCategory","nameLocation":"6157:17:0","nodeType":"VariableDeclaration","scope":274,"src":"6151:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":272,"name":"uint8","nodeType":"ElementaryTypeName","src":"6151:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"CalculateUserAccountDataParams","nameLocation":"6012:30:0","nodeType":"StructDefinition","scope":351,"src":"6005:174:0","visibility":"public"},{"canonicalName":"DataTypes.ValidateBorrowParams","id":306,"members":[{"constant":false,"id":277,"mutability":"mutable","name":"reserveCache","nameLocation":"6230:12:0","nodeType":"VariableDeclaration","scope":306,"src":"6217:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveCache_$97_storage_ptr","typeString":"struct DataTypes.ReserveCache"},"typeName":{"id":276,"nodeType":"UserDefinedTypeName","pathNode":{"id":275,"name":"ReserveCache","nodeType":"IdentifierPath","referencedDeclaration":97,"src":"6217:12:0"},"referencedDeclaration":97,"src":"6217:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveCache_$97_storage_ptr","typeString":"struct DataTypes.ReserveCache"}},"visibility":"internal"},{"constant":false,"id":280,"mutability":"mutable","name":"userConfig","nameLocation":"6269:10:0","nodeType":"VariableDeclaration","scope":306,"src":"6248:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$40_storage_ptr","typeString":"struct DataTypes.UserConfigurationMap"},"typeName":{"id":279,"nodeType":"UserDefinedTypeName","pathNode":{"id":278,"name":"UserConfigurationMap","nodeType":"IdentifierPath","referencedDeclaration":40,"src":"6248:20:0"},"referencedDeclaration":40,"src":"6248:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$40_storage_ptr","typeString":"struct DataTypes.UserConfigurationMap"}},"visibility":"internal"},{"constant":false,"id":282,"mutability":"mutable","name":"asset","nameLocation":"6293:5:0","nodeType":"VariableDeclaration","scope":306,"src":"6285:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"6285:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":284,"mutability":"mutable","name":"userAddress","nameLocation":"6312:11:0","nodeType":"VariableDeclaration","scope":306,"src":"6304:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"6304:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"amount","nameLocation":"6337:6:0","nodeType":"VariableDeclaration","scope":306,"src":"6329:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":285,"name":"uint256","nodeType":"ElementaryTypeName","src":"6329:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":289,"mutability":"mutable","name":"interestRateMode","nameLocation":"6366:16:0","nodeType":"VariableDeclaration","scope":306,"src":"6349:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$55","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":288,"nodeType":"UserDefinedTypeName","pathNode":{"id":287,"name":"InterestRateMode","nodeType":"IdentifierPath","referencedDeclaration":55,"src":"6349:16:0"},"referencedDeclaration":55,"src":"6349:16:0","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$55","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"internal"},{"constant":false,"id":291,"mutability":"mutable","name":"maxStableLoanPercent","nameLocation":"6396:20:0","nodeType":"VariableDeclaration","scope":306,"src":"6388:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":290,"name":"uint256","nodeType":"ElementaryTypeName","src":"6388:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":293,"mutability":"mutable","name":"reservesCount","nameLocation":"6430:13:0","nodeType":"VariableDeclaration","scope":306,"src":"6422:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":292,"name":"uint256","nodeType":"ElementaryTypeName","src":"6422:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":295,"mutability":"mutable","name":"oracle","nameLocation":"6457:6:0","nodeType":"VariableDeclaration","scope":306,"src":"6449:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":294,"name":"address","nodeType":"ElementaryTypeName","src":"6449:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":297,"mutability":"mutable","name":"userEModeCategory","nameLocation":"6475:17:0","nodeType":"VariableDeclaration","scope":306,"src":"6469:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":296,"name":"uint8","nodeType":"ElementaryTypeName","src":"6469:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":299,"mutability":"mutable","name":"priceOracleSentinel","nameLocation":"6506:19:0","nodeType":"VariableDeclaration","scope":306,"src":"6498:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"6498:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":301,"mutability":"mutable","name":"isolationModeActive","nameLocation":"6536:19:0","nodeType":"VariableDeclaration","scope":306,"src":"6531:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":300,"name":"bool","nodeType":"ElementaryTypeName","src":"6531:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"isolationModeCollateralAddress","nameLocation":"6569:30:0","nodeType":"VariableDeclaration","scope":306,"src":"6561:38:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":302,"name":"address","nodeType":"ElementaryTypeName","src":"6561:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":305,"mutability":"mutable","name":"isolationModeDebtCeiling","nameLocation":"6613:24:0","nodeType":"VariableDeclaration","scope":306,"src":"6605:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":304,"name":"uint256","nodeType":"ElementaryTypeName","src":"6605:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ValidateBorrowParams","nameLocation":"6190:20:0","nodeType":"StructDefinition","scope":351,"src":"6183:459:0","visibility":"public"},{"canonicalName":"DataTypes.ValidateLiquidationCallParams","id":316,"members":[{"constant":false,"id":309,"mutability":"mutable","name":"debtReserveCache","nameLocation":"6702:16:0","nodeType":"VariableDeclaration","scope":316,"src":"6689:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveCache_$97_storage_ptr","typeString":"struct DataTypes.ReserveCache"},"typeName":{"id":308,"nodeType":"UserDefinedTypeName","pathNode":{"id":307,"name":"ReserveCache","nodeType":"IdentifierPath","referencedDeclaration":97,"src":"6689:12:0"},"referencedDeclaration":97,"src":"6689:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveCache_$97_storage_ptr","typeString":"struct DataTypes.ReserveCache"}},"visibility":"internal"},{"constant":false,"id":311,"mutability":"mutable","name":"totalDebt","nameLocation":"6732:9:0","nodeType":"VariableDeclaration","scope":316,"src":"6724:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"6724:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":313,"mutability":"mutable","name":"healthFactor","nameLocation":"6755:12:0","nodeType":"VariableDeclaration","scope":316,"src":"6747:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":312,"name":"uint256","nodeType":"ElementaryTypeName","src":"6747:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":315,"mutability":"mutable","name":"priceOracleSentinel","nameLocation":"6781:19:0","nodeType":"VariableDeclaration","scope":316,"src":"6773:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"6773:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"ValidateLiquidationCallParams","nameLocation":"6653:29:0","nodeType":"StructDefinition","scope":351,"src":"6646:159:0","visibility":"public"},{"canonicalName":"DataTypes.CalculateInterestRatesParams","id":335,"members":[{"constant":false,"id":318,"mutability":"mutable","name":"unbacked","nameLocation":"6859:8:0","nodeType":"VariableDeclaration","scope":335,"src":"6851:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":317,"name":"uint256","nodeType":"ElementaryTypeName","src":"6851:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"liquidityAdded","nameLocation":"6881:14:0","nodeType":"VariableDeclaration","scope":335,"src":"6873:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":319,"name":"uint256","nodeType":"ElementaryTypeName","src":"6873:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":322,"mutability":"mutable","name":"liquidityTaken","nameLocation":"6909:14:0","nodeType":"VariableDeclaration","scope":335,"src":"6901:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":321,"name":"uint256","nodeType":"ElementaryTypeName","src":"6901:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"totalStableDebt","nameLocation":"6937:15:0","nodeType":"VariableDeclaration","scope":335,"src":"6929:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":323,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":326,"mutability":"mutable","name":"totalVariableDebt","nameLocation":"6966:17:0","nodeType":"VariableDeclaration","scope":335,"src":"6958:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":325,"name":"uint256","nodeType":"ElementaryTypeName","src":"6958:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":328,"mutability":"mutable","name":"averageStableBorrowRate","nameLocation":"6997:23:0","nodeType":"VariableDeclaration","scope":335,"src":"6989:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":327,"name":"uint256","nodeType":"ElementaryTypeName","src":"6989:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":330,"mutability":"mutable","name":"reserveFactor","nameLocation":"7034:13:0","nodeType":"VariableDeclaration","scope":335,"src":"7026:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":329,"name":"uint256","nodeType":"ElementaryTypeName","src":"7026:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":332,"mutability":"mutable","name":"reserve","nameLocation":"7061:7:0","nodeType":"VariableDeclaration","scope":335,"src":"7053:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"7053:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"mutability":"mutable","name":"aToken","nameLocation":"7082:6:0","nodeType":"VariableDeclaration","scope":335,"src":"7074:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"7074:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"CalculateInterestRatesParams","nameLocation":"6816:28:0","nodeType":"StructDefinition","scope":351,"src":"6809:284:0","visibility":"public"},{"canonicalName":"DataTypes.InitReserveParams","id":350,"members":[{"constant":false,"id":337,"mutability":"mutable","name":"asset","nameLocation":"7136:5:0","nodeType":"VariableDeclaration","scope":350,"src":"7128:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"7128:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"aTokenAddress","nameLocation":"7155:13:0","nodeType":"VariableDeclaration","scope":350,"src":"7147:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"7147:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"stableDebtAddress","nameLocation":"7182:17:0","nodeType":"VariableDeclaration","scope":350,"src":"7174:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"7174:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":343,"mutability":"mutable","name":"variableDebtAddress","nameLocation":"7213:19:0","nodeType":"VariableDeclaration","scope":350,"src":"7205:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":342,"name":"address","nodeType":"ElementaryTypeName","src":"7205:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":345,"mutability":"mutable","name":"interestRateStrategyAddress","nameLocation":"7246:27:0","nodeType":"VariableDeclaration","scope":350,"src":"7238:35:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":344,"name":"address","nodeType":"ElementaryTypeName","src":"7238:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":347,"mutability":"mutable","name":"reservesCount","nameLocation":"7286:13:0","nodeType":"VariableDeclaration","scope":350,"src":"7279:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":346,"name":"uint16","nodeType":"ElementaryTypeName","src":"7279:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":349,"mutability":"mutable","name":"maxNumberReserves","nameLocation":"7312:17:0","nodeType":"VariableDeclaration","scope":350,"src":"7305:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":348,"name":"uint16","nodeType":"ElementaryTypeName","src":"7305:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"name":"InitReserveParams","nameLocation":"7104:17:0","nodeType":"StructDefinition","scope":351,"src":"7097:237:0","visibility":"public"}],"scope":352,"src":"62:7274:0","usedErrors":[]}],"src":"37:7300:0"},"id":0},"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","exportedSymbols":{"AggregatorV3Interface":[397]},"id":398,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":353,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":397,"linearizedBaseContracts":[397],"name":"AggregatorV3Interface","nameLocation":"67:21:1","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":358,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"102:8:1","nodeType":"FunctionDefinition","parameters":{"id":354,"nodeType":"ParameterList","parameters":[],"src":"110:2:1"},"returnParameters":{"id":357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":358,"src":"136:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":355,"name":"uint8","nodeType":"ElementaryTypeName","src":"136:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"135:7:1"},"scope":397,"src":"93:50:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7284e416","id":363,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"156:11:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"167:2:1"},"returnParameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"193:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":360,"name":"string","nodeType":"ElementaryTypeName","src":"193:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"192:15:1"},"scope":397,"src":"147:61:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":368,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"221:7:1","nodeType":"FunctionDefinition","parameters":{"id":364,"nodeType":"ParameterList","parameters":[],"src":"228:2:1"},"returnParameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":368,"src":"254:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":365,"name":"uint256","nodeType":"ElementaryTypeName","src":"254:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"253:9:1"},"scope":397,"src":"212:51:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a6fc8f5","id":383,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"276:12:1","nodeType":"FunctionDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":370,"mutability":"mutable","name":"_roundId","nameLocation":"296:8:1","nodeType":"VariableDeclaration","scope":383,"src":"289:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":369,"name":"uint80","nodeType":"ElementaryTypeName","src":"289:6:1","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"288:17:1"},"returnParameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"roundId","nameLocation":"355:7:1","nodeType":"VariableDeclaration","scope":383,"src":"348:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":372,"name":"uint80","nodeType":"ElementaryTypeName","src":"348:6:1","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":375,"mutability":"mutable","name":"answer","nameLocation":"377:6:1","nodeType":"VariableDeclaration","scope":383,"src":"370:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":374,"name":"int256","nodeType":"ElementaryTypeName","src":"370:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":377,"mutability":"mutable","name":"startedAt","nameLocation":"399:9:1","nodeType":"VariableDeclaration","scope":383,"src":"391:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":376,"name":"uint256","nodeType":"ElementaryTypeName","src":"391:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":379,"mutability":"mutable","name":"updatedAt","nameLocation":"424:9:1","nodeType":"VariableDeclaration","scope":383,"src":"416:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":378,"name":"uint256","nodeType":"ElementaryTypeName","src":"416:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":381,"mutability":"mutable","name":"answeredInRound","nameLocation":"448:15:1","nodeType":"VariableDeclaration","scope":383,"src":"441:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":380,"name":"uint80","nodeType":"ElementaryTypeName","src":"441:6:1","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"340:129:1"},"scope":397,"src":"267:203:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":396,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"483:15:1","nodeType":"FunctionDefinition","parameters":{"id":384,"nodeType":"ParameterList","parameters":[],"src":"498:2:1"},"returnParameters":{"id":395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"roundId","nameLocation":"550:7:1","nodeType":"VariableDeclaration","scope":396,"src":"543:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":385,"name":"uint80","nodeType":"ElementaryTypeName","src":"543:6:1","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"answer","nameLocation":"572:6:1","nodeType":"VariableDeclaration","scope":396,"src":"565:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":387,"name":"int256","nodeType":"ElementaryTypeName","src":"565:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"startedAt","nameLocation":"594:9:1","nodeType":"VariableDeclaration","scope":396,"src":"586:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":389,"name":"uint256","nodeType":"ElementaryTypeName","src":"586:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"updatedAt","nameLocation":"619:9:1","nodeType":"VariableDeclaration","scope":396,"src":"611:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"611:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":394,"mutability":"mutable","name":"answeredInRound","nameLocation":"643:15:1","nodeType":"VariableDeclaration","scope":396,"src":"636:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":393,"name":"uint80","nodeType":"ElementaryTypeName","src":"636:6:1","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"535:129:1"},"scope":397,"src":"474:191:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":398,"src":"57:610:1","usedErrors":[]}],"src":"32:636:1"},"id":1},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[532],"Ownable":[510]},"id":511,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":399,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":400,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":511,"sourceUnit":533,"src":"127:30:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":402,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":532,"src":"683:7:2"},"id":403,"nodeType":"InheritanceSpecifier","src":"683:7:2"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":401,"nodeType":"StructuredDocumentation","src":"159:494:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":510,"linearizedBaseContracts":[510,532],"name":"Ownable","nameLocation":"672:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":405,"mutability":"mutable","name":"_owner","nameLocation":"713:6:2","nodeType":"VariableDeclaration","scope":510,"src":"697:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":404,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":411,"name":"OwnershipTransferred","nameLocation":"732:20:2","nodeType":"EventDefinition","parameters":{"id":410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":407,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:2","nodeType":"VariableDeclaration","scope":411,"src":"753:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":409,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:2","nodeType":"VariableDeclaration","scope":411,"src":"784:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":408,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:2"},"src":"726:84:2"},{"body":{"id":420,"nodeType":"Block","src":"926:49:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":416,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"955:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":415,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"936:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":419,"nodeType":"ExpressionStatement","src":"936:32:2"}]},"documentation":{"id":412,"nodeType":"StructuredDocumentation","src":"816:91:2","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":421,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[],"src":"923:2:2"},"returnParameters":{"id":414,"nodeType":"ParameterList","parameters":[],"src":"926:0:2"},"scope":510,"src":"912:63:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":428,"nodeType":"Block","src":"1084:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":424,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"1094:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":426,"nodeType":"ExpressionStatement","src":"1094:13:2"},{"id":427,"nodeType":"PlaceholderStatement","src":"1117:1:2"}]},"documentation":{"id":422,"nodeType":"StructuredDocumentation","src":"981:77:2","text":" @dev Throws if called by any account other than the owner."},"id":429,"name":"onlyOwner","nameLocation":"1072:9:2","nodeType":"ModifierDefinition","parameters":{"id":423,"nodeType":"ParameterList","parameters":[],"src":"1081:2:2"},"src":"1063:62:2","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"1256:30:2","statements":[{"expression":{"id":435,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"1273:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":434,"id":436,"nodeType":"Return","src":"1266:13:2"}]},"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"1131:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":438,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:2","nodeType":"FunctionDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[],"src":"1215:2:2"},"returnParameters":{"id":434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"1247:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":432,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:2"},"scope":510,"src":"1201:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":451,"nodeType":"Block","src":"1404:85:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":443,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"1422:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":445,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"1433:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":442,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":450,"nodeType":"ExpressionStatement","src":"1414:68:2"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"1292:62:2","text":" @dev Throws if the sender is not the owner."},"id":452,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:2","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"1379:2:2"},"returnParameters":{"id":441,"nodeType":"ParameterList","parameters":[],"src":"1404:0:2"},"scope":510,"src":"1359:130:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":465,"nodeType":"Block","src":"1885:47:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":459,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:2","typeDescriptions":{}}},"id":462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":458,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"1895:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":464,"nodeType":"ExpressionStatement","src":"1895:30:2"}]},"documentation":{"id":453,"nodeType":"StructuredDocumentation","src":"1495:331:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":466,"implemented":true,"kind":"function","modifiers":[{"id":456,"kind":"modifierInvocation","modifierName":{"id":455,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":429,"src":"1875:9:2"},"nodeType":"ModifierInvocation","src":"1875:9:2"}],"name":"renounceOwnership","nameLocation":"1840:17:2","nodeType":"FunctionDefinition","parameters":{"id":454,"nodeType":"ParameterList","parameters":[],"src":"1857:2:2"},"returnParameters":{"id":457,"nodeType":"ParameterList","parameters":[],"src":"1885:0:2"},"scope":510,"src":"1831:101:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":488,"nodeType":"Block","src":"2151:128:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":475,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"2169:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":476,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:2","typeDescriptions":{}}},"id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":474,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":483,"nodeType":"ExpressionStatement","src":"2161:73:2"},{"expression":{"arguments":[{"id":485,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"2263:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":484,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"2244:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":487,"nodeType":"ExpressionStatement","src":"2244:28:2"}]},"documentation":{"id":467,"nodeType":"StructuredDocumentation","src":"1938:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":489,"implemented":true,"kind":"function","modifiers":[{"id":472,"kind":"modifierInvocation","modifierName":{"id":471,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":429,"src":"2141:9:2"},"nodeType":"ModifierInvocation","src":"2141:9:2"}],"name":"transferOwnership","nameLocation":"2090:17:2","nodeType":"FunctionDefinition","parameters":{"id":470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":469,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:2","nodeType":"VariableDeclaration","scope":489,"src":"2108:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":468,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:2"},"returnParameters":{"id":473,"nodeType":"ParameterList","parameters":[],"src":"2151:0:2"},"scope":510,"src":"2081:198:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":508,"nodeType":"Block","src":"2496:124:2","statements":[{"assignments":[496],"declarations":[{"constant":false,"id":496,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:2","nodeType":"VariableDeclaration","scope":508,"src":"2506:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":495,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":498,"initialValue":{"id":497,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"2525:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:2"},{"expression":{"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":499,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"2541:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":500,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"2550:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":502,"nodeType":"ExpressionStatement","src":"2541:17:2"},{"eventCall":{"arguments":[{"id":504,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"2594:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":505,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"2604:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":503,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"2573:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":507,"nodeType":"EmitStatement","src":"2568:45:2"}]},"documentation":{"id":490,"nodeType":"StructuredDocumentation","src":"2285:143:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":509,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:2","nodeType":"FunctionDefinition","parameters":{"id":493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:2","nodeType":"VariableDeclaration","scope":509,"src":"2461:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":491,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:2"},"returnParameters":{"id":494,"nodeType":"ParameterList","parameters":[],"src":"2496:0:2"},"scope":510,"src":"2433:187:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":511,"src":"654:1968:2","usedErrors":[]}],"src":"102:2521:2"},"id":2},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[532]},"id":533,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":512,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:3"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":513,"nodeType":"StructuredDocumentation","src":"111:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":532,"linearizedBaseContracts":[532],"name":"Context","nameLocation":"626:7:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":521,"nodeType":"Block","src":"702:34:3","statements":[{"expression":{"expression":{"id":518,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":517,"id":520,"nodeType":"Return","src":"712:17:3"}]},"id":522,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:3","nodeType":"FunctionDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[],"src":"659:2:3"},"returnParameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":522,"src":"693:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":515,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:3"},"scope":532,"src":"640:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":530,"nodeType":"Block","src":"809:32:3","statements":[{"expression":{"expression":{"id":527,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":526,"id":529,"nodeType":"Return","src":"819:15:3"}]},"id":531,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:3","nodeType":"FunctionDefinition","parameters":{"id":523,"nodeType":"ParameterList","parameters":[],"src":"759:2:3"},"returnParameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":531,"src":"793:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":524,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:3"},"scope":532,"src":"742:99:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":533,"src":"608:235:3","usedErrors":[]}],"src":"86:758:3"},"id":3},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","exportedSymbols":{"SafeMath":[844]},"id":845,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":534,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:4"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":535,"nodeType":"StructuredDocumentation","src":"285:196:4","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":844,"linearizedBaseContracts":[844],"name":"SafeMath","nameLocation":"490:8:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":566,"nodeType":"Block","src":"717:140:4","statements":[{"id":565,"nodeType":"UncheckedBlock","src":"727:124:4","statements":[{"assignments":[548],"declarations":[{"constant":false,"id":548,"mutability":"mutable","name":"c","nameLocation":"759:1:4","nodeType":"VariableDeclaration","scope":565,"src":"751:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":547,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":552,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":549,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"763:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":550,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"767:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"763:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"751:17:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":553,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"786:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":554,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"790:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"786:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":560,"nodeType":"IfStatement","src":"782:28:4","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"801:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"808:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":558,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"800:10:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":546,"id":559,"nodeType":"Return","src":"793:17:4"}},{"expression":{"components":[{"hexValue":"74727565","id":561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"832:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":562,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"838:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":563,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"831:9:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":546,"id":564,"nodeType":"Return","src":"824:16:4"}]}]},"documentation":{"id":536,"nodeType":"StructuredDocumentation","src":"505:131:4","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":567,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"650:6:4","nodeType":"FunctionDefinition","parameters":{"id":541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":538,"mutability":"mutable","name":"a","nameLocation":"665:1:4","nodeType":"VariableDeclaration","scope":567,"src":"657:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":537,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":540,"mutability":"mutable","name":"b","nameLocation":"676:1:4","nodeType":"VariableDeclaration","scope":567,"src":"668:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":539,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:22:4"},"returnParameters":{"id":546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":567,"src":"702:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":542,"name":"bool","nodeType":"ElementaryTypeName","src":"702:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":567,"src":"708:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":544,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:15:4"},"scope":844,"src":"641:216:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":594,"nodeType":"Block","src":"1078:113:4","statements":[{"id":593,"nodeType":"UncheckedBlock","src":"1088:97:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":579,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"1116:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":580,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"1120:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1116:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":586,"nodeType":"IfStatement","src":"1112:28:4","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1131:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":584,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1130:10:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":578,"id":585,"nodeType":"Return","src":"1123:17:4"}},{"expression":{"components":[{"hexValue":"74727565","id":587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1162:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":588,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"1168:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":589,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"1172:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1168:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":591,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1161:13:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":578,"id":592,"nodeType":"Return","src":"1154:20:4"}]}]},"documentation":{"id":568,"nodeType":"StructuredDocumentation","src":"863:134:4","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":595,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"1011:6:4","nodeType":"FunctionDefinition","parameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"mutability":"mutable","name":"a","nameLocation":"1026:1:4","nodeType":"VariableDeclaration","scope":595,"src":"1018:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":572,"mutability":"mutable","name":"b","nameLocation":"1037:1:4","nodeType":"VariableDeclaration","scope":595,"src":"1029:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":571,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:22:4"},"returnParameters":{"id":578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":595,"src":"1063:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":574,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":595,"src":"1069:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":576,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1062:15:4"},"scope":844,"src":"1002:189:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":636,"nodeType":"Block","src":"1415:417:4","statements":[{"id":635,"nodeType":"UncheckedBlock","src":"1425:401:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":607,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"1683:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1683:6:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":614,"nodeType":"IfStatement","src":"1679:28:4","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1699:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1705:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":612,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1698:9:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":606,"id":613,"nodeType":"Return","src":"1691:16:4"}},{"assignments":[616],"declarations":[{"constant":false,"id":616,"mutability":"mutable","name":"c","nameLocation":"1729:1:4","nodeType":"VariableDeclaration","scope":635,"src":"1721:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":615,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":620,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":617,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"1733:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":618,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"1737:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1733:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1721:17:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":621,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"1756:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":622,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"1760:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":624,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"1765:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":630,"nodeType":"IfStatement","src":"1752:33:4","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1776:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":628,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1775:10:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":606,"id":629,"nodeType":"Return","src":"1768:17:4"}},{"expression":{"components":[{"hexValue":"74727565","id":631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1807:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":632,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"1813:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":633,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1806:9:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":606,"id":634,"nodeType":"Return","src":"1799:16:4"}]}]},"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"1197:137:4","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":637,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1348:6:4","nodeType":"FunctionDefinition","parameters":{"id":601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"a","nameLocation":"1363:1:4","nodeType":"VariableDeclaration","scope":637,"src":"1355:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":597,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":600,"mutability":"mutable","name":"b","nameLocation":"1374:1:4","nodeType":"VariableDeclaration","scope":637,"src":"1366:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":599,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:22:4"},"returnParameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":637,"src":"1400:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":602,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":637,"src":"1406:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":604,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:15:4"},"scope":844,"src":"1339:493:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":664,"nodeType":"Block","src":"2057:114:4","statements":[{"id":663,"nodeType":"UncheckedBlock","src":"2067:98:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":649,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"2095:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2095:6:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":656,"nodeType":"IfStatement","src":"2091:29:4","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2111:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":654,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2110:10:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":648,"id":655,"nodeType":"Return","src":"2103:17:4"}},{"expression":{"components":[{"hexValue":"74727565","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2142:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":658,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"2148:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":659,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"2152:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2148:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":661,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2141:13:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":648,"id":662,"nodeType":"Return","src":"2134:20:4"}]}]},"documentation":{"id":638,"nodeType":"StructuredDocumentation","src":"1838:138:4","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":665,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1990:6:4","nodeType":"FunctionDefinition","parameters":{"id":643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":640,"mutability":"mutable","name":"a","nameLocation":"2005:1:4","nodeType":"VariableDeclaration","scope":665,"src":"1997:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":639,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":642,"mutability":"mutable","name":"b","nameLocation":"2016:1:4","nodeType":"VariableDeclaration","scope":665,"src":"2008:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":641,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:22:4"},"returnParameters":{"id":648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":665,"src":"2042:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":644,"name":"bool","nodeType":"ElementaryTypeName","src":"2042:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":665,"src":"2048:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":646,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2041:15:4"},"scope":844,"src":"1981:190:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":692,"nodeType":"Block","src":"2406:114:4","statements":[{"id":691,"nodeType":"UncheckedBlock","src":"2416:98:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":677,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"2444:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2449:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2444:6:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":684,"nodeType":"IfStatement","src":"2440:29:4","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2460:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2467:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":682,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2459:10:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":676,"id":683,"nodeType":"Return","src":"2452:17:4"}},{"expression":{"components":[{"hexValue":"74727565","id":685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2491:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":686,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"2497:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":687,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"2501:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2497:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":689,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2490:13:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":676,"id":690,"nodeType":"Return","src":"2483:20:4"}]}]},"documentation":{"id":666,"nodeType":"StructuredDocumentation","src":"2177:148:4","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":693,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2339:6:4","nodeType":"FunctionDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"mutability":"mutable","name":"a","nameLocation":"2354:1:4","nodeType":"VariableDeclaration","scope":693,"src":"2346:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":667,"name":"uint256","nodeType":"ElementaryTypeName","src":"2346:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":670,"mutability":"mutable","name":"b","nameLocation":"2365:1:4","nodeType":"VariableDeclaration","scope":693,"src":"2357:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2345:22:4"},"returnParameters":{"id":676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":693,"src":"2391:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":672,"name":"bool","nodeType":"ElementaryTypeName","src":"2391:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":693,"src":"2397:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":674,"name":"uint256","nodeType":"ElementaryTypeName","src":"2397:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2390:15:4"},"scope":844,"src":"2330:190:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":707,"nodeType":"Block","src":"2822:29:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":703,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"2839:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":704,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"2843:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":702,"id":706,"nodeType":"Return","src":"2832:12:4"}]},"documentation":{"id":694,"nodeType":"StructuredDocumentation","src":"2526:224:4","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":708,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"2764:3:4","nodeType":"FunctionDefinition","parameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":696,"mutability":"mutable","name":"a","nameLocation":"2776:1:4","nodeType":"VariableDeclaration","scope":708,"src":"2768:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":695,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":698,"mutability":"mutable","name":"b","nameLocation":"2787:1:4","nodeType":"VariableDeclaration","scope":708,"src":"2779:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":697,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2767:22:4"},"returnParameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":708,"src":"2813:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":700,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2812:9:4"},"scope":844,"src":"2755:96:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":722,"nodeType":"Block","src":"3189:29:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":718,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"3206:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":719,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"3210:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3206:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":717,"id":721,"nodeType":"Return","src":"3199:12:4"}]},"documentation":{"id":709,"nodeType":"StructuredDocumentation","src":"2857:260:4","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":723,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3131:3:4","nodeType":"FunctionDefinition","parameters":{"id":714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":711,"mutability":"mutable","name":"a","nameLocation":"3143:1:4","nodeType":"VariableDeclaration","scope":723,"src":"3135:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":710,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":713,"mutability":"mutable","name":"b","nameLocation":"3154:1:4","nodeType":"VariableDeclaration","scope":723,"src":"3146:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":712,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3134:22:4"},"returnParameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":723,"src":"3180:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":715,"name":"uint256","nodeType":"ElementaryTypeName","src":"3180:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3179:9:4"},"scope":844,"src":"3122:96:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":737,"nodeType":"Block","src":"3532:29:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":733,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"3549:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":734,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"3553:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3549:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":732,"id":736,"nodeType":"Return","src":"3542:12:4"}]},"documentation":{"id":724,"nodeType":"StructuredDocumentation","src":"3224:236:4","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":738,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"3474:3:4","nodeType":"FunctionDefinition","parameters":{"id":729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"a","nameLocation":"3486:1:4","nodeType":"VariableDeclaration","scope":738,"src":"3478:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":725,"name":"uint256","nodeType":"ElementaryTypeName","src":"3478:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":728,"mutability":"mutable","name":"b","nameLocation":"3497:1:4","nodeType":"VariableDeclaration","scope":738,"src":"3489:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":727,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3477:22:4"},"returnParameters":{"id":732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":738,"src":"3523:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":730,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:4"},"scope":844,"src":"3465:96:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":752,"nodeType":"Block","src":"3917:29:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":748,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"3934:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":749,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"3938:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3934:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":747,"id":751,"nodeType":"Return","src":"3927:12:4"}]},"documentation":{"id":739,"nodeType":"StructuredDocumentation","src":"3567:278:4","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":753,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3859:3:4","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"a","nameLocation":"3871:1:4","nodeType":"VariableDeclaration","scope":753,"src":"3863:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":740,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":743,"mutability":"mutable","name":"b","nameLocation":"3882:1:4","nodeType":"VariableDeclaration","scope":753,"src":"3874:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":742,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3862:22:4"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":753,"src":"3908:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":745,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:9:4"},"scope":844,"src":"3850:96:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":767,"nodeType":"Block","src":"4466:29:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":763,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"4483:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":764,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"4487:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4483:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":762,"id":766,"nodeType":"Return","src":"4476:12:4"}]},"documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"3952:442:4","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":768,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"4408:3:4","nodeType":"FunctionDefinition","parameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"a","nameLocation":"4420:1:4","nodeType":"VariableDeclaration","scope":768,"src":"4412:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":755,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"b","nameLocation":"4431:1:4","nodeType":"VariableDeclaration","scope":768,"src":"4423:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":757,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4411:22:4"},"returnParameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":768,"src":"4457:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":760,"name":"uint256","nodeType":"ElementaryTypeName","src":"4457:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4456:9:4"},"scope":844,"src":"4399:96:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":792,"nodeType":"Block","src":"5084:106:4","statements":[{"id":791,"nodeType":"UncheckedBlock","src":"5094:90:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":781,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"5126:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":782,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"5131:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5126:6:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":784,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"5134:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":780,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5118:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5118:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":786,"nodeType":"ExpressionStatement","src":"5118:29:4"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":787,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"5168:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":788,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"5172:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5168:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":779,"id":790,"nodeType":"Return","src":"5161:12:4"}]}]},"documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"4501:453:4","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":793,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"4968:3:4","nodeType":"FunctionDefinition","parameters":{"id":776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"a","nameLocation":"4989:1:4","nodeType":"VariableDeclaration","scope":793,"src":"4981:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"4981:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":773,"mutability":"mutable","name":"b","nameLocation":"5008:1:4","nodeType":"VariableDeclaration","scope":793,"src":"5000:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":772,"name":"uint256","nodeType":"ElementaryTypeName","src":"5000:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":775,"mutability":"mutable","name":"errorMessage","nameLocation":"5033:12:4","nodeType":"VariableDeclaration","scope":793,"src":"5019:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":774,"name":"string","nodeType":"ElementaryTypeName","src":"5019:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4971:80:4"},"returnParameters":{"id":779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":793,"src":"5075:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":777,"name":"uint256","nodeType":"ElementaryTypeName","src":"5075:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5074:9:4"},"scope":844,"src":"4959:231:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":817,"nodeType":"Block","src":"5799:105:4","statements":[{"id":816,"nodeType":"UncheckedBlock","src":"5809:89:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":806,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"5841:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5845:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5841:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":809,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"5848:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":805,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5833:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5833:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":811,"nodeType":"ExpressionStatement","src":"5833:28:4"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":812,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"5882:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":813,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"5886:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5882:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":804,"id":815,"nodeType":"Return","src":"5875:12:4"}]}]},"documentation":{"id":794,"nodeType":"StructuredDocumentation","src":"5196:473:4","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":818,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5683:3:4","nodeType":"FunctionDefinition","parameters":{"id":801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"a","nameLocation":"5704:1:4","nodeType":"VariableDeclaration","scope":818,"src":"5696:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":795,"name":"uint256","nodeType":"ElementaryTypeName","src":"5696:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":798,"mutability":"mutable","name":"b","nameLocation":"5723:1:4","nodeType":"VariableDeclaration","scope":818,"src":"5715:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":797,"name":"uint256","nodeType":"ElementaryTypeName","src":"5715:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":800,"mutability":"mutable","name":"errorMessage","nameLocation":"5748:12:4","nodeType":"VariableDeclaration","scope":818,"src":"5734:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":799,"name":"string","nodeType":"ElementaryTypeName","src":"5734:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5686:80:4"},"returnParameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":818,"src":"5790:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":802,"name":"uint256","nodeType":"ElementaryTypeName","src":"5790:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5789:9:4"},"scope":844,"src":"5674:230:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":842,"nodeType":"Block","src":"6675:105:4","statements":[{"id":841,"nodeType":"UncheckedBlock","src":"6685:89:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":831,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"6717:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6721:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6717:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":834,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"6724:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":830,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6709:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6709:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":836,"nodeType":"ExpressionStatement","src":"6709:28:4"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":837,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"6758:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":838,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"6762:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6758:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":829,"id":840,"nodeType":"Return","src":"6751:12:4"}]}]},"documentation":{"id":819,"nodeType":"StructuredDocumentation","src":"5910:635:4","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":843,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"6559:3:4","nodeType":"FunctionDefinition","parameters":{"id":826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"mutability":"mutable","name":"a","nameLocation":"6580:1:4","nodeType":"VariableDeclaration","scope":843,"src":"6572:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":820,"name":"uint256","nodeType":"ElementaryTypeName","src":"6572:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":823,"mutability":"mutable","name":"b","nameLocation":"6599:1:4","nodeType":"VariableDeclaration","scope":843,"src":"6591:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":822,"name":"uint256","nodeType":"ElementaryTypeName","src":"6591:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":825,"mutability":"mutable","name":"errorMessage","nameLocation":"6624:12:4","nodeType":"VariableDeclaration","scope":843,"src":"6610:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":824,"name":"string","nodeType":"ElementaryTypeName","src":"6610:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6562:80:4"},"returnParameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":843,"src":"6666:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":827,"name":"uint256","nodeType":"ElementaryTypeName","src":"6666:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6665:9:4"},"scope":844,"src":"6550:230:4","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":845,"src":"482:6300:4","usedErrors":[]}],"src":"107:6676:4"},"id":4},"contracts/Exchange.sol":{"ast":{"absolutePath":"contracts/Exchange.sol","exportedSymbols":{"AggregatorV3Interface":[397],"Context":[532],"Exchange":[2506],"IERC20":[3496],"Ownable":[510],"PriceChecker":[2675],"SafeMath":[844],"TradingFees":[2840],"Wallet":[3410]},"id":2507,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":846,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"35:23:5"},{"absolutePath":"contracts/PriceChecker.sol","file":"./PriceChecker.sol","id":847,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2507,"sourceUnit":2676,"src":"62:28:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/TradingFees.sol","file":"./TradingFees.sol","id":848,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2507,"sourceUnit":2841,"src":"92:27:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":849,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2507,"sourceUnit":845,"src":"194:57:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":850,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2507,"sourceUnit":398,"src":"253:76:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":851,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2507,"sourceUnit":511,"src":"331:52:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":852,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":510,"src":"408:7:5"},"id":853,"nodeType":"InheritanceSpecifier","src":"408:7:5"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2506,"linearizedBaseContracts":[2506,510,532],"name":"Exchange","nameLocation":"396:8:5","nodeType":"ContractDefinition","nodes":[{"id":856,"libraryName":{"id":854,"name":"SafeMath","nodeType":"IdentifierPath","referencedDeclaration":844,"src":"429:8:5"},"nodeType":"UsingForDirective","src":"423:27:5","typeName":{"id":855,"name":"uint256","nodeType":"ElementaryTypeName","src":"442:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":859,"mutability":"mutable","name":"priceChecker","nameLocation":"506:12:5","nodeType":"VariableDeclaration","scope":2506,"src":"493:25:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2675","typeString":"contract PriceChecker"},"typeName":{"id":858,"nodeType":"UserDefinedTypeName","pathNode":{"id":857,"name":"PriceChecker","nodeType":"IdentifierPath","referencedDeclaration":2675,"src":"493:12:5"},"referencedDeclaration":2675,"src":"493:12:5","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2675","typeString":"contract PriceChecker"}},"visibility":"internal"},{"constant":false,"id":862,"mutability":"mutable","name":"tradingFees","nameLocation":"537:11:5","nodeType":"VariableDeclaration","scope":2506,"src":"525:23:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2840","typeString":"contract TradingFees"},"typeName":{"id":861,"nodeType":"UserDefinedTypeName","pathNode":{"id":860,"name":"TradingFees","nodeType":"IdentifierPath","referencedDeclaration":2840,"src":"525:11:5"},"referencedDeclaration":2840,"src":"525:11:5","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2840","typeString":"contract TradingFees"}},"visibility":"internal"},{"constant":false,"id":865,"mutability":"mutable","name":"wallet","nameLocation":"562:6:5","nodeType":"VariableDeclaration","scope":2506,"src":"555:13:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3410","typeString":"contract Wallet"},"typeName":{"id":864,"nodeType":"UserDefinedTypeName","pathNode":{"id":863,"name":"Wallet","nodeType":"IdentifierPath","referencedDeclaration":3410,"src":"555:6:5"},"referencedDeclaration":3410,"src":"555:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3410","typeString":"contract Wallet"}},"visibility":"internal"},{"constant":false,"id":870,"mutability":"mutable","name":"decimals","nameLocation":"585:8:5","nodeType":"VariableDeclaration","scope":2506,"src":"577:27:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":866,"name":"uint256","nodeType":"ElementaryTypeName","src":"577:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"596:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"602:2:5","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"596:8:5","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"visibility":"internal"},{"constant":false,"functionSelector":"7bf1a627","id":876,"mutability":"mutable","name":"ethToken","nameLocation":"626:8:5","nodeType":"VariableDeclaration","scope":2506,"src":"611:36:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"611:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"30","id":874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"645:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"637:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":872,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:5","typeDescriptions":{}}},"id":875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"637:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"92f63d2e","id":882,"mutability":"mutable","name":"aETH","nameLocation":"669:4:5","nodeType":"VariableDeclaration","scope":2506,"src":"654:73:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"307832323430344230653261373036373036384163646144643866394435383646383334634365326335","id":880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"684:42:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x22404B0e2a7067068AcdaDd8f9D586F834cCe2c5"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"676:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":878,"name":"address","nodeType":"ElementaryTypeName","src":"676:7:5","typeDescriptions":{}}},"id":881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"676:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"9ead7222","id":886,"mutability":"mutable","name":"tokenList","nameLocation":"799:9:5","nodeType":"VariableDeclaration","scope":2506,"src":"779:29:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$913_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo[]"},"typeName":{"baseType":{"id":884,"nodeType":"UserDefinedTypeName","pathNode":{"id":883,"name":"_tokenInfo","nodeType":"IdentifierPath","referencedDeclaration":913,"src":"779:10:5"},"referencedDeclaration":913,"src":"779:10:5","typeDescriptions":{"typeIdentifier":"t_struct$__tokenInfo_$913_storage_ptr","typeString":"struct Exchange._tokenInfo"}},"id":885,"nodeType":"ArrayTypeName","src":"779:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$913_storage_$dyn_storage_ptr","typeString":"struct Exchange._tokenInfo[]"}},"visibility":"public"},{"constant":false,"functionSelector":"f9242d9a","id":894,"mutability":"mutable","name":"s_orderBook","nameLocation":"938:11:5","nodeType":"VariableDeclaration","scope":2506,"src":"882:67:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$942_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order[]))"},"typeName":{"id":893,"keyType":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"882:48:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$942_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order[]))"},"valueType":{"id":892,"keyType":{"id":888,"name":"uint256","nodeType":"ElementaryTypeName","src":"909:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"901:28:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$942_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order[])"},"valueType":{"baseType":{"id":890,"nodeType":"UserDefinedTypeName","pathNode":{"id":889,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":942,"src":"920:6:5"},"referencedDeclaration":942,"src":"920:6:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_storage_ptr","typeString":"struct Exchange._Order"}},"id":891,"nodeType":"ArrayTypeName","src":"920:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"}}}},"visibility":"public"},{"constant":false,"functionSelector":"bd8098ec","id":902,"mutability":"mutable","name":"s_filledOrders","nameLocation":"1029:14:5","nodeType":"VariableDeclaration","scope":2506,"src":"958:85:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$968_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._filledOrder[]))"},"typeName":{"id":901,"keyType":{"id":895,"name":"address","nodeType":"ElementaryTypeName","src":"966:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"958:54:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$968_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._filledOrder[]))"},"valueType":{"id":900,"keyType":{"id":896,"name":"uint256","nodeType":"ElementaryTypeName","src":"985:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"977:34:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$968_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._filledOrder[])"},"valueType":{"baseType":{"id":898,"nodeType":"UserDefinedTypeName","pathNode":{"id":897,"name":"_filledOrder","nodeType":"IdentifierPath","referencedDeclaration":968,"src":"996:12:5"},"referencedDeclaration":968,"src":"996:12:5","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$968_storage_ptr","typeString":"struct Exchange._filledOrder"}},"id":899,"nodeType":"ArrayTypeName","src":"996:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__filledOrder_$968_storage_$dyn_storage_ptr","typeString":"struct Exchange._filledOrder[]"}}}},"visibility":"public"},{"constant":false,"functionSelector":"9c07ce26","id":905,"mutability":"mutable","name":"s_orderId","nameLocation":"1067:9:5","nodeType":"VariableDeclaration","scope":2506,"src":"1052:28:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":903,"name":"uint256","nodeType":"ElementaryTypeName","src":"1052:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1079:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"id":908,"mutability":"mutable","name":"s_isManual","nameLocation":"1100:10:5","nodeType":"VariableDeclaration","scope":2506,"src":"1087:30:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":906,"name":"bool","nodeType":"ElementaryTypeName","src":"1087:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":{"hexValue":"74727565","id":907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1113:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"visibility":"private"},{"canonicalName":"Exchange._tokenInfo","id":913,"members":[{"constant":false,"id":910,"mutability":"mutable","name":"add","nameLocation":"1163:3:5","nodeType":"VariableDeclaration","scope":913,"src":"1155:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"1155:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":912,"mutability":"mutable","name":"decimals","nameLocation":"1185:8:5","nodeType":"VariableDeclaration","scope":913,"src":"1177:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":911,"name":"uint256","nodeType":"ElementaryTypeName","src":"1177:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"_tokenInfo","nameLocation":"1133:10:5","nodeType":"StructDefinition","scope":2506,"src":"1126:75:5","visibility":"public"},{"canonicalName":"Exchange._fillOrderValues","id":918,"members":[{"constant":false,"id":915,"mutability":"mutable","name":"rate","nameLocation":"1252:4:5","nodeType":"VariableDeclaration","scope":918,"src":"1244:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":914,"name":"uint256","nodeType":"ElementaryTypeName","src":"1244:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":917,"mutability":"mutable","name":"amount","nameLocation":"1275:6:5","nodeType":"VariableDeclaration","scope":918,"src":"1267:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":916,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"_fillOrderValues","nameLocation":"1216:16:5","nodeType":"StructDefinition","scope":2506,"src":"1209:80:5","visibility":"public"},{"canonicalName":"Exchange._Order","id":942,"members":[{"constant":false,"id":920,"mutability":"mutable","name":"id","nameLocation":"1451:2:5","nodeType":"VariableDeclaration","scope":942,"src":"1443:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":919,"name":"uint256","nodeType":"ElementaryTypeName","src":"1443:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":923,"mutability":"mutable","name":"side","nameLocation":"1469:4:5","nodeType":"VariableDeclaration","scope":942,"src":"1464:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"},"typeName":{"id":922,"nodeType":"UserDefinedTypeName","pathNode":{"id":921,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":971,"src":"1464:4:5"},"referencedDeclaration":971,"src":"1464:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":925,"mutability":"mutable","name":"user","nameLocation":"1492:4:5","nodeType":"VariableDeclaration","scope":942,"src":"1484:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":924,"name":"address","nodeType":"ElementaryTypeName","src":"1484:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":927,"mutability":"mutable","name":"tokenA","nameLocation":"1515:6:5","nodeType":"VariableDeclaration","scope":942,"src":"1507:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":926,"name":"address","nodeType":"ElementaryTypeName","src":"1507:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":929,"mutability":"mutable","name":"amountA","nameLocation":"1540:7:5","nodeType":"VariableDeclaration","scope":942,"src":"1532:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":928,"name":"uint256","nodeType":"ElementaryTypeName","src":"1532:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":931,"mutability":"mutable","name":"tokenB","nameLocation":"1566:6:5","nodeType":"VariableDeclaration","scope":942,"src":"1558:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":930,"name":"address","nodeType":"ElementaryTypeName","src":"1558:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":933,"mutability":"mutable","name":"amountB","nameLocation":"1591:7:5","nodeType":"VariableDeclaration","scope":942,"src":"1583:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":932,"name":"uint256","nodeType":"ElementaryTypeName","src":"1583:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":935,"mutability":"mutable","name":"rate","nameLocation":"1617:4:5","nodeType":"VariableDeclaration","scope":942,"src":"1609:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":934,"name":"uint256","nodeType":"ElementaryTypeName","src":"1609:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":937,"mutability":"mutable","name":"originalAmountA","nameLocation":"1684:15:5","nodeType":"VariableDeclaration","scope":942,"src":"1676:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":936,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":939,"mutability":"mutable","name":"originalAmountB","nameLocation":"1718:15:5","nodeType":"VariableDeclaration","scope":942,"src":"1710:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":938,"name":"uint256","nodeType":"ElementaryTypeName","src":"1710:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":941,"mutability":"mutable","name":"waiveFees","nameLocation":"1749:9:5","nodeType":"VariableDeclaration","scope":942,"src":"1744:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":940,"name":"bool","nodeType":"ElementaryTypeName","src":"1744:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"_Order","nameLocation":"1425:6:5","nodeType":"StructDefinition","scope":2506,"src":"1418:348:5","visibility":"public"},{"canonicalName":"Exchange._filledOrder","id":968,"members":[{"constant":false,"id":944,"mutability":"mutable","name":"id","nameLocation":"1896:2:5","nodeType":"VariableDeclaration","scope":968,"src":"1888:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":943,"name":"uint256","nodeType":"ElementaryTypeName","src":"1888:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":947,"mutability":"mutable","name":"side","nameLocation":"1914:4:5","nodeType":"VariableDeclaration","scope":968,"src":"1909:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"},"typeName":{"id":946,"nodeType":"UserDefinedTypeName","pathNode":{"id":945,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":971,"src":"1909:4:5"},"referencedDeclaration":971,"src":"1909:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":949,"mutability":"mutable","name":"user","nameLocation":"1937:4:5","nodeType":"VariableDeclaration","scope":968,"src":"1929:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":948,"name":"address","nodeType":"ElementaryTypeName","src":"1929:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":951,"mutability":"mutable","name":"tokenA","nameLocation":"1960:6:5","nodeType":"VariableDeclaration","scope":968,"src":"1952:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":950,"name":"address","nodeType":"ElementaryTypeName","src":"1952:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":953,"mutability":"mutable","name":"tokenB","nameLocation":"1985:6:5","nodeType":"VariableDeclaration","scope":968,"src":"1977:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"1977:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":955,"mutability":"mutable","name":"amountFilled","nameLocation":"2010:12:5","nodeType":"VariableDeclaration","scope":968,"src":"2002:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":954,"name":"uint256","nodeType":"ElementaryTypeName","src":"2002:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":957,"mutability":"mutable","name":"fillRate","nameLocation":"2041:8:5","nodeType":"VariableDeclaration","scope":968,"src":"2033:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":956,"name":"uint256","nodeType":"ElementaryTypeName","src":"2033:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":959,"mutability":"mutable","name":"originalRate","nameLocation":"2068:12:5","nodeType":"VariableDeclaration","scope":968,"src":"2060:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":958,"name":"uint256","nodeType":"ElementaryTypeName","src":"2060:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"originalAmountA","nameLocation":"2099:15:5","nodeType":"VariableDeclaration","scope":968,"src":"2091:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"2091:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":963,"mutability":"mutable","name":"originalAmountB","nameLocation":"2133:15:5","nodeType":"VariableDeclaration","scope":968,"src":"2125:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":962,"name":"uint256","nodeType":"ElementaryTypeName","src":"2125:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":965,"mutability":"mutable","name":"feesWaived","nameLocation":"2164:10:5","nodeType":"VariableDeclaration","scope":968,"src":"2159:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":964,"name":"bool","nodeType":"ElementaryTypeName","src":"2159:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"feesPaid","nameLocation":"2193:8:5","nodeType":"VariableDeclaration","scope":968,"src":"2185:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":966,"name":"uint256","nodeType":"ElementaryTypeName","src":"2185:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"_filledOrder","nameLocation":"1864:12:5","nodeType":"StructDefinition","scope":2506,"src":"1857:370:5","visibility":"public"},{"canonicalName":"Exchange.Side","id":971,"members":[{"id":969,"name":"BUY","nameLocation":"2256:3:5","nodeType":"EnumValue","src":"2256:3:5"},{"id":970,"name":"SELL","nameLocation":"2270:4:5","nodeType":"EnumValue","src":"2270:4:5"}],"name":"Side","nameLocation":"2240:4:5","nodeType":"EnumDefinition","src":"2235:46:5"},{"anonymous":false,"documentation":{"id":972,"nodeType":"StructuredDocumentation","src":"2307:56:5","text":"@notice Event when an order is placed on an exchange"},"id":997,"name":"Order","nameLocation":"2375:5:5","nodeType":"EventDefinition","parameters":{"id":996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":974,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"2399:2:5","nodeType":"VariableDeclaration","scope":997,"src":"2391:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":973,"name":"uint256","nodeType":"ElementaryTypeName","src":"2391:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":977,"indexed":false,"mutability":"mutable","name":"side","nameLocation":"2417:4:5","nodeType":"VariableDeclaration","scope":997,"src":"2412:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"},"typeName":{"id":976,"nodeType":"UserDefinedTypeName","pathNode":{"id":975,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":971,"src":"2412:4:5"},"referencedDeclaration":971,"src":"2412:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":979,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"2440:4:5","nodeType":"VariableDeclaration","scope":997,"src":"2432:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":978,"name":"address","nodeType":"ElementaryTypeName","src":"2432:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":981,"indexed":false,"mutability":"mutable","name":"tokenA","nameLocation":"2463:6:5","nodeType":"VariableDeclaration","scope":997,"src":"2455:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":980,"name":"address","nodeType":"ElementaryTypeName","src":"2455:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":983,"indexed":false,"mutability":"mutable","name":"amountA","nameLocation":"2488:7:5","nodeType":"VariableDeclaration","scope":997,"src":"2480:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":982,"name":"uint256","nodeType":"ElementaryTypeName","src":"2480:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":985,"indexed":false,"mutability":"mutable","name":"tokenB","nameLocation":"2514:6:5","nodeType":"VariableDeclaration","scope":997,"src":"2506:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":984,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":987,"indexed":false,"mutability":"mutable","name":"amountB","nameLocation":"2539:7:5","nodeType":"VariableDeclaration","scope":997,"src":"2531:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":986,"name":"uint256","nodeType":"ElementaryTypeName","src":"2531:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":989,"indexed":false,"mutability":"mutable","name":"rate","nameLocation":"2565:4:5","nodeType":"VariableDeclaration","scope":997,"src":"2557:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":988,"name":"uint256","nodeType":"ElementaryTypeName","src":"2557:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":991,"indexed":false,"mutability":"mutable","name":"originalAmountA","nameLocation":"2588:15:5","nodeType":"VariableDeclaration","scope":997,"src":"2580:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":990,"name":"uint256","nodeType":"ElementaryTypeName","src":"2580:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":993,"indexed":false,"mutability":"mutable","name":"originalAmountB","nameLocation":"2622:15:5","nodeType":"VariableDeclaration","scope":997,"src":"2614:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":992,"name":"uint256","nodeType":"ElementaryTypeName","src":"2614:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":995,"indexed":false,"mutability":"mutable","name":"waiveFees","nameLocation":"2653:9:5","nodeType":"VariableDeclaration","scope":997,"src":"2648:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":994,"name":"bool","nodeType":"ElementaryTypeName","src":"2648:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2380:289:5"},"src":"2369:301:5"},{"anonymous":false,"documentation":{"id":998,"nodeType":"StructuredDocumentation","src":"2678:44:5","text":"@notice Event when an order is cancelled"},"id":1023,"name":"Cancel","nameLocation":"2734:6:5","nodeType":"EventDefinition","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1000,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"2759:2:5","nodeType":"VariableDeclaration","scope":1023,"src":"2751:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":999,"name":"uint256","nodeType":"ElementaryTypeName","src":"2751:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1003,"indexed":false,"mutability":"mutable","name":"side","nameLocation":"2777:4:5","nodeType":"VariableDeclaration","scope":1023,"src":"2772:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"},"typeName":{"id":1002,"nodeType":"UserDefinedTypeName","pathNode":{"id":1001,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":971,"src":"2772:4:5"},"referencedDeclaration":971,"src":"2772:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":1005,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"2800:4:5","nodeType":"VariableDeclaration","scope":1023,"src":"2792:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1004,"name":"address","nodeType":"ElementaryTypeName","src":"2792:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1007,"indexed":false,"mutability":"mutable","name":"tokenA","nameLocation":"2823:6:5","nodeType":"VariableDeclaration","scope":1023,"src":"2815:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1006,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1009,"indexed":false,"mutability":"mutable","name":"amountA","nameLocation":"2848:7:5","nodeType":"VariableDeclaration","scope":1023,"src":"2840:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1008,"name":"uint256","nodeType":"ElementaryTypeName","src":"2840:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1011,"indexed":false,"mutability":"mutable","name":"tokenB","nameLocation":"2874:6:5","nodeType":"VariableDeclaration","scope":1023,"src":"2866:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1010,"name":"address","nodeType":"ElementaryTypeName","src":"2866:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1013,"indexed":false,"mutability":"mutable","name":"amountB","nameLocation":"2899:7:5","nodeType":"VariableDeclaration","scope":1023,"src":"2891:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1012,"name":"uint256","nodeType":"ElementaryTypeName","src":"2891:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1015,"indexed":false,"mutability":"mutable","name":"rate","nameLocation":"2925:4:5","nodeType":"VariableDeclaration","scope":1023,"src":"2917:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1014,"name":"uint256","nodeType":"ElementaryTypeName","src":"2917:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1017,"indexed":false,"mutability":"mutable","name":"originalAmountA","nameLocation":"2948:15:5","nodeType":"VariableDeclaration","scope":1023,"src":"2940:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1016,"name":"uint256","nodeType":"ElementaryTypeName","src":"2940:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1019,"indexed":false,"mutability":"mutable","name":"originalAmountB","nameLocation":"2982:15:5","nodeType":"VariableDeclaration","scope":1023,"src":"2974:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"2974:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1021,"indexed":false,"mutability":"mutable","name":"waiveFees","nameLocation":"3013:9:5","nodeType":"VariableDeclaration","scope":1023,"src":"3008:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1020,"name":"bool","nodeType":"ElementaryTypeName","src":"3008:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2740:289:5"},"src":"2728:302:5"},{"anonymous":false,"id":1036,"name":"fillBuyOrder","nameLocation":"3044:12:5","nodeType":"EventDefinition","parameters":{"id":1035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1026,"indexed":false,"mutability":"mutable","name":"remainingOrder","nameLocation":"3074:14:5","nodeType":"VariableDeclaration","scope":1036,"src":"3067:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":1025,"nodeType":"UserDefinedTypeName","pathNode":{"id":1024,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":942,"src":"3067:6:5"},"referencedDeclaration":942,"src":"3067:6:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},{"constant":false,"id":1028,"indexed":false,"mutability":"mutable","name":"amountBought","nameLocation":"3107:12:5","nodeType":"VariableDeclaration","scope":1036,"src":"3099:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1027,"name":"uint256","nodeType":"ElementaryTypeName","src":"3099:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1030,"indexed":false,"mutability":"mutable","name":"fillBuyRate","nameLocation":"3138:11:5","nodeType":"VariableDeclaration","scope":1036,"src":"3130:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1029,"name":"uint256","nodeType":"ElementaryTypeName","src":"3130:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1032,"indexed":false,"mutability":"mutable","name":"feesWaived","nameLocation":"3165:10:5","nodeType":"VariableDeclaration","scope":1036,"src":"3160:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1031,"name":"bool","nodeType":"ElementaryTypeName","src":"3160:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1034,"indexed":false,"mutability":"mutable","name":"feesPaid","nameLocation":"3194:8:5","nodeType":"VariableDeclaration","scope":1036,"src":"3186:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1033,"name":"uint256","nodeType":"ElementaryTypeName","src":"3186:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3056:153:5"},"src":"3038:172:5"},{"anonymous":false,"id":1049,"name":"fillSellOrder","nameLocation":"3224:13:5","nodeType":"EventDefinition","parameters":{"id":1048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1039,"indexed":false,"mutability":"mutable","name":"remainingOrder","nameLocation":"3255:14:5","nodeType":"VariableDeclaration","scope":1049,"src":"3248:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":1038,"nodeType":"UserDefinedTypeName","pathNode":{"id":1037,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":942,"src":"3248:6:5"},"referencedDeclaration":942,"src":"3248:6:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},{"constant":false,"id":1041,"indexed":false,"mutability":"mutable","name":"amountSold","nameLocation":"3288:10:5","nodeType":"VariableDeclaration","scope":1049,"src":"3280:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1040,"name":"uint256","nodeType":"ElementaryTypeName","src":"3280:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1043,"indexed":false,"mutability":"mutable","name":"fillSellRate","nameLocation":"3317:12:5","nodeType":"VariableDeclaration","scope":1049,"src":"3309:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1042,"name":"uint256","nodeType":"ElementaryTypeName","src":"3309:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1045,"indexed":false,"mutability":"mutable","name":"feesWaived","nameLocation":"3345:10:5","nodeType":"VariableDeclaration","scope":1049,"src":"3340:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1044,"name":"bool","nodeType":"ElementaryTypeName","src":"3340:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1047,"indexed":false,"mutability":"mutable","name":"feesPaid","nameLocation":"3374:8:5","nodeType":"VariableDeclaration","scope":1049,"src":"3366:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1046,"name":"uint256","nodeType":"ElementaryTypeName","src":"3366:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3237:152:5"},"src":"3218:172:5"},{"body":{"id":1150,"nodeType":"Block","src":"3665:1100:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"id":1080,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3861:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3861:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1082,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"3873:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1078,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"3839:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3410","typeString":"contract Wallet"}},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getlockedFunds","nodeType":"MemberAccess","referencedDeclaration":3254,"src":"3839:21:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3839:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1073,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"3796:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1074,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3805:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3805:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1071,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"3779:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3410","typeString":"contract Wallet"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3321,"src":"3779:16:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3779:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":723,"src":"3779:41:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3779:117:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1085,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"3900:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3779:129:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742046756e6473","id":1087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3923:20:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092","typeString":"literal_string \"Insufficient Funds\""},"value":"Insufficient Funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092","typeString":"literal_string \"Insufficient Funds\""}],"id":1070,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3757:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3757:197:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1089,"nodeType":"ExpressionStatement","src":"3757:197:5"},{"expression":{"arguments":[{"expression":{"id":1093,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3992:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3992:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1095,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"4004:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1096,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"4013:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4023:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1090,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"3967:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3410","typeString":"contract Wallet"}},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateLockedFunds","nodeType":"MemberAccess","referencedDeclaration":3305,"src":"3967:24:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3967:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1099,"nodeType":"ExpressionStatement","src":"3967:61:5"},{"expression":{"arguments":[{"arguments":[{"id":1111,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"4125:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1112,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"4153:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$971_$","typeString":"type(enum Exchange.Side)"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":969,"src":"4153:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},{"expression":{"id":1114,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4180:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4180:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1116,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"4209:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1117,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"4235:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1118,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"4262:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1119,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"4288:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1120,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"4315:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1121,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"4339:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1122,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"4366:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1123,"name":"_waiveFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"4393:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1110,"name":"_Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"4100:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__Order_$942_storage_ptr_$","typeString":"type(struct Exchange._Order storage pointer)"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4100:318:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}],"expression":{"baseExpression":{"baseExpression":{"id":1100,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"4041:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$942_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":1107,"indexExpression":{"id":1101,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"4053:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4041:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$942_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":1108,"indexExpression":{"arguments":[{"expression":{"id":1104,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"4070:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$971_$","typeString":"type(enum Exchange.Side)"}},"id":1105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":969,"src":"4070:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}],"id":1103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4062:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1102,"name":"uint256","nodeType":"ElementaryTypeName","src":"4062:7:5","typeDescriptions":{}}},"id":1106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4062:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4041:39:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"4041:44:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$__Order_$942_storage_$dyn_storage_ptr_$_t_struct$__Order_$942_storage_$returns$__$bound_to$_t_array$_t_struct$__Order_$942_storage_$dyn_storage_ptr_$","typeString":"function (struct Exchange._Order storage ref[] storage pointer,struct Exchange._Order storage ref)"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4041:388:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1126,"nodeType":"ExpressionStatement","src":"4041:388:5"},{"eventCall":{"arguments":[{"id":1128,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"4467:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1129,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"4491:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$971_$","typeString":"type(enum Exchange.Side)"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":969,"src":"4491:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},{"expression":{"id":1131,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4514:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4514:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1133,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"4539:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1134,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"4561:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1135,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"4584:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1136,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"4606:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1137,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"4629:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1138,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"4649:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1139,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"4672:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1140,"name":"_waiveFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"4695:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1127,"name":"Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"4447:5:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_Side_$971_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,enum Exchange.Side,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4447:269:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1142,"nodeType":"EmitStatement","src":"4442:274:5"},{"expression":{"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1143,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"4729:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":1146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":1144,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"4741:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":708,"src":"4741:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4741:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4729:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1149,"nodeType":"ExpressionStatement","src":"4729:28:5"}]},"functionSelector":"62c09cfa","id":1151,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1064,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"3636:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1065,"kind":"modifierInvocation","modifierName":{"id":1063,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":2505,"src":"3625:10:5"},"nodeType":"ModifierInvocation","src":"3625:19:5"},{"arguments":[{"id":1067,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"3656:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1068,"kind":"modifierInvocation","modifierName":{"id":1066,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":2505,"src":"3645:10:5"},"nodeType":"ModifierInvocation","src":"3645:19:5"}],"name":"createLimitBuyOrder","nameLocation":"3407:19:5","nodeType":"FunctionDefinition","parameters":{"id":1062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1051,"mutability":"mutable","name":"_tokenA","nameLocation":"3471:7:5","nodeType":"VariableDeclaration","scope":1151,"src":"3463:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1050,"name":"address","nodeType":"ElementaryTypeName","src":"3463:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1053,"mutability":"mutable","name":"_amountA","nameLocation":"3497:8:5","nodeType":"VariableDeclaration","scope":1151,"src":"3489:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1052,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1055,"mutability":"mutable","name":"_tokenB","nameLocation":"3524:7:5","nodeType":"VariableDeclaration","scope":1151,"src":"3516:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1054,"name":"address","nodeType":"ElementaryTypeName","src":"3516:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1057,"mutability":"mutable","name":"_amountB","nameLocation":"3550:8:5","nodeType":"VariableDeclaration","scope":1151,"src":"3542:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1056,"name":"uint256","nodeType":"ElementaryTypeName","src":"3542:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1059,"mutability":"mutable","name":"_rate","nameLocation":"3577:5:5","nodeType":"VariableDeclaration","scope":1151,"src":"3569:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1058,"name":"uint256","nodeType":"ElementaryTypeName","src":"3569:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1061,"mutability":"mutable","name":"_waiveFees","nameLocation":"3598:10:5","nodeType":"VariableDeclaration","scope":1151,"src":"3593:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1060,"name":"bool","nodeType":"ElementaryTypeName","src":"3593:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3426:189:5"},"returnParameters":{"id":1069,"nodeType":"ParameterList","parameters":[],"src":"3665:0:5"},"scope":2506,"src":"3398:1367:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1252,"nodeType":"Block","src":"5015:1169:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"id":1182,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5228:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5228:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1184,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"5240:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1180,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"5206:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3410","typeString":"contract Wallet"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getlockedFunds","nodeType":"MemberAccess","referencedDeclaration":3254,"src":"5206:21:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5206:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1175,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"5163:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1176,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5172:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5172:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1173,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"5146:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3410","typeString":"contract Wallet"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3321,"src":"5146:16:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5146:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":723,"src":"5146:41:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5146:117:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1187,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"5267:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:129:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742046756e6473","id":1189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5290:20:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092","typeString":"literal_string \"Insufficient Funds\""},"value":"Insufficient Funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092","typeString":"literal_string \"Insufficient Funds\""}],"id":1172,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5124:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5124:197:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1191,"nodeType":"ExpressionStatement","src":"5124:197:5"},{"expression":{"arguments":[{"expression":{"id":1195,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5408:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5408:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1197,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"5420:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1198,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"5429:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5439:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1192,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"5383:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3410","typeString":"contract Wallet"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateLockedFunds","nodeType":"MemberAccess","referencedDeclaration":3305,"src":"5383:24:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5383:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1201,"nodeType":"ExpressionStatement","src":"5383:61:5"},{"expression":{"arguments":[{"arguments":[{"id":1213,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"5542:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1214,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"5570:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$971_$","typeString":"type(enum Exchange.Side)"}},"id":1215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":970,"src":"5570:9:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},{"expression":{"id":1216,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5598:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5598:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1218,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"5627:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1219,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"5653:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1220,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"5680:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1221,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"5706:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1222,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"5733:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1223,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"5757:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1224,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"5784:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1225,"name":"_waiveFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"5811:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1212,"name":"_Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"5517:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__Order_$942_storage_ptr_$","typeString":"type(struct Exchange._Order storage pointer)"}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5517:319:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}],"expression":{"baseExpression":{"baseExpression":{"id":1202,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"5457:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$942_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":1209,"indexExpression":{"id":1203,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"5469:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5457:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$942_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":1210,"indexExpression":{"arguments":[{"expression":{"id":1206,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"5486:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$971_$","typeString":"type(enum Exchange.Side)"}},"id":1207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":970,"src":"5486:9:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}],"id":1205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5478:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1204,"name":"uint256","nodeType":"ElementaryTypeName","src":"5478:7:5","typeDescriptions":{}}},"id":1208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5478:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5457:40:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"5457:45:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$__Order_$942_storage_$dyn_storage_ptr_$_t_struct$__Order_$942_storage_$returns$__$bound_to$_t_array$_t_struct$__Order_$942_storage_$dyn_storage_ptr_$","typeString":"function (struct Exchange._Order storage ref[] storage pointer,struct Exchange._Order storage ref)"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5457:390:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1228,"nodeType":"ExpressionStatement","src":"5457:390:5"},{"eventCall":{"arguments":[{"id":1230,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"5885:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1231,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"5909:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$971_$","typeString":"type(enum Exchange.Side)"}},"id":1232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":970,"src":"5909:9:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},{"expression":{"id":1233,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5933:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5933:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1235,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"5958:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1236,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"5980:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1237,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"6003:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1238,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"6025:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1239,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"6048:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1240,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"6068:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1241,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"6091:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1242,"name":"_waiveFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"6114:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1229,"name":"Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"5865:5:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_Side_$971_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,enum Exchange.Side,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5865:270:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1244,"nodeType":"EmitStatement","src":"5860:275:5"},{"expression":{"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1245,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"6148:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":1248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6174:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":1246,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"6160:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":708,"src":"6160:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6160:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6148:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1251,"nodeType":"ExpressionStatement","src":"6148:28:5"}]},"functionSelector":"6f4e410b","id":1253,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1166,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"4986:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1167,"kind":"modifierInvocation","modifierName":{"id":1165,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":2505,"src":"4975:10:5"},"nodeType":"ModifierInvocation","src":"4975:19:5"},{"arguments":[{"id":1169,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"5006:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1170,"kind":"modifierInvocation","modifierName":{"id":1168,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":2505,"src":"4995:10:5"},"nodeType":"ModifierInvocation","src":"4995:19:5"}],"name":"createLimitSellOrder","nameLocation":"4782:20:5","nodeType":"FunctionDefinition","parameters":{"id":1164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1153,"mutability":"mutable","name":"_tokenA","nameLocation":"4821:7:5","nodeType":"VariableDeclaration","scope":1253,"src":"4813:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1152,"name":"address","nodeType":"ElementaryTypeName","src":"4813:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1155,"mutability":"mutable","name":"_amountA","nameLocation":"4847:8:5","nodeType":"VariableDeclaration","scope":1253,"src":"4839:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1154,"name":"uint256","nodeType":"ElementaryTypeName","src":"4839:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1157,"mutability":"mutable","name":"_tokenB","nameLocation":"4874:7:5","nodeType":"VariableDeclaration","scope":1253,"src":"4866:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1156,"name":"address","nodeType":"ElementaryTypeName","src":"4866:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1159,"mutability":"mutable","name":"_amountB","nameLocation":"4900:8:5","nodeType":"VariableDeclaration","scope":1253,"src":"4892:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1158,"name":"uint256","nodeType":"ElementaryTypeName","src":"4892:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1161,"mutability":"mutable","name":"_rate","nameLocation":"4927:5:5","nodeType":"VariableDeclaration","scope":1253,"src":"4919:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1160,"name":"uint256","nodeType":"ElementaryTypeName","src":"4919:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1163,"mutability":"mutable","name":"_waiveFees","nameLocation":"4948:10:5","nodeType":"VariableDeclaration","scope":1253,"src":"4943:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1162,"name":"bool","nodeType":"ElementaryTypeName","src":"4943:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4802:163:5"},"returnParameters":{"id":1171,"nodeType":"ParameterList","parameters":[],"src":"5015:0:5"},"scope":2506,"src":"4773:1411:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1449,"nodeType":"Block","src":"6343:1597:5","statements":[{"assignments":[1275],"declarations":[{"constant":false,"id":1275,"mutability":"mutable","name":"_order","nameLocation":"6371:6:5","nodeType":"VariableDeclaration","scope":1449,"src":"6354:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"},"typeName":{"baseType":{"id":1273,"nodeType":"UserDefinedTypeName","pathNode":{"id":1272,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":942,"src":"6354:6:5"},"referencedDeclaration":942,"src":"6354:6:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_storage_ptr","typeString":"struct Exchange._Order"}},"id":1274,"nodeType":"ArrayTypeName","src":"6354:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"}},"visibility":"internal"}],"id":1284,"initialValue":{"baseExpression":{"baseExpression":{"id":1276,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"6380:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$942_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":1278,"indexExpression":{"id":1277,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"6392:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6380:19:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$942_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":1283,"indexExpression":{"arguments":[{"id":1281,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"6408:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}],"id":1280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6400:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1279,"name":"uint256","nodeType":"ElementaryTypeName","src":"6400:7:5","typeDescriptions":{}}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6400:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6380:34:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6354:60:5"},{"assignments":[1286],"declarations":[{"constant":false,"id":1286,"mutability":"mutable","name":"size","nameLocation":"6433:4:5","nodeType":"VariableDeclaration","scope":1449,"src":"6425:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1285,"name":"uint256","nodeType":"ElementaryTypeName","src":"6425:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1289,"initialValue":{"expression":{"id":1287,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"6440:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6440:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6425:28:5"},{"assignments":[1292],"declarations":[{"constant":false,"id":1292,"mutability":"mutable","name":"order","nameLocation":"6478:5:5","nodeType":"VariableDeclaration","scope":1449,"src":"6464:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":1291,"nodeType":"UserDefinedTypeName","pathNode":{"id":1290,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":942,"src":"6464:6:5"},"referencedDeclaration":942,"src":"6464:6:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"}],"id":1293,"nodeType":"VariableDeclarationStatement","src":"6464:19:5"},{"assignments":[1295],"declarations":[{"constant":false,"id":1295,"mutability":"mutable","name":"index","nameLocation":"6504:5:5","nodeType":"VariableDeclaration","scope":1449,"src":"6496:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1294,"name":"uint256","nodeType":"ElementaryTypeName","src":"6496:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1296,"nodeType":"VariableDeclarationStatement","src":"6496:13:5"},{"body":{"id":1326,"nodeType":"Block","src":"6555:155:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1307,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"6574:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":1309,"indexExpression":{"id":1308,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"6581:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6574:9:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_storage","typeString":"struct Exchange._Order storage ref"}},"id":1310,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":920,"src":"6574:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1311,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"6590:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6574:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1325,"nodeType":"IfStatement","src":"6570:129:5","trueBody":{"id":1324,"nodeType":"Block","src":"6595:104:5","statements":[{"expression":{"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1313,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"6614:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1314,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"6622:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6614:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1316,"nodeType":"ExpressionStatement","src":"6614:9:5"},{"expression":{"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1317,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"6642:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1318,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"6650:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":1320,"indexExpression":{"id":1319,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"6657:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6650:9:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_storage","typeString":"struct Exchange._Order storage ref"}},"src":"6642:17:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1322,"nodeType":"ExpressionStatement","src":"6642:17:5"},{"id":1323,"nodeType":"Break","src":"6678:5:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1301,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"6540:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1302,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"6544:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6540:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1327,"initializationExpression":{"assignments":[1298],"declarations":[{"constant":false,"id":1298,"mutability":"mutable","name":"i","nameLocation":"6533:1:5","nodeType":"VariableDeclaration","scope":1327,"src":"6525:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1297,"name":"uint256","nodeType":"ElementaryTypeName","src":"6525:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1300,"initialValue":{"hexValue":"30","id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6537:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6525:13:5"},"loopExpression":{"expression":{"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6550:3:5","subExpression":{"id":1304,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"6550:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1306,"nodeType":"ExpressionStatement","src":"6550:3:5"},"nodeType":"ForStatement","src":"6520:190:5"},{"condition":{"id":1328,"name":"s_isManual","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"6767:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1375,"nodeType":"IfStatement","src":"6763:604:5","trueBody":{"id":1374,"nodeType":"Block","src":"6779:588:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1330,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6802:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6802:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1332,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"6816:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":925,"src":"6816:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6802:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74204f776e6572","id":1335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6828:11:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4","typeString":"literal_string \"Not Owner\""},"value":"Not Owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4","typeString":"literal_string \"Not Owner\""}],"id":1329,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6794:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6794:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1337,"nodeType":"ExpressionStatement","src":"6794:46:5"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1338,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"6889:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1339,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"6897:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$971_$","typeString":"type(enum Exchange.Side)"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":969,"src":"6897:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},"src":"6889:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1355,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"7127:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1356,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"7135:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$971_$","typeString":"type(enum Exchange.Side)"}},"id":1357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":970,"src":"7135:9:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},"src":"7127:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1372,"nodeType":"IfStatement","src":"7123:233:5","trueBody":{"id":1371,"nodeType":"Block","src":"7146:210:5","statements":[{"expression":{"arguments":[{"expression":{"id":1362,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7212:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7212:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1364,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"7245:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1365,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":927,"src":"7245:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1366,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"7280:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1367,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":929,"src":"7280:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7316:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1359,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"7165:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3410","typeString":"contract Wallet"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateLockedFunds","nodeType":"MemberAccess","referencedDeclaration":3305,"src":"7165:24:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7165:175:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1370,"nodeType":"ExpressionStatement","src":"7165:175:5"}]}},"id":1373,"nodeType":"IfStatement","src":"6885:471:5","trueBody":{"id":1354,"nodeType":"Block","src":"6907:210:5","statements":[{"expression":{"arguments":[{"expression":{"id":1345,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6973:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6973:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1347,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"7006:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1348,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":931,"src":"7006:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1349,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"7041:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1350,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountB","nodeType":"MemberAccess","referencedDeclaration":933,"src":"7041:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7077:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1342,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"6926:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3410","typeString":"contract Wallet"}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateLockedFunds","nodeType":"MemberAccess","referencedDeclaration":3305,"src":"6926:24:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6926:175:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1353,"nodeType":"ExpressionStatement","src":"6926:175:5"}]}}]}},{"body":{"id":1399,"nodeType":"Block","src":"7422:55:5","statements":[{"expression":{"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1388,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"7437:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":1390,"indexExpression":{"id":1389,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"7444:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7437:9:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_storage","typeString":"struct Exchange._Order storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1391,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"7449:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":1396,"indexExpression":{"arguments":[{"hexValue":"31","id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7462:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":1392,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"7456:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":708,"src":"7456:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7456:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7449:16:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_storage","typeString":"struct Exchange._Order storage ref"}},"src":"7437:28:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_storage","typeString":"struct Exchange._Order storage ref"}},"id":1398,"nodeType":"ExpressionStatement","src":"7437:28:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1380,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"7403:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1381,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"7407:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7414:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7407:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7403:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1400,"initializationExpression":{"assignments":[1377],"declarations":[{"constant":false,"id":1377,"mutability":"mutable","name":"j","nameLocation":"7392:1:5","nodeType":"VariableDeclaration","scope":1400,"src":"7384:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1376,"name":"uint256","nodeType":"ElementaryTypeName","src":"7384:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1379,"initialValue":{"id":1378,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"7396:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7384:17:5"},"loopExpression":{"expression":{"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7417:3:5","subExpression":{"id":1385,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"7417:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1387,"nodeType":"ExpressionStatement","src":"7417:3:5"},"nodeType":"ForStatement","src":"7379:98:5"},{"expression":{"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"7487:26:5","subExpression":{"baseExpression":{"id":1401,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"7494:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":1406,"indexExpression":{"arguments":[{"hexValue":"31","id":1404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7510:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":1402,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"7501:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":723,"src":"7501:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7501:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7494:19:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_storage","typeString":"struct Exchange._Order storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1408,"nodeType":"ExpressionStatement","src":"7487:26:5"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1409,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"7524:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"7524:10:5","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_struct$__Order_$942_storage_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_struct$__Order_$942_storage_$dyn_storage_ptr_$","typeString":"function (struct Exchange._Order storage ref[] storage pointer)"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7524:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1413,"nodeType":"ExpressionStatement","src":"7524:12:5"},{"expression":{"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1414,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"7549:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$942_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":1420,"indexExpression":{"id":1415,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"7561:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7549:19:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$942_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":1421,"indexExpression":{"arguments":[{"id":1418,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"7577:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}],"id":1417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7569:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1416,"name":"uint256","nodeType":"ElementaryTypeName","src":"7569:7:5","typeDescriptions":{}}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7569:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7549:34:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1422,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"7586:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"src":"7549:43:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":1424,"nodeType":"ExpressionStatement","src":"7549:43:5"},{"eventCall":{"arguments":[{"id":1426,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"7631:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1427,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"7649:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1428,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"side","nodeType":"MemberAccess","referencedDeclaration":923,"src":"7649:10:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},{"expression":{"id":1429,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"7674:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":925,"src":"7674:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1431,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"7699:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1432,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":927,"src":"7699:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1433,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"7726:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1434,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":929,"src":"7726:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1435,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"7754:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1436,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":931,"src":"7754:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1437,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"7781:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1438,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountB","nodeType":"MemberAccess","referencedDeclaration":933,"src":"7781:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1439,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"7809:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1440,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":935,"src":"7809:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1441,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"7834:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"originalAmountA","nodeType":"MemberAccess","referencedDeclaration":937,"src":"7834:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1443,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"7870:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1444,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"originalAmountB","nodeType":"MemberAccess","referencedDeclaration":939,"src":"7870:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1445,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"7906:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1446,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"waiveFees","nodeType":"MemberAccess","referencedDeclaration":941,"src":"7906:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1425,"name":"Cancel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"7610:6:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_Side_$971_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,enum Exchange.Side,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7610:322:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1448,"nodeType":"EmitStatement","src":"7605:327:5"}]},"functionSelector":"1347d60e","id":1450,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1263,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"6305:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1264,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"6310:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},{"id":1265,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"6316:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1266,"kind":"modifierInvocation","modifierName":{"id":1262,"name":"validOrder","nodeType":"IdentifierPath","referencedDeclaration":2492,"src":"6294:10:5"},"nodeType":"ModifierInvocation","src":"6294:29:5"},{"arguments":[{"id":1268,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"6335:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1269,"kind":"modifierInvocation","modifierName":{"id":1267,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":2505,"src":"6324:10:5"},"nodeType":"ModifierInvocation","src":"6324:18:5"}],"name":"cancelOrder","nameLocation":"6201:11:5","nodeType":"FunctionDefinition","parameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1256,"mutability":"mutable","name":"side","nameLocation":"6228:4:5","nodeType":"VariableDeclaration","scope":1450,"src":"6223:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"},"typeName":{"id":1255,"nodeType":"UserDefinedTypeName","pathNode":{"id":1254,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":971,"src":"6223:4:5"},"referencedDeclaration":971,"src":"6223:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":1258,"mutability":"mutable","name":"_id","nameLocation":"6251:3:5","nodeType":"VariableDeclaration","scope":1450,"src":"6243:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1257,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1260,"mutability":"mutable","name":"_token","nameLocation":"6273:6:5","nodeType":"VariableDeclaration","scope":1450,"src":"6265:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1259,"name":"address","nodeType":"ElementaryTypeName","src":"6265:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6212:74:5"},"returnParameters":{"id":1270,"nodeType":"ParameterList","parameters":[],"src":"6343:0:5"},"scope":2506,"src":"6192:1748:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1649,"nodeType":"Block","src":"8135:1396:5","statements":[{"assignments":[1472],"declarations":[{"constant":false,"id":1472,"mutability":"mutable","name":"_side","nameLocation":"8154:5:5","nodeType":"VariableDeclaration","scope":1649,"src":"8146:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1471,"name":"uint256","nodeType":"ElementaryTypeName","src":"8146:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1477,"initialValue":{"arguments":[{"id":1475,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"8170:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}],"id":1474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8162:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1473,"name":"uint256","nodeType":"ElementaryTypeName","src":"8162:7:5","typeDescriptions":{}}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8162:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8146:29:5"},{"assignments":[1480,1482],"declarations":[{"constant":false,"id":1480,"mutability":"mutable","name":"order","nameLocation":"8201:5:5","nodeType":"VariableDeclaration","scope":1649,"src":"8187:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":1479,"nodeType":"UserDefinedTypeName","pathNode":{"id":1478,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":942,"src":"8187:6:5"},"referencedDeclaration":942,"src":"8187:6:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},{"constant":false,"id":1482,"mutability":"mutable","name":"index","nameLocation":"8216:5:5","nodeType":"VariableDeclaration","scope":1649,"src":"8208:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1481,"name":"uint256","nodeType":"ElementaryTypeName","src":"8208:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1488,"initialValue":{"arguments":[{"id":1484,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"8257:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1485,"name":"_side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"8278:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1486,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"8298:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1483,"name":"getOrderFromArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"8225:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_struct$__Order_$942_memory_ptr_$_t_uint256_$","typeString":"function (address,uint256,uint256) view returns (struct Exchange._Order memory,uint256)"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8225:87:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$__Order_$942_memory_ptr_$_t_uint256_$","typeString":"tuple(struct Exchange._Order memory,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8186:126:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1490,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"8333:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1491,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":929,"src":"8333:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1492,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"8350:1:5","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$918_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1493,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":917,"src":"8350:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8333:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964204f7264657220416d6f756e7420746f2066696c6c","id":1495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8360:30:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_e2a2339c54d4fc0d37a5533ccef4bf9959c39857db4a97b2323d6fa200439a73","typeString":"literal_string \"Invalid Order Amount to fill\""},"value":"Invalid Order Amount to fill"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e2a2339c54d4fc0d37a5533ccef4bf9959c39857db4a97b2323d6fa200439a73","typeString":"literal_string \"Invalid Order Amount to fill\""}],"id":1489,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8325:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8325:66:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1497,"nodeType":"ExpressionStatement","src":"8325:66:5"},{"expression":{"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1498,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"8404:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1500,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":929,"src":"8404:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1504,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"8438:1:5","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$918_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1505,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":917,"src":"8438:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1501,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"8420:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1502,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":929,"src":"8420:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":723,"src":"8420:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8420:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8404:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1508,"nodeType":"ExpressionStatement","src":"8404:43:5"},{"expression":{"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1509,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"8458:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amountB","nodeType":"MemberAccess","referencedDeclaration":933,"src":"8458:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":1522,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"8535:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1518,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"8521:1:5","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$918_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1519,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":917,"src":"8521:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1515,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"8506:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1516,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":935,"src":"8506:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":738,"src":"8506:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8506:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":753,"src":"8506:28:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8506:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1512,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"8474:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1513,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountB","nodeType":"MemberAccess","referencedDeclaration":933,"src":"8474:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":723,"src":"8474:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8474:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8458:97:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1526,"nodeType":"ExpressionStatement","src":"8458:97:5"},{"expression":{"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1527,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"8566:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$942_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":1531,"indexExpression":{"id":1528,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"8578:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8566:19:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$942_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":1532,"indexExpression":{"id":1529,"name":"_side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"8586:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8566:26:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":1533,"indexExpression":{"id":1530,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"8593:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8566:33:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_storage","typeString":"struct Exchange._Order storage ref"}},"id":1534,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":929,"src":"8566:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1535,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"8610:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1536,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":929,"src":"8610:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8566:57:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1538,"nodeType":"ExpressionStatement","src":"8566:57:5"},{"expression":{"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1539,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"8634:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$942_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":1543,"indexExpression":{"id":1540,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"8646:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8634:19:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$942_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":1544,"indexExpression":{"id":1541,"name":"_side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"8654:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8634:26:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":1545,"indexExpression":{"id":1542,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"8661:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8634:33:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_storage","typeString":"struct Exchange._Order storage ref"}},"id":1546,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amountB","nodeType":"MemberAccess","referencedDeclaration":933,"src":"8634:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1547,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"8678:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1548,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountB","nodeType":"MemberAccess","referencedDeclaration":933,"src":"8678:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8634:57:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1550,"nodeType":"ExpressionStatement","src":"8634:57:5"},{"assignments":[1552],"declarations":[{"constant":false,"id":1552,"mutability":"mutable","name":"fees","nameLocation":"8712:4:5","nodeType":"VariableDeclaration","scope":1649,"src":"8704:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1551,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1562,"initialValue":{"arguments":[{"expression":{"id":1555,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"8759:1:5","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$918_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1556,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":917,"src":"8759:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1557,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"8782:1:5","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$918_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1558,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":915,"src":"8782:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1559,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"8803:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1560,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":931,"src":"8803:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1553,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"8719:11:5","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2840","typeString":"contract TradingFees"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"calculateFees","nodeType":"MemberAccess","referencedDeclaration":2781,"src":"8719:25:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,uint256,address) view external returns (uint256)"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8719:107:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8704:122:5"},{"assignments":[1564],"declarations":[{"constant":false,"id":1564,"mutability":"mutable","name":"feesWaived","nameLocation":"8856:10:5","nodeType":"VariableDeclaration","scope":1649,"src":"8851:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1563,"name":"bool","nodeType":"ElementaryTypeName","src":"8851:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1574,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1565,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"8869:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1566,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"waiveFees","nodeType":"MemberAccess","referencedDeclaration":941,"src":"8869:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":1569,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"8933:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1570,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"8939:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1571,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":925,"src":"8939:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1567,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"8901:11:5","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2840","typeString":"contract TradingFees"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"checkSufficientaETH","nodeType":"MemberAccess","referencedDeclaration":2839,"src":"8901:31:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,address) view external returns (bool)"}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8901:49:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8869:81:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"8851:99:5"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1575,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"8967:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1576,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"8975:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$971_$","typeString":"type(enum Exchange.Side)"}},"id":1577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":969,"src":"8975:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},"src":"8967:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1600,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"9153:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1601,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"9161:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$971_$","typeString":"type(enum Exchange.Side)"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":970,"src":"9161:9:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},"src":"9153:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1625,"nodeType":"IfStatement","src":"9149:183:5","trueBody":{"id":1624,"nodeType":"Block","src":"9172:160:5","statements":[{"expression":{"arguments":[{"id":1605,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"9202:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},{"expression":{"id":1606,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"9209:1:5","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$918_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1607,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":917,"src":"9209:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1608,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"9219:1:5","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$918_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1609,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":915,"src":"9219:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1610,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"9227:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1611,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"9239:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1604,"name":"fillSellOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"9187:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$__Order_$942_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (struct Exchange._Order memory,uint256,uint256,bool,uint256)"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9187:57:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1613,"nodeType":"ExpressionStatement","src":"9187:57:5"},{"eventCall":{"arguments":[{"id":1615,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"9278:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},{"expression":{"id":1616,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"9285:1:5","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$918_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1617,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":917,"src":"9285:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1618,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"9295:1:5","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$918_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1619,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":915,"src":"9295:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1620,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"9303:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1621,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"9315:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1614,"name":"fillSellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"9264:13:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_struct$__Order_$942_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (struct Exchange._Order memory,uint256,uint256,bool,uint256)"}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9264:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1623,"nodeType":"EmitStatement","src":"9259:61:5"}]}},"id":1626,"nodeType":"IfStatement","src":"8963:369:5","trueBody":{"id":1599,"nodeType":"Block","src":"8985:158:5","statements":[{"expression":{"arguments":[{"id":1580,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"9014:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},{"expression":{"id":1581,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"9021:1:5","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$918_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1582,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":917,"src":"9021:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1583,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"9031:1:5","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$918_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1584,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":915,"src":"9031:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1585,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"9039:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1586,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"9051:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1579,"name":"fillBuyOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"9000:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$__Order_$942_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (struct Exchange._Order memory,uint256,uint256,bool,uint256)"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9000:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1588,"nodeType":"ExpressionStatement","src":"9000:56:5"},{"eventCall":{"arguments":[{"id":1590,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"9089:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},{"expression":{"id":1591,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"9096:1:5","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$918_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":917,"src":"9096:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1593,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"9106:1:5","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$918_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1594,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":915,"src":"9106:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1595,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"9114:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1596,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"9126:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1589,"name":"fillBuyOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"9076:12:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_struct$__Order_$942_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (struct Exchange._Order memory,uint256,uint256,bool,uint256)"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9076:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1598,"nodeType":"EmitStatement","src":"9071:60:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1627,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"9348:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1628,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":929,"src":"9348:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9365:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9348:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1648,"nodeType":"IfStatement","src":"9344:180:5","trueBody":{"id":1647,"nodeType":"Block","src":"9368:156:5","statements":[{"expression":{"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1631,"name":"s_isManual","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"9383:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9396:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"9383:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1634,"nodeType":"ExpressionStatement","src":"9383:18:5"},{"expression":{"arguments":[{"id":1636,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"9428:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},{"expression":{"id":1637,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"9434:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1638,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":920,"src":"9434:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1639,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"9444:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1640,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":927,"src":"9444:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1635,"name":"cancelOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"9416:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_Side_$971_$_t_uint256_$_t_address_$returns$__$","typeString":"function (enum Exchange.Side,uint256,address)"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9416:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1642,"nodeType":"ExpressionStatement","src":"9416:41:5"},{"expression":{"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1643,"name":"s_isManual","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"9495:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9508:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9495:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1646,"nodeType":"ExpressionStatement","src":"9495:17:5"}]}}]},"id":1650,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1463,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"8097:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1464,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"8102:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},{"id":1465,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"8108:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1466,"kind":"modifierInvocation","modifierName":{"id":1462,"name":"validOrder","nodeType":"IdentifierPath","referencedDeclaration":2492,"src":"8086:10:5"},"nodeType":"ModifierInvocation","src":"8086:29:5"},{"arguments":[{"id":1468,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"8127:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1469,"kind":"modifierInvocation","modifierName":{"id":1467,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":2505,"src":"8116:10:5"},"nodeType":"ModifierInvocation","src":"8116:18:5"}],"name":"fillOrder","nameLocation":"7957:9:5","nodeType":"FunctionDefinition","parameters":{"id":1461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1453,"mutability":"mutable","name":"side","nameLocation":"7982:4:5","nodeType":"VariableDeclaration","scope":1650,"src":"7977:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"},"typeName":{"id":1452,"nodeType":"UserDefinedTypeName","pathNode":{"id":1451,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":971,"src":"7977:4:5"},"referencedDeclaration":971,"src":"7977:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":1455,"mutability":"mutable","name":"_id","nameLocation":"8005:3:5","nodeType":"VariableDeclaration","scope":1650,"src":"7997:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1454,"name":"uint256","nodeType":"ElementaryTypeName","src":"7997:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1457,"mutability":"mutable","name":"_token","nameLocation":"8027:6:5","nodeType":"VariableDeclaration","scope":1650,"src":"8019:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1456,"name":"address","nodeType":"ElementaryTypeName","src":"8019:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1460,"mutability":"mutable","name":"a","nameLocation":"8068:1:5","nodeType":"VariableDeclaration","scope":1650,"src":"8044:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$918_memory_ptr","typeString":"struct Exchange._fillOrderValues"},"typeName":{"id":1459,"nodeType":"UserDefinedTypeName","pathNode":{"id":1458,"name":"_fillOrderValues","nodeType":"IdentifierPath","referencedDeclaration":918,"src":"8044:16:5"},"referencedDeclaration":918,"src":"8044:16:5","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$918_storage_ptr","typeString":"struct Exchange._fillOrderValues"}},"visibility":"internal"}],"src":"7966:110:5"},"returnParameters":{"id":1470,"nodeType":"ParameterList","parameters":[],"src":"8135:0:5"},"scope":2506,"src":"7948:1583:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1780,"nodeType":"Block","src":"9707:1554:5","statements":[{"condition":{"id":1664,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"9722:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1710,"nodeType":"Block","src":"9957:382:5","statements":[{"assignments":[1688],"declarations":[{"constant":false,"id":1688,"mutability":"mutable","name":"amountToDeduct","nameLocation":"9980:14:5","nodeType":"VariableDeclaration","scope":1710,"src":"9972:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1687,"name":"uint256","nodeType":"ElementaryTypeName","src":"9972:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1695,"initialValue":{"arguments":[{"expression":{"id":1691,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"10042:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1692,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":927,"src":"10042:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1693,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"10073:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1689,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"9997:11:5","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2840","typeString":"contract TradingFees"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"amountToDeduct","nodeType":"MemberAccess","referencedDeclaration":2817,"src":"9997:26:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9997:95:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9972:120:5"},{"expression":{"arguments":[{"expression":{"id":1699,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"10202:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":927,"src":"10202:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1701,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"10233:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1702,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":925,"src":"10233:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1705,"name":"amountToDeduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"10274:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1703,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"10262:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":723,"src":"10262:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10262:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10308:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1696,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"10163:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3410","typeString":"contract Wallet"}},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateBalance","nodeType":"MemberAccess","referencedDeclaration":3372,"src":"10163:20:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10163:164:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1709,"nodeType":"ExpressionStatement","src":"10163:164:5"}]},"id":1711,"nodeType":"IfStatement","src":"9718:621:5","trueBody":{"id":1686,"nodeType":"Block","src":"9734:217:5","statements":[{"expression":{"arguments":[{"id":1668,"name":"aETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"9797:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1669,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"9803:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1670,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":925,"src":"9803:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1671,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"9815:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9821:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1665,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"9776:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3410","typeString":"contract Wallet"}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateBalance","nodeType":"MemberAccess","referencedDeclaration":3372,"src":"9776:20:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9776:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1674,"nodeType":"ExpressionStatement","src":"9776:51:5"},{"expression":{"arguments":[{"expression":{"id":1678,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"9899:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1679,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":927,"src":"9899:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1680,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"9913:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":925,"src":"9913:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1682,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"9925:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9934:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1675,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"9878:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3410","typeString":"contract Wallet"}},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateBalance","nodeType":"MemberAccess","referencedDeclaration":3372,"src":"9878:20:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9878:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1685,"nodeType":"ExpressionStatement","src":"9878:61:5"}]}},{"expression":{"arguments":[{"expression":{"id":1715,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"10432:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1716,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":925,"src":"10432:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1717,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"10457:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1718,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":931,"src":"10457:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1726,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"10514:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":1722,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"10500:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1719,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"10485:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1720,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":935,"src":"10485:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":738,"src":"10485:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10485:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1724,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10484:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":753,"src":"10484:29:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10484:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10538:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1712,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"10393:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3410","typeString":"contract Wallet"}},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateLockedFunds","nodeType":"MemberAccess","referencedDeclaration":3305,"src":"10393:24:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10393:161:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1730,"nodeType":"ExpressionStatement","src":"10393:161:5"},{"expression":{"arguments":[{"expression":{"id":1734,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"10678:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1735,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":931,"src":"10678:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1736,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"10705:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1737,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":925,"src":"10705:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1744,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"10755:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":1740,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"10741:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1738,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"10731:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":738,"src":"10731:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10731:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1742,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10730:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":753,"src":"10730:24:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10730:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10779:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1731,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"10643:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3410","typeString":"contract Wallet"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateBalance","nodeType":"MemberAccess","referencedDeclaration":3372,"src":"10643:20:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10643:152:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1748,"nodeType":"ExpressionStatement","src":"10643:152:5"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":1757,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"10888:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1758,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":920,"src":"10888:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1759,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"10915:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1760,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"side","nodeType":"MemberAccess","referencedDeclaration":923,"src":"10915:10:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},{"expression":{"id":1761,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"10944:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1762,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":925,"src":"10944:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1763,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"10973:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1764,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":927,"src":"10973:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1765,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"11004:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1766,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":931,"src":"11004:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1767,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"11035:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1768,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"11061:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1769,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"11085:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1770,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":935,"src":"11085:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1771,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"11114:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1772,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"originalAmountA","nodeType":"MemberAccess","referencedDeclaration":937,"src":"11114:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1773,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"11154:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"originalAmountB","nodeType":"MemberAccess","referencedDeclaration":939,"src":"11154:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1775,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"11194:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1776,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"11223:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1756,"name":"_filledOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"10857:12:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__filledOrder_$968_storage_ptr_$","typeString":"type(struct Exchange._filledOrder storage pointer)"}},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10857:385:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$968_memory_ptr","typeString":"struct Exchange._filledOrder memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__filledOrder_$968_memory_ptr","typeString":"struct Exchange._filledOrder memory"}],"expression":{"baseExpression":{"baseExpression":{"id":1749,"name":"s_filledOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"10808:14:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$968_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._filledOrder storage ref[] storage ref))"}},"id":1753,"indexExpression":{"expression":{"id":1750,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"10823:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1751,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":925,"src":"10823:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10808:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$968_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._filledOrder storage ref[] storage ref)"}},"id":1754,"indexExpression":{"hexValue":"30","id":1752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10808:29:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__filledOrder_$968_storage_$dyn_storage","typeString":"struct Exchange._filledOrder storage ref[] storage ref"}},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"10808:34:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$__filledOrder_$968_storage_$dyn_storage_ptr_$_t_struct$__filledOrder_$968_storage_$returns$__$bound_to$_t_array$_t_struct$__filledOrder_$968_storage_$dyn_storage_ptr_$","typeString":"function (struct Exchange._filledOrder storage ref[] storage pointer,struct Exchange._filledOrder storage ref)"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10808:445:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1779,"nodeType":"ExpressionStatement","src":"10808:445:5"}]},"id":1781,"implemented":true,"kind":"function","modifiers":[],"name":"fillBuyOrders","nameLocation":"9548:13:5","nodeType":"FunctionDefinition","parameters":{"id":1662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1653,"mutability":"mutable","name":"order","nameLocation":"9586:5:5","nodeType":"VariableDeclaration","scope":1781,"src":"9572:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":1652,"nodeType":"UserDefinedTypeName","pathNode":{"id":1651,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":942,"src":"9572:6:5"},"referencedDeclaration":942,"src":"9572:6:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},{"constant":false,"id":1655,"mutability":"mutable","name":"_amount","nameLocation":"9610:7:5","nodeType":"VariableDeclaration","scope":1781,"src":"9602:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1654,"name":"uint256","nodeType":"ElementaryTypeName","src":"9602:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1657,"mutability":"mutable","name":"_rate","nameLocation":"9636:5:5","nodeType":"VariableDeclaration","scope":1781,"src":"9628:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1656,"name":"uint256","nodeType":"ElementaryTypeName","src":"9628:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1659,"mutability":"mutable","name":"feesWaived","nameLocation":"9657:10:5","nodeType":"VariableDeclaration","scope":1781,"src":"9652:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1658,"name":"bool","nodeType":"ElementaryTypeName","src":"9652:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1661,"mutability":"mutable","name":"fees","nameLocation":"9686:4:5","nodeType":"VariableDeclaration","scope":1781,"src":"9678:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1660,"name":"uint256","nodeType":"ElementaryTypeName","src":"9678:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9561:136:5"},"returnParameters":{"id":1663,"nodeType":"ParameterList","parameters":[],"src":"9707:0:5"},"scope":2506,"src":"9539:1722:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1879,"nodeType":"Block","src":"11438:953:5","statements":[{"condition":{"id":1795,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"11453:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1855,"nodeType":"Block","src":"11798:409:5","statements":[{"assignments":[1826],"declarations":[{"constant":false,"id":1826,"mutability":"mutable","name":"amountToDeduct","nameLocation":"11821:14:5","nodeType":"VariableDeclaration","scope":1855,"src":"11813:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1825,"name":"uint256","nodeType":"ElementaryTypeName","src":"11813:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1833,"initialValue":{"arguments":[{"expression":{"id":1829,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"11883:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1830,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":931,"src":"11883:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1831,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"11914:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1827,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"11838:11:5","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$2840","typeString":"contract TradingFees"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"amountToDeduct","nodeType":"MemberAccess","referencedDeclaration":2817,"src":"11838:26:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11838:95:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11813:120:5"},{"expression":{"arguments":[{"expression":{"id":1837,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"12043:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1838,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":931,"src":"12043:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1839,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"12074:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1840,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":925,"src":"12074:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1850,"name":"amountToDeduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"12142:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1847,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"12128:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":1843,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"12114:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1841,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"12104:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":738,"src":"12104:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12104:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1845,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12103:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":753,"src":"12103:24:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12103:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":723,"src":"12103:38:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12103:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12176:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1834,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"12004:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3410","typeString":"contract Wallet"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateBalance","nodeType":"MemberAccess","referencedDeclaration":3372,"src":"12004:20:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12004:191:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1854,"nodeType":"ExpressionStatement","src":"12004:191:5"}]},"id":1856,"nodeType":"IfStatement","src":"11449:758:5","trueBody":{"id":1824,"nodeType":"Block","src":"11465:327:5","statements":[{"expression":{"arguments":[{"id":1799,"name":"aETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"11528:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1800,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"11534:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1801,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":925,"src":"11534:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1802,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"11546:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11552:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1796,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"11507:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3410","typeString":"contract Wallet"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateBalance","nodeType":"MemberAccess","referencedDeclaration":3372,"src":"11507:20:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11507:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1805,"nodeType":"ExpressionStatement","src":"11507:51:5"},{"expression":{"arguments":[{"expression":{"id":1809,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"11648:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1810,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":931,"src":"11648:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1811,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"11679:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1812,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":925,"src":"11679:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1819,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"11733:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":1815,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"11719:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1813,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"11709:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":738,"src":"11709:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11709:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1817,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11708:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":753,"src":"11708:24:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11708:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11761:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1806,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"11609:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3410","typeString":"contract Wallet"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateBalance","nodeType":"MemberAccess","referencedDeclaration":3372,"src":"11609:20:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11609:171:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1823,"nodeType":"ExpressionStatement","src":"11609:171:5"}]}},{"expression":{"arguments":[{"expression":{"id":1860,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"12244:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1861,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":925,"src":"12244:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1862,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"12256:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":927,"src":"12256:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1864,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"12270:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12279:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1857,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"12219:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3410","typeString":"contract Wallet"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateLockedFunds","nodeType":"MemberAccess","referencedDeclaration":3305,"src":"12219:24:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12219:66:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1867,"nodeType":"ExpressionStatement","src":"12219:66:5"},{"expression":{"arguments":[{"expression":{"id":1871,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"12342:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1872,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":927,"src":"12342:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1873,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"12356:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1874,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":925,"src":"12356:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1875,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"12368:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12377:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1868,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"12321:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3410","typeString":"contract Wallet"}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateBalance","nodeType":"MemberAccess","referencedDeclaration":3372,"src":"12321:20:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12321:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1878,"nodeType":"ExpressionStatement","src":"12321:62:5"}]},"id":1880,"implemented":true,"kind":"function","modifiers":[],"name":"fillSellOrders","nameLocation":"11278:14:5","nodeType":"FunctionDefinition","parameters":{"id":1793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1784,"mutability":"mutable","name":"order","nameLocation":"11317:5:5","nodeType":"VariableDeclaration","scope":1880,"src":"11303:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":1783,"nodeType":"UserDefinedTypeName","pathNode":{"id":1782,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":942,"src":"11303:6:5"},"referencedDeclaration":942,"src":"11303:6:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},{"constant":false,"id":1786,"mutability":"mutable","name":"_amount","nameLocation":"11341:7:5","nodeType":"VariableDeclaration","scope":1880,"src":"11333:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1785,"name":"uint256","nodeType":"ElementaryTypeName","src":"11333:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1788,"mutability":"mutable","name":"_rate","nameLocation":"11367:5:5","nodeType":"VariableDeclaration","scope":1880,"src":"11359:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1787,"name":"uint256","nodeType":"ElementaryTypeName","src":"11359:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1790,"mutability":"mutable","name":"feesWaived","nameLocation":"11388:10:5","nodeType":"VariableDeclaration","scope":1880,"src":"11383:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1789,"name":"bool","nodeType":"ElementaryTypeName","src":"11383:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1792,"mutability":"mutable","name":"fees","nameLocation":"11417:4:5","nodeType":"VariableDeclaration","scope":1880,"src":"11409:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1791,"name":"uint256","nodeType":"ElementaryTypeName","src":"11409:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11292:136:5"},"returnParameters":{"id":1794,"nodeType":"ParameterList","parameters":[],"src":"11438:0:5"},"scope":2506,"src":"11269:1122:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2220,"nodeType":"Block","src":"12552:4625:5","statements":[{"assignments":[1899],"declarations":[{"constant":false,"id":1899,"mutability":"mutable","name":"saleTokenAmt","nameLocation":"12571:12:5","nodeType":"VariableDeclaration","scope":2220,"src":"12563:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1898,"name":"uint256","nodeType":"ElementaryTypeName","src":"12563:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1900,"nodeType":"VariableDeclarationStatement","src":"12563:20:5"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1901,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"12600:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1902,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"12608:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$971_$","typeString":"type(enum Exchange.Side)"}},"id":1903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":969,"src":"12608:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},"src":"12600:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2061,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"14952:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2062,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"14960:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$971_$","typeString":"type(enum Exchange.Side)"}},"id":2063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":970,"src":"14960:9:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},"src":"14952:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2218,"nodeType":"IfStatement","src":"14948:2222:5","trueBody":{"id":2217,"nodeType":"Block","src":"14971:2199:5","statements":[{"assignments":[2069],"declarations":[{"constant":false,"id":2069,"mutability":"mutable","name":"_buyOrder","nameLocation":"15045:9:5","nodeType":"VariableDeclaration","scope":2217,"src":"15029:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order[]"},"typeName":{"baseType":{"id":2067,"nodeType":"UserDefinedTypeName","pathNode":{"id":2066,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":942,"src":"15029:6:5"},"referencedDeclaration":942,"src":"15029:6:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_storage_ptr","typeString":"struct Exchange._Order"}},"id":2068,"nodeType":"ArrayTypeName","src":"15029:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"}},"visibility":"internal"}],"id":2075,"initialValue":{"baseExpression":{"baseExpression":{"id":2070,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"15057:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$942_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":2072,"indexExpression":{"id":2071,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"15069:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15057:19:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$942_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":2074,"indexExpression":{"hexValue":"30","id":2073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15077:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15057:22:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"15029:50:5"},{"body":{"id":2215,"nodeType":"Block","src":"15141:2018:5","statements":[{"assignments":[2089,null],"declarations":[{"constant":false,"id":2089,"mutability":"mutable","name":"sellOrderToFill","nameLocation":"15227:15:5","nodeType":"VariableDeclaration","scope":2215,"src":"15213:29:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":2088,"nodeType":"UserDefinedTypeName","pathNode":{"id":2087,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":942,"src":"15213:6:5"},"referencedDeclaration":942,"src":"15213:6:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},null],"id":2095,"initialValue":{"arguments":[{"id":2091,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"15288:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31","id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15317:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"id":2093,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"15341:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2090,"name":"getOrderFromArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"15248:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_struct$__Order_$942_memory_ptr_$_t_uint256_$","typeString":"function (address,uint256,uint256) view returns (struct Exchange._Order memory,uint256)"}},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15248:115:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$__Order_$942_memory_ptr_$_t_uint256_$","typeString":"tuple(struct Exchange._Order memory,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15212:151:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2096,"name":"_buyOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"15462:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2098,"indexExpression":{"id":2097,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"15472:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15462:12:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2099,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":935,"src":"15462:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2100,"name":"sellOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"15483:15:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2101,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":935,"src":"15483:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15462:41:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2103,"name":"_buyOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"15528:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2105,"indexExpression":{"id":2104,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"15538:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15528:12:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2106,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":931,"src":"15528:19:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2107,"name":"sellOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"15551:15:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2108,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":931,"src":"15551:22:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15528:45:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15462:111:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2202,"nodeType":"IfStatement","src":"15436:1600:5","trueBody":{"id":2201,"nodeType":"Block","src":"15593:1443:5","statements":[{"assignments":[2113],"declarations":[{"constant":false,"id":2113,"mutability":"mutable","name":"order","nameLocation":"15630:5:5","nodeType":"VariableDeclaration","scope":2201,"src":"15616:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":2112,"nodeType":"UserDefinedTypeName","pathNode":{"id":2111,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":942,"src":"15616:6:5"},"referencedDeclaration":942,"src":"15616:6:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"}],"id":2117,"initialValue":{"baseExpression":{"id":2114,"name":"_buyOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"15638:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2116,"indexExpression":{"id":2115,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"15648:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15638:12:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"nodeType":"VariableDeclarationStatement","src":"15616:34:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2118,"name":"sellOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"15753:15:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":929,"src":"15753:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":2120,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"15779:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2121,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":929,"src":"15779:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15753:39:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2129,"name":"sellOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"15978:15:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2130,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":929,"src":"15978:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":2131,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"16005:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2132,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":929,"src":"16005:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15978:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2140,"nodeType":"IfStatement","src":"15974:135:5","trueBody":{"id":2139,"nodeType":"Block","src":"16020:89:5","statements":[{"expression":{"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2134,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"16047:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2135,"name":"sellOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"16062:15:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2136,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":929,"src":"16062:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16047:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2138,"nodeType":"ExpressionStatement","src":"16047:38:5"}]}},"id":2141,"nodeType":"IfStatement","src":"15749:360:5","trueBody":{"id":2128,"nodeType":"Block","src":"15794:79:5","statements":[{"expression":{"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2123,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"15821:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2124,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"15836:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":929,"src":"15836:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15821:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2127,"nodeType":"ExpressionStatement","src":"15821:28:5"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2145,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"16228:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2146,"name":"sellOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"16236:15:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2147,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":925,"src":"16236:20:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2143,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"16211:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3410","typeString":"contract Wallet"}},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3321,"src":"16211:16:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16211:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2149,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"16290:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16211:91:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742053656c6c657220546f6b656e2042616c616e6365","id":2151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16329:35:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_23606608e7b13fb3e79d5390038cbd9a3725c22bbf868c3351f539c1403aa51c","typeString":"literal_string \"Insufficient Seller Token Balance\""},"value":"Insufficient Seller Token Balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_23606608e7b13fb3e79d5390038cbd9a3725c22bbf868c3351f539c1403aa51c","typeString":"literal_string \"Insufficient Seller Token Balance\""}],"id":2142,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16177:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16177:210:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2153,"nodeType":"ExpressionStatement","src":"16177:210:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2157,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"16461:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2158,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":931,"src":"16461:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2159,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"16475:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2160,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":925,"src":"16475:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2155,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"16444:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3410","typeString":"contract Wallet"}},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3321,"src":"16444:16:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16444:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[{"id":2169,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"16554:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"expression":{"id":2164,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"16537:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":935,"src":"16537:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2162,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"16520:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":738,"src":"16520:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16520:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2167,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16519:30:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":753,"src":"16519:34:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16519:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16444:119:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420427579657220546f6b656e2042616c616e6365","id":2172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16590:34:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_b526016737f3f795ad9662415cdc5815356c7958b0a29dae27c6455ef786683d","typeString":"literal_string \"Insufficient Buyer Token Balance\""},"value":"Insufficient Buyer Token Balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b526016737f3f795ad9662415cdc5815356c7958b0a29dae27c6455ef786683d","typeString":"literal_string \"Insufficient Buyer Token Balance\""}],"id":2154,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16410:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16410:237:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2174,"nodeType":"ExpressionStatement","src":"16410:237:5"},{"assignments":[2177],"declarations":[{"constant":false,"id":2177,"mutability":"mutable","name":"fillOrderValues","nameLocation":"16733:15:5","nodeType":"VariableDeclaration","scope":2201,"src":"16709:39:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$918_memory_ptr","typeString":"struct Exchange._fillOrderValues"},"typeName":{"id":2176,"nodeType":"UserDefinedTypeName","pathNode":{"id":2175,"name":"_fillOrderValues","nodeType":"IdentifierPath","referencedDeclaration":918,"src":"16709:16:5"},"referencedDeclaration":918,"src":"16709:16:5","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$918_storage_ptr","typeString":"struct Exchange._fillOrderValues"}},"visibility":"internal"}],"id":2183,"initialValue":{"arguments":[{"expression":{"id":2179,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"16794:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2180,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":935,"src":"16794:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2181,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"16831:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2178,"name":"_fillOrderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"16751:16:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__fillOrderValues_$918_storage_ptr_$","typeString":"type(struct Exchange._fillOrderValues storage pointer)"}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16751:115:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$918_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"nodeType":"VariableDeclarationStatement","src":"16709:157:5"},{"expression":{"arguments":[{"expression":{"id":2185,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"16899:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$971_$","typeString":"type(enum Exchange.Side)"}},"id":2186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":970,"src":"16899:9:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},{"id":2187,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"16910:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2188,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"16915:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2189,"name":"fillOrderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"16923:15:5","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$918_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$__fillOrderValues_$918_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}],"id":2184,"name":"fillOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"16889:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_Side_$971_$_t_uint256_$_t_address_$_t_struct$__fillOrderValues_$918_memory_ptr_$returns$__$","typeString":"function (enum Exchange.Side,uint256,address,struct Exchange._fillOrderValues memory)"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16889:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2191,"nodeType":"ExpressionStatement","src":"16889:50:5"},{"expression":{"arguments":[{"expression":{"id":2193,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"16972:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$971_$","typeString":"type(enum Exchange.Side)"}},"id":2194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":969,"src":"16972:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},{"expression":{"id":2195,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"16982:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2196,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":920,"src":"16982:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2197,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"16992:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2198,"name":"fillOrderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"17000:15:5","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$918_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$__fillOrderValues_$918_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}],"id":2192,"name":"fillOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"16962:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_Side_$971_$_t_uint256_$_t_address_$_t_struct$__fillOrderValues_$918_memory_ptr_$returns$__$","typeString":"function (enum Exchange.Side,uint256,address,struct Exchange._fillOrderValues memory)"}},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16962:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2200,"nodeType":"ExpressionStatement","src":"16962:54:5"}]}},{"assignments":[2204],"declarations":[{"constant":false,"id":2204,"mutability":"mutable","name":"orderExist","nameLocation":"17059:10:5","nodeType":"VariableDeclaration","scope":2215,"src":"17054:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2203,"name":"bool","nodeType":"ElementaryTypeName","src":"17054:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2210,"initialValue":{"arguments":[{"id":2206,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"17084:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2207,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"17089:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},{"id":2208,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"17095:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2205,"name":"orderExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"17072:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Side_$971_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,enum Exchange.Side,address) view returns (bool)"}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17072:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"17054:48:5"},{"condition":{"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"17125:11:5","subExpression":{"id":2211,"name":"orderExist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"17126:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2214,"nodeType":"IfStatement","src":"17121:22:5","trueBody":{"id":2213,"nodeType":"Break","src":"17138:5:5"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2080,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"15114:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2081,"name":"_buyOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"15118:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"15118:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15114:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2216,"initializationExpression":{"assignments":[2077],"declarations":[{"constant":false,"id":2077,"mutability":"mutable","name":"i","nameLocation":"15107:1:5","nodeType":"VariableDeclaration","scope":2216,"src":"15099:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2076,"name":"uint256","nodeType":"ElementaryTypeName","src":"15099:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2079,"initialValue":{"hexValue":"30","id":2078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15111:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"15099:13:5"},"loopExpression":{"expression":{"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15136:3:5","subExpression":{"id":2084,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"15136:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2086,"nodeType":"ExpressionStatement","src":"15136:3:5"},"nodeType":"ForStatement","src":"15094:2065:5"}]}},"id":2219,"nodeType":"IfStatement","src":"12596:4574:5","trueBody":{"id":2060,"nodeType":"Block","src":"12618:2324:5","statements":[{"assignments":[1909],"declarations":[{"constant":false,"id":1909,"mutability":"mutable","name":"_sellOrder","nameLocation":"12693:10:5","nodeType":"VariableDeclaration","scope":2060,"src":"12677:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order[]"},"typeName":{"baseType":{"id":1907,"nodeType":"UserDefinedTypeName","pathNode":{"id":1906,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":942,"src":"12677:6:5"},"referencedDeclaration":942,"src":"12677:6:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_storage_ptr","typeString":"struct Exchange._Order"}},"id":1908,"nodeType":"ArrayTypeName","src":"12677:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"}},"visibility":"internal"}],"id":1915,"initialValue":{"baseExpression":{"baseExpression":{"id":1910,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"12706:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$942_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":1912,"indexExpression":{"id":1911,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"12718:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12706:19:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$942_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":1914,"indexExpression":{"hexValue":"31","id":1913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12726:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12706:22:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12677:51:5"},{"body":{"id":2058,"nodeType":"Block","src":"12791:2140:5","statements":[{"assignments":[1929,null],"declarations":[{"constant":false,"id":1929,"mutability":"mutable","name":"buyOrderToFill","nameLocation":"12876:14:5","nodeType":"VariableDeclaration","scope":2058,"src":"12862:28:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":1928,"nodeType":"UserDefinedTypeName","pathNode":{"id":1927,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":942,"src":"12862:6:5"},"referencedDeclaration":942,"src":"12862:6:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},null],"id":1938,"initialValue":{"arguments":[{"id":1931,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"12936:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1934,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"12971:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}],"id":1933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12965:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1932,"name":"uint8","nodeType":"ElementaryTypeName","src":"12965:5:5","typeDescriptions":{}}},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12965:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1936,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"12999:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1930,"name":"getOrderFromArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"12896:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_struct$__Order_$942_memory_ptr_$_t_uint256_$","typeString":"function (address,uint256,uint256) view returns (struct Exchange._Order memory,uint256)"}},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12896:125:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$__Order_$942_memory_ptr_$_t_uint256_$","typeString":"tuple(struct Exchange._Order memory,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"12861:160:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1939,"name":"_sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"13137:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":1941,"indexExpression":{"id":1940,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"13148:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13137:13:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1942,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":935,"src":"13137:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":1943,"name":"buyOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"13159:14:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1944,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":935,"src":"13159:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13137:41:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1946,"name":"buyOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"13203:14:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1947,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":931,"src":"13203:21:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"baseExpression":{"id":1948,"name":"_sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"13228:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":1950,"indexExpression":{"id":1949,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"13239:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13228:13:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1951,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":931,"src":"13228:20:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13203:45:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13137:111:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2045,"nodeType":"IfStatement","src":"13111:1695:5","trueBody":{"id":2044,"nodeType":"Block","src":"13268:1538:5","statements":[{"assignments":[1956],"declarations":[{"constant":false,"id":1956,"mutability":"mutable","name":"sellOrder","nameLocation":"13305:9:5","nodeType":"VariableDeclaration","scope":2044,"src":"13291:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":1955,"nodeType":"UserDefinedTypeName","pathNode":{"id":1954,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":942,"src":"13291:6:5"},"referencedDeclaration":942,"src":"13291:6:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"}],"id":1960,"initialValue":{"baseExpression":{"id":1957,"name":"_sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"13317:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":1959,"indexExpression":{"id":1958,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"13328:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13317:13:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"nodeType":"VariableDeclarationStatement","src":"13291:39:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1961,"name":"buyOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"13431:14:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1962,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":929,"src":"13431:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1963,"name":"sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"13456:9:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1964,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":929,"src":"13456:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13431:42:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1972,"name":"buyOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"13664:14:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1973,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":929,"src":"13664:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":1974,"name":"sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"13690:9:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1975,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":929,"src":"13690:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13664:43:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1983,"nodeType":"IfStatement","src":"13660:137:5","trueBody":{"id":1982,"nodeType":"Block","src":"13709:88:5","statements":[{"expression":{"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1977,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"13736:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1978,"name":"buyOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"13751:14:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1979,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":929,"src":"13751:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13736:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1981,"nodeType":"ExpressionStatement","src":"13736:37:5"}]}},"id":1984,"nodeType":"IfStatement","src":"13427:370:5","trueBody":{"id":1971,"nodeType":"Block","src":"13475:83:5","statements":[{"expression":{"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1966,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"13502:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1967,"name":"sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"13517:9:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1968,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":929,"src":"13517:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13502:32:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1970,"nodeType":"ExpressionStatement","src":"13502:32:5"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1988,"name":"buyOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"13948:14:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1989,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":931,"src":"13948:21:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1990,"name":"buyOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"14000:14:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1991,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":925,"src":"14000:19:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1986,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"13901:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3410","typeString":"contract Wallet"}},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3321,"src":"13901:16:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13901:145:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[{"id":2000,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"14089:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"expression":{"id":1995,"name":"sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"14068:9:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1996,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":935,"src":"14068:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1993,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"14051:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":738,"src":"14051:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14051:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1998,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14050:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":753,"src":"14050:38:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14050:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13901:197:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420427579657220546f6b656e2042616c616e6365","id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14125:34:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_b526016737f3f795ad9662415cdc5815356c7958b0a29dae27c6455ef786683d","typeString":"literal_string \"Insufficient Buyer Token Balance\""},"value":"Insufficient Buyer Token Balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b526016737f3f795ad9662415cdc5815356c7958b0a29dae27c6455ef786683d","typeString":"literal_string \"Insufficient Buyer Token Balance\""}],"id":1985,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13867:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13867:315:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2005,"nodeType":"ExpressionStatement","src":"13867:315:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2009,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"14256:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2010,"name":"sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"14264:9:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2011,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":925,"src":"14264:14:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2007,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"14239:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3410","typeString":"contract Wallet"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3321,"src":"14239:16:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14239:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2013,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"14312:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14239:85:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742053656c6c657220546f6b656e2042616c616e6365","id":2015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14351:35:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_23606608e7b13fb3e79d5390038cbd9a3725c22bbf868c3351f539c1403aa51c","typeString":"literal_string \"Insufficient Seller Token Balance\""},"value":"Insufficient Seller Token Balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_23606608e7b13fb3e79d5390038cbd9a3725c22bbf868c3351f539c1403aa51c","typeString":"literal_string \"Insufficient Seller Token Balance\""}],"id":2006,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14205:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14205:204:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2017,"nodeType":"ExpressionStatement","src":"14205:204:5"},{"assignments":[2020],"declarations":[{"constant":false,"id":2020,"mutability":"mutable","name":"fillOrderValues","nameLocation":"14495:15:5","nodeType":"VariableDeclaration","scope":2044,"src":"14471:39:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$918_memory_ptr","typeString":"struct Exchange._fillOrderValues"},"typeName":{"id":2019,"nodeType":"UserDefinedTypeName","pathNode":{"id":2018,"name":"_fillOrderValues","nodeType":"IdentifierPath","referencedDeclaration":918,"src":"14471:16:5"},"referencedDeclaration":918,"src":"14471:16:5","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$918_storage_ptr","typeString":"struct Exchange._fillOrderValues"}},"visibility":"internal"}],"id":2026,"initialValue":{"arguments":[{"expression":{"id":2022,"name":"sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"14556:9:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":935,"src":"14556:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2024,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"14597:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2021,"name":"_fillOrderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"14513:16:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__fillOrderValues_$918_storage_ptr_$","typeString":"type(struct Exchange._fillOrderValues storage pointer)"}},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14513:119:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$918_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"nodeType":"VariableDeclarationStatement","src":"14471:161:5"},{"expression":{"arguments":[{"expression":{"id":2028,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"14665:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$971_$","typeString":"type(enum Exchange.Side)"}},"id":2029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":969,"src":"14665:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},{"id":2030,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"14675:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2031,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"14680:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2032,"name":"fillOrderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"14688:15:5","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$918_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$__fillOrderValues_$918_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}],"id":2027,"name":"fillOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"14655:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_Side_$971_$_t_uint256_$_t_address_$_t_struct$__fillOrderValues_$918_memory_ptr_$returns$__$","typeString":"function (enum Exchange.Side,uint256,address,struct Exchange._fillOrderValues memory)"}},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14655:49:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2034,"nodeType":"ExpressionStatement","src":"14655:49:5"},{"expression":{"arguments":[{"expression":{"id":2036,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"14737:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$971_$","typeString":"type(enum Exchange.Side)"}},"id":2037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":970,"src":"14737:9:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},{"expression":{"id":2038,"name":"sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"14748:9:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2039,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":920,"src":"14748:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2040,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"14762:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2041,"name":"fillOrderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"14770:15:5","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$918_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$__fillOrderValues_$918_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}],"id":2035,"name":"fillOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"14727:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_Side_$971_$_t_uint256_$_t_address_$_t_struct$__fillOrderValues_$918_memory_ptr_$returns$__$","typeString":"function (enum Exchange.Side,uint256,address,struct Exchange._fillOrderValues memory)"}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14727:59:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2043,"nodeType":"ExpressionStatement","src":"14727:59:5"}]}},{"assignments":[2047],"declarations":[{"constant":false,"id":2047,"mutability":"mutable","name":"orderExist","nameLocation":"14831:10:5","nodeType":"VariableDeclaration","scope":2058,"src":"14826:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2046,"name":"bool","nodeType":"ElementaryTypeName","src":"14826:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2053,"initialValue":{"arguments":[{"id":2049,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"14856:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2050,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"14861:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},{"id":2051,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"14867:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2048,"name":"orderExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"14844:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Side_$971_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,enum Exchange.Side,address) view returns (bool)"}},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14844:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"14826:48:5"},{"condition":{"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14897:11:5","subExpression":{"id":2054,"name":"orderExist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"14898:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2057,"nodeType":"IfStatement","src":"14893:22:5","trueBody":{"id":2056,"nodeType":"Break","src":"14910:5:5"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1920,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"12763:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1921,"name":"_sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"12767:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"12767:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12763:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2059,"initializationExpression":{"assignments":[1917],"declarations":[{"constant":false,"id":1917,"mutability":"mutable","name":"i","nameLocation":"12756:1:5","nodeType":"VariableDeclaration","scope":2059,"src":"12748:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1916,"name":"uint256","nodeType":"ElementaryTypeName","src":"12748:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1919,"initialValue":{"hexValue":"30","id":1918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12760:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12748:13:5"},"loopExpression":{"expression":{"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12786:3:5","subExpression":{"id":1924,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"12786:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1926,"nodeType":"ExpressionStatement","src":"12786:3:5"},"nodeType":"ForStatement","src":"12743:2188:5"}]}}]},"id":2221,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1890,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"12514:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1891,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"12519:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},{"id":1892,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"12525:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1893,"kind":"modifierInvocation","modifierName":{"id":1889,"name":"validOrder","nodeType":"IdentifierPath","referencedDeclaration":2492,"src":"12503:10:5"},"nodeType":"ModifierInvocation","src":"12503:29:5"},{"arguments":[{"id":1895,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"12544:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1896,"kind":"modifierInvocation","modifierName":{"id":1894,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":2505,"src":"12533:10:5"},"nodeType":"ModifierInvocation","src":"12533:18:5"}],"name":"matchOrders","nameLocation":"12408:11:5","nodeType":"FunctionDefinition","parameters":{"id":1888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1882,"mutability":"mutable","name":"_token","nameLocation":"12438:6:5","nodeType":"VariableDeclaration","scope":2221,"src":"12430:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1881,"name":"address","nodeType":"ElementaryTypeName","src":"12430:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1884,"mutability":"mutable","name":"_id","nameLocation":"12463:3:5","nodeType":"VariableDeclaration","scope":2221,"src":"12455:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1883,"name":"uint256","nodeType":"ElementaryTypeName","src":"12455:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1887,"mutability":"mutable","name":"side","nameLocation":"12482:4:5","nodeType":"VariableDeclaration","scope":2221,"src":"12477:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"},"typeName":{"id":1886,"nodeType":"UserDefinedTypeName","pathNode":{"id":1885,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":971,"src":"12477:4:5"},"referencedDeclaration":971,"src":"12477:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},"visibility":"internal"}],"src":"12419:74:5"},"returnParameters":{"id":1897,"nodeType":"ParameterList","parameters":[],"src":"12552:0:5"},"scope":2506,"src":"12399:4778:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2241,"nodeType":"Block","src":"17291:67:5","statements":[{"expression":{"expression":{"baseExpression":{"baseExpression":{"id":2231,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"17309:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$942_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":2233,"indexExpression":{"id":2232,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"17321:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17309:19:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$942_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":2238,"indexExpression":{"arguments":[{"id":2236,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"17337:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}],"id":2235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17329:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2234,"name":"uint256","nodeType":"ElementaryTypeName","src":"17329:7:5","typeDescriptions":{}}},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17329:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17309:34:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"17309:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2230,"id":2240,"nodeType":"Return","src":"17302:48:5"}]},"functionSelector":"e947a695","id":2242,"implemented":true,"kind":"function","modifiers":[],"name":"getOrderLength","nameLocation":"17194:14:5","nodeType":"FunctionDefinition","parameters":{"id":2227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2224,"mutability":"mutable","name":"side","nameLocation":"17224:4:5","nodeType":"VariableDeclaration","scope":2242,"src":"17219:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"},"typeName":{"id":2223,"nodeType":"UserDefinedTypeName","pathNode":{"id":2222,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":971,"src":"17219:4:5"},"referencedDeclaration":971,"src":"17219:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":2226,"mutability":"mutable","name":"_token","nameLocation":"17247:6:5","nodeType":"VariableDeclaration","scope":2242,"src":"17239:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2225,"name":"address","nodeType":"ElementaryTypeName","src":"17239:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17208:52:5"},"returnParameters":{"id":2230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2242,"src":"17282:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2228,"name":"uint256","nodeType":"ElementaryTypeName","src":"17282:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17281:9:5"},"scope":2506,"src":"17185:173:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2262,"nodeType":"Block","src":"18558:69:5","statements":[{"expression":{"expression":{"baseExpression":{"baseExpression":{"id":2252,"name":"s_filledOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"18576:14:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$968_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._filledOrder storage ref[] storage ref))"}},"id":2254,"indexExpression":{"id":2253,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"18591:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18576:21:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$968_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._filledOrder storage ref[] storage ref)"}},"id":2259,"indexExpression":{"arguments":[{"id":2257,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"18606:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}],"id":2256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18598:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2255,"name":"uint256","nodeType":"ElementaryTypeName","src":"18598:7:5","typeDescriptions":{}}},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18598:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18576:36:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__filledOrder_$968_storage_$dyn_storage","typeString":"struct Exchange._filledOrder storage ref[] storage ref"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"18576:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2251,"id":2261,"nodeType":"Return","src":"18569:50:5"}]},"functionSelector":"c3364be4","id":2263,"implemented":true,"kind":"function","modifiers":[],"name":"getFilledOrderLength","nameLocation":"18456:20:5","nodeType":"FunctionDefinition","parameters":{"id":2248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2244,"mutability":"mutable","name":"_user","nameLocation":"18495:5:5","nodeType":"VariableDeclaration","scope":2263,"src":"18487:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2243,"name":"address","nodeType":"ElementaryTypeName","src":"18487:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2247,"mutability":"mutable","name":"side","nameLocation":"18516:4:5","nodeType":"VariableDeclaration","scope":2263,"src":"18511:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"},"typeName":{"id":2246,"nodeType":"UserDefinedTypeName","pathNode":{"id":2245,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":971,"src":"18511:4:5"},"referencedDeclaration":971,"src":"18511:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},"visibility":"internal"}],"src":"18476:51:5"},"returnParameters":{"id":2251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2263,"src":"18549:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2249,"name":"uint256","nodeType":"ElementaryTypeName","src":"18549:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18548:9:5"},"scope":2506,"src":"18447:180:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2326,"nodeType":"Block","src":"20058:320:5","statements":[{"assignments":[2278],"declarations":[{"constant":false,"id":2278,"mutability":"mutable","name":"i","nameLocation":"20077:1:5","nodeType":"VariableDeclaration","scope":2326,"src":"20069:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2277,"name":"uint256","nodeType":"ElementaryTypeName","src":"20069:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2280,"initialValue":{"hexValue":"30","id":2279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20081:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20069:13:5"},{"assignments":[2285],"declarations":[{"constant":false,"id":2285,"mutability":"mutable","name":"_order","nameLocation":"20109:6:5","nodeType":"VariableDeclaration","scope":2326,"src":"20093:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order[]"},"typeName":{"baseType":{"id":2283,"nodeType":"UserDefinedTypeName","pathNode":{"id":2282,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":942,"src":"20093:6:5"},"referencedDeclaration":942,"src":"20093:6:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_storage_ptr","typeString":"struct Exchange._Order"}},"id":2284,"nodeType":"ArrayTypeName","src":"20093:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"}},"visibility":"internal"}],"id":2291,"initialValue":{"baseExpression":{"baseExpression":{"id":2286,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"20118:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$942_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":2288,"indexExpression":{"id":2287,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"20130:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20118:19:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$942_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":2290,"indexExpression":{"id":2289,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"20138:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20118:25:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"20093:50:5"},{"assignments":[2294],"declarations":[{"constant":false,"id":2294,"mutability":"mutable","name":"order","nameLocation":"20168:5:5","nodeType":"VariableDeclaration","scope":2326,"src":"20154:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":2293,"nodeType":"UserDefinedTypeName","pathNode":{"id":2292,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":942,"src":"20154:6:5"},"referencedDeclaration":942,"src":"20154:6:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"}],"id":2295,"nodeType":"VariableDeclarationStatement","src":"20154:19:5"},{"body":{"id":2320,"nodeType":"Block","src":"20216:127:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2305,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"20235:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2307,"indexExpression":{"id":2306,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"20242:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20235:9:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2308,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":920,"src":"20235:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2309,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"20251:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20235:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2319,"nodeType":"IfStatement","src":"20231:101:5","trueBody":{"id":2318,"nodeType":"Block","src":"20256:76:5","statements":[{"expression":{"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2311,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"20275:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2312,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"20283:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2314,"indexExpression":{"id":2313,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"20290:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20283:9:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"src":"20275:17:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2316,"nodeType":"ExpressionStatement","src":"20275:17:5"},{"id":2317,"nodeType":"Break","src":"20311:5:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2298,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"20192:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2299,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"20196:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"20196:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20192:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2321,"initializationExpression":{"expression":{"id":2296,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"20189:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2297,"nodeType":"ExpressionStatement","src":"20189:1:5"},"loopExpression":{"expression":{"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"20211:3:5","subExpression":{"id":2302,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"20211:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2304,"nodeType":"ExpressionStatement","src":"20211:3:5"},"nodeType":"ForStatement","src":"20184:159:5"},{"expression":{"components":[{"id":2322,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"20361:5:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},{"id":2323,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"20368:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2324,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20360:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$__Order_$942_memory_ptr_$_t_uint256_$","typeString":"tuple(struct Exchange._Order memory,uint256)"}},"functionReturnParameters":2276,"id":2325,"nodeType":"Return","src":"20353:17:5"}]},"functionSelector":"609ae6b5","id":2327,"implemented":true,"kind":"function","modifiers":[],"name":"getOrderFromArray","nameLocation":"19918:17:5","nodeType":"FunctionDefinition","parameters":{"id":2270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2265,"mutability":"mutable","name":"_token","nameLocation":"19954:6:5","nodeType":"VariableDeclaration","scope":2327,"src":"19946:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2264,"name":"address","nodeType":"ElementaryTypeName","src":"19946:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2267,"mutability":"mutable","name":"side","nameLocation":"19979:4:5","nodeType":"VariableDeclaration","scope":2327,"src":"19971:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2266,"name":"uint256","nodeType":"ElementaryTypeName","src":"19971:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2269,"mutability":"mutable","name":"_id","nameLocation":"20002:3:5","nodeType":"VariableDeclaration","scope":2327,"src":"19994:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2268,"name":"uint256","nodeType":"ElementaryTypeName","src":"19994:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19935:77:5"},"returnParameters":{"id":2276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2327,"src":"20034:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":2272,"nodeType":"UserDefinedTypeName","pathNode":{"id":2271,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":942,"src":"20034:6:5"},"referencedDeclaration":942,"src":"20034:6:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},{"constant":false,"id":2275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2327,"src":"20049:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2274,"name":"uint256","nodeType":"ElementaryTypeName","src":"20049:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20033:24:5"},"scope":2506,"src":"19909:469:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2378,"nodeType":"Block","src":"20508:254:5","statements":[{"assignments":[2343],"declarations":[{"constant":false,"id":2343,"mutability":"mutable","name":"orders","nameLocation":"20535:6:5","nodeType":"VariableDeclaration","scope":2378,"src":"20519:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order[]"},"typeName":{"baseType":{"id":2341,"nodeType":"UserDefinedTypeName","pathNode":{"id":2340,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":942,"src":"20519:6:5"},"referencedDeclaration":942,"src":"20519:6:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_storage_ptr","typeString":"struct Exchange._Order"}},"id":2342,"nodeType":"ArrayTypeName","src":"20519:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"}},"visibility":"internal"}],"id":2352,"initialValue":{"baseExpression":{"baseExpression":{"id":2344,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"20544:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$942_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":2346,"indexExpression":{"id":2345,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"20556:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20544:19:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$942_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":2351,"indexExpression":{"arguments":[{"id":2349,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"20572:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}],"id":2348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20564:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2347,"name":"uint256","nodeType":"ElementaryTypeName","src":"20564:7:5","typeDescriptions":{}}},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20564:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20544:34:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"20519:59:5"},{"body":{"id":2374,"nodeType":"Block","src":"20635:97:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2364,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"20654:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2366,"indexExpression":{"id":2365,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"20661:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20654:9:5","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$942_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2367,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":920,"src":"20654:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2368,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"20670:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20654:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2373,"nodeType":"IfStatement","src":"20650:71:5","trueBody":{"id":2372,"nodeType":"Block","src":"20675:46:5","statements":[{"expression":{"hexValue":"74727565","id":2370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20701:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2338,"id":2371,"nodeType":"Return","src":"20694:11:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2357,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"20611:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2358,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"20615:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$942_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"20615:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20611:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2375,"initializationExpression":{"assignments":[2354],"declarations":[{"constant":false,"id":2354,"mutability":"mutable","name":"i","nameLocation":"20604:1:5","nodeType":"VariableDeclaration","scope":2375,"src":"20596:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2353,"name":"uint256","nodeType":"ElementaryTypeName","src":"20596:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2356,"initialValue":{"hexValue":"30","id":2355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20608:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20596:13:5"},"loopExpression":{"expression":{"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"20630:3:5","subExpression":{"id":2361,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"20630:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2363,"nodeType":"ExpressionStatement","src":"20630:3:5"},"nodeType":"ForStatement","src":"20591:141:5"},{"expression":{"hexValue":"66616c7365","id":2376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20749:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2338,"id":2377,"nodeType":"Return","src":"20742:12:5"}]},"functionSelector":"182cffeb","id":2379,"implemented":true,"kind":"function","modifiers":[],"name":"orderExists","nameLocation":"20395:11:5","nodeType":"FunctionDefinition","parameters":{"id":2335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2329,"mutability":"mutable","name":"_id","nameLocation":"20425:3:5","nodeType":"VariableDeclaration","scope":2379,"src":"20417:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2328,"name":"uint256","nodeType":"ElementaryTypeName","src":"20417:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2332,"mutability":"mutable","name":"side","nameLocation":"20444:4:5","nodeType":"VariableDeclaration","scope":2379,"src":"20439:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"},"typeName":{"id":2331,"nodeType":"UserDefinedTypeName","pathNode":{"id":2330,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":971,"src":"20439:4:5"},"referencedDeclaration":971,"src":"20439:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":2334,"mutability":"mutable","name":"_token","nameLocation":"20467:6:5","nodeType":"VariableDeclaration","scope":2379,"src":"20459:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2333,"name":"address","nodeType":"ElementaryTypeName","src":"20459:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20406:74:5"},"returnParameters":{"id":2338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2379,"src":"20502:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2336,"name":"bool","nodeType":"ElementaryTypeName","src":"20502:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20501:6:5"},"scope":2506,"src":"20386:376:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2405,"nodeType":"Block","src":"20840:134:5","statements":[{"expression":{"arguments":[{"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"20859:24:5","subExpression":{"arguments":[{"id":2390,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"20876:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2389,"name":"isVerifiedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"20860:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20860:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20616c7265616479207665726966696564","id":2393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20885:24:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430","typeString":"literal_string \"Token already verified\""},"value":"Token already verified"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430","typeString":"literal_string \"Token already verified\""}],"id":2388,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20851:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20851:59:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2395,"nodeType":"ExpressionStatement","src":"20851:59:5"},{"expression":{"arguments":[{"arguments":[{"id":2400,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"20947:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2401,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"20955:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2399,"name":"_tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"20936:10:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__tokenInfo_$913_storage_ptr_$","typeString":"type(struct Exchange._tokenInfo storage pointer)"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20936:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__tokenInfo_$913_memory_ptr","typeString":"struct Exchange._tokenInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__tokenInfo_$913_memory_ptr","typeString":"struct Exchange._tokenInfo memory"}],"expression":{"id":2396,"name":"tokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"20921:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$913_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo storage ref[] storage ref"}},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"20921:14:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$__tokenInfo_$913_storage_$dyn_storage_ptr_$_t_struct$__tokenInfo_$913_storage_$returns$__$bound_to$_t_array$_t_struct$__tokenInfo_$913_storage_$dyn_storage_ptr_$","typeString":"function (struct Exchange._tokenInfo storage ref[] storage pointer,struct Exchange._tokenInfo storage ref)"}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20921:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2404,"nodeType":"ExpressionStatement","src":"20921:45:5"}]},"functionSelector":"af81c5b9","id":2406,"implemented":true,"kind":"function","modifiers":[{"id":2386,"kind":"modifierInvocation","modifierName":{"id":2385,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":429,"src":"20830:9:5"},"nodeType":"ModifierInvocation","src":"20830:9:5"}],"name":"addToken","nameLocation":"20779:8:5","nodeType":"FunctionDefinition","parameters":{"id":2384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2381,"mutability":"mutable","name":"_token","nameLocation":"20796:6:5","nodeType":"VariableDeclaration","scope":2406,"src":"20788:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2380,"name":"address","nodeType":"ElementaryTypeName","src":"20788:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2383,"mutability":"mutable","name":"_decimals","nameLocation":"20812:9:5","nodeType":"VariableDeclaration","scope":2406,"src":"20804:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2382,"name":"uint256","nodeType":"ElementaryTypeName","src":"20804:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20787:35:5"},"returnParameters":{"id":2387,"nodeType":"ParameterList","parameters":[],"src":"20840:0:5"},"scope":2506,"src":"20770:204:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2437,"nodeType":"Block","src":"21050:204:5","statements":[{"body":{"id":2433,"nodeType":"Block","src":"21154:70:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2424,"name":"tokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"21173:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$913_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo storage ref[] storage ref"}},"id":2426,"indexExpression":{"id":2425,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"21183:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21173:12:5","typeDescriptions":{"typeIdentifier":"t_struct$__tokenInfo_$913_storage","typeString":"struct Exchange._tokenInfo storage ref"}},"id":2427,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":910,"src":"21173:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2428,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"21193:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21173:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2432,"nodeType":"IfStatement","src":"21169:43:5","trueBody":{"expression":{"hexValue":"74727565","id":2430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21208:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2412,"id":2431,"nodeType":"Return","src":"21201:11:5"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2417,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"21127:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2418,"name":"tokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"21131:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$913_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo storage ref[] storage ref"}},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"21131:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21127:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2434,"initializationExpression":{"assignments":[2414],"declarations":[{"constant":false,"id":2414,"mutability":"mutable","name":"i","nameLocation":"21120:1:5","nodeType":"VariableDeclaration","scope":2434,"src":"21112:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2413,"name":"uint256","nodeType":"ElementaryTypeName","src":"21112:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2416,"initialValue":{"hexValue":"30","id":2415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21124:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"21112:13:5"},"loopExpression":{"expression":{"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"21149:3:5","subExpression":{"id":2421,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"21149:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2423,"nodeType":"ExpressionStatement","src":"21149:3:5"},"nodeType":"ForStatement","src":"21107:117:5"},{"expression":{"hexValue":"66616c7365","id":2435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21241:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2412,"id":2436,"nodeType":"Return","src":"21234:12:5"}]},"functionSelector":"1027b219","id":2438,"implemented":true,"kind":"function","modifiers":[],"name":"isVerifiedToken","nameLocation":"20991:15:5","nodeType":"FunctionDefinition","parameters":{"id":2409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2408,"mutability":"mutable","name":"_token","nameLocation":"21015:6:5","nodeType":"VariableDeclaration","scope":2438,"src":"21007:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2407,"name":"address","nodeType":"ElementaryTypeName","src":"21007:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21006:16:5"},"returnParameters":{"id":2412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2438,"src":"21044:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2410,"name":"bool","nodeType":"ElementaryTypeName","src":"21044:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21043:6:5"},"scope":2506,"src":"20982:272:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2471,"nodeType":"Block","src":"21330:186:5","statements":[{"body":{"id":2469,"nodeType":"Block","src":"21388:121:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2456,"name":"tokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"21407:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$913_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo storage ref[] storage ref"}},"id":2458,"indexExpression":{"id":2457,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"21417:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21407:12:5","typeDescriptions":{"typeIdentifier":"t_struct$__tokenInfo_$913_storage","typeString":"struct Exchange._tokenInfo storage ref"}},"id":2459,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":910,"src":"21407:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2460,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"21427:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21407:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2468,"nodeType":"IfStatement","src":"21403:95:5","trueBody":{"id":2467,"nodeType":"Block","src":"21435:63:5","statements":[{"expression":{"expression":{"baseExpression":{"id":2462,"name":"tokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"21461:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$913_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo storage ref[] storage ref"}},"id":2464,"indexExpression":{"id":2463,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"21471:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21461:12:5","typeDescriptions":{"typeIdentifier":"t_struct$__tokenInfo_$913_storage","typeString":"struct Exchange._tokenInfo storage ref"}},"id":2465,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":912,"src":"21461:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2444,"id":2466,"nodeType":"Return","src":"21454:28:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2449,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"21361:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2450,"name":"tokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"21365:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$913_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo storage ref[] storage ref"}},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"21365:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21361:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2470,"initializationExpression":{"assignments":[2446],"declarations":[{"constant":false,"id":2446,"mutability":"mutable","name":"i","nameLocation":"21354:1:5","nodeType":"VariableDeclaration","scope":2470,"src":"21346:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2445,"name":"uint256","nodeType":"ElementaryTypeName","src":"21346:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2448,"initialValue":{"hexValue":"30","id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21358:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"21346:13:5"},"loopExpression":{"expression":{"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"21383:3:5","subExpression":{"id":2453,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"21383:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2455,"nodeType":"ExpressionStatement","src":"21383:3:5"},"nodeType":"ForStatement","src":"21341:168:5"}]},"functionSelector":"1f69565f","id":2472,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenInfo","nameLocation":"21271:12:5","nodeType":"FunctionDefinition","parameters":{"id":2441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2440,"mutability":"mutable","name":"_token","nameLocation":"21292:6:5","nodeType":"VariableDeclaration","scope":2472,"src":"21284:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2439,"name":"address","nodeType":"ElementaryTypeName","src":"21284:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21283:16:5"},"returnParameters":{"id":2444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2472,"src":"21321:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2442,"name":"uint256","nodeType":"ElementaryTypeName","src":"21321:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21320:9:5"},"scope":2506,"src":"21262:254:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2491,"nodeType":"Block","src":"21618:90:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":2483,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"21649:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2484,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"21654:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},{"id":2485,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"21660:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2482,"name":"orderExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"21637:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Side_$971_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,enum Exchange.Side,address) view returns (bool)"}},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21637:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964204f72646572204944","id":2487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21669:18:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2","typeString":"literal_string \"Invalid Order ID\""},"value":"Invalid Order ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2","typeString":"literal_string \"Invalid Order ID\""}],"id":2481,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21629:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21629:59:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2489,"nodeType":"ExpressionStatement","src":"21629:59:5"},{"id":2490,"nodeType":"PlaceholderStatement","src":"21699:1:5"}]},"id":2492,"name":"validOrder","nameLocation":"21533:10:5","nodeType":"ModifierDefinition","parameters":{"id":2480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2474,"mutability":"mutable","name":"_id","nameLocation":"21562:3:5","nodeType":"VariableDeclaration","scope":2492,"src":"21554:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2473,"name":"uint256","nodeType":"ElementaryTypeName","src":"21554:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2477,"mutability":"mutable","name":"side","nameLocation":"21581:4:5","nodeType":"VariableDeclaration","scope":2492,"src":"21576:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"},"typeName":{"id":2476,"nodeType":"UserDefinedTypeName","pathNode":{"id":2475,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":971,"src":"21576:4:5"},"referencedDeclaration":971,"src":"21576:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$971","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":2479,"mutability":"mutable","name":"_token","nameLocation":"21604:6:5","nodeType":"VariableDeclaration","scope":2492,"src":"21596:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2478,"name":"address","nodeType":"ElementaryTypeName","src":"21596:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21543:74:5"},"src":"21524:184:5","virtual":false,"visibility":"internal"},{"body":{"id":2504,"nodeType":"Block","src":"21752:91:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":2498,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"21787:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2497,"name":"isVerifiedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"21771:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21771:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20756e617661696c61626c6520696e20444558","id":2500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21796:26:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3","typeString":"literal_string \"Token unavailable in DEX\""},"value":"Token unavailable in DEX"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3","typeString":"literal_string \"Token unavailable in DEX\""}],"id":2496,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21763:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21763:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2502,"nodeType":"ExpressionStatement","src":"21763:60:5"},{"id":2503,"nodeType":"PlaceholderStatement","src":"21834:1:5"}]},"id":2505,"name":"validToken","nameLocation":"21725:10:5","nodeType":"ModifierDefinition","parameters":{"id":2495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2494,"mutability":"mutable","name":"_token","nameLocation":"21744:6:5","nodeType":"VariableDeclaration","scope":2505,"src":"21736:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2493,"name":"address","nodeType":"ElementaryTypeName","src":"21736:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21735:16:5"},"src":"21716:127:5","virtual":false,"visibility":"internal"}],"scope":2507,"src":"387:21459:5","usedErrors":[]}],"src":"35:21813:5"},"id":5},"contracts/PriceChecker.sol":{"ast":{"absolutePath":"contracts/PriceChecker.sol","exportedSymbols":{"AggregatorV3Interface":[397],"Context":[532],"Ownable":[510],"PriceChecker":[2675]},"id":2676,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2508,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"33:23:6"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":2509,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2676,"sourceUnit":398,"src":"60:76:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2510,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2676,"sourceUnit":511,"src":"138:52:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2511,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":510,"src":"219:7:6"},"id":2512,"nodeType":"InheritanceSpecifier","src":"219:7:6"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2675,"linearizedBaseContracts":[2675,510,532],"name":"PriceChecker","nameLocation":"203:12:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"10c7f0b9","id":2516,"mutability":"mutable","name":"priceFeeds","nameLocation":"321:10:6","nodeType":"VariableDeclaration","scope":2675,"src":"301:30:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2524_storage_$dyn_storage","typeString":"struct PriceChecker._priceFeed[]"},"typeName":{"baseType":{"id":2514,"nodeType":"UserDefinedTypeName","pathNode":{"id":2513,"name":"_priceFeed","nodeType":"IdentifierPath","referencedDeclaration":2524,"src":"301:10:6"},"referencedDeclaration":2524,"src":"301:10:6","typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$2524_storage_ptr","typeString":"struct PriceChecker._priceFeed"}},"id":2515,"nodeType":"ArrayTypeName","src":"301:12:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2524_storage_$dyn_storage_ptr","typeString":"struct PriceChecker._priceFeed[]"}},"visibility":"public"},{"canonicalName":"PriceChecker._priceFeed","id":2524,"members":[{"constant":false,"id":2518,"mutability":"mutable","name":"name","nameLocation":"376:4:6","nodeType":"VariableDeclaration","scope":2524,"src":"369:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2517,"name":"string","nodeType":"ElementaryTypeName","src":"369:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2520,"mutability":"mutable","name":"token","nameLocation":"399:5:6","nodeType":"VariableDeclaration","scope":2524,"src":"391:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2519,"name":"address","nodeType":"ElementaryTypeName","src":"391:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2523,"mutability":"mutable","name":"priceFeed","nameLocation":"437:9:6","nodeType":"VariableDeclaration","scope":2524,"src":"415:31:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$397","typeString":"contract AggregatorV3Interface"},"typeName":{"id":2522,"nodeType":"UserDefinedTypeName","pathNode":{"id":2521,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":397,"src":"415:21:6"},"referencedDeclaration":397,"src":"415:21:6","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$397","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"}],"name":"_priceFeed","nameLocation":"347:10:6","nodeType":"StructDefinition","scope":2675,"src":"340:114:6","visibility":"public"},{"body":{"id":2605,"nodeType":"Block","src":"635:583:6","statements":[{"assignments":[2539],"declarations":[{"constant":false,"id":2539,"mutability":"mutable","name":"pricefeed","nameLocation":"666:9:6","nodeType":"VariableDeclaration","scope":2605,"src":"646:29:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2524_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed[]"},"typeName":{"baseType":{"id":2537,"nodeType":"UserDefinedTypeName","pathNode":{"id":2536,"name":"_priceFeed","nodeType":"IdentifierPath","referencedDeclaration":2524,"src":"646:10:6"},"referencedDeclaration":2524,"src":"646:10:6","typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$2524_storage_ptr","typeString":"struct PriceChecker._priceFeed"}},"id":2538,"nodeType":"ArrayTypeName","src":"646:12:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2524_storage_$dyn_storage_ptr","typeString":"struct PriceChecker._priceFeed[]"}},"visibility":"internal"}],"id":2541,"initialValue":{"id":2540,"name":"priceFeeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"678:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2524_storage_$dyn_storage","typeString":"struct PriceChecker._priceFeed storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"646:42:6"},{"assignments":[2543],"declarations":[{"constant":false,"id":2543,"mutability":"mutable","name":"isAdded","nameLocation":"704:7:6","nodeType":"VariableDeclaration","scope":2605,"src":"699:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2542,"name":"bool","nodeType":"ElementaryTypeName","src":"699:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2545,"initialValue":{"hexValue":"66616c7365","id":2544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"714:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"699:20:6"},{"body":{"id":2580,"nodeType":"Block","src":"777:238:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2560,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"841:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2558,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"824:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"824:16:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"824:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2557,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"814:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"814:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2566,"name":"pricefeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"896:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2524_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed memory[] memory"}},"id":2568,"indexExpression":{"id":2567,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"906:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"896:12:6","typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$2524_memory_ptr","typeString":"struct PriceChecker._priceFeed memory"}},"id":2569,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"name","nodeType":"MemberAccess","referencedDeclaration":2518,"src":"896:17:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2564,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"879:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"879:16:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"879:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2563,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"869:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"869:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"814:101:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2579,"nodeType":"IfStatement","src":"792:212:6","trueBody":{"id":2578,"nodeType":"Block","src":"931:73:6","statements":[{"expression":{"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2573,"name":"isAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"950:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"960:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"950:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2576,"nodeType":"ExpressionStatement","src":"950:14:6"},{"id":2577,"nodeType":"Break","src":"983:5:6"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2550,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"750:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2551,"name":"pricefeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"754:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2524_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed memory[] memory"}},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"754:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"750:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2581,"initializationExpression":{"assignments":[2547],"declarations":[{"constant":false,"id":2547,"mutability":"mutable","name":"i","nameLocation":"743:1:6","nodeType":"VariableDeclaration","scope":2581,"src":"735:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2546,"name":"uint256","nodeType":"ElementaryTypeName","src":"735:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2549,"initialValue":{"hexValue":"30","id":2548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"747:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"735:13:6"},"loopExpression":{"expression":{"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"772:3:6","subExpression":{"id":2554,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"772:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2556,"nodeType":"ExpressionStatement","src":"772:3:6"},"nodeType":"ForStatement","src":"730:285:6"},{"expression":{"arguments":[{"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1033:8:6","subExpression":{"id":2583,"name":"isAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"1034:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5072696365204665656420616c7265616479206164646564","id":2585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1043:26:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f","typeString":"literal_string \"Price Feed already added\""},"value":"Price Feed already added"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f","typeString":"literal_string \"Price Feed already added\""}],"id":2582,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1025:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1025:45:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2587,"nodeType":"ExpressionStatement","src":"1025:45:6"},{"assignments":[2590],"declarations":[{"constant":false,"id":2590,"mutability":"mutable","name":"priceFeed","nameLocation":"1103:9:6","nodeType":"VariableDeclaration","scope":2605,"src":"1081:31:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$397","typeString":"contract AggregatorV3Interface"},"typeName":{"id":2589,"nodeType":"UserDefinedTypeName","pathNode":{"id":2588,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":397,"src":"1081:21:6"},"referencedDeclaration":397,"src":"1081:21:6","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$397","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"}],"id":2594,"initialValue":{"arguments":[{"id":2592,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"1137:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2591,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"1115:21:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$397_$","typeString":"type(contract AggregatorV3Interface)"}},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1115:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$397","typeString":"contract AggregatorV3Interface"}},"nodeType":"VariableDeclarationStatement","src":"1081:65:6"},{"expression":{"arguments":[{"arguments":[{"id":2599,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"1184:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2600,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"1191:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2601,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"1199:9:6","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$397","typeString":"contract AggregatorV3Interface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_AggregatorV3Interface_$397","typeString":"contract AggregatorV3Interface"}],"id":2598,"name":"_priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"1173:10:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__priceFeed_$2524_storage_ptr_$","typeString":"type(struct PriceChecker._priceFeed storage pointer)"}},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1173:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$2524_memory_ptr","typeString":"struct PriceChecker._priceFeed memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__priceFeed_$2524_memory_ptr","typeString":"struct PriceChecker._priceFeed memory"}],"expression":{"id":2595,"name":"priceFeeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"1157:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2524_storage_$dyn_storage","typeString":"struct PriceChecker._priceFeed storage ref[] storage ref"}},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"1157:15:6","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$__priceFeed_$2524_storage_$dyn_storage_ptr_$_t_struct$__priceFeed_$2524_storage_$returns$__$bound_to$_t_array$_t_struct$__priceFeed_$2524_storage_$dyn_storage_ptr_$","typeString":"function (struct PriceChecker._priceFeed storage ref[] storage pointer,struct PriceChecker._priceFeed storage ref)"}},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1157:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2604,"nodeType":"ExpressionStatement","src":"1157:53:6"}]},"functionSelector":"8c35423e","id":2606,"implemented":true,"kind":"function","modifiers":[{"id":2533,"kind":"modifierInvocation","modifierName":{"id":2532,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":429,"src":"625:9:6"},"nodeType":"ModifierInvocation","src":"625:9:6"}],"name":"addPriceFeed","nameLocation":"514:12:6","nodeType":"FunctionDefinition","parameters":{"id":2531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2526,"mutability":"mutable","name":"_name","nameLocation":"551:5:6","nodeType":"VariableDeclaration","scope":2606,"src":"537:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2525,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2528,"mutability":"mutable","name":"_token","nameLocation":"575:6:6","nodeType":"VariableDeclaration","scope":2606,"src":"567:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2527,"name":"address","nodeType":"ElementaryTypeName","src":"567:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2530,"mutability":"mutable","name":"_address","nameLocation":"600:8:6","nodeType":"VariableDeclaration","scope":2606,"src":"592:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2529,"name":"address","nodeType":"ElementaryTypeName","src":"592:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"526:89:6"},"returnParameters":{"id":2534,"nodeType":"ParameterList","parameters":[],"src":"635:0:6"},"scope":2675,"src":"505:713:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2647,"nodeType":"Block","src":"1336:244:6","statements":[{"assignments":[2618],"declarations":[{"constant":false,"id":2618,"mutability":"mutable","name":"pricefeed","nameLocation":"1367:9:6","nodeType":"VariableDeclaration","scope":2647,"src":"1347:29:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2524_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed[]"},"typeName":{"baseType":{"id":2616,"nodeType":"UserDefinedTypeName","pathNode":{"id":2615,"name":"_priceFeed","nodeType":"IdentifierPath","referencedDeclaration":2524,"src":"1347:10:6"},"referencedDeclaration":2524,"src":"1347:10:6","typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$2524_storage_ptr","typeString":"struct PriceChecker._priceFeed"}},"id":2617,"nodeType":"ArrayTypeName","src":"1347:12:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2524_storage_$dyn_storage_ptr","typeString":"struct PriceChecker._priceFeed[]"}},"visibility":"internal"}],"id":2620,"initialValue":{"id":2619,"name":"priceFeeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"1379:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2524_storage_$dyn_storage","typeString":"struct PriceChecker._priceFeed storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1347:42:6"},{"body":{"id":2645,"nodeType":"Block","src":"1449:124:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2632,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"1468:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"baseExpression":{"id":2633,"name":"pricefeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"1478:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2524_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed memory[] memory"}},"id":2635,"indexExpression":{"id":2634,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"1488:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1478:12:6","typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$2524_memory_ptr","typeString":"struct PriceChecker._priceFeed memory"}},"id":2636,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":2520,"src":"1478:18:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1468:28:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2644,"nodeType":"IfStatement","src":"1464:98:6","trueBody":{"id":2643,"nodeType":"Block","src":"1498:64:6","statements":[{"expression":{"expression":{"baseExpression":{"id":2638,"name":"pricefeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"1524:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2524_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed memory[] memory"}},"id":2640,"indexExpression":{"id":2639,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"1534:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1524:12:6","typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$2524_memory_ptr","typeString":"struct PriceChecker._priceFeed memory"}},"id":2641,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"priceFeed","nodeType":"MemberAccess","referencedDeclaration":2523,"src":"1524:22:6","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$397","typeString":"contract AggregatorV3Interface"}},"functionReturnParameters":2613,"id":2642,"nodeType":"Return","src":"1517:29:6"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2625,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"1422:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2626,"name":"pricefeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"1426:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2524_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed memory[] memory"}},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1426:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1422:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2646,"initializationExpression":{"assignments":[2622],"declarations":[{"constant":false,"id":2622,"mutability":"mutable","name":"i","nameLocation":"1415:1:6","nodeType":"VariableDeclaration","scope":2646,"src":"1407:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2621,"name":"uint256","nodeType":"ElementaryTypeName","src":"1407:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2624,"initialValue":{"hexValue":"30","id":2623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1419:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1407:13:6"},"loopExpression":{"expression":{"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1444:3:6","subExpression":{"id":2629,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"1444:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2631,"nodeType":"ExpressionStatement","src":"1444:3:6"},"nodeType":"ForStatement","src":"1402:171:6"}]},"id":2648,"implemented":true,"kind":"function","modifiers":[],"name":"getPriceFeed","nameLocation":"1235:12:6","nodeType":"FunctionDefinition","parameters":{"id":2609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2608,"mutability":"mutable","name":"_token","nameLocation":"1266:6:6","nodeType":"VariableDeclaration","scope":2648,"src":"1258:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2607,"name":"address","nodeType":"ElementaryTypeName","src":"1258:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1247:32:6"},"returnParameters":{"id":2613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2612,"mutability":"mutable","name":"priceFeed","nameLocation":"1325:9:6","nodeType":"VariableDeclaration","scope":2648,"src":"1303:31:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$397","typeString":"contract AggregatorV3Interface"},"typeName":{"id":2611,"nodeType":"UserDefinedTypeName","pathNode":{"id":2610,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":397,"src":"1303:21:6"},"referencedDeclaration":397,"src":"1303:21:6","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$397","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"}],"src":"1302:33:6"},"scope":2675,"src":"1226:354:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2673,"nodeType":"Block","src":"1656:568:6","statements":[{"assignments":[2657],"declarations":[{"constant":false,"id":2657,"mutability":"mutable","name":"priceFeed","nameLocation":"1930:9:6","nodeType":"VariableDeclaration","scope":2673,"src":"1908:31:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$397","typeString":"contract AggregatorV3Interface"},"typeName":{"id":2656,"nodeType":"UserDefinedTypeName","pathNode":{"id":2655,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":397,"src":"1908:21:6"},"referencedDeclaration":397,"src":"1908:21:6","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$397","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"}],"id":2661,"initialValue":{"arguments":[{"id":2659,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"1955:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2658,"name":"getPriceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"1942:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_contract$_AggregatorV3Interface_$397_$","typeString":"function (address) view returns (contract AggregatorV3Interface)"}},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1942:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$397","typeString":"contract AggregatorV3Interface"}},"nodeType":"VariableDeclarationStatement","src":"1908:56:6"},{"assignments":[null,2663,null,null,null],"declarations":[null,{"constant":false,"id":2663,"mutability":"mutable","name":"answer","nameLocation":"1985:6:6","nodeType":"VariableDeclaration","scope":2673,"src":"1978:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2662,"name":"int256","nodeType":"ElementaryTypeName","src":"1978:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},null,null,null],"id":2667,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2664,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"2001:9:6","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$397","typeString":"contract AggregatorV3Interface"}},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":396,"src":"2001:25:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2001:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"nodeType":"VariableDeclarationStatement","src":"1975:53:6"},{"expression":{"arguments":[{"id":2670,"name":"answer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2663,"src":"2091:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2083:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2668,"name":"uint256","nodeType":"ElementaryTypeName","src":"2083:7:6","typeDescriptions":{}}},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2083:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2654,"id":2672,"nodeType":"Return","src":"2076:22:6"}]},"functionSelector":"41976e09","id":2674,"implemented":true,"kind":"function","modifiers":[],"name":"getPrice","nameLocation":"1597:8:6","nodeType":"FunctionDefinition","parameters":{"id":2651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2650,"mutability":"mutable","name":"_address","nameLocation":"1614:8:6","nodeType":"VariableDeclaration","scope":2674,"src":"1606:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2649,"name":"address","nodeType":"ElementaryTypeName","src":"1606:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1605:18:6"},"returnParameters":{"id":2654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2674,"src":"1647:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2652,"name":"uint256","nodeType":"ElementaryTypeName","src":"1647:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1646:9:6"},"scope":2675,"src":"1588:636:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2676,"src":"194:2033:6","usedErrors":[]}],"src":"33:2196:6"},"id":6},"contracts/TradingFees.sol":{"ast":{"absolutePath":"contracts/TradingFees.sol","exportedSymbols":{"AggregatorV3Interface":[397],"Context":[532],"Exchange":[2506],"IERC20":[3496],"Ownable":[510],"PriceChecker":[2675],"SafeMath":[844],"TradingFees":[2840],"Wallet":[3410]},"id":2841,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2677,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"35:23:7"},{"absolutePath":"contracts/PriceChecker.sol","file":"./PriceChecker.sol","id":2678,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2841,"sourceUnit":2676,"src":"62:28:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Wallet.sol","file":"./Wallet.sol","id":2679,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2841,"sourceUnit":3411,"src":"92:22:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Exchange.sol","file":"./Exchange.sol","id":2680,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2841,"sourceUnit":2507,"src":"116:24:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":2681,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2841,"sourceUnit":845,"src":"215:57:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":2682,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2841,"sourceUnit":398,"src":"274:76:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2683,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2841,"sourceUnit":511,"src":"352:52:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2684,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":510,"src":"432:7:7"},"id":2685,"nodeType":"InheritanceSpecifier","src":"432:7:7"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2840,"linearizedBaseContracts":[2840,510,532],"name":"TradingFees","nameLocation":"417:11:7","nodeType":"ContractDefinition","nodes":[{"id":2688,"libraryName":{"id":2686,"name":"SafeMath","nodeType":"IdentifierPath","referencedDeclaration":844,"src":"1002:8:7"},"nodeType":"UsingForDirective","src":"996:27:7","typeName":{"id":2687,"name":"uint256","nodeType":"ElementaryTypeName","src":"1015:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":2693,"mutability":"mutable","name":"decimals","nameLocation":"1076:8:7","nodeType":"VariableDeclaration","scope":2840,"src":"1068:27:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2689,"name":"uint256","nodeType":"ElementaryTypeName","src":"1068:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":2692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1087:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":2691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1093:2:7","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"1087:8:7","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"visibility":"internal"},{"constant":false,"functionSelector":"7bf1a627","id":2699,"mutability":"mutable","name":"ethToken","nameLocation":"1117:8:7","nodeType":"VariableDeclaration","scope":2840,"src":"1102:36:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2694,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"30","id":2697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1136:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1128:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2695,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:7","typeDescriptions":{}}},"id":2698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1128:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"92f63d2e","id":2705,"mutability":"mutable","name":"aETH","nameLocation":"1160:4:7","nodeType":"VariableDeclaration","scope":2840,"src":"1145:73:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2700,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"307832323430344230653261373036373036384163646144643866394435383646383334634365326335","id":2703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1175:42:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x22404B0e2a7067068AcdaDd8f9D586F834cCe2c5"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1167:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2701,"name":"address","nodeType":"ElementaryTypeName","src":"1167:7:7","typeDescriptions":{}}},"id":2704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1167:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":2708,"mutability":"mutable","name":"priceFeed","nameLocation":"1238:9:7","nodeType":"VariableDeclaration","scope":2840,"src":"1225:22:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2675","typeString":"contract PriceChecker"},"typeName":{"id":2707,"nodeType":"UserDefinedTypeName","pathNode":{"id":2706,"name":"PriceChecker","nodeType":"IdentifierPath","referencedDeclaration":2675,"src":"1225:12:7"},"referencedDeclaration":2675,"src":"1225:12:7","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2675","typeString":"contract PriceChecker"}},"visibility":"internal"},{"constant":false,"id":2711,"mutability":"mutable","name":"wallet","nameLocation":"1261:6:7","nodeType":"VariableDeclaration","scope":2840,"src":"1254:13:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3410","typeString":"contract Wallet"},"typeName":{"id":2710,"nodeType":"UserDefinedTypeName","pathNode":{"id":2709,"name":"Wallet","nodeType":"IdentifierPath","referencedDeclaration":3410,"src":"1254:6:7"},"referencedDeclaration":3410,"src":"1254:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3410","typeString":"contract Wallet"}},"visibility":"internal"},{"constant":false,"id":2714,"mutability":"mutable","name":"exchange","nameLocation":"1283:8:7","nodeType":"VariableDeclaration","scope":2840,"src":"1274:17:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2506","typeString":"contract Exchange"},"typeName":{"id":2713,"nodeType":"UserDefinedTypeName","pathNode":{"id":2712,"name":"Exchange","nodeType":"IdentifierPath","referencedDeclaration":2506,"src":"1274:8:7"},"referencedDeclaration":2506,"src":"1274:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2506","typeString":"contract Exchange"}},"visibility":"internal"},{"body":{"id":2780,"nodeType":"Block","src":"1440:688:7","statements":[{"assignments":[2726],"declarations":[{"constant":false,"id":2726,"mutability":"mutable","name":"priceOfToken","nameLocation":"1686:12:7","nodeType":"VariableDeclaration","scope":2780,"src":"1678:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2725,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2731,"initialValue":{"arguments":[{"id":2729,"name":"_refToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"1720:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2727,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"1701:9:7","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2675","typeString":"contract PriceChecker"}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPrice","nodeType":"MemberAccess","referencedDeclaration":2674,"src":"1701:18:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1701:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1678:52:7"},{"assignments":[2733],"declarations":[{"constant":false,"id":2733,"mutability":"mutable","name":"value","nameLocation":"1765:5:7","nodeType":"VariableDeclaration","scope":2780,"src":"1757:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2732,"name":"uint256","nodeType":"ElementaryTypeName","src":"1757:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2750,"initialValue":{"arguments":[{"id":2748,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"1848:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":2744,"name":"priceOfToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"1815:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":2740,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"1800:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":2736,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"1788:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2734,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"1776:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":738,"src":"1776:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1776:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2738,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1775:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":753,"src":"1775:24:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1775:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2742,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1774:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":738,"src":"1774:40:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1774:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2746,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1773:56:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":753,"src":"1773:74:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1773:84:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1757:100:7"},{"assignments":[2752],"declarations":[{"constant":false,"id":2752,"mutability":"mutable","name":"fees","nameLocation":"1876:4:7","nodeType":"VariableDeclaration","scope":2780,"src":"1868:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2751,"name":"uint256","nodeType":"ElementaryTypeName","src":"1868:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2759,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1893:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1893:7:7","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}],"expression":{"id":2753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"1883:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":753,"src":"1883:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1883:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1868:33:7"},{"assignments":[2761],"declarations":[{"constant":false,"id":2761,"mutability":"mutable","name":"aETH_Price","nameLocation":"1955:10:7","nodeType":"VariableDeclaration","scope":2780,"src":"1947:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2760,"name":"uint256","nodeType":"ElementaryTypeName","src":"1947:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2766,"initialValue":{"arguments":[{"id":2764,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"1987:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2762,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"1968:9:7","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2675","typeString":"contract PriceChecker"}},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPrice","nodeType":"MemberAccess","referencedDeclaration":2674,"src":"1968:18:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1968:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1947:49:7"},{"assignments":[2768],"declarations":[{"constant":false,"id":2768,"mutability":"mutable","name":"amountOfETH","nameLocation":"2017:11:7","nodeType":"VariableDeclaration","scope":2780,"src":"2009:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2767,"name":"uint256","nodeType":"ElementaryTypeName","src":"2009:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2777,"initialValue":{"arguments":[{"id":2775,"name":"aETH_Price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"2056:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":2771,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"2041:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2769,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"2032:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":738,"src":"2032:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2032:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2773,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2031:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":753,"src":"2031:24:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2031:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2009:58:7"},{"expression":{"id":2778,"name":"amountOfETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"2087:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2724,"id":2779,"nodeType":"Return","src":"2080:18:7"}]},"functionSelector":"513ffedd","id":2781,"implemented":true,"kind":"function","modifiers":[],"name":"calculateFees","nameLocation":"1309:13:7","nodeType":"FunctionDefinition","parameters":{"id":2721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2716,"mutability":"mutable","name":"_amount","nameLocation":"1341:7:7","nodeType":"VariableDeclaration","scope":2781,"src":"1333:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2715,"name":"uint256","nodeType":"ElementaryTypeName","src":"1333:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2718,"mutability":"mutable","name":"_rate","nameLocation":"1367:5:7","nodeType":"VariableDeclaration","scope":2781,"src":"1359:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2717,"name":"uint256","nodeType":"ElementaryTypeName","src":"1359:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2720,"mutability":"mutable","name":"_refToken","nameLocation":"1391:9:7","nodeType":"VariableDeclaration","scope":2781,"src":"1383:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2719,"name":"address","nodeType":"ElementaryTypeName","src":"1383:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1322:85:7"},"returnParameters":{"id":2724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2781,"src":"1431:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2722,"name":"uint256","nodeType":"ElementaryTypeName","src":"1431:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1430:9:7"},"scope":2840,"src":"1300:828:7","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2816,"nodeType":"Block","src":"2282:235:7","statements":[{"assignments":[2791],"declarations":[{"constant":false,"id":2791,"mutability":"mutable","name":"aETH_Price","nameLocation":"2301:10:7","nodeType":"VariableDeclaration","scope":2816,"src":"2293:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2790,"name":"uint256","nodeType":"ElementaryTypeName","src":"2293:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2796,"initialValue":{"arguments":[{"id":2794,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"2333:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2792,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"2314:9:7","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2675","typeString":"contract PriceChecker"}},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPrice","nodeType":"MemberAccess","referencedDeclaration":2674,"src":"2314:18:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2314:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2293:49:7"},{"assignments":[2798],"declarations":[{"constant":false,"id":2798,"mutability":"mutable","name":"priceOfToken","nameLocation":"2361:12:7","nodeType":"VariableDeclaration","scope":2816,"src":"2353:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2797,"name":"uint256","nodeType":"ElementaryTypeName","src":"2353:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2803,"initialValue":{"arguments":[{"id":2801,"name":"_refToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"2395:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2799,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"2376:9:7","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2675","typeString":"contract PriceChecker"}},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPrice","nodeType":"MemberAccess","referencedDeclaration":2674,"src":"2376:18:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2376:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2353:52:7"},{"assignments":[2805],"declarations":[{"constant":false,"id":2805,"mutability":"mutable","name":"value","nameLocation":"2440:5:7","nodeType":"VariableDeclaration","scope":2816,"src":"2432:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2804,"name":"uint256","nodeType":"ElementaryTypeName","src":"2432:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2810,"initialValue":{"arguments":[{"id":2808,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"2463:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2806,"name":"aETH_Price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"2448:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":738,"src":"2448:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2448:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2432:36:7"},{"expression":{"arguments":[{"id":2813,"name":"priceOfToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"2496:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"2486:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":753,"src":"2486:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2486:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2789,"id":2815,"nodeType":"Return","src":"2479:30:7"}]},"functionSelector":"21d6ce10","id":2817,"implemented":true,"kind":"function","modifiers":[],"name":"amountToDeduct","nameLocation":"2177:14:7","nodeType":"FunctionDefinition","parameters":{"id":2786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2783,"mutability":"mutable","name":"_refToken","nameLocation":"2210:9:7","nodeType":"VariableDeclaration","scope":2817,"src":"2202:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2782,"name":"address","nodeType":"ElementaryTypeName","src":"2202:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2785,"mutability":"mutable","name":"fees","nameLocation":"2238:4:7","nodeType":"VariableDeclaration","scope":2817,"src":"2230:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2784,"name":"uint256","nodeType":"ElementaryTypeName","src":"2230:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2191:58:7"},"returnParameters":{"id":2789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2817,"src":"2273:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2787,"name":"uint256","nodeType":"ElementaryTypeName","src":"2273:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2272:9:7"},"scope":2840,"src":"2168:349:7","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2838,"nodeType":"Block","src":"2640:103:7","statements":[{"assignments":[2827],"declarations":[{"constant":false,"id":2827,"mutability":"mutable","name":"balance","nameLocation":"2659:7:7","nodeType":"VariableDeclaration","scope":2838,"src":"2651:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2826,"name":"uint256","nodeType":"ElementaryTypeName","src":"2651:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2833,"initialValue":{"arguments":[{"id":2830,"name":"aETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"2685:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2831,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"2691:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2828,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"2669:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3410","typeString":"contract Wallet"}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"s_tokens","nodeType":"MemberAccess","referencedDeclaration":2874,"src":"2669:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2669:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2651:46:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2834,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"2717:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2835,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"2728:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2717:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2825,"id":2837,"nodeType":"Return","src":"2710:25:7"}]},"functionSelector":"10daf288","id":2839,"implemented":true,"kind":"function","modifiers":[],"name":"checkSufficientaETH","nameLocation":"2534:19:7","nodeType":"FunctionDefinition","parameters":{"id":2822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2819,"mutability":"mutable","name":"_amount","nameLocation":"2572:7:7","nodeType":"VariableDeclaration","scope":2839,"src":"2564:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2818,"name":"uint256","nodeType":"ElementaryTypeName","src":"2564:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2821,"mutability":"mutable","name":"_user","nameLocation":"2598:5:7","nodeType":"VariableDeclaration","scope":2839,"src":"2590:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2820,"name":"address","nodeType":"ElementaryTypeName","src":"2590:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2553:57:7"},"returnParameters":{"id":2825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2839,"src":"2634:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2823,"name":"bool","nodeType":"ElementaryTypeName","src":"2634:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2633:6:7"},"scope":2840,"src":"2525:218:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2841,"src":"408:2338:7","usedErrors":[]}],"src":"35:2713:7"},"id":7},"contracts/Wallet.sol":{"ast":{"absolutePath":"contracts/Wallet.sol","exportedSymbols":{"AggregatorV3Interface":[397],"Context":[532],"Exchange":[2506],"IERC20":[3496],"Ownable":[510],"SafeMath":[844],"Wallet":[3410]},"id":3411,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2842,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"35:23:8"},{"absolutePath":"contracts/interface/IERC20.sol","file":"./interface/IERC20.sol","id":2843,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3411,"sourceUnit":3497,"src":"62:32:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Exchange.sol","file":"./Exchange.sol","id":2844,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3411,"sourceUnit":2507,"src":"96:24:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":2845,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3411,"sourceUnit":845,"src":"195:57:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":2846,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3411,"sourceUnit":398,"src":"254:76:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2847,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3411,"sourceUnit":511,"src":"332:52:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2848,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":510,"src":"407:7:8"},"id":2849,"nodeType":"InheritanceSpecifier","src":"407:7:8"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3410,"linearizedBaseContracts":[3410,510,532],"name":"Wallet","nameLocation":"397:6:8","nodeType":"ContractDefinition","nodes":[{"id":2852,"libraryName":{"id":2850,"name":"SafeMath","nodeType":"IdentifierPath","referencedDeclaration":844,"src":"428:8:8"},"nodeType":"UsingForDirective","src":"422:27:8","typeName":{"id":2851,"name":"uint256","nodeType":"ElementaryTypeName","src":"441:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"functionSelector":"b4a99a4e","id":2854,"mutability":"immutable","name":"Owner","nameLocation":"519:5:8","nodeType":"VariableDeclaration","scope":3410,"src":"494:30:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2853,"name":"address","nodeType":"ElementaryTypeName","src":"494:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":2856,"mutability":"mutable","name":"locked","nameLocation":"582:6:8","nodeType":"VariableDeclaration","scope":3410,"src":"569:19:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2855,"name":"bool","nodeType":"ElementaryTypeName","src":"569:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"constant":false,"functionSelector":"7bf1a627","id":2862,"mutability":"mutable","name":"ethToken","nameLocation":"612:8:8","nodeType":"VariableDeclaration","scope":3410,"src":"597:36:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2857,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"30","id":2860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"631:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"623:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2858,"name":"address","nodeType":"ElementaryTypeName","src":"623:7:8","typeDescriptions":{}}},"id":2861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"623:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"92f63d2e","id":2868,"mutability":"mutable","name":"aETH","nameLocation":"655:4:8","nodeType":"VariableDeclaration","scope":3410,"src":"640:73:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2863,"name":"address","nodeType":"ElementaryTypeName","src":"640:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"307832323430344230653261373036373036384163646144643866394435383646383334634365326335","id":2866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"670:42:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x22404B0e2a7067068AcdaDd8f9D586F834cCe2c5"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"662:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2864,"name":"address","nodeType":"ElementaryTypeName","src":"662:7:8","typeDescriptions":{}}},"id":2867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"662:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"cd5d767c","id":2874,"mutability":"mutable","name":"s_tokens","nameLocation":"777:8:8","nodeType":"VariableDeclaration","scope":3410,"src":"722:63:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":2873,"keyType":{"id":2869,"name":"address","nodeType":"ElementaryTypeName","src":"730:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"722:47:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":2872,"keyType":{"id":2870,"name":"address","nodeType":"ElementaryTypeName","src":"749:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"741:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2871,"name":"uint256","nodeType":"ElementaryTypeName","src":"760:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"4bdde1cf","id":2880,"mutability":"mutable","name":"lockedFunds","nameLocation":"887:11:8","nodeType":"VariableDeclaration","scope":3410,"src":"832:66:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":2879,"keyType":{"id":2875,"name":"address","nodeType":"ElementaryTypeName","src":"840:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"832:47:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":2878,"keyType":{"id":2876,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"851:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2877,"name":"uint256","nodeType":"ElementaryTypeName","src":"870:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"id":2883,"mutability":"mutable","name":"exchange","nameLocation":"916:8:8","nodeType":"VariableDeclaration","scope":3410,"src":"907:17:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2506","typeString":"contract Exchange"},"typeName":{"id":2882,"nodeType":"UserDefinedTypeName","pathNode":{"id":2881,"name":"Exchange","nodeType":"IdentifierPath","referencedDeclaration":2506,"src":"907:8:8"},"referencedDeclaration":2506,"src":"907:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2506","typeString":"contract Exchange"}},"visibility":"internal"},{"constant":false,"id":2886,"mutability":"mutable","name":"token","nameLocation":"938:5:8","nodeType":"VariableDeclaration","scope":3410,"src":"931:12:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3496","typeString":"contract IERC20"},"typeName":{"id":2885,"nodeType":"UserDefinedTypeName","pathNode":{"id":2884,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":3496,"src":"931:6:8"},"referencedDeclaration":3496,"src":"931:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3496","typeString":"contract IERC20"}},"visibility":"internal"},{"anonymous":false,"id":2896,"name":"Deposit","nameLocation":"958:7:8","nodeType":"EventDefinition","parameters":{"id":2895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2888,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"974:5:8","nodeType":"VariableDeclaration","scope":2896,"src":"966:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2887,"name":"address","nodeType":"ElementaryTypeName","src":"966:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2890,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"989:4:8","nodeType":"VariableDeclaration","scope":2896,"src":"981:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2889,"name":"address","nodeType":"ElementaryTypeName","src":"981:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2892,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1003:6:8","nodeType":"VariableDeclaration","scope":2896,"src":"995:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2891,"name":"uint256","nodeType":"ElementaryTypeName","src":"995:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2894,"indexed":false,"mutability":"mutable","name":"balance","nameLocation":"1019:7:8","nodeType":"VariableDeclaration","scope":2896,"src":"1011:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2893,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"965:62:8"},"src":"952:76:8"},{"anonymous":false,"documentation":{"id":2897,"nodeType":"StructuredDocumentation","src":"1036:48:8","text":"@notice Event when amount withdrawn exchange"},"id":2907,"name":"Withdraw","nameLocation":"1096:8:8","nodeType":"EventDefinition","parameters":{"id":2906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2899,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1123:5:8","nodeType":"VariableDeclaration","scope":2907,"src":"1115:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2898,"name":"address","nodeType":"ElementaryTypeName","src":"1115:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2901,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"1147:4:8","nodeType":"VariableDeclaration","scope":2907,"src":"1139:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2900,"name":"address","nodeType":"ElementaryTypeName","src":"1139:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2903,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1170:6:8","nodeType":"VariableDeclaration","scope":2907,"src":"1162:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2902,"name":"uint256","nodeType":"ElementaryTypeName","src":"1162:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2905,"indexed":false,"mutability":"mutable","name":"balance","nameLocation":"1195:7:8","nodeType":"VariableDeclaration","scope":2907,"src":"1187:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2904,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1104:105:8"},"src":"1090:120:8"},{"body":{"id":2915,"nodeType":"Block","src":"1232:37:8","statements":[{"expression":{"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2910,"name":"Owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"1243:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2911,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1251:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1251:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1243:18:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2914,"nodeType":"ExpressionStatement","src":"1243:18:8"}]},"id":2916,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2908,"nodeType":"ParameterList","parameters":[],"src":"1229:2:8"},"returnParameters":{"id":2909,"nodeType":"ParameterList","parameters":[],"src":"1232:0:8"},"scope":3410,"src":"1218:51:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2941,"nodeType":"Block","src":"1316:225:8","statements":[{"expression":{"arguments":[{"id":2920,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"1341:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2921,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1351:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1351:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2923,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1363:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"1363:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1374:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2919,"name":"updateBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"1327:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1327:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2927,"nodeType":"ExpressionStatement","src":"1327:52:8"},{"eventCall":{"arguments":[{"id":2929,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"1419:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2930,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1442:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1442:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2932,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1467:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"1467:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2935,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"1501:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2936,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1511:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1511:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2934,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"1491:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1491:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2928,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"1397:7:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1397:136:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2940,"nodeType":"EmitStatement","src":"1392:141:8"}]},"functionSelector":"f6326fb3","id":2942,"implemented":true,"kind":"function","modifiers":[],"name":"depositETH","nameLocation":"1286:10:8","nodeType":"FunctionDefinition","parameters":{"id":2917,"nodeType":"ParameterList","parameters":[],"src":"1296:2:8"},"returnParameters":{"id":2918,"nodeType":"ParameterList","parameters":[],"src":"1316:0:8"},"scope":3410,"src":"1277:264:8","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3014,"nodeType":"Block","src":"1596:657:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"id":2955,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1698:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1698:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2957,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"1710:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2954,"name":"getlockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"1683:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1683:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2949,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"1639:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2950,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1649:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1649:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2948,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"1629:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1629:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":723,"src":"1629:35:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1629:105:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2960,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"1738:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1629:116:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e63652045544820746f207769746864726177","id":2962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1760:38:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4","typeString":"literal_string \"Insufficient balance ETH to withdraw\""},"value":"Insufficient balance ETH to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4","typeString":"literal_string \"Insufficient balance ETH to withdraw\""}],"id":2947,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1607:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1607:202:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2964,"nodeType":"ExpressionStatement","src":"1607:202:8"},{"expression":{"arguments":[{"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1828:7:8","subExpression":{"id":2966,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"1829:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e742063616c6c20646574656374656421","id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1837:26:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","typeString":"literal_string \"Reentrant call detected!\""},"value":"Reentrant call detected!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","typeString":"literal_string \"Reentrant call detected!\""}],"id":2965,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1820:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1820:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2970,"nodeType":"ExpressionStatement","src":"1820:44:8"},{"expression":{"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2971,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"1875:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1884:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1875:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2974,"nodeType":"ExpressionStatement","src":"1875:13:8"},{"expression":{"arguments":[{"id":2976,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"1913:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2977,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1923:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1923:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2979,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"1935:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1944:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2975,"name":"updateBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"1899:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1899:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2982,"nodeType":"ExpressionStatement","src":"1899:51:8"},{"expression":{"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2983,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"1961:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1970:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1961:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2986,"nodeType":"ExpressionStatement","src":"1961:14:8"},{"assignments":[2988,null],"declarations":[{"constant":false,"id":2988,"mutability":"mutable","name":"success","nameLocation":"1992:7:8","nodeType":"VariableDeclaration","scope":3014,"src":"1987:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2987,"name":"bool","nodeType":"ElementaryTypeName","src":"1987:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2996,"initialValue":{"arguments":[{"hexValue":"","id":2994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2037:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":2989,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2005:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2005:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2005:15:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2992,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"2028:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2005:31:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2005:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1986:54:8"},{"expression":{"arguments":[{"id":2998,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"2059:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6661696c656420746f2073656e6420616d6f756e74","id":2999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2068:23:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4","typeString":"literal_string \"failed to send amount\""},"value":"failed to send amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4","typeString":"literal_string \"failed to send amount\""}],"id":2997,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2051:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2051:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3001,"nodeType":"ExpressionStatement","src":"2051:41:8"},{"eventCall":{"arguments":[{"id":3003,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"2133:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3004,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2156:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2156:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3006,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"2181:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3008,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"2213:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3009,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2223:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2223:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3007,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"2203:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2203:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3002,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"2110:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2110:135:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3013,"nodeType":"EmitStatement","src":"2105:140:8"}]},"functionSelector":"f14210a6","id":3015,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawETH","nameLocation":"1558:11:8","nodeType":"FunctionDefinition","parameters":{"id":2945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2944,"mutability":"mutable","name":"_amount","nameLocation":"1578:7:8","nodeType":"VariableDeclaration","scope":3015,"src":"1570:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2943,"name":"uint256","nodeType":"ElementaryTypeName","src":"1570:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1569:17:8"},"returnParameters":{"id":2946,"nodeType":"ParameterList","parameters":[],"src":"1596:0:8"},"scope":3410,"src":"1549:704:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3103,"nodeType":"Block","src":"2469:907:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3025,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"2488:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3026,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"2498:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2488:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3024,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2480:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2480:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3029,"nodeType":"ExpressionStatement","src":"2480:27:8"},{"expression":{"arguments":[{"arguments":[{"id":3033,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"2565:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3031,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"2540:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2506","typeString":"contract Exchange"}},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isVerifiedToken","nodeType":"MemberAccess","referencedDeclaration":2438,"src":"2540:24:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2540:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f74207665726966696564206f6e2045786368616e6765","id":3035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2587:32:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a","typeString":"literal_string \"Token not verified on Exchange\""},"value":"Token not verified on Exchange"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a","typeString":"literal_string \"Token not verified on Exchange\""}],"id":3030,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2518:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2518:112:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3037,"nodeType":"ExpressionStatement","src":"2518:112:8"},{"expression":{"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3038,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"2707:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3496","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3040,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"2722:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3039,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"2715:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3496_$","typeString":"type(contract IERC20)"}},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2715:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3496","typeString":"contract IERC20"}},"src":"2707:22:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3496","typeString":"contract IERC20"}},"id":3043,"nodeType":"ExpressionStatement","src":"2707:22:8"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":3047,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2818:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2818:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3051,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2838:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3410","typeString":"contract Wallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Wallet_$3410","typeString":"contract Wallet"}],"id":3050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2830:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3049,"name":"address","nodeType":"ElementaryTypeName","src":"2830:7:8","typeDescriptions":{}}},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2830:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3053,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"2845:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3045,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"2799:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3496","typeString":"contract IERC20"}},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":3495,"src":"2799:18:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2799:54:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20417070726f76616c20796574","id":3055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2868:17:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba","typeString":"literal_string \"No Approval yet\""},"value":"No Approval yet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba","typeString":"literal_string \"No Approval yet\""}],"id":3044,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2777:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2777:119:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3057,"nodeType":"ExpressionStatement","src":"2777:119:8"},{"assignments":[3059],"declarations":[{"constant":false,"id":3059,"mutability":"mutable","name":"decimals","nameLocation":"2915:8:8","nodeType":"VariableDeclaration","scope":3103,"src":"2907:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3058,"name":"uint256","nodeType":"ElementaryTypeName","src":"2907:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3061,"initialValue":{"hexValue":"3138","id":3060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2926:2:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"nodeType":"VariableDeclarationStatement","src":"2907:21:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3062,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"2943:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3138","id":3063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2956:2:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"2943:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"arguments":[{"id":3075,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"3086:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3076,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3111:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3111:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3152:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[{"id":3083,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"3171:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3081,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"3158:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":723,"src":"3158:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3158:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3152:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3078,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"3140:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":738,"src":"3140:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3140:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":3087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3201:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3074,"name":"updateBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"3054:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3054:166:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3089,"nodeType":"ExpressionStatement","src":"3054:166:8"},"id":3090,"nodeType":"IfStatement","src":"2939:281:8","trueBody":{"id":3073,"nodeType":"Block","src":"2960:75:8","statements":[{"expression":{"arguments":[{"id":3066,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"2989:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3067,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2997:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2997:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3069,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"3009:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":3070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3018:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3065,"name":"updateBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"2975:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2975:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3072,"nodeType":"ExpressionStatement","src":"2975:48:8"}]}},{"eventCall":{"arguments":[{"id":3092,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"3260:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3093,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3281:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3281:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3095,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"3306:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3097,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"3338:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3098,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3346:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3346:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3096,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"3328:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3328:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3091,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"3238:7:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3238:130:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3102,"nodeType":"EmitStatement","src":"3233:135:8"}]},"functionSelector":"99c6d2de","id":3104,"implemented":true,"kind":"function","modifiers":[],"name":"depositToken","nameLocation":"2361:12:8","nodeType":"FunctionDefinition","parameters":{"id":3022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3017,"mutability":"mutable","name":"_token","nameLocation":"2392:6:8","nodeType":"VariableDeclaration","scope":3104,"src":"2384:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3016,"name":"address","nodeType":"ElementaryTypeName","src":"2384:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3019,"mutability":"mutable","name":"_amount","nameLocation":"2417:7:8","nodeType":"VariableDeclaration","scope":3104,"src":"2409:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3018,"name":"uint256","nodeType":"ElementaryTypeName","src":"2409:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3021,"mutability":"mutable","name":"_decimals","nameLocation":"2443:9:8","nodeType":"VariableDeclaration","scope":3104,"src":"2435:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3020,"name":"uint256","nodeType":"ElementaryTypeName","src":"2435:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2373:86:8"},"returnParameters":{"id":3023,"nodeType":"ParameterList","parameters":[],"src":"2469:0:8"},"scope":3410,"src":"2352:1024:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3237,"nodeType":"Block","src":"3502:1248:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3114,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"3521:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3115,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"3531:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3521:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3113,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3513:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3513:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3118,"nodeType":"ExpressionStatement","src":"3513:27:8"},{"expression":{"arguments":[{"arguments":[{"id":3122,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"3598:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3120,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"3573:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2506","typeString":"contract Exchange"}},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isVerifiedToken","nodeType":"MemberAccess","referencedDeclaration":2438,"src":"3573:24:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3573:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f74207665726966696564206f6e2045786368616e6765","id":3124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3620:32:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a","typeString":"literal_string \"Token not verified on Exchange\""},"value":"Token not verified on Exchange"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a","typeString":"literal_string \"Token not verified on Exchange\""}],"id":3119,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3551:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3551:112:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3126,"nodeType":"ExpressionStatement","src":"3551:112:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"id":3135,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3765:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3765:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3137,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"3777:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3134,"name":"getlockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"3750:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3750:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3129,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"3708:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3130,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3716:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3716:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3128,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"3698:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3698:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":723,"src":"3698:33:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3698:101:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3140,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"3803:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3698:112:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420546f6b656e7320746f207769746864726177","id":3142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3825:33:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9","typeString":"literal_string \"Insufficient Tokens to withdraw\""},"value":"Insufficient Tokens to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9","typeString":"literal_string \"Insufficient Tokens to withdraw\""}],"id":3127,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3676:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3676:193:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3144,"nodeType":"ExpressionStatement","src":"3676:193:8"},{"expression":{"arguments":[{"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3888:7:8","subExpression":{"id":3146,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"3889:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e742063616c6c20646574656374656421","id":3148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3897:26:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","typeString":"literal_string \"Reentrant call detected!\""},"value":"Reentrant call detected!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","typeString":"literal_string \"Reentrant call detected!\""}],"id":3145,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3880:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3880:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3150,"nodeType":"ExpressionStatement","src":"3880:44:8"},{"expression":{"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3151,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"3935:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3944:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3935:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3154,"nodeType":"ExpressionStatement","src":"3935:13:8"},{"expression":{"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3155,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"3961:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3496","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3157,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"3976:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3156,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"3969:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3496_$","typeString":"type(contract IERC20)"}},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3969:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3496","typeString":"contract IERC20"}},"src":"3961:22:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3496","typeString":"contract IERC20"}},"id":3160,"nodeType":"ExpressionStatement","src":"3961:22:8"},{"assignments":[3162],"declarations":[{"constant":false,"id":3162,"mutability":"mutable","name":"decimals","nameLocation":"4002:8:8","nodeType":"VariableDeclaration","scope":3237,"src":"3994:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3161,"name":"uint256","nodeType":"ElementaryTypeName","src":"3994:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3164,"initialValue":{"hexValue":"3138","id":3163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4013:2:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"nodeType":"VariableDeclarationStatement","src":"3994:21:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3165,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"4030:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3138","id":3166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4043:2:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"4030:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3219,"nodeType":"Block","src":"4188:381:8","statements":[{"expression":{"arguments":[{"id":3187,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"4235:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3188,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4260:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4260:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4301:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[{"id":3195,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"4320:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3193,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"4307:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":723,"src":"4307:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4307:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4301:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3190,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"4289:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":738,"src":"4289:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4289:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":3199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4350:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3186,"name":"updateBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"4203:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4203:167:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3201,"nodeType":"ExpressionStatement","src":"4203:167:8"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":3205,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4448:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4448:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4493:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[{"id":3212,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"4512:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3210,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"4499:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":723,"src":"4499:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4499:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4493:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3207,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"4481:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":753,"src":"4481:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4481:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3203,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"4411:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3496","typeString":"contract IERC20"}},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":3484,"src":"4411:14:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4411:131:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3202,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4385:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4385:172:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3218,"nodeType":"ExpressionStatement","src":"4385:172:8"}]},"id":3220,"nodeType":"IfStatement","src":"4026:543:8","trueBody":{"id":3185,"nodeType":"Block","src":"4047:135:8","statements":[{"expression":{"arguments":[{"id":3169,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"4076:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3170,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4084:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4084:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3172,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"4096:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":3173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4105:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3168,"name":"updateBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"4062:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4062:49:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3175,"nodeType":"ExpressionStatement","src":"4062:49:8"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":3179,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4149:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4149:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3181,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"4161:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3177,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"4134:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3496","typeString":"contract IERC20"}},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":3484,"src":"4134:14:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4134:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3176,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4126:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4126:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3184,"nodeType":"ExpressionStatement","src":"4126:44:8"}]}},{"expression":{"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3221,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"4581:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4590:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4581:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3224,"nodeType":"ExpressionStatement","src":"4581:14:8"},{"eventCall":{"arguments":[{"id":3226,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"4634:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3227,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4655:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4655:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3229,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"4680:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3231,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"4712:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3232,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4720:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4720:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3230,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"4702:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4702:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3225,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"4611:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4611:131:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3236,"nodeType":"EmitStatement","src":"4606:136:8"}]},"functionSelector":"96c0ec55","id":3238,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawToken","nameLocation":"3393:13:8","nodeType":"FunctionDefinition","parameters":{"id":3111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3106,"mutability":"mutable","name":"_token","nameLocation":"3425:6:8","nodeType":"VariableDeclaration","scope":3238,"src":"3417:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3105,"name":"address","nodeType":"ElementaryTypeName","src":"3417:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3108,"mutability":"mutable","name":"_amount","nameLocation":"3450:7:8","nodeType":"VariableDeclaration","scope":3238,"src":"3442:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3107,"name":"uint256","nodeType":"ElementaryTypeName","src":"3442:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3110,"mutability":"mutable","name":"_decimals","nameLocation":"3476:9:8","nodeType":"VariableDeclaration","scope":3238,"src":"3468:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3109,"name":"uint256","nodeType":"ElementaryTypeName","src":"3468:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3406:86:8"},"returnParameters":{"id":3112,"nodeType":"ParameterList","parameters":[],"src":"3502:0:8"},"scope":3410,"src":"3384:1366:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3253,"nodeType":"Block","src":"4868:52:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":3247,"name":"lockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"4886:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3249,"indexExpression":{"id":3248,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"4898:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4886:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3251,"indexExpression":{"id":3250,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"4905:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4886:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3246,"id":3252,"nodeType":"Return","src":"4879:33:8"}]},"functionSelector":"4fc121db","id":3254,"implemented":true,"kind":"function","modifiers":[],"name":"getlockedFunds","nameLocation":"4767:14:8","nodeType":"FunctionDefinition","parameters":{"id":3243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3240,"mutability":"mutable","name":"_user","nameLocation":"4800:5:8","nodeType":"VariableDeclaration","scope":3254,"src":"4792:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3239,"name":"address","nodeType":"ElementaryTypeName","src":"4792:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3242,"mutability":"mutable","name":"_token","nameLocation":"4824:6:8","nodeType":"VariableDeclaration","scope":3254,"src":"4816:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3241,"name":"address","nodeType":"ElementaryTypeName","src":"4816:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4781:56:8"},"returnParameters":{"id":3246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3254,"src":"4859:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4859:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4858:9:8"},"scope":3410,"src":"4758:162:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3304,"nodeType":"Block","src":"5078:301:8","statements":[{"condition":{"id":3267,"name":"isAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"5093:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5237:6:8","subExpression":{"id":3284,"name":"isAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"5238:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3302,"nodeType":"IfStatement","src":"5233:139:8","trueBody":{"id":3301,"nodeType":"Block","src":"5245:127:8","statements":[{"expression":{"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3286,"name":"lockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"5260:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3289,"indexExpression":{"id":3287,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"5272:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5260:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3290,"indexExpression":{"id":3288,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"5279:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5260:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3297,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"5338:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":3291,"name":"lockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"5289:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3293,"indexExpression":{"id":3292,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"5301:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5289:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3295,"indexExpression":{"id":3294,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"5308:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5289:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":723,"src":"5289:30:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5289:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5260:100:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3300,"nodeType":"ExpressionStatement","src":"5260:100:8"}]}},"id":3303,"nodeType":"IfStatement","src":"5089:283:8","trueBody":{"id":3283,"nodeType":"Block","src":"5100:127:8","statements":[{"expression":{"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3268,"name":"lockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"5115:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3271,"indexExpression":{"id":3269,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"5127:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5115:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3272,"indexExpression":{"id":3270,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"5134:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5115:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3279,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"5193:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":3273,"name":"lockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"5144:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3275,"indexExpression":{"id":3274,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"5156:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5144:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3277,"indexExpression":{"id":3276,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"5163:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5144:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":708,"src":"5144:30:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5144:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5115:100:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3282,"nodeType":"ExpressionStatement","src":"5115:100:8"}]}}]},"functionSelector":"46a8f820","id":3305,"implemented":true,"kind":"function","modifiers":[{"id":3265,"kind":"modifierInvocation","modifierName":{"id":3264,"name":"isAuthorised","nodeType":"IdentifierPath","referencedDeclaration":3409,"src":"5065:12:8"},"nodeType":"ModifierInvocation","src":"5065:12:8"}],"name":"updateLockedFunds","nameLocation":"4937:17:8","nodeType":"FunctionDefinition","parameters":{"id":3263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3256,"mutability":"mutable","name":"_user","nameLocation":"4973:5:8","nodeType":"VariableDeclaration","scope":3305,"src":"4965:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3255,"name":"address","nodeType":"ElementaryTypeName","src":"4965:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3258,"mutability":"mutable","name":"_token","nameLocation":"4997:6:8","nodeType":"VariableDeclaration","scope":3305,"src":"4989:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3257,"name":"address","nodeType":"ElementaryTypeName","src":"4989:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3260,"mutability":"mutable","name":"_amount","nameLocation":"5022:7:8","nodeType":"VariableDeclaration","scope":3305,"src":"5014:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3259,"name":"uint256","nodeType":"ElementaryTypeName","src":"5014:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3262,"mutability":"mutable","name":"isAdd","nameLocation":"5045:5:8","nodeType":"VariableDeclaration","scope":3305,"src":"5040:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3261,"name":"bool","nodeType":"ElementaryTypeName","src":"5040:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4954:103:8"},"returnParameters":{"id":3266,"nodeType":"ParameterList","parameters":[],"src":"5078:0:8"},"scope":3410,"src":"4928:451:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3320,"nodeType":"Block","src":"5560:49:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":3314,"name":"s_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"5578:8:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3316,"indexExpression":{"id":3315,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"5587:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5578:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3318,"indexExpression":{"id":3317,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"5595:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5578:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3313,"id":3319,"nodeType":"Return","src":"5571:30:8"}]},"functionSelector":"f7888aec","id":3321,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"5464:9:8","nodeType":"FunctionDefinition","parameters":{"id":3310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3307,"mutability":"mutable","name":"_token","nameLocation":"5492:6:8","nodeType":"VariableDeclaration","scope":3321,"src":"5484:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3306,"name":"address","nodeType":"ElementaryTypeName","src":"5484:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3309,"mutability":"mutable","name":"_user","nameLocation":"5517:5:8","nodeType":"VariableDeclaration","scope":3321,"src":"5509:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3308,"name":"address","nodeType":"ElementaryTypeName","src":"5509:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5473:56:8"},"returnParameters":{"id":3313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3321,"src":"5551:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3311,"name":"uint256","nodeType":"ElementaryTypeName","src":"5551:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5550:9:8"},"scope":3410,"src":"5455:154:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3371,"nodeType":"Block","src":"5763:225:8","statements":[{"condition":{"id":3334,"name":"isAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"5778:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5884:6:8","subExpression":{"id":3351,"name":"isAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"5885:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3369,"nodeType":"IfStatement","src":"5880:101:8","trueBody":{"id":3368,"nodeType":"Block","src":"5892:89:8","statements":[{"expression":{"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3353,"name":"s_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"5907:8:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3356,"indexExpression":{"id":3354,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"5916:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5907:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3357,"indexExpression":{"id":3355,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"5924:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5907:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3364,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"5961:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":3358,"name":"s_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"5933:8:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3360,"indexExpression":{"id":3359,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"5942:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5933:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3362,"indexExpression":{"id":3361,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"5950:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5933:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":723,"src":"5933:27:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5933:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5907:62:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3367,"nodeType":"ExpressionStatement","src":"5907:62:8"}]}},"id":3370,"nodeType":"IfStatement","src":"5774:207:8","trueBody":{"id":3350,"nodeType":"Block","src":"5785:89:8","statements":[{"expression":{"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3335,"name":"s_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"5800:8:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3338,"indexExpression":{"id":3336,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"5809:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5800:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3339,"indexExpression":{"id":3337,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"5817:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5800:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3346,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"5854:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":3340,"name":"s_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"5826:8:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3342,"indexExpression":{"id":3341,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"5835:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5826:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3344,"indexExpression":{"id":3343,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"5843:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5826:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":708,"src":"5826:27:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5826:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5800:62:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3349,"nodeType":"ExpressionStatement","src":"5800:62:8"}]}}]},"functionSelector":"c5ab4602","id":3372,"implemented":true,"kind":"function","modifiers":[{"id":3332,"kind":"modifierInvocation","modifierName":{"id":3331,"name":"isAuthorised","nodeType":"IdentifierPath","referencedDeclaration":3409,"src":"5750:12:8"},"nodeType":"ModifierInvocation","src":"5750:12:8"}],"name":"updateBalance","nameLocation":"5626:13:8","nodeType":"FunctionDefinition","parameters":{"id":3330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3323,"mutability":"mutable","name":"_token","nameLocation":"5658:6:8","nodeType":"VariableDeclaration","scope":3372,"src":"5650:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3322,"name":"address","nodeType":"ElementaryTypeName","src":"5650:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3325,"mutability":"mutable","name":"_user","nameLocation":"5683:5:8","nodeType":"VariableDeclaration","scope":3372,"src":"5675:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3324,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3327,"mutability":"mutable","name":"_amount","nameLocation":"5707:7:8","nodeType":"VariableDeclaration","scope":3372,"src":"5699:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3326,"name":"uint256","nodeType":"ElementaryTypeName","src":"5699:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3329,"mutability":"mutable","name":"isAdd","nameLocation":"5730:5:8","nodeType":"VariableDeclaration","scope":3372,"src":"5725:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3328,"name":"bool","nodeType":"ElementaryTypeName","src":"5725:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5639:103:8"},"returnParameters":{"id":3333,"nodeType":"ParameterList","parameters":[],"src":"5763:0:8"},"scope":3410,"src":"5617:371:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3385,"nodeType":"Block","src":"6088:56:8","statements":[{"expression":{"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3379,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"6099:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2506","typeString":"contract Exchange"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3381,"name":"_exchangeAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"6119:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3380,"name":"Exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"6110:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Exchange_$2506_$","typeString":"type(contract Exchange)"}},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6110:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2506","typeString":"contract Exchange"}},"src":"6099:37:8","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2506","typeString":"contract Exchange"}},"id":3384,"nodeType":"ExpressionStatement","src":"6099:37:8"}]},"functionSelector":"31415a65","id":3386,"implemented":true,"kind":"function","modifiers":[{"id":3377,"kind":"modifierInvocation","modifierName":{"id":3376,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":429,"src":"6078:9:8"},"nodeType":"ModifierInvocation","src":"6078:9:8"}],"name":"updateExchangeAddress","nameLocation":"6005:21:8","nodeType":"FunctionDefinition","parameters":{"id":3375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3374,"mutability":"mutable","name":"_exchangeAddress","nameLocation":"6045:16:8","nodeType":"VariableDeclaration","scope":3386,"src":"6037:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3373,"name":"address","nodeType":"ElementaryTypeName","src":"6037:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6026:42:8"},"returnParameters":{"id":3378,"nodeType":"ParameterList","parameters":[],"src":"6088:0:8"},"scope":3410,"src":"5996:148:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3408,"nodeType":"Block","src":"6176:169:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3389,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6209:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6209:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3393,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6231:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3410","typeString":"contract Wallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Wallet_$3410","typeString":"contract Wallet"}],"id":3392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6223:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3391,"name":"address","nodeType":"ElementaryTypeName","src":"6223:7:8","typeDescriptions":{}}},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6223:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6209:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3396,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6240:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6240:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3400,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"6262:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2506","typeString":"contract Exchange"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Exchange_$2506","typeString":"contract Exchange"}],"id":3399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6254:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3398,"name":"address","nodeType":"ElementaryTypeName","src":"6254:7:8","typeDescriptions":{}}},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6254:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6240:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6209:62:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e617574686f72697365642046756e6374696f6e2043616c6c","id":3404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6286:28:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1","typeString":"literal_string \"Unauthorised Function Call\""},"value":"Unauthorised Function Call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1","typeString":"literal_string \"Unauthorised Function Call\""}],"id":3388,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6187:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6187:138:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3406,"nodeType":"ExpressionStatement","src":"6187:138:8"},{"id":3407,"nodeType":"PlaceholderStatement","src":"6336:1:8"}]},"id":3409,"name":"isAuthorised","nameLocation":"6161:12:8","nodeType":"ModifierDefinition","parameters":{"id":3387,"nodeType":"ParameterList","parameters":[],"src":"6173:2:8"},"src":"6152:193:8","virtual":false,"visibility":"internal"}],"scope":3411,"src":"388:5960:8","usedErrors":[]}],"src":"35:6315:8"},"id":8},"contracts/interface/IERC20.sol":{"ast":{"absolutePath":"contracts/interface/IERC20.sol","exportedSymbols":{"IERC20":[3496]},"id":3497,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3412,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:9"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3496,"linearizedBaseContracts":[3496],"name":"IERC20","nameLocation":"70:6:9","nodeType":"ContractDefinition","nodes":[{"functionSelector":"dd62ed3e","id":3421,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"93:9:9","nodeType":"FunctionDefinition","parameters":{"id":3417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3414,"mutability":"mutable","name":"owner","nameLocation":"121:5:9","nodeType":"VariableDeclaration","scope":3421,"src":"113:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3413,"name":"address","nodeType":"ElementaryTypeName","src":"113:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3416,"mutability":"mutable","name":"spender","nameLocation":"145:7:9","nodeType":"VariableDeclaration","scope":3421,"src":"137:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3415,"name":"address","nodeType":"ElementaryTypeName","src":"137:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"102:57:9"},"returnParameters":{"id":3420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3419,"mutability":"mutable","name":"remaining","nameLocation":"191:9:9","nodeType":"VariableDeclaration","scope":3421,"src":"183:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3418,"name":"uint256","nodeType":"ElementaryTypeName","src":"183:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"182:19:9"},"scope":3496,"src":"84:118:9","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":3430,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"219:7:9","nodeType":"FunctionDefinition","parameters":{"id":3426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3423,"mutability":"mutable","name":"spender","nameLocation":"245:7:9","nodeType":"VariableDeclaration","scope":3430,"src":"237:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3422,"name":"address","nodeType":"ElementaryTypeName","src":"237:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3425,"mutability":"mutable","name":"value","nameLocation":"271:5:9","nodeType":"VariableDeclaration","scope":3430,"src":"263:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3424,"name":"uint256","nodeType":"ElementaryTypeName","src":"263:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"226:57:9"},"returnParameters":{"id":3429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3428,"mutability":"mutable","name":"success","nameLocation":"307:7:9","nodeType":"VariableDeclaration","scope":3430,"src":"302:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3427,"name":"bool","nodeType":"ElementaryTypeName","src":"302:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"301:14:9"},"scope":3496,"src":"210:106:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":3437,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"333:9:9","nodeType":"FunctionDefinition","parameters":{"id":3433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3432,"mutability":"mutable","name":"owner","nameLocation":"351:5:9","nodeType":"VariableDeclaration","scope":3437,"src":"343:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3431,"name":"address","nodeType":"ElementaryTypeName","src":"343:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"342:15:9"},"returnParameters":{"id":3436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3435,"mutability":"mutable","name":"balance","nameLocation":"389:7:9","nodeType":"VariableDeclaration","scope":3437,"src":"381:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3434,"name":"uint256","nodeType":"ElementaryTypeName","src":"381:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"380:17:9"},"scope":3496,"src":"324:74:9","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":3442,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"415:8:9","nodeType":"FunctionDefinition","parameters":{"id":3438,"nodeType":"ParameterList","parameters":[],"src":"423:2:9"},"returnParameters":{"id":3441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3440,"mutability":"mutable","name":"decimalPlaces","nameLocation":"455:13:9","nodeType":"VariableDeclaration","scope":3442,"src":"449:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3439,"name":"uint8","nodeType":"ElementaryTypeName","src":"449:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"448:21:9"},"scope":3496,"src":"406:64:9","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"66188463","id":3451,"implemented":false,"kind":"function","modifiers":[],"name":"decreaseApproval","nameLocation":"487:16:9","nodeType":"FunctionDefinition","parameters":{"id":3447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3444,"mutability":"mutable","name":"spender","nameLocation":"522:7:9","nodeType":"VariableDeclaration","scope":3451,"src":"514:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3443,"name":"address","nodeType":"ElementaryTypeName","src":"514:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3446,"mutability":"mutable","name":"subtractedValue","nameLocation":"548:15:9","nodeType":"VariableDeclaration","scope":3451,"src":"540:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3445,"name":"uint256","nodeType":"ElementaryTypeName","src":"540:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"503:67:9"},"returnParameters":{"id":3450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3449,"mutability":"mutable","name":"success","nameLocation":"594:7:9","nodeType":"VariableDeclaration","scope":3451,"src":"589:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3448,"name":"bool","nodeType":"ElementaryTypeName","src":"589:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"588:14:9"},"scope":3496,"src":"478:125:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d73dd623","id":3460,"implemented":false,"kind":"function","modifiers":[],"name":"increaseApproval","nameLocation":"620:16:9","nodeType":"FunctionDefinition","parameters":{"id":3456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3453,"mutability":"mutable","name":"spender","nameLocation":"655:7:9","nodeType":"VariableDeclaration","scope":3460,"src":"647:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3452,"name":"address","nodeType":"ElementaryTypeName","src":"647:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3455,"mutability":"mutable","name":"addedValue","nameLocation":"681:10:9","nodeType":"VariableDeclaration","scope":3460,"src":"673:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3454,"name":"uint256","nodeType":"ElementaryTypeName","src":"673:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:62:9"},"returnParameters":{"id":3459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3458,"mutability":"mutable","name":"success","nameLocation":"722:7:9","nodeType":"VariableDeclaration","scope":3460,"src":"717:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3457,"name":"bool","nodeType":"ElementaryTypeName","src":"717:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"716:14:9"},"scope":3496,"src":"611:120:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"06fdde03","id":3465,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"748:4:9","nodeType":"FunctionDefinition","parameters":{"id":3461,"nodeType":"ParameterList","parameters":[],"src":"752:2:9"},"returnParameters":{"id":3464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3463,"mutability":"mutable","name":"tokenName","nameLocation":"792:9:9","nodeType":"VariableDeclaration","scope":3465,"src":"778:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3462,"name":"string","nodeType":"ElementaryTypeName","src":"778:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"777:25:9"},"scope":3496,"src":"739:64:9","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":3470,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"820:6:9","nodeType":"FunctionDefinition","parameters":{"id":3466,"nodeType":"ParameterList","parameters":[],"src":"826:2:9"},"returnParameters":{"id":3469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3468,"mutability":"mutable","name":"tokenSymbol","nameLocation":"866:11:9","nodeType":"VariableDeclaration","scope":3470,"src":"852:25:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3467,"name":"string","nodeType":"ElementaryTypeName","src":"852:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"851:27:9"},"scope":3496,"src":"811:68:9","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":3475,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"896:11:9","nodeType":"FunctionDefinition","parameters":{"id":3471,"nodeType":"ParameterList","parameters":[],"src":"907:2:9"},"returnParameters":{"id":3474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3473,"mutability":"mutable","name":"totalTokensIssued","nameLocation":"941:17:9","nodeType":"VariableDeclaration","scope":3475,"src":"933:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3472,"name":"uint256","nodeType":"ElementaryTypeName","src":"933:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"932:27:9"},"scope":3496,"src":"887:73:9","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":3484,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"977:8:9","nodeType":"FunctionDefinition","parameters":{"id":3480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3477,"mutability":"mutable","name":"to","nameLocation":"1004:2:9","nodeType":"VariableDeclaration","scope":3484,"src":"996:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3476,"name":"address","nodeType":"ElementaryTypeName","src":"996:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3479,"mutability":"mutable","name":"value","nameLocation":"1025:5:9","nodeType":"VariableDeclaration","scope":3484,"src":"1017:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3478,"name":"uint256","nodeType":"ElementaryTypeName","src":"1017:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"985:52:9"},"returnParameters":{"id":3483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3482,"mutability":"mutable","name":"success","nameLocation":"1061:7:9","nodeType":"VariableDeclaration","scope":3484,"src":"1056:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3481,"name":"bool","nodeType":"ElementaryTypeName","src":"1056:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1055:14:9"},"scope":3496,"src":"968:102:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":3495,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1087:12:9","nodeType":"FunctionDefinition","parameters":{"id":3491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3486,"mutability":"mutable","name":"from","nameLocation":"1118:4:9","nodeType":"VariableDeclaration","scope":3495,"src":"1110:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3485,"name":"address","nodeType":"ElementaryTypeName","src":"1110:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3488,"mutability":"mutable","name":"to","nameLocation":"1141:2:9","nodeType":"VariableDeclaration","scope":3495,"src":"1133:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3487,"name":"address","nodeType":"ElementaryTypeName","src":"1133:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3490,"mutability":"mutable","name":"value","nameLocation":"1162:5:9","nodeType":"VariableDeclaration","scope":3495,"src":"1154:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3489,"name":"uint256","nodeType":"ElementaryTypeName","src":"1154:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1099:75:9"},"returnParameters":{"id":3494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3493,"mutability":"mutable","name":"success","nameLocation":"1198:7:9","nodeType":"VariableDeclaration","scope":3495,"src":"1193:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3492,"name":"bool","nodeType":"ElementaryTypeName","src":"1193:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1192:14:9"},"scope":3496,"src":"1078:129:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3497,"src":"60:1150:9","usedErrors":[]}],"src":"33:1179:9"},"id":9},"contracts/interface/IPool.sol":{"ast":{"absolutePath":"contracts/interface/IPool.sol","exportedSymbols":{"DataTypes":[351],"IPool":[4135],"IPoolAddressesProvider":[4344]},"id":4136,"license":"AGPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3498,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"38:23:10"},{"absolutePath":"contracts/interface/IPoolAddressesProvider.sol","file":"./IPoolAddressesProvider.sol","id":3500,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4136,"sourceUnit":4345,"src":"65:68:10","symbolAliases":[{"foreign":{"id":3499,"name":"IPoolAddressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"src":"73:22:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol","file":"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol","id":3502,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4136,"sourceUnit":352,"src":"135:89:10","symbolAliases":[{"foreign":{"id":3501,"name":"DataTypes","nodeType":"Identifier","overloadedDeclarations":[],"src":"143:9:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":3503,"nodeType":"StructuredDocumentation","src":"228:100:10","text":" @title IPool\n @author Aave\n @notice Defines the basic interface for an Aave Pool."},"fullyImplemented":false,"id":4135,"linearizedBaseContracts":[4135],"name":"IPool","nameLocation":"340:5:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3504,"nodeType":"StructuredDocumentation","src":"353:370:10","text":" @dev Emitted on mintUnbacked()\n @param reserve The address of the underlying asset of the reserve\n @param user The address initiating the supply\n @param onBehalfOf The beneficiary of the supplied assets, receiving the aTokens\n @param amount The amount of supplied assets\n @param referralCode The referral code used"},"id":3516,"name":"MintUnbacked","nameLocation":"735:12:10","nodeType":"EventDefinition","parameters":{"id":3515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3506,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"774:7:10","nodeType":"VariableDeclaration","scope":3516,"src":"758:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3505,"name":"address","nodeType":"ElementaryTypeName","src":"758:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3508,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"800:4:10","nodeType":"VariableDeclaration","scope":3516,"src":"792:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3507,"name":"address","nodeType":"ElementaryTypeName","src":"792:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3510,"indexed":true,"mutability":"mutable","name":"onBehalfOf","nameLocation":"831:10:10","nodeType":"VariableDeclaration","scope":3516,"src":"815:26:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3509,"name":"address","nodeType":"ElementaryTypeName","src":"815:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3512,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"860:6:10","nodeType":"VariableDeclaration","scope":3516,"src":"852:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3511,"name":"uint256","nodeType":"ElementaryTypeName","src":"852:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3514,"indexed":true,"mutability":"mutable","name":"referralCode","nameLocation":"892:12:10","nodeType":"VariableDeclaration","scope":3516,"src":"877:27:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3513,"name":"uint16","nodeType":"ElementaryTypeName","src":"877:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"747:164:10"},"src":"729:183:10"},{"anonymous":false,"documentation":{"id":3517,"nodeType":"StructuredDocumentation","src":"920:275:10","text":" @dev Emitted on backUnbacked()\n @param reserve The address of the underlying asset of the reserve\n @param backer The address paying for the backing\n @param amount The amount added as backing\n @param fee The amount paid in fees"},"id":3527,"name":"BackUnbacked","nameLocation":"1207:12:10","nodeType":"EventDefinition","parameters":{"id":3526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3519,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"1246:7:10","nodeType":"VariableDeclaration","scope":3527,"src":"1230:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3518,"name":"address","nodeType":"ElementaryTypeName","src":"1230:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3521,"indexed":true,"mutability":"mutable","name":"backer","nameLocation":"1280:6:10","nodeType":"VariableDeclaration","scope":3527,"src":"1264:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3520,"name":"address","nodeType":"ElementaryTypeName","src":"1264:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3523,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1305:6:10","nodeType":"VariableDeclaration","scope":3527,"src":"1297:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3522,"name":"uint256","nodeType":"ElementaryTypeName","src":"1297:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3525,"indexed":false,"mutability":"mutable","name":"fee","nameLocation":"1330:3:10","nodeType":"VariableDeclaration","scope":3527,"src":"1322:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3524,"name":"uint256","nodeType":"ElementaryTypeName","src":"1322:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1219:121:10"},"src":"1201:140:10"},{"anonymous":false,"documentation":{"id":3528,"nodeType":"StructuredDocumentation","src":"1349:345:10","text":" @dev Emitted on supply()\n @param reserve The address of the underlying asset of the reserve\n @param user The address initiating the supply\n @param onBehalfOf The beneficiary of the supply, receiving the aTokens\n @param amount The amount supplied\n @param referralCode The referral code used"},"id":3540,"name":"Supply","nameLocation":"1706:6:10","nodeType":"EventDefinition","parameters":{"id":3539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3530,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"1739:7:10","nodeType":"VariableDeclaration","scope":3540,"src":"1723:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3529,"name":"address","nodeType":"ElementaryTypeName","src":"1723:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3532,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"1765:4:10","nodeType":"VariableDeclaration","scope":3540,"src":"1757:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3531,"name":"address","nodeType":"ElementaryTypeName","src":"1757:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3534,"indexed":true,"mutability":"mutable","name":"onBehalfOf","nameLocation":"1796:10:10","nodeType":"VariableDeclaration","scope":3540,"src":"1780:26:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3533,"name":"address","nodeType":"ElementaryTypeName","src":"1780:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3536,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1825:6:10","nodeType":"VariableDeclaration","scope":3540,"src":"1817:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3535,"name":"uint256","nodeType":"ElementaryTypeName","src":"1817:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3538,"indexed":true,"mutability":"mutable","name":"referralCode","nameLocation":"1857:12:10","nodeType":"VariableDeclaration","scope":3540,"src":"1842:27:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3537,"name":"uint16","nodeType":"ElementaryTypeName","src":"1842:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1712:164:10"},"src":"1700:177:10"},{"anonymous":false,"documentation":{"id":3541,"nodeType":"StructuredDocumentation","src":"1885:310:10","text":" @dev Emitted on withdraw()\n @param reserve The address of the underlying asset being withdrawn\n @param user The address initiating the withdrawal, owner of aTokens\n @param to The address that will receive the underlying\n @param amount The amount to be withdrawn"},"id":3551,"name":"Withdraw","nameLocation":"2207:8:10","nodeType":"EventDefinition","parameters":{"id":3550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3543,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"2242:7:10","nodeType":"VariableDeclaration","scope":3551,"src":"2226:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3542,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3545,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2276:4:10","nodeType":"VariableDeclaration","scope":3551,"src":"2260:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3544,"name":"address","nodeType":"ElementaryTypeName","src":"2260:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3547,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2307:2:10","nodeType":"VariableDeclaration","scope":3551,"src":"2291:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3546,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3549,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2328:6:10","nodeType":"VariableDeclaration","scope":3551,"src":"2320:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3548,"name":"uint256","nodeType":"ElementaryTypeName","src":"2320:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2215:126:10"},"src":"2201:141:10"},{"anonymous":false,"documentation":{"id":3552,"nodeType":"StructuredDocumentation","src":"2350:658:10","text":" @dev Emitted on borrow() and flashLoan() when debt needs to be opened\n @param reserve The address of the underlying asset being borrowed\n @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\n initiator of the transaction on flashLoan()\n @param onBehalfOf The address that will be getting the debt\n @param amount The amount borrowed out\n @param interestRateMode The rate mode: 1 for Stable, 2 for Variable\n @param borrowRate The numeric rate at which the user has borrowed, expressed in ray\n @param referralCode The referral code used"},"id":3569,"name":"Borrow","nameLocation":"3020:6:10","nodeType":"EventDefinition","parameters":{"id":3568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3554,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"3053:7:10","nodeType":"VariableDeclaration","scope":3569,"src":"3037:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3553,"name":"address","nodeType":"ElementaryTypeName","src":"3037:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3556,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"3079:4:10","nodeType":"VariableDeclaration","scope":3569,"src":"3071:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3555,"name":"address","nodeType":"ElementaryTypeName","src":"3071:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3558,"indexed":true,"mutability":"mutable","name":"onBehalfOf","nameLocation":"3110:10:10","nodeType":"VariableDeclaration","scope":3569,"src":"3094:26:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3557,"name":"address","nodeType":"ElementaryTypeName","src":"3094:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3560,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3139:6:10","nodeType":"VariableDeclaration","scope":3569,"src":"3131:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3559,"name":"uint256","nodeType":"ElementaryTypeName","src":"3131:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3563,"indexed":false,"mutability":"mutable","name":"interestRateMode","nameLocation":"3183:16:10","nodeType":"VariableDeclaration","scope":3569,"src":"3156:43:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$55","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":3562,"nodeType":"UserDefinedTypeName","pathNode":{"id":3561,"name":"DataTypes.InterestRateMode","nodeType":"IdentifierPath","referencedDeclaration":55,"src":"3156:26:10"},"referencedDeclaration":55,"src":"3156:26:10","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$55","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"internal"},{"constant":false,"id":3565,"indexed":false,"mutability":"mutable","name":"borrowRate","nameLocation":"3218:10:10","nodeType":"VariableDeclaration","scope":3569,"src":"3210:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3564,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3567,"indexed":true,"mutability":"mutable","name":"referralCode","nameLocation":"3254:12:10","nodeType":"VariableDeclaration","scope":3569,"src":"3239:27:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3566,"name":"uint16","nodeType":"ElementaryTypeName","src":"3239:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"3026:247:10"},"src":"3014:260:10"},{"anonymous":false,"documentation":{"id":3570,"nodeType":"StructuredDocumentation","src":"3282:446:10","text":" @dev Emitted on repay()\n @param reserve The address of the underlying asset of the reserve\n @param user The beneficiary of the repayment, getting his debt reduced\n @param repayer The address of the user initiating the repay(), providing the funds\n @param amount The amount repaid\n @param useATokens True if the repayment is done using aTokens, `false` if done with underlying asset directly"},"id":3582,"name":"Repay","nameLocation":"3740:5:10","nodeType":"EventDefinition","parameters":{"id":3581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3572,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"3772:7:10","nodeType":"VariableDeclaration","scope":3582,"src":"3756:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3571,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3574,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3806:4:10","nodeType":"VariableDeclaration","scope":3582,"src":"3790:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3573,"name":"address","nodeType":"ElementaryTypeName","src":"3790:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3576,"indexed":true,"mutability":"mutable","name":"repayer","nameLocation":"3837:7:10","nodeType":"VariableDeclaration","scope":3582,"src":"3821:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3575,"name":"address","nodeType":"ElementaryTypeName","src":"3821:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3578,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3863:6:10","nodeType":"VariableDeclaration","scope":3582,"src":"3855:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3577,"name":"uint256","nodeType":"ElementaryTypeName","src":"3855:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3580,"indexed":false,"mutability":"mutable","name":"useATokens","nameLocation":"3885:10:10","nodeType":"VariableDeclaration","scope":3582,"src":"3880:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3579,"name":"bool","nodeType":"ElementaryTypeName","src":"3880:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3745:157:10"},"src":"3734:169:10"},{"anonymous":false,"documentation":{"id":3583,"nodeType":"StructuredDocumentation","src":"3911:321:10","text":" @dev Emitted on swapBorrowRateMode()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user swapping his rate mode\n @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable"},"id":3592,"name":"SwapBorrowRateMode","nameLocation":"4244:18:10","nodeType":"EventDefinition","parameters":{"id":3591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3585,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"4289:7:10","nodeType":"VariableDeclaration","scope":3592,"src":"4273:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3584,"name":"address","nodeType":"ElementaryTypeName","src":"4273:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3587,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"4323:4:10","nodeType":"VariableDeclaration","scope":3592,"src":"4307:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3586,"name":"address","nodeType":"ElementaryTypeName","src":"4307:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3590,"indexed":false,"mutability":"mutable","name":"interestRateMode","nameLocation":"4365:16:10","nodeType":"VariableDeclaration","scope":3592,"src":"4338:43:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$55","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":3589,"nodeType":"UserDefinedTypeName","pathNode":{"id":3588,"name":"DataTypes.InterestRateMode","nodeType":"IdentifierPath","referencedDeclaration":55,"src":"4338:26:10"},"referencedDeclaration":55,"src":"4338:26:10","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$55","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"internal"}],"src":"4262:126:10"},"src":"4238:151:10"},{"anonymous":false,"documentation":{"id":3593,"nodeType":"StructuredDocumentation","src":"4397:246:10","text":" @dev Emitted on borrow(), repay() and liquidationCall() when using isolated assets\n @param asset The address of the underlying asset of the reserve\n @param totalDebt The total isolation mode debt for the reserve"},"id":3599,"name":"IsolationModeTotalDebtUpdated","nameLocation":"4655:29:10","nodeType":"EventDefinition","parameters":{"id":3598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3595,"indexed":true,"mutability":"mutable","name":"asset","nameLocation":"4711:5:10","nodeType":"VariableDeclaration","scope":3599,"src":"4695:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3594,"name":"address","nodeType":"ElementaryTypeName","src":"4695:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3597,"indexed":false,"mutability":"mutable","name":"totalDebt","nameLocation":"4735:9:10","nodeType":"VariableDeclaration","scope":3599,"src":"4727:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3596,"name":"uint256","nodeType":"ElementaryTypeName","src":"4727:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4684:67:10"},"src":"4649:103:10"},{"anonymous":false,"documentation":{"id":3600,"nodeType":"StructuredDocumentation","src":"4760:176:10","text":" @dev Emitted when the user selects a certain asset category for eMode\n @param user The address of the user\n @param categoryId The category id"},"id":3606,"name":"UserEModeSet","nameLocation":"4948:12:10","nodeType":"EventDefinition","parameters":{"id":3605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3602,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"4977:4:10","nodeType":"VariableDeclaration","scope":3606,"src":"4961:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3601,"name":"address","nodeType":"ElementaryTypeName","src":"4961:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3604,"indexed":false,"mutability":"mutable","name":"categoryId","nameLocation":"4989:10:10","nodeType":"VariableDeclaration","scope":3606,"src":"4983:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3603,"name":"uint8","nodeType":"ElementaryTypeName","src":"4983:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4960:40:10"},"src":"4942:59:10"},{"anonymous":false,"documentation":{"id":3607,"nodeType":"StructuredDocumentation","src":"5009:219:10","text":" @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral"},"id":3613,"name":"ReserveUsedAsCollateralEnabled","nameLocation":"5240:30:10","nodeType":"EventDefinition","parameters":{"id":3612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3609,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"5297:7:10","nodeType":"VariableDeclaration","scope":3613,"src":"5281:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3608,"name":"address","nodeType":"ElementaryTypeName","src":"5281:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3611,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"5331:4:10","nodeType":"VariableDeclaration","scope":3613,"src":"5315:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3610,"name":"address","nodeType":"ElementaryTypeName","src":"5315:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5270:72:10"},"src":"5234:109:10"},{"anonymous":false,"documentation":{"id":3614,"nodeType":"StructuredDocumentation","src":"5351:219:10","text":" @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral"},"id":3620,"name":"ReserveUsedAsCollateralDisabled","nameLocation":"5582:31:10","nodeType":"EventDefinition","parameters":{"id":3619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3616,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"5640:7:10","nodeType":"VariableDeclaration","scope":3620,"src":"5624:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3615,"name":"address","nodeType":"ElementaryTypeName","src":"5624:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3618,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"5674:4:10","nodeType":"VariableDeclaration","scope":3620,"src":"5658:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3617,"name":"address","nodeType":"ElementaryTypeName","src":"5658:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5613:72:10"},"src":"5576:110:10"},{"anonymous":false,"documentation":{"id":3621,"nodeType":"StructuredDocumentation","src":"5694:224:10","text":" @dev Emitted on rebalanceStableBorrowRate()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user for which the rebalance has been executed"},"id":3627,"name":"RebalanceStableBorrowRate","nameLocation":"5930:25:10","nodeType":"EventDefinition","parameters":{"id":3626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3623,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"5982:7:10","nodeType":"VariableDeclaration","scope":3627,"src":"5966:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3622,"name":"address","nodeType":"ElementaryTypeName","src":"5966:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3625,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"6016:4:10","nodeType":"VariableDeclaration","scope":3627,"src":"6000:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3624,"name":"address","nodeType":"ElementaryTypeName","src":"6000:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5955:72:10"},"src":"5924:104:10"},{"anonymous":false,"documentation":{"id":3628,"nodeType":"StructuredDocumentation","src":"6036:509:10","text":" @dev Emitted on flashLoan()\n @param target The address of the flash loan receiver contract\n @param initiator The address initiating the flash loan\n @param asset The address of the asset being flash borrowed\n @param amount The amount flash borrowed\n @param interestRateMode The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt\n @param premium The fee flash borrowed\n @param referralCode The referral code used"},"id":3645,"name":"FlashLoan","nameLocation":"6557:9:10","nodeType":"EventDefinition","parameters":{"id":3644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3630,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"6593:6:10","nodeType":"VariableDeclaration","scope":3645,"src":"6577:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3629,"name":"address","nodeType":"ElementaryTypeName","src":"6577:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3632,"indexed":false,"mutability":"mutable","name":"initiator","nameLocation":"6618:9:10","nodeType":"VariableDeclaration","scope":3645,"src":"6610:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3631,"name":"address","nodeType":"ElementaryTypeName","src":"6610:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3634,"indexed":true,"mutability":"mutable","name":"asset","nameLocation":"6654:5:10","nodeType":"VariableDeclaration","scope":3645,"src":"6638:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3633,"name":"address","nodeType":"ElementaryTypeName","src":"6638:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3636,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"6678:6:10","nodeType":"VariableDeclaration","scope":3645,"src":"6670:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3635,"name":"uint256","nodeType":"ElementaryTypeName","src":"6670:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3639,"indexed":false,"mutability":"mutable","name":"interestRateMode","nameLocation":"6722:16:10","nodeType":"VariableDeclaration","scope":3645,"src":"6695:43:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$55","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":3638,"nodeType":"UserDefinedTypeName","pathNode":{"id":3637,"name":"DataTypes.InterestRateMode","nodeType":"IdentifierPath","referencedDeclaration":55,"src":"6695:26:10"},"referencedDeclaration":55,"src":"6695:26:10","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$55","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"internal"},{"constant":false,"id":3641,"indexed":false,"mutability":"mutable","name":"premium","nameLocation":"6757:7:10","nodeType":"VariableDeclaration","scope":3645,"src":"6749:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3640,"name":"uint256","nodeType":"ElementaryTypeName","src":"6749:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3643,"indexed":true,"mutability":"mutable","name":"referralCode","nameLocation":"6790:12:10","nodeType":"VariableDeclaration","scope":3645,"src":"6775:27:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3642,"name":"uint16","nodeType":"ElementaryTypeName","src":"6775:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"6566:243:10"},"src":"6551:259:10"},{"anonymous":false,"documentation":{"id":3646,"nodeType":"StructuredDocumentation","src":"6818:779:10","text":" @dev Emitted when a borrower is liquidated.\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param liquidatedCollateralAmount The amount of collateral received by the liquidator\n @param liquidator The address of the liquidator\n @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly"},"id":3662,"name":"LiquidationCall","nameLocation":"7609:15:10","nodeType":"EventDefinition","parameters":{"id":3661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3648,"indexed":true,"mutability":"mutable","name":"collateralAsset","nameLocation":"7651:15:10","nodeType":"VariableDeclaration","scope":3662,"src":"7635:31:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3647,"name":"address","nodeType":"ElementaryTypeName","src":"7635:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3650,"indexed":true,"mutability":"mutable","name":"debtAsset","nameLocation":"7693:9:10","nodeType":"VariableDeclaration","scope":3662,"src":"7677:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3649,"name":"address","nodeType":"ElementaryTypeName","src":"7677:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3652,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"7729:4:10","nodeType":"VariableDeclaration","scope":3662,"src":"7713:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3651,"name":"address","nodeType":"ElementaryTypeName","src":"7713:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3654,"indexed":false,"mutability":"mutable","name":"debtToCover","nameLocation":"7752:11:10","nodeType":"VariableDeclaration","scope":3662,"src":"7744:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3653,"name":"uint256","nodeType":"ElementaryTypeName","src":"7744:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3656,"indexed":false,"mutability":"mutable","name":"liquidatedCollateralAmount","nameLocation":"7782:26:10","nodeType":"VariableDeclaration","scope":3662,"src":"7774:34:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3655,"name":"uint256","nodeType":"ElementaryTypeName","src":"7774:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3658,"indexed":false,"mutability":"mutable","name":"liquidator","nameLocation":"7827:10:10","nodeType":"VariableDeclaration","scope":3662,"src":"7819:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3657,"name":"address","nodeType":"ElementaryTypeName","src":"7819:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3660,"indexed":false,"mutability":"mutable","name":"receiveAToken","nameLocation":"7853:13:10","nodeType":"VariableDeclaration","scope":3662,"src":"7848:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3659,"name":"bool","nodeType":"ElementaryTypeName","src":"7848:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7624:249:10"},"src":"7603:271:10"},{"anonymous":false,"documentation":{"id":3663,"nodeType":"StructuredDocumentation","src":"7882:445:10","text":" @dev Emitted when the state of a reserve is updated.\n @param reserve The address of the underlying asset of the reserve\n @param liquidityRate The next liquidity rate\n @param stableBorrowRate The next stable borrow rate\n @param variableBorrowRate The next variable borrow rate\n @param liquidityIndex The next liquidity index\n @param variableBorrowIndex The next variable borrow index"},"id":3677,"name":"ReserveDataUpdated","nameLocation":"8339:18:10","nodeType":"EventDefinition","parameters":{"id":3676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3665,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"8384:7:10","nodeType":"VariableDeclaration","scope":3677,"src":"8368:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3664,"name":"address","nodeType":"ElementaryTypeName","src":"8368:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3667,"indexed":false,"mutability":"mutable","name":"liquidityRate","nameLocation":"8410:13:10","nodeType":"VariableDeclaration","scope":3677,"src":"8402:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3666,"name":"uint256","nodeType":"ElementaryTypeName","src":"8402:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3669,"indexed":false,"mutability":"mutable","name":"stableBorrowRate","nameLocation":"8442:16:10","nodeType":"VariableDeclaration","scope":3677,"src":"8434:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3668,"name":"uint256","nodeType":"ElementaryTypeName","src":"8434:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3671,"indexed":false,"mutability":"mutable","name":"variableBorrowRate","nameLocation":"8477:18:10","nodeType":"VariableDeclaration","scope":3677,"src":"8469:26:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3670,"name":"uint256","nodeType":"ElementaryTypeName","src":"8469:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3673,"indexed":false,"mutability":"mutable","name":"liquidityIndex","nameLocation":"8514:14:10","nodeType":"VariableDeclaration","scope":3677,"src":"8506:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3672,"name":"uint256","nodeType":"ElementaryTypeName","src":"8506:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3675,"indexed":false,"mutability":"mutable","name":"variableBorrowIndex","nameLocation":"8547:19:10","nodeType":"VariableDeclaration","scope":3677,"src":"8539:27:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3674,"name":"uint256","nodeType":"ElementaryTypeName","src":"8539:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8357:216:10"},"src":"8333:241:10"},{"anonymous":false,"documentation":{"id":3678,"nodeType":"StructuredDocumentation","src":"8582:223:10","text":" @dev Emitted when the protocol treasury receives minted aTokens from the accrued interest.\n @param reserve The address of the reserve\n @param amountMinted The amount minted to the treasury"},"id":3684,"name":"MintedToTreasury","nameLocation":"8817:16:10","nodeType":"EventDefinition","parameters":{"id":3683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3680,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"8850:7:10","nodeType":"VariableDeclaration","scope":3684,"src":"8834:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3679,"name":"address","nodeType":"ElementaryTypeName","src":"8834:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3682,"indexed":false,"mutability":"mutable","name":"amountMinted","nameLocation":"8867:12:10","nodeType":"VariableDeclaration","scope":3684,"src":"8859:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3681,"name":"uint256","nodeType":"ElementaryTypeName","src":"8859:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8833:47:10"},"src":"8811:70:10"},{"documentation":{"id":3685,"nodeType":"StructuredDocumentation","src":"8889:449:10","text":" @notice Mints an `amount` of aTokens to the `onBehalfOf`\n @param asset The address of the underlying asset to mint\n @param amount The amount to mint\n @param onBehalfOf The address that will receive the aTokens\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"},"functionSelector":"69a933a5","id":3696,"implemented":false,"kind":"function","modifiers":[],"name":"mintUnbacked","nameLocation":"9353:12:10","nodeType":"FunctionDefinition","parameters":{"id":3694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3687,"mutability":"mutable","name":"asset","nameLocation":"9384:5:10","nodeType":"VariableDeclaration","scope":3696,"src":"9376:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3686,"name":"address","nodeType":"ElementaryTypeName","src":"9376:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3689,"mutability":"mutable","name":"amount","nameLocation":"9408:6:10","nodeType":"VariableDeclaration","scope":3696,"src":"9400:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3688,"name":"uint256","nodeType":"ElementaryTypeName","src":"9400:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3691,"mutability":"mutable","name":"onBehalfOf","nameLocation":"9433:10:10","nodeType":"VariableDeclaration","scope":3696,"src":"9425:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3690,"name":"address","nodeType":"ElementaryTypeName","src":"9425:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3693,"mutability":"mutable","name":"referralCode","nameLocation":"9461:12:10","nodeType":"VariableDeclaration","scope":3696,"src":"9454:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3692,"name":"uint16","nodeType":"ElementaryTypeName","src":"9454:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"9365:115:10"},"returnParameters":{"id":3695,"nodeType":"ParameterList","parameters":[],"src":"9489:0:10"},"scope":4135,"src":"9344:146:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3697,"nodeType":"StructuredDocumentation","src":"9498:277:10","text":" @notice Back the current unbacked underlying with `amount` and pay `fee`.\n @param asset The address of the underlying asset to back\n @param amount The amount to back\n @param fee The amount paid in fees\n @return The backed amount"},"functionSelector":"d65dc7a1","id":3708,"implemented":false,"kind":"function","modifiers":[],"name":"backUnbacked","nameLocation":"9790:12:10","nodeType":"FunctionDefinition","parameters":{"id":3704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3699,"mutability":"mutable","name":"asset","nameLocation":"9821:5:10","nodeType":"VariableDeclaration","scope":3708,"src":"9813:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3698,"name":"address","nodeType":"ElementaryTypeName","src":"9813:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3701,"mutability":"mutable","name":"amount","nameLocation":"9845:6:10","nodeType":"VariableDeclaration","scope":3708,"src":"9837:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3700,"name":"uint256","nodeType":"ElementaryTypeName","src":"9837:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3703,"mutability":"mutable","name":"fee","nameLocation":"9870:3:10","nodeType":"VariableDeclaration","scope":3708,"src":"9862:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3702,"name":"uint256","nodeType":"ElementaryTypeName","src":"9862:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9802:78:10"},"returnParameters":{"id":3707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3708,"src":"9899:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3705,"name":"uint256","nodeType":"ElementaryTypeName","src":"9899:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9898:9:10"},"scope":4135,"src":"9781:127:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3709,"nodeType":"StructuredDocumentation","src":"9916:742:10","text":" @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n - E.g. User supplies 100 USDC and gets in return 100 aUSDC\n @param asset The address of the underlying asset to supply\n @param amount The amount to be supplied\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"},"functionSelector":"617ba037","id":3720,"implemented":false,"kind":"function","modifiers":[],"name":"supply","nameLocation":"10673:6:10","nodeType":"FunctionDefinition","parameters":{"id":3718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3711,"mutability":"mutable","name":"asset","nameLocation":"10698:5:10","nodeType":"VariableDeclaration","scope":3720,"src":"10690:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3710,"name":"address","nodeType":"ElementaryTypeName","src":"10690:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3713,"mutability":"mutable","name":"amount","nameLocation":"10722:6:10","nodeType":"VariableDeclaration","scope":3720,"src":"10714:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3712,"name":"uint256","nodeType":"ElementaryTypeName","src":"10714:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3715,"mutability":"mutable","name":"onBehalfOf","nameLocation":"10747:10:10","nodeType":"VariableDeclaration","scope":3720,"src":"10739:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3714,"name":"address","nodeType":"ElementaryTypeName","src":"10739:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3717,"mutability":"mutable","name":"referralCode","nameLocation":"10775:12:10","nodeType":"VariableDeclaration","scope":3720,"src":"10768:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3716,"name":"uint16","nodeType":"ElementaryTypeName","src":"10768:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"10679:115:10"},"returnParameters":{"id":3719,"nodeType":"ParameterList","parameters":[],"src":"10803:0:10"},"scope":4135,"src":"10664:140:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3721,"nodeType":"StructuredDocumentation","src":"10812:1004:10","text":" @notice Supply with transfer approval of asset to be supplied done via permit function\n see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\n @param asset The address of the underlying asset to supply\n @param amount The amount to be supplied\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param deadline The deadline timestamp that the permit is valid\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man\n @param permitV The V parameter of ERC712 permit sig\n @param permitR The R parameter of ERC712 permit sig\n @param permitS The S parameter of ERC712 permit sig"},"functionSelector":"02c205f0","id":3740,"implemented":false,"kind":"function","modifiers":[],"name":"supplyWithPermit","nameLocation":"11831:16:10","nodeType":"FunctionDefinition","parameters":{"id":3738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3723,"mutability":"mutable","name":"asset","nameLocation":"11866:5:10","nodeType":"VariableDeclaration","scope":3740,"src":"11858:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3722,"name":"address","nodeType":"ElementaryTypeName","src":"11858:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3725,"mutability":"mutable","name":"amount","nameLocation":"11890:6:10","nodeType":"VariableDeclaration","scope":3740,"src":"11882:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3724,"name":"uint256","nodeType":"ElementaryTypeName","src":"11882:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3727,"mutability":"mutable","name":"onBehalfOf","nameLocation":"11915:10:10","nodeType":"VariableDeclaration","scope":3740,"src":"11907:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3726,"name":"address","nodeType":"ElementaryTypeName","src":"11907:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3729,"mutability":"mutable","name":"referralCode","nameLocation":"11943:12:10","nodeType":"VariableDeclaration","scope":3740,"src":"11936:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3728,"name":"uint16","nodeType":"ElementaryTypeName","src":"11936:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3731,"mutability":"mutable","name":"deadline","nameLocation":"11974:8:10","nodeType":"VariableDeclaration","scope":3740,"src":"11966:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3730,"name":"uint256","nodeType":"ElementaryTypeName","src":"11966:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3733,"mutability":"mutable","name":"permitV","nameLocation":"11999:7:10","nodeType":"VariableDeclaration","scope":3740,"src":"11993:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3732,"name":"uint8","nodeType":"ElementaryTypeName","src":"11993:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3735,"mutability":"mutable","name":"permitR","nameLocation":"12025:7:10","nodeType":"VariableDeclaration","scope":3740,"src":"12017:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3734,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12017:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3737,"mutability":"mutable","name":"permitS","nameLocation":"12051:7:10","nodeType":"VariableDeclaration","scope":3740,"src":"12043:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3736,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12043:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11847:218:10"},"returnParameters":{"id":3739,"nodeType":"ParameterList","parameters":[],"src":"12074:0:10"},"scope":4135,"src":"11822:253:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3741,"nodeType":"StructuredDocumentation","src":"12083:701:10","text":" @notice Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n @param asset The address of the underlying asset to withdraw\n @param amount The underlying amount to be withdrawn\n   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n @param to The address that will receive the underlying, same as msg.sender if the user\n   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   different wallet\n @return The final amount withdrawn"},"functionSelector":"69328dec","id":3752,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"12799:8:10","nodeType":"FunctionDefinition","parameters":{"id":3748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3743,"mutability":"mutable","name":"asset","nameLocation":"12826:5:10","nodeType":"VariableDeclaration","scope":3752,"src":"12818:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3742,"name":"address","nodeType":"ElementaryTypeName","src":"12818:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3745,"mutability":"mutable","name":"amount","nameLocation":"12850:6:10","nodeType":"VariableDeclaration","scope":3752,"src":"12842:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3744,"name":"uint256","nodeType":"ElementaryTypeName","src":"12842:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3747,"mutability":"mutable","name":"to","nameLocation":"12875:2:10","nodeType":"VariableDeclaration","scope":3752,"src":"12867:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3746,"name":"address","nodeType":"ElementaryTypeName","src":"12867:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12807:77:10"},"returnParameters":{"id":3751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3752,"src":"12903:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3749,"name":"uint256","nodeType":"ElementaryTypeName","src":"12903:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12902:9:10"},"scope":4135,"src":"12790:122:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3753,"nodeType":"StructuredDocumentation","src":"12920:1240:10","text":" @notice Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n already supplied enough collateral, or he was given enough allowance by a credit delegator on the\n corresponding debt token (StableDebtToken or VariableDebtToken)\n - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n @param asset The address of the underlying asset to borrow\n @param amount The amount to be borrowed\n @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man\n @param onBehalfOf The address of the user who will receive the debt. Should be the address of the borrower itself\n calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n if he has been given credit delegation allowance"},"functionSelector":"a415bcad","id":3766,"implemented":false,"kind":"function","modifiers":[],"name":"borrow","nameLocation":"14175:6:10","nodeType":"FunctionDefinition","parameters":{"id":3764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3755,"mutability":"mutable","name":"asset","nameLocation":"14200:5:10","nodeType":"VariableDeclaration","scope":3766,"src":"14192:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3754,"name":"address","nodeType":"ElementaryTypeName","src":"14192:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3757,"mutability":"mutable","name":"amount","nameLocation":"14224:6:10","nodeType":"VariableDeclaration","scope":3766,"src":"14216:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3756,"name":"uint256","nodeType":"ElementaryTypeName","src":"14216:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3759,"mutability":"mutable","name":"interestRateMode","nameLocation":"14249:16:10","nodeType":"VariableDeclaration","scope":3766,"src":"14241:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3758,"name":"uint256","nodeType":"ElementaryTypeName","src":"14241:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3761,"mutability":"mutable","name":"referralCode","nameLocation":"14283:12:10","nodeType":"VariableDeclaration","scope":3766,"src":"14276:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3760,"name":"uint16","nodeType":"ElementaryTypeName","src":"14276:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3763,"mutability":"mutable","name":"onBehalfOf","nameLocation":"14314:10:10","nodeType":"VariableDeclaration","scope":3766,"src":"14306:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3762,"name":"address","nodeType":"ElementaryTypeName","src":"14306:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14181:150:10"},"returnParameters":{"id":3765,"nodeType":"ParameterList","parameters":[],"src":"14340:0:10"},"scope":4135,"src":"14166:175:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3767,"nodeType":"StructuredDocumentation","src":"14349:906:10","text":" @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @param onBehalfOf The address of the user who will get his debt reduced/removed. Should be the address of the\n user calling the function if he wants to reduce/remove his own debt, or the address of any other\n other borrower whose debt should be removed\n @return The final amount repaid"},"functionSelector":"573ade81","id":3780,"implemented":false,"kind":"function","modifiers":[],"name":"repay","nameLocation":"15270:5:10","nodeType":"FunctionDefinition","parameters":{"id":3776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3769,"mutability":"mutable","name":"asset","nameLocation":"15294:5:10","nodeType":"VariableDeclaration","scope":3780,"src":"15286:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3768,"name":"address","nodeType":"ElementaryTypeName","src":"15286:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3771,"mutability":"mutable","name":"amount","nameLocation":"15318:6:10","nodeType":"VariableDeclaration","scope":3780,"src":"15310:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3770,"name":"uint256","nodeType":"ElementaryTypeName","src":"15310:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3773,"mutability":"mutable","name":"interestRateMode","nameLocation":"15343:16:10","nodeType":"VariableDeclaration","scope":3780,"src":"15335:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3772,"name":"uint256","nodeType":"ElementaryTypeName","src":"15335:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3775,"mutability":"mutable","name":"onBehalfOf","nameLocation":"15378:10:10","nodeType":"VariableDeclaration","scope":3780,"src":"15370:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3774,"name":"address","nodeType":"ElementaryTypeName","src":"15370:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15275:120:10"},"returnParameters":{"id":3779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3780,"src":"15414:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3777,"name":"uint256","nodeType":"ElementaryTypeName","src":"15414:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15413:9:10"},"scope":4135,"src":"15261:162:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3781,"nodeType":"StructuredDocumentation","src":"15431:1130:10","text":" @notice Repay with transfer approval of asset to be repaid done via permit function\n see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n user calling the function if he wants to reduce/remove his own debt, or the address of any other\n other borrower whose debt should be removed\n @param deadline The deadline timestamp that the permit is valid\n @param permitV The V parameter of ERC712 permit sig\n @param permitR The R parameter of ERC712 permit sig\n @param permitS The S parameter of ERC712 permit sig\n @return The final amount repaid"},"functionSelector":"ee3e210b","id":3802,"implemented":false,"kind":"function","modifiers":[],"name":"repayWithPermit","nameLocation":"16576:15:10","nodeType":"FunctionDefinition","parameters":{"id":3798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3783,"mutability":"mutable","name":"asset","nameLocation":"16610:5:10","nodeType":"VariableDeclaration","scope":3802,"src":"16602:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3782,"name":"address","nodeType":"ElementaryTypeName","src":"16602:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3785,"mutability":"mutable","name":"amount","nameLocation":"16634:6:10","nodeType":"VariableDeclaration","scope":3802,"src":"16626:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3784,"name":"uint256","nodeType":"ElementaryTypeName","src":"16626:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3787,"mutability":"mutable","name":"interestRateMode","nameLocation":"16659:16:10","nodeType":"VariableDeclaration","scope":3802,"src":"16651:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3786,"name":"uint256","nodeType":"ElementaryTypeName","src":"16651:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3789,"mutability":"mutable","name":"onBehalfOf","nameLocation":"16694:10:10","nodeType":"VariableDeclaration","scope":3802,"src":"16686:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3788,"name":"address","nodeType":"ElementaryTypeName","src":"16686:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3791,"mutability":"mutable","name":"deadline","nameLocation":"16723:8:10","nodeType":"VariableDeclaration","scope":3802,"src":"16715:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3790,"name":"uint256","nodeType":"ElementaryTypeName","src":"16715:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3793,"mutability":"mutable","name":"permitV","nameLocation":"16748:7:10","nodeType":"VariableDeclaration","scope":3802,"src":"16742:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3792,"name":"uint8","nodeType":"ElementaryTypeName","src":"16742:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3795,"mutability":"mutable","name":"permitR","nameLocation":"16774:7:10","nodeType":"VariableDeclaration","scope":3802,"src":"16766:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3794,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16766:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3797,"mutability":"mutable","name":"permitS","nameLocation":"16800:7:10","nodeType":"VariableDeclaration","scope":3802,"src":"16792:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3796,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16792:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16591:223:10"},"returnParameters":{"id":3801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3802,"src":"16833:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3799,"name":"uint256","nodeType":"ElementaryTypeName","src":"16833:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16832:9:10"},"scope":4135,"src":"16567:275:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3803,"nodeType":"StructuredDocumentation","src":"16850:812:10","text":" @notice Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the\n equivalent debt tokens\n - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens\n @dev  Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken\n balance is not enough to cover the whole debt\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @return The final amount repaid"},"functionSelector":"2dad97d4","id":3814,"implemented":false,"kind":"function","modifiers":[],"name":"repayWithATokens","nameLocation":"17677:16:10","nodeType":"FunctionDefinition","parameters":{"id":3810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3805,"mutability":"mutable","name":"asset","nameLocation":"17712:5:10","nodeType":"VariableDeclaration","scope":3814,"src":"17704:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3804,"name":"address","nodeType":"ElementaryTypeName","src":"17704:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3807,"mutability":"mutable","name":"amount","nameLocation":"17736:6:10","nodeType":"VariableDeclaration","scope":3814,"src":"17728:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3806,"name":"uint256","nodeType":"ElementaryTypeName","src":"17728:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3809,"mutability":"mutable","name":"interestRateMode","nameLocation":"17761:16:10","nodeType":"VariableDeclaration","scope":3814,"src":"17753:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3808,"name":"uint256","nodeType":"ElementaryTypeName","src":"17753:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17693:91:10"},"returnParameters":{"id":3813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3814,"src":"17803:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3811,"name":"uint256","nodeType":"ElementaryTypeName","src":"17803:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17802:9:10"},"scope":4135,"src":"17668:144:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3815,"nodeType":"StructuredDocumentation","src":"17820:300:10","text":" @notice Allows a borrower to swap his debt between stable and variable mode, or vice versa\n @param asset The address of the underlying asset borrowed\n @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable"},"functionSelector":"94ba89a2","id":3822,"implemented":false,"kind":"function","modifiers":[],"name":"swapBorrowRateMode","nameLocation":"18135:18:10","nodeType":"FunctionDefinition","parameters":{"id":3820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3817,"mutability":"mutable","name":"asset","nameLocation":"18172:5:10","nodeType":"VariableDeclaration","scope":3822,"src":"18164:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3816,"name":"address","nodeType":"ElementaryTypeName","src":"18164:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3819,"mutability":"mutable","name":"interestRateMode","nameLocation":"18196:16:10","nodeType":"VariableDeclaration","scope":3822,"src":"18188:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3818,"name":"uint256","nodeType":"ElementaryTypeName","src":"18188:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18153:66:10"},"returnParameters":{"id":3821,"nodeType":"ParameterList","parameters":[],"src":"18228:0:10"},"scope":4135,"src":"18126:103:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3823,"nodeType":"StructuredDocumentation","src":"18237:577:10","text":" @notice Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n - Users can be rebalanced if the following conditions are satisfied:\n     1. Usage ratio is above 95%\n     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too\n        much has been borrowed at a stable rate and suppliers are not earning enough\n @param asset The address of the underlying asset borrowed\n @param user The address of the user to be rebalanced"},"functionSelector":"cd112382","id":3830,"implemented":false,"kind":"function","modifiers":[],"name":"rebalanceStableBorrowRate","nameLocation":"18829:25:10","nodeType":"FunctionDefinition","parameters":{"id":3828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3825,"mutability":"mutable","name":"asset","nameLocation":"18863:5:10","nodeType":"VariableDeclaration","scope":3830,"src":"18855:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3824,"name":"address","nodeType":"ElementaryTypeName","src":"18855:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3827,"mutability":"mutable","name":"user","nameLocation":"18878:4:10","nodeType":"VariableDeclaration","scope":3830,"src":"18870:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3826,"name":"address","nodeType":"ElementaryTypeName","src":"18870:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18854:29:10"},"returnParameters":{"id":3829,"nodeType":"ParameterList","parameters":[],"src":"18892:0:10"},"scope":4135,"src":"18820:73:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3831,"nodeType":"StructuredDocumentation","src":"18901:272:10","text":" @notice Allows suppliers to enable/disable a specific supplied asset as collateral\n @param asset The address of the underlying asset supplied\n @param useAsCollateral True if the user wants to use the supply as collateral, false otherwise"},"functionSelector":"5a3b74b9","id":3838,"implemented":false,"kind":"function","modifiers":[],"name":"setUserUseReserveAsCollateral","nameLocation":"19188:29:10","nodeType":"FunctionDefinition","parameters":{"id":3836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3833,"mutability":"mutable","name":"asset","nameLocation":"19236:5:10","nodeType":"VariableDeclaration","scope":3838,"src":"19228:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3832,"name":"address","nodeType":"ElementaryTypeName","src":"19228:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3835,"mutability":"mutable","name":"useAsCollateral","nameLocation":"19257:15:10","nodeType":"VariableDeclaration","scope":3838,"src":"19252:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3834,"name":"bool","nodeType":"ElementaryTypeName","src":"19252:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19217:62:10"},"returnParameters":{"id":3837,"nodeType":"ParameterList","parameters":[],"src":"19288:0:10"},"scope":4135,"src":"19179:110:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3839,"nodeType":"StructuredDocumentation","src":"19297:890:10","text":" @notice Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly"},"functionSelector":"00a718a9","id":3852,"implemented":false,"kind":"function","modifiers":[],"name":"liquidationCall","nameLocation":"20202:15:10","nodeType":"FunctionDefinition","parameters":{"id":3850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3841,"mutability":"mutable","name":"collateralAsset","nameLocation":"20236:15:10","nodeType":"VariableDeclaration","scope":3852,"src":"20228:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3840,"name":"address","nodeType":"ElementaryTypeName","src":"20228:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3843,"mutability":"mutable","name":"debtAsset","nameLocation":"20270:9:10","nodeType":"VariableDeclaration","scope":3852,"src":"20262:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3842,"name":"address","nodeType":"ElementaryTypeName","src":"20262:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3845,"mutability":"mutable","name":"user","nameLocation":"20298:4:10","nodeType":"VariableDeclaration","scope":3852,"src":"20290:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3844,"name":"address","nodeType":"ElementaryTypeName","src":"20290:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3847,"mutability":"mutable","name":"debtToCover","nameLocation":"20321:11:10","nodeType":"VariableDeclaration","scope":3852,"src":"20313:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3846,"name":"uint256","nodeType":"ElementaryTypeName","src":"20313:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3849,"mutability":"mutable","name":"receiveAToken","nameLocation":"20348:13:10","nodeType":"VariableDeclaration","scope":3852,"src":"20343:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3848,"name":"bool","nodeType":"ElementaryTypeName","src":"20343:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20217:151:10"},"returnParameters":{"id":3851,"nodeType":"ParameterList","parameters":[],"src":"20377:0:10"},"scope":4135,"src":"20193:185:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3853,"nodeType":"StructuredDocumentation","src":"20386:1455:10","text":" @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\n as long as the amount taken plus a fee is returned.\n @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\n into consideration. For further details please visit https://docs.aave.com/developers/\n @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanReceiver interface\n @param assets The addresses of the assets being flash-borrowed\n @param amounts The amounts of the assets being flash-borrowed\n @param interestRateModes Types of the debt to open if the flash loan is not returned:\n   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n @param params Variadic packed params to pass to the receiver as extra information\n @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"},"functionSelector":"ab9c4b5d","id":3873,"implemented":false,"kind":"function","modifiers":[],"name":"flashLoan","nameLocation":"21856:9:10","nodeType":"FunctionDefinition","parameters":{"id":3871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3855,"mutability":"mutable","name":"receiverAddress","nameLocation":"21884:15:10","nodeType":"VariableDeclaration","scope":3873,"src":"21876:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3854,"name":"address","nodeType":"ElementaryTypeName","src":"21876:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3858,"mutability":"mutable","name":"assets","nameLocation":"21929:6:10","nodeType":"VariableDeclaration","scope":3873,"src":"21910:25:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3856,"name":"address","nodeType":"ElementaryTypeName","src":"21910:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3857,"nodeType":"ArrayTypeName","src":"21910:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3861,"mutability":"mutable","name":"amounts","nameLocation":"21965:7:10","nodeType":"VariableDeclaration","scope":3873,"src":"21946:26:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3859,"name":"uint256","nodeType":"ElementaryTypeName","src":"21946:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3860,"nodeType":"ArrayTypeName","src":"21946:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3864,"mutability":"mutable","name":"interestRateModes","nameLocation":"22002:17:10","nodeType":"VariableDeclaration","scope":3873,"src":"21983:36:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3862,"name":"uint256","nodeType":"ElementaryTypeName","src":"21983:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3863,"nodeType":"ArrayTypeName","src":"21983:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3866,"mutability":"mutable","name":"onBehalfOf","nameLocation":"22038:10:10","nodeType":"VariableDeclaration","scope":3873,"src":"22030:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3865,"name":"address","nodeType":"ElementaryTypeName","src":"22030:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3868,"mutability":"mutable","name":"params","nameLocation":"22074:6:10","nodeType":"VariableDeclaration","scope":3873,"src":"22059:21:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3867,"name":"bytes","nodeType":"ElementaryTypeName","src":"22059:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3870,"mutability":"mutable","name":"referralCode","nameLocation":"22098:12:10","nodeType":"VariableDeclaration","scope":3873,"src":"22091:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3869,"name":"uint16","nodeType":"ElementaryTypeName","src":"22091:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"21865:252:10"},"returnParameters":{"id":3872,"nodeType":"ParameterList","parameters":[],"src":"22126:0:10"},"scope":4135,"src":"21847:280:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3874,"nodeType":"StructuredDocumentation","src":"22135:935:10","text":" @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\n as long as the amount taken plus a fee is returned.\n @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\n into consideration. For further details please visit https://docs.aave.com/developers/\n @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface\n @param asset The address of the asset being flash-borrowed\n @param amount The amount of the asset being flash-borrowed\n @param params Variadic packed params to pass to the receiver as extra information\n @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"},"functionSelector":"42b0b77c","id":3887,"implemented":false,"kind":"function","modifiers":[],"name":"flashLoanSimple","nameLocation":"23085:15:10","nodeType":"FunctionDefinition","parameters":{"id":3885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3876,"mutability":"mutable","name":"receiverAddress","nameLocation":"23119:15:10","nodeType":"VariableDeclaration","scope":3887,"src":"23111:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3875,"name":"address","nodeType":"ElementaryTypeName","src":"23111:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3878,"mutability":"mutable","name":"asset","nameLocation":"23153:5:10","nodeType":"VariableDeclaration","scope":3887,"src":"23145:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3877,"name":"address","nodeType":"ElementaryTypeName","src":"23145:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3880,"mutability":"mutable","name":"amount","nameLocation":"23177:6:10","nodeType":"VariableDeclaration","scope":3887,"src":"23169:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3879,"name":"uint256","nodeType":"ElementaryTypeName","src":"23169:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3882,"mutability":"mutable","name":"params","nameLocation":"23209:6:10","nodeType":"VariableDeclaration","scope":3887,"src":"23194:21:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3881,"name":"bytes","nodeType":"ElementaryTypeName","src":"23194:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3884,"mutability":"mutable","name":"referralCode","nameLocation":"23233:12:10","nodeType":"VariableDeclaration","scope":3887,"src":"23226:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3883,"name":"uint16","nodeType":"ElementaryTypeName","src":"23226:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"23100:152:10"},"returnParameters":{"id":3886,"nodeType":"ParameterList","parameters":[],"src":"23261:0:10"},"scope":4135,"src":"23076:186:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3888,"nodeType":"StructuredDocumentation","src":"23270:657:10","text":" @notice Returns the user account data across all the reserves\n @param user The address of the user\n @return totalCollateralBase The total collateral of the user in the base currency used by the price feed\n @return totalDebtBase The total debt of the user in the base currency used by the price feed\n @return availableBorrowsBase The borrowing power left of the user in the base currency used by the price feed\n @return currentLiquidationThreshold The liquidation threshold of the user\n @return ltv The loan to value of The user\n @return healthFactor The current health factor of the user"},"functionSelector":"bf92857c","id":3905,"implemented":false,"kind":"function","modifiers":[],"name":"getUserAccountData","nameLocation":"23942:18:10","nodeType":"FunctionDefinition","parameters":{"id":3891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3890,"mutability":"mutable","name":"user","nameLocation":"23979:4:10","nodeType":"VariableDeclaration","scope":3905,"src":"23971:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3889,"name":"address","nodeType":"ElementaryTypeName","src":"23971:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23960:30:10"},"returnParameters":{"id":3904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3893,"mutability":"mutable","name":"totalCollateralBase","nameLocation":"24063:19:10","nodeType":"VariableDeclaration","scope":3905,"src":"24055:27:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3892,"name":"uint256","nodeType":"ElementaryTypeName","src":"24055:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3895,"mutability":"mutable","name":"totalDebtBase","nameLocation":"24105:13:10","nodeType":"VariableDeclaration","scope":3905,"src":"24097:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3894,"name":"uint256","nodeType":"ElementaryTypeName","src":"24097:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3897,"mutability":"mutable","name":"availableBorrowsBase","nameLocation":"24141:20:10","nodeType":"VariableDeclaration","scope":3905,"src":"24133:28:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3896,"name":"uint256","nodeType":"ElementaryTypeName","src":"24133:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3899,"mutability":"mutable","name":"currentLiquidationThreshold","nameLocation":"24184:27:10","nodeType":"VariableDeclaration","scope":3905,"src":"24176:35:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3898,"name":"uint256","nodeType":"ElementaryTypeName","src":"24176:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3901,"mutability":"mutable","name":"ltv","nameLocation":"24234:3:10","nodeType":"VariableDeclaration","scope":3905,"src":"24226:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3900,"name":"uint256","nodeType":"ElementaryTypeName","src":"24226:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3903,"mutability":"mutable","name":"healthFactor","nameLocation":"24260:12:10","nodeType":"VariableDeclaration","scope":3905,"src":"24252:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3902,"name":"uint256","nodeType":"ElementaryTypeName","src":"24252:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24040:243:10"},"scope":4135,"src":"23933:351:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3906,"nodeType":"StructuredDocumentation","src":"24292:672:10","text":" @notice Initializes a reserve, activating it, assigning an aToken and debt tokens and an\n interest rate strategy\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve\n @param aTokenAddress The address of the aToken that will be assigned to the reserve\n @param stableDebtAddress The address of the StableDebtToken that will be assigned to the reserve\n @param variableDebtAddress The address of the VariableDebtToken that will be assigned to the reserve\n @param interestRateStrategyAddress The address of the interest rate strategy contract"},"functionSelector":"7a708e92","id":3919,"implemented":false,"kind":"function","modifiers":[],"name":"initReserve","nameLocation":"24979:11:10","nodeType":"FunctionDefinition","parameters":{"id":3917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3908,"mutability":"mutable","name":"asset","nameLocation":"25009:5:10","nodeType":"VariableDeclaration","scope":3919,"src":"25001:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3907,"name":"address","nodeType":"ElementaryTypeName","src":"25001:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3910,"mutability":"mutable","name":"aTokenAddress","nameLocation":"25033:13:10","nodeType":"VariableDeclaration","scope":3919,"src":"25025:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3909,"name":"address","nodeType":"ElementaryTypeName","src":"25025:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3912,"mutability":"mutable","name":"stableDebtAddress","nameLocation":"25065:17:10","nodeType":"VariableDeclaration","scope":3919,"src":"25057:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3911,"name":"address","nodeType":"ElementaryTypeName","src":"25057:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3914,"mutability":"mutable","name":"variableDebtAddress","nameLocation":"25101:19:10","nodeType":"VariableDeclaration","scope":3919,"src":"25093:27:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3913,"name":"address","nodeType":"ElementaryTypeName","src":"25093:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3916,"mutability":"mutable","name":"interestRateStrategyAddress","nameLocation":"25139:27:10","nodeType":"VariableDeclaration","scope":3919,"src":"25131:35:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3915,"name":"address","nodeType":"ElementaryTypeName","src":"25131:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24990:183:10"},"returnParameters":{"id":3918,"nodeType":"ParameterList","parameters":[],"src":"25182:0:10"},"scope":4135,"src":"24970:213:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3920,"nodeType":"StructuredDocumentation","src":"25191:175:10","text":" @notice Drop a reserve\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve"},"functionSelector":"63c9b860","id":3925,"implemented":false,"kind":"function","modifiers":[],"name":"dropReserve","nameLocation":"25381:11:10","nodeType":"FunctionDefinition","parameters":{"id":3923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3922,"mutability":"mutable","name":"asset","nameLocation":"25401:5:10","nodeType":"VariableDeclaration","scope":3925,"src":"25393:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3921,"name":"address","nodeType":"ElementaryTypeName","src":"25393:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25392:15:10"},"returnParameters":{"id":3924,"nodeType":"ParameterList","parameters":[],"src":"25416:0:10"},"scope":4135,"src":"25372:45:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3926,"nodeType":"StructuredDocumentation","src":"25425:305:10","text":" @notice Updates the address of the interest rate strategy contract\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve\n @param rateStrategyAddress The address of the interest rate strategy contract"},"functionSelector":"1d2118f9","id":3933,"implemented":false,"kind":"function","modifiers":[],"name":"setReserveInterestRateStrategyAddress","nameLocation":"25745:37:10","nodeType":"FunctionDefinition","parameters":{"id":3931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3928,"mutability":"mutable","name":"asset","nameLocation":"25801:5:10","nodeType":"VariableDeclaration","scope":3933,"src":"25793:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3927,"name":"address","nodeType":"ElementaryTypeName","src":"25793:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3930,"mutability":"mutable","name":"rateStrategyAddress","nameLocation":"25825:19:10","nodeType":"VariableDeclaration","scope":3933,"src":"25817:27:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3929,"name":"address","nodeType":"ElementaryTypeName","src":"25817:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25782:69:10"},"returnParameters":{"id":3932,"nodeType":"ParameterList","parameters":[],"src":"25860:0:10"},"scope":4135,"src":"25736:125:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3934,"nodeType":"StructuredDocumentation","src":"25869:274:10","text":" @notice Sets the configuration bitmap of the reserve as a whole\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve\n @param configuration The new configuration bitmap"},"functionSelector":"f51e435b","id":3942,"implemented":false,"kind":"function","modifiers":[],"name":"setConfiguration","nameLocation":"26158:16:10","nodeType":"FunctionDefinition","parameters":{"id":3940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3936,"mutability":"mutable","name":"asset","nameLocation":"26193:5:10","nodeType":"VariableDeclaration","scope":3942,"src":"26185:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3935,"name":"address","nodeType":"ElementaryTypeName","src":"26185:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3939,"mutability":"mutable","name":"configuration","nameLocation":"26252:13:10","nodeType":"VariableDeclaration","scope":3942,"src":"26209:56:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$36_calldata_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"},"typeName":{"id":3938,"nodeType":"UserDefinedTypeName","pathNode":{"id":3937,"name":"DataTypes.ReserveConfigurationMap","nodeType":"IdentifierPath","referencedDeclaration":36,"src":"26209:33:10"},"referencedDeclaration":36,"src":"26209:33:10","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$36_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"}},"visibility":"internal"}],"src":"26174:98:10"},"returnParameters":{"id":3941,"nodeType":"ParameterList","parameters":[],"src":"26281:0:10"},"scope":4135,"src":"26149:133:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3943,"nodeType":"StructuredDocumentation","src":"26290:190:10","text":" @notice Returns the configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The configuration of the reserve"},"functionSelector":"c44b11f7","id":3951,"implemented":false,"kind":"function","modifiers":[],"name":"getConfiguration","nameLocation":"26495:16:10","nodeType":"FunctionDefinition","parameters":{"id":3946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3945,"mutability":"mutable","name":"asset","nameLocation":"26530:5:10","nodeType":"VariableDeclaration","scope":3951,"src":"26522:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3944,"name":"address","nodeType":"ElementaryTypeName","src":"26522:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"26511:31:10"},"returnParameters":{"id":3950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3949,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3951,"src":"26566:40:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$36_memory_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"},"typeName":{"id":3948,"nodeType":"UserDefinedTypeName","pathNode":{"id":3947,"name":"DataTypes.ReserveConfigurationMap","nodeType":"IdentifierPath","referencedDeclaration":36,"src":"26566:33:10"},"referencedDeclaration":36,"src":"26566:33:10","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$36_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"}},"visibility":"internal"}],"src":"26565:42:10"},"scope":4135,"src":"26486:122:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3952,"nodeType":"StructuredDocumentation","src":"26616:173:10","text":" @notice Returns the configuration of the user across all the reserves\n @param user The user address\n @return The configuration of the user"},"functionSelector":"4417a583","id":3960,"implemented":false,"kind":"function","modifiers":[],"name":"getUserConfiguration","nameLocation":"26804:20:10","nodeType":"FunctionDefinition","parameters":{"id":3955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3954,"mutability":"mutable","name":"user","nameLocation":"26843:4:10","nodeType":"VariableDeclaration","scope":3960,"src":"26835:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3953,"name":"address","nodeType":"ElementaryTypeName","src":"26835:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"26824:30:10"},"returnParameters":{"id":3959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3960,"src":"26878:37:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$40_memory_ptr","typeString":"struct DataTypes.UserConfigurationMap"},"typeName":{"id":3957,"nodeType":"UserDefinedTypeName","pathNode":{"id":3956,"name":"DataTypes.UserConfigurationMap","nodeType":"IdentifierPath","referencedDeclaration":40,"src":"26878:30:10"},"referencedDeclaration":40,"src":"26878:30:10","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$40_storage_ptr","typeString":"struct DataTypes.UserConfigurationMap"}},"visibility":"internal"}],"src":"26877:39:10"},"scope":4135,"src":"26795:122:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3961,"nodeType":"StructuredDocumentation","src":"26925:193:10","text":" @notice Returns the normalized income of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The reserve's normalized income"},"functionSelector":"d15e0053","id":3968,"implemented":false,"kind":"function","modifiers":[],"name":"getReserveNormalizedIncome","nameLocation":"27133:26:10","nodeType":"FunctionDefinition","parameters":{"id":3964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3963,"mutability":"mutable","name":"asset","nameLocation":"27178:5:10","nodeType":"VariableDeclaration","scope":3968,"src":"27170:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3962,"name":"address","nodeType":"ElementaryTypeName","src":"27170:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"27159:31:10"},"returnParameters":{"id":3967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3968,"src":"27214:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3965,"name":"uint256","nodeType":"ElementaryTypeName","src":"27214:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27213:9:10"},"scope":4135,"src":"27124:99:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3969,"nodeType":"StructuredDocumentation","src":"27231:838:10","text":" @notice Returns the normalized variable debt per unit of asset\n @dev WARNING: This function is intended to be used primarily by the protocol itself to get a\n \"dynamic\" variable index based on time, current stored index and virtual rate at the current\n moment (approx. a borrower would get if opening a position). This means that is always used in\n combination with variable debt supply/balances.\n If using this function externally, consider that is possible to have an increasing normalized\n variable debt that is not equivalent to how the variable debt index would be updated in storage\n (e.g. only updates with non-zero variable debt supply)\n @param asset The address of the underlying asset of the reserve\n @return The reserve normalized variable debt"},"functionSelector":"386497fd","id":3976,"implemented":false,"kind":"function","modifiers":[],"name":"getReserveNormalizedVariableDebt","nameLocation":"28084:32:10","nodeType":"FunctionDefinition","parameters":{"id":3972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3971,"mutability":"mutable","name":"asset","nameLocation":"28135:5:10","nodeType":"VariableDeclaration","scope":3976,"src":"28127:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3970,"name":"address","nodeType":"ElementaryTypeName","src":"28127:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"28116:31:10"},"returnParameters":{"id":3975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3974,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3976,"src":"28171:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3973,"name":"uint256","nodeType":"ElementaryTypeName","src":"28171:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28170:9:10"},"scope":4135,"src":"28075:105:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3977,"nodeType":"StructuredDocumentation","src":"28188:215:10","text":" @notice Returns the state and configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The state and configuration data of the reserve"},"functionSelector":"35ea6a75","id":3985,"implemented":false,"kind":"function","modifiers":[],"name":"getReserveData","nameLocation":"28418:14:10","nodeType":"FunctionDefinition","parameters":{"id":3980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3979,"mutability":"mutable","name":"asset","nameLocation":"28451:5:10","nodeType":"VariableDeclaration","scope":3985,"src":"28443:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3978,"name":"address","nodeType":"ElementaryTypeName","src":"28443:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"28432:31:10"},"returnParameters":{"id":3984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3985,"src":"28487:28:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$33_memory_ptr","typeString":"struct DataTypes.ReserveData"},"typeName":{"id":3982,"nodeType":"UserDefinedTypeName","pathNode":{"id":3981,"name":"DataTypes.ReserveData","nodeType":"IdentifierPath","referencedDeclaration":33,"src":"28487:21:10"},"referencedDeclaration":33,"src":"28487:21:10","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$33_storage_ptr","typeString":"struct DataTypes.ReserveData"}},"visibility":"internal"}],"src":"28486:30:10"},"scope":4135,"src":"28409:108:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3986,"nodeType":"StructuredDocumentation","src":"28525:564:10","text":" @notice Validates and finalizes an aToken transfer\n @dev Only callable by the overlying aToken of the `asset`\n @param asset The address of the underlying asset of the aToken\n @param from The user from which the aTokens are transferred\n @param to The user receiving the aTokens\n @param amount The amount being transferred/withdrawn\n @param balanceFromBefore The aToken balance of the `from` user before the transfer\n @param balanceToBefore The aToken balance of the `to` user before the transfer"},"functionSelector":"d5ed3933","id":4001,"implemented":false,"kind":"function","modifiers":[],"name":"finalizeTransfer","nameLocation":"29104:16:10","nodeType":"FunctionDefinition","parameters":{"id":3999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3988,"mutability":"mutable","name":"asset","nameLocation":"29139:5:10","nodeType":"VariableDeclaration","scope":4001,"src":"29131:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3987,"name":"address","nodeType":"ElementaryTypeName","src":"29131:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3990,"mutability":"mutable","name":"from","nameLocation":"29163:4:10","nodeType":"VariableDeclaration","scope":4001,"src":"29155:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3989,"name":"address","nodeType":"ElementaryTypeName","src":"29155:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3992,"mutability":"mutable","name":"to","nameLocation":"29186:2:10","nodeType":"VariableDeclaration","scope":4001,"src":"29178:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3991,"name":"address","nodeType":"ElementaryTypeName","src":"29178:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3994,"mutability":"mutable","name":"amount","nameLocation":"29207:6:10","nodeType":"VariableDeclaration","scope":4001,"src":"29199:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3993,"name":"uint256","nodeType":"ElementaryTypeName","src":"29199:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3996,"mutability":"mutable","name":"balanceFromBefore","nameLocation":"29232:17:10","nodeType":"VariableDeclaration","scope":4001,"src":"29224:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3995,"name":"uint256","nodeType":"ElementaryTypeName","src":"29224:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3998,"mutability":"mutable","name":"balanceToBefore","nameLocation":"29268:15:10","nodeType":"VariableDeclaration","scope":4001,"src":"29260:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3997,"name":"uint256","nodeType":"ElementaryTypeName","src":"29260:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29120:170:10"},"returnParameters":{"id":4000,"nodeType":"ParameterList","parameters":[],"src":"29299:0:10"},"scope":4135,"src":"29095:205:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4002,"nodeType":"StructuredDocumentation","src":"29308:235:10","text":" @notice Returns the list of the underlying assets of all the initialized reserves\n @dev It does not include dropped reserves\n @return The addresses of the underlying assets of the initialized reserves"},"functionSelector":"d1946dbc","id":4008,"implemented":false,"kind":"function","modifiers":[],"name":"getReservesList","nameLocation":"29558:15:10","nodeType":"FunctionDefinition","parameters":{"id":4003,"nodeType":"ParameterList","parameters":[],"src":"29573:2:10"},"returnParameters":{"id":4007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4008,"src":"29599:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4004,"name":"address","nodeType":"ElementaryTypeName","src":"29599:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4005,"nodeType":"ArrayTypeName","src":"29599:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"29598:18:10"},"scope":4135,"src":"29549:68:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4009,"nodeType":"StructuredDocumentation","src":"29625:297:10","text":" @notice Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct\n @param id The id of the reserve as stored in the DataTypes.ReserveData struct\n @return The address of the reserve associated with id"},"functionSelector":"52751797","id":4016,"implemented":false,"kind":"function","modifiers":[],"name":"getReserveAddressById","nameLocation":"29937:21:10","nodeType":"FunctionDefinition","parameters":{"id":4012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4011,"mutability":"mutable","name":"id","nameLocation":"29966:2:10","nodeType":"VariableDeclaration","scope":4016,"src":"29959:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4010,"name":"uint16","nodeType":"ElementaryTypeName","src":"29959:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"29958:11:10"},"returnParameters":{"id":4015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4016,"src":"29993:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4013,"name":"address","nodeType":"ElementaryTypeName","src":"29993:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"29992:9:10"},"scope":4135,"src":"29928:74:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4017,"nodeType":"StructuredDocumentation","src":"30010:146:10","text":" @notice Returns the PoolAddressesProvider connected to this contract\n @return The address of the PoolAddressesProvider"},"functionSelector":"0542975c","id":4023,"implemented":false,"kind":"function","modifiers":[],"name":"ADDRESSES_PROVIDER","nameLocation":"30171:18:10","nodeType":"FunctionDefinition","parameters":{"id":4018,"nodeType":"ParameterList","parameters":[],"src":"30189:2:10"},"returnParameters":{"id":4022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4023,"src":"30242:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolAddressesProvider_$4344","typeString":"contract IPoolAddressesProvider"},"typeName":{"id":4020,"nodeType":"UserDefinedTypeName","pathNode":{"id":4019,"name":"IPoolAddressesProvider","nodeType":"IdentifierPath","referencedDeclaration":4344,"src":"30242:22:10"},"referencedDeclaration":4344,"src":"30242:22:10","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolAddressesProvider_$4344","typeString":"contract IPoolAddressesProvider"}},"visibility":"internal"}],"src":"30241:24:10"},"scope":4135,"src":"30162:104:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4024,"nodeType":"StructuredDocumentation","src":"30274:156:10","text":" @notice Updates the protocol fee on the bridging\n @param bridgeProtocolFee The part of the premium sent to the protocol treasury"},"functionSelector":"3036b439","id":4029,"implemented":false,"kind":"function","modifiers":[],"name":"updateBridgeProtocolFee","nameLocation":"30445:23:10","nodeType":"FunctionDefinition","parameters":{"id":4027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4026,"mutability":"mutable","name":"bridgeProtocolFee","nameLocation":"30477:17:10","nodeType":"VariableDeclaration","scope":4029,"src":"30469:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4025,"name":"uint256","nodeType":"ElementaryTypeName","src":"30469:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30468:27:10"},"returnParameters":{"id":4028,"nodeType":"ParameterList","parameters":[],"src":"30504:0:10"},"scope":4135,"src":"30436:69:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4030,"nodeType":"StructuredDocumentation","src":"30513:677:10","text":" @notice Updates flash loan premiums. Flash loan premium consists of two parts:\n - A part is sent to aToken holders as extra, one time accumulated interest\n - A part is collected by the protocol treasury\n @dev The total premium is calculated on the total borrowed amount\n @dev The premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`\n @dev Only callable by the PoolConfigurator contract\n @param flashLoanPremiumTotal The total premium, expressed in bps\n @param flashLoanPremiumToProtocol The part of the premium sent to the protocol treasury, expressed in bps"},"functionSelector":"bcb6e522","id":4037,"implemented":false,"kind":"function","modifiers":[],"name":"updateFlashloanPremiums","nameLocation":"31205:23:10","nodeType":"FunctionDefinition","parameters":{"id":4035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4032,"mutability":"mutable","name":"flashLoanPremiumTotal","nameLocation":"31247:21:10","nodeType":"VariableDeclaration","scope":4037,"src":"31239:29:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4031,"name":"uint128","nodeType":"ElementaryTypeName","src":"31239:7:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4034,"mutability":"mutable","name":"flashLoanPremiumToProtocol","nameLocation":"31287:26:10","nodeType":"VariableDeclaration","scope":4037,"src":"31279:34:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4033,"name":"uint128","nodeType":"ElementaryTypeName","src":"31279:7:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"31228:92:10"},"returnParameters":{"id":4036,"nodeType":"ParameterList","parameters":[],"src":"31329:0:10"},"scope":4135,"src":"31196:134:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4038,"nodeType":"StructuredDocumentation","src":"31338:349:10","text":" @notice Configures a new category for the eMode.\n @dev In eMode, the protocol allows very high borrowing power to borrow assets of the same category.\n The category 0 is reserved as it's the default for volatile assets\n @param id The id of the category\n @param config The configuration of the category"},"functionSelector":"d579ea7d","id":4046,"implemented":false,"kind":"function","modifiers":[],"name":"configureEModeCategory","nameLocation":"31702:22:10","nodeType":"FunctionDefinition","parameters":{"id":4044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4040,"mutability":"mutable","name":"id","nameLocation":"31741:2:10","nodeType":"VariableDeclaration","scope":4046,"src":"31735:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4039,"name":"uint8","nodeType":"ElementaryTypeName","src":"31735:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4043,"mutability":"mutable","name":"config","nameLocation":"31785:6:10","nodeType":"VariableDeclaration","scope":4046,"src":"31754:37:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EModeCategory_$51_memory_ptr","typeString":"struct DataTypes.EModeCategory"},"typeName":{"id":4042,"nodeType":"UserDefinedTypeName","pathNode":{"id":4041,"name":"DataTypes.EModeCategory","nodeType":"IdentifierPath","referencedDeclaration":51,"src":"31754:23:10"},"referencedDeclaration":51,"src":"31754:23:10","typeDescriptions":{"typeIdentifier":"t_struct$_EModeCategory_$51_storage_ptr","typeString":"struct DataTypes.EModeCategory"}},"visibility":"internal"}],"src":"31724:74:10"},"returnParameters":{"id":4045,"nodeType":"ParameterList","parameters":[],"src":"31807:0:10"},"scope":4135,"src":"31693:115:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4047,"nodeType":"StructuredDocumentation","src":"31816:162:10","text":" @notice Returns the data of an eMode category\n @param id The id of the category\n @return The configuration data of the category"},"functionSelector":"6c6f6ae1","id":4055,"implemented":false,"kind":"function","modifiers":[],"name":"getEModeCategoryData","nameLocation":"31993:20:10","nodeType":"FunctionDefinition","parameters":{"id":4050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4049,"mutability":"mutable","name":"id","nameLocation":"32030:2:10","nodeType":"VariableDeclaration","scope":4055,"src":"32024:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4048,"name":"uint8","nodeType":"ElementaryTypeName","src":"32024:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"32013:26:10"},"returnParameters":{"id":4054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4055,"src":"32063:30:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EModeCategory_$51_memory_ptr","typeString":"struct DataTypes.EModeCategory"},"typeName":{"id":4052,"nodeType":"UserDefinedTypeName","pathNode":{"id":4051,"name":"DataTypes.EModeCategory","nodeType":"IdentifierPath","referencedDeclaration":51,"src":"32063:23:10"},"referencedDeclaration":51,"src":"32063:23:10","typeDescriptions":{"typeIdentifier":"t_struct$_EModeCategory_$51_storage_ptr","typeString":"struct DataTypes.EModeCategory"}},"visibility":"internal"}],"src":"32062:32:10"},"scope":4135,"src":"31984:111:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4056,"nodeType":"StructuredDocumentation","src":"32103:120:10","text":" @notice Allows a user to use the protocol in eMode\n @param categoryId The id of the category"},"functionSelector":"28530a47","id":4061,"implemented":false,"kind":"function","modifiers":[],"name":"setUserEMode","nameLocation":"32238:12:10","nodeType":"FunctionDefinition","parameters":{"id":4059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4058,"mutability":"mutable","name":"categoryId","nameLocation":"32257:10:10","nodeType":"VariableDeclaration","scope":4061,"src":"32251:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4057,"name":"uint8","nodeType":"ElementaryTypeName","src":"32251:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"32250:18:10"},"returnParameters":{"id":4060,"nodeType":"ParameterList","parameters":[],"src":"32277:0:10"},"scope":4135,"src":"32229:49:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4062,"nodeType":"StructuredDocumentation","src":"32286:137:10","text":" @notice Returns the eMode the user is using\n @param user The address of the user\n @return The eMode id"},"functionSelector":"eddf1b79","id":4069,"implemented":false,"kind":"function","modifiers":[],"name":"getUserEMode","nameLocation":"32438:12:10","nodeType":"FunctionDefinition","parameters":{"id":4065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4064,"mutability":"mutable","name":"user","nameLocation":"32459:4:10","nodeType":"VariableDeclaration","scope":4069,"src":"32451:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4063,"name":"address","nodeType":"ElementaryTypeName","src":"32451:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"32450:14:10"},"returnParameters":{"id":4068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4069,"src":"32488:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4066,"name":"uint256","nodeType":"ElementaryTypeName","src":"32488:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"32487:9:10"},"scope":4135,"src":"32429:68:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4070,"nodeType":"StructuredDocumentation","src":"32505:248:10","text":" @notice Resets the isolation mode total debt of the given asset to zero\n @dev It requires the given asset has zero debt ceiling\n @param asset The address of the underlying asset to reset the isolationModeTotalDebt"},"functionSelector":"e43e88a1","id":4075,"implemented":false,"kind":"function","modifiers":[],"name":"resetIsolationModeTotalDebt","nameLocation":"32768:27:10","nodeType":"FunctionDefinition","parameters":{"id":4073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4072,"mutability":"mutable","name":"asset","nameLocation":"32804:5:10","nodeType":"VariableDeclaration","scope":4075,"src":"32796:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4071,"name":"address","nodeType":"ElementaryTypeName","src":"32796:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"32795:15:10"},"returnParameters":{"id":4074,"nodeType":"ParameterList","parameters":[],"src":"32819:0:10"},"scope":4135,"src":"32759:61:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4076,"nodeType":"StructuredDocumentation","src":"32828:200:10","text":" @notice Returns the percentage of available liquidity that can be borrowed at once at stable rate\n @return The percentage of available liquidity to borrow, expressed in bps"},"functionSelector":"e82fec2f","id":4081,"implemented":false,"kind":"function","modifiers":[],"name":"MAX_STABLE_RATE_BORROW_SIZE_PERCENT","nameLocation":"33043:35:10","nodeType":"FunctionDefinition","parameters":{"id":4077,"nodeType":"ParameterList","parameters":[],"src":"33078:2:10"},"returnParameters":{"id":4080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4081,"src":"33131:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4078,"name":"uint256","nodeType":"ElementaryTypeName","src":"33131:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"33130:9:10"},"scope":4135,"src":"33034:106:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4082,"nodeType":"StructuredDocumentation","src":"33148:109:10","text":" @notice Returns the total fee on flash loans\n @return The total fee on flashloans"},"functionSelector":"074b2e43","id":4087,"implemented":false,"kind":"function","modifiers":[],"name":"FLASHLOAN_PREMIUM_TOTAL","nameLocation":"33272:23:10","nodeType":"FunctionDefinition","parameters":{"id":4083,"nodeType":"ParameterList","parameters":[],"src":"33295:2:10"},"returnParameters":{"id":4086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4087,"src":"33321:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4084,"name":"uint128","nodeType":"ElementaryTypeName","src":"33321:7:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"33320:9:10"},"scope":4135,"src":"33263:67:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4088,"nodeType":"StructuredDocumentation","src":"33338:142:10","text":" @notice Returns the part of the bridge fees sent to protocol\n @return The bridge fee sent to the protocol treasury"},"functionSelector":"272d9072","id":4093,"implemented":false,"kind":"function","modifiers":[],"name":"BRIDGE_PROTOCOL_FEE","nameLocation":"33495:19:10","nodeType":"FunctionDefinition","parameters":{"id":4089,"nodeType":"ParameterList","parameters":[],"src":"33514:2:10"},"returnParameters":{"id":4092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4093,"src":"33540:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4090,"name":"uint256","nodeType":"ElementaryTypeName","src":"33540:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"33539:9:10"},"scope":4135,"src":"33486:63:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4094,"nodeType":"StructuredDocumentation","src":"33557:148:10","text":" @notice Returns the part of the flashloan fees sent to protocol\n @return The flashloan fee sent to the protocol treasury"},"functionSelector":"6a99c036","id":4099,"implemented":false,"kind":"function","modifiers":[],"name":"FLASHLOAN_PREMIUM_TO_PROTOCOL","nameLocation":"33720:29:10","nodeType":"FunctionDefinition","parameters":{"id":4095,"nodeType":"ParameterList","parameters":[],"src":"33749:2:10"},"returnParameters":{"id":4098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4099,"src":"33775:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4096,"name":"uint128","nodeType":"ElementaryTypeName","src":"33775:7:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"33774:9:10"},"scope":4135,"src":"33711:73:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4100,"nodeType":"StructuredDocumentation","src":"33792:160:10","text":" @notice Returns the maximum number of reserves supported to be listed in this Pool\n @return The maximum number of reserves supported"},"functionSelector":"f8119d51","id":4105,"implemented":false,"kind":"function","modifiers":[],"name":"MAX_NUMBER_RESERVES","nameLocation":"33967:19:10","nodeType":"FunctionDefinition","parameters":{"id":4101,"nodeType":"ParameterList","parameters":[],"src":"33986:2:10"},"returnParameters":{"id":4104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4105,"src":"34012:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4102,"name":"uint16","nodeType":"ElementaryTypeName","src":"34012:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"34011:8:10"},"scope":4135,"src":"33958:62:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4106,"nodeType":"StructuredDocumentation","src":"34028:205:10","text":" @notice Mints the assets accrued through the reserve factor to the treasury in the form of aTokens\n @param assets The list of reserves for which the minting needs to be executed"},"functionSelector":"9cd19996","id":4112,"implemented":false,"kind":"function","modifiers":[],"name":"mintToTreasury","nameLocation":"34248:14:10","nodeType":"FunctionDefinition","parameters":{"id":4110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4109,"mutability":"mutable","name":"assets","nameLocation":"34282:6:10","nodeType":"VariableDeclaration","scope":4112,"src":"34263:25:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4107,"name":"address","nodeType":"ElementaryTypeName","src":"34263:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4108,"nodeType":"ArrayTypeName","src":"34263:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"34262:27:10"},"returnParameters":{"id":4111,"nodeType":"ParameterList","parameters":[],"src":"34298:0:10"},"scope":4135,"src":"34239:60:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4113,"nodeType":"StructuredDocumentation","src":"34307:226:10","text":" @notice Rescue and transfer tokens locked in this contract\n @param token The address of the token\n @param to The address of the recipient\n @param amount The amount of token to transfer"},"functionSelector":"cea9d26f","id":4122,"implemented":false,"kind":"function","modifiers":[],"name":"rescueTokens","nameLocation":"34548:12:10","nodeType":"FunctionDefinition","parameters":{"id":4120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4115,"mutability":"mutable","name":"token","nameLocation":"34569:5:10","nodeType":"VariableDeclaration","scope":4122,"src":"34561:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4114,"name":"address","nodeType":"ElementaryTypeName","src":"34561:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4117,"mutability":"mutable","name":"to","nameLocation":"34584:2:10","nodeType":"VariableDeclaration","scope":4122,"src":"34576:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4116,"name":"address","nodeType":"ElementaryTypeName","src":"34576:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4119,"mutability":"mutable","name":"amount","nameLocation":"34596:6:10","nodeType":"VariableDeclaration","scope":4122,"src":"34588:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4118,"name":"uint256","nodeType":"ElementaryTypeName","src":"34588:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34560:43:10"},"returnParameters":{"id":4121,"nodeType":"ParameterList","parameters":[],"src":"34612:0:10"},"scope":4135,"src":"34539:74:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4123,"nodeType":"StructuredDocumentation","src":"34621:801:10","text":" @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n - E.g. User supplies 100 USDC and gets in return 100 aUSDC\n @dev Deprecated: Use the `supply` function instead\n @param asset The address of the underlying asset to supply\n @param amount The amount to be supplied\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"},"functionSelector":"e8eda9df","id":4134,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"35437:7:10","nodeType":"FunctionDefinition","parameters":{"id":4132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4125,"mutability":"mutable","name":"asset","nameLocation":"35463:5:10","nodeType":"VariableDeclaration","scope":4134,"src":"35455:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4124,"name":"address","nodeType":"ElementaryTypeName","src":"35455:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4127,"mutability":"mutable","name":"amount","nameLocation":"35487:6:10","nodeType":"VariableDeclaration","scope":4134,"src":"35479:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4126,"name":"uint256","nodeType":"ElementaryTypeName","src":"35479:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4129,"mutability":"mutable","name":"onBehalfOf","nameLocation":"35512:10:10","nodeType":"VariableDeclaration","scope":4134,"src":"35504:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4128,"name":"address","nodeType":"ElementaryTypeName","src":"35504:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4131,"mutability":"mutable","name":"referralCode","nameLocation":"35540:12:10","nodeType":"VariableDeclaration","scope":4134,"src":"35533:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4130,"name":"uint16","nodeType":"ElementaryTypeName","src":"35533:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"35444:115:10"},"returnParameters":{"id":4133,"nodeType":"ParameterList","parameters":[],"src":"35568:0:10"},"scope":4135,"src":"35428:141:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4136,"src":"330:35242:10","usedErrors":[]}],"src":"38:35536:10"},"id":10},"contracts/interface/IPoolAddressesProvider.sol":{"ast":{"absolutePath":"contracts/interface/IPoolAddressesProvider.sol","exportedSymbols":{"IPoolAddressesProvider":[4344]},"id":4345,"license":"AGPL-3.0","nodeType":"SourceUnit","nodes":[{"id":4137,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"38:23:11"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":4138,"nodeType":"StructuredDocumentation","src":"65:130:11","text":" @title IPoolAddressesProvider\n @author Aave\n @notice Defines the basic interface for a Pool Addresses Provider."},"fullyImplemented":false,"id":4344,"linearizedBaseContracts":[4344],"name":"IPoolAddressesProvider","nameLocation":"207:22:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":4139,"nodeType":"StructuredDocumentation","src":"237:176:11","text":" @dev Emitted when the market identifier is updated.\n @param oldMarketId The old id of the market\n @param newMarketId The new id of the market"},"id":4145,"name":"MarketIdSet","nameLocation":"425:11:11","nodeType":"EventDefinition","parameters":{"id":4144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4141,"indexed":true,"mutability":"mutable","name":"oldMarketId","nameLocation":"452:11:11","nodeType":"VariableDeclaration","scope":4145,"src":"437:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4140,"name":"string","nodeType":"ElementaryTypeName","src":"437:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4143,"indexed":true,"mutability":"mutable","name":"newMarketId","nameLocation":"480:11:11","nodeType":"VariableDeclaration","scope":4145,"src":"465:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4142,"name":"string","nodeType":"ElementaryTypeName","src":"465:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"436:56:11"},"src":"419:74:11"},{"anonymous":false,"documentation":{"id":4146,"nodeType":"StructuredDocumentation","src":"501:167:11","text":" @dev Emitted when the pool is updated.\n @param oldAddress The old address of the Pool\n @param newAddress The new address of the Pool"},"id":4152,"name":"PoolUpdated","nameLocation":"680:11:11","nodeType":"EventDefinition","parameters":{"id":4151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4148,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"708:10:11","nodeType":"VariableDeclaration","scope":4152,"src":"692:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4147,"name":"address","nodeType":"ElementaryTypeName","src":"692:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4150,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"736:10:11","nodeType":"VariableDeclaration","scope":4152,"src":"720:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4149,"name":"address","nodeType":"ElementaryTypeName","src":"720:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"691:56:11"},"src":"674:74:11"},{"anonymous":false,"documentation":{"id":4153,"nodeType":"StructuredDocumentation","src":"756:204:11","text":" @dev Emitted when the pool configurator is updated.\n @param oldAddress The old address of the PoolConfigurator\n @param newAddress The new address of the PoolConfigurator"},"id":4159,"name":"PoolConfiguratorUpdated","nameLocation":"972:23:11","nodeType":"EventDefinition","parameters":{"id":4158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4155,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"1022:10:11","nodeType":"VariableDeclaration","scope":4159,"src":"1006:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4154,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4157,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"1059:10:11","nodeType":"VariableDeclaration","scope":4159,"src":"1043:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4156,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"995:81:11"},"src":"966:111:11"},{"anonymous":false,"documentation":{"id":4160,"nodeType":"StructuredDocumentation","src":"1085:189:11","text":" @dev Emitted when the price oracle is updated.\n @param oldAddress The old address of the PriceOracle\n @param newAddress The new address of the PriceOracle"},"id":4166,"name":"PriceOracleUpdated","nameLocation":"1286:18:11","nodeType":"EventDefinition","parameters":{"id":4165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4162,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"1331:10:11","nodeType":"VariableDeclaration","scope":4166,"src":"1315:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4161,"name":"address","nodeType":"ElementaryTypeName","src":"1315:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4164,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"1368:10:11","nodeType":"VariableDeclaration","scope":4166,"src":"1352:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4163,"name":"address","nodeType":"ElementaryTypeName","src":"1352:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1304:81:11"},"src":"1280:106:11"},{"anonymous":false,"documentation":{"id":4167,"nodeType":"StructuredDocumentation","src":"1394:186:11","text":" @dev Emitted when the ACL manager is updated.\n @param oldAddress The old address of the ACLManager\n @param newAddress The new address of the ACLManager"},"id":4173,"name":"ACLManagerUpdated","nameLocation":"1592:17:11","nodeType":"EventDefinition","parameters":{"id":4172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4169,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"1636:10:11","nodeType":"VariableDeclaration","scope":4173,"src":"1620:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4168,"name":"address","nodeType":"ElementaryTypeName","src":"1620:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4171,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"1673:10:11","nodeType":"VariableDeclaration","scope":4173,"src":"1657:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4170,"name":"address","nodeType":"ElementaryTypeName","src":"1657:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1609:81:11"},"src":"1586:105:11"},{"anonymous":false,"documentation":{"id":4174,"nodeType":"StructuredDocumentation","src":"1699:180:11","text":" @dev Emitted when the ACL admin is updated.\n @param oldAddress The old address of the ACLAdmin\n @param newAddress The new address of the ACLAdmin"},"id":4180,"name":"ACLAdminUpdated","nameLocation":"1891:15:11","nodeType":"EventDefinition","parameters":{"id":4179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4176,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"1933:10:11","nodeType":"VariableDeclaration","scope":4180,"src":"1917:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4175,"name":"address","nodeType":"ElementaryTypeName","src":"1917:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4178,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"1970:10:11","nodeType":"VariableDeclaration","scope":4180,"src":"1954:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4177,"name":"address","nodeType":"ElementaryTypeName","src":"1954:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1906:81:11"},"src":"1885:103:11"},{"anonymous":false,"documentation":{"id":4181,"nodeType":"StructuredDocumentation","src":"1996:214:11","text":" @dev Emitted when the price oracle sentinel is updated.\n @param oldAddress The old address of the PriceOracleSentinel\n @param newAddress The new address of the PriceOracleSentinel"},"id":4187,"name":"PriceOracleSentinelUpdated","nameLocation":"2222:26:11","nodeType":"EventDefinition","parameters":{"id":4186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4183,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"2275:10:11","nodeType":"VariableDeclaration","scope":4187,"src":"2259:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4182,"name":"address","nodeType":"ElementaryTypeName","src":"2259:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4185,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"2312:10:11","nodeType":"VariableDeclaration","scope":4187,"src":"2296:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4184,"name":"address","nodeType":"ElementaryTypeName","src":"2296:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2248:81:11"},"src":"2216:114:11"},{"anonymous":false,"documentation":{"id":4188,"nodeType":"StructuredDocumentation","src":"2338:205:11","text":" @dev Emitted when the pool data provider is updated.\n @param oldAddress The old address of the PoolDataProvider\n @param newAddress The new address of the PoolDataProvider"},"id":4194,"name":"PoolDataProviderUpdated","nameLocation":"2555:23:11","nodeType":"EventDefinition","parameters":{"id":4193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4190,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"2605:10:11","nodeType":"VariableDeclaration","scope":4194,"src":"2589:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4189,"name":"address","nodeType":"ElementaryTypeName","src":"2589:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4192,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"2642:10:11","nodeType":"VariableDeclaration","scope":4194,"src":"2626:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4191,"name":"address","nodeType":"ElementaryTypeName","src":"2626:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2578:81:11"},"src":"2549:111:11"},{"anonymous":false,"documentation":{"id":4195,"nodeType":"StructuredDocumentation","src":"2668:258:11","text":" @dev Emitted when a new proxy is created.\n @param id The identifier of the proxy\n @param proxyAddress The address of the created proxy contract\n @param implementationAddress The address of the implementation contract"},"id":4203,"name":"ProxyCreated","nameLocation":"2938:12:11","nodeType":"EventDefinition","parameters":{"id":4202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4197,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"2977:2:11","nodeType":"VariableDeclaration","scope":4203,"src":"2961:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4199,"indexed":true,"mutability":"mutable","name":"proxyAddress","nameLocation":"3006:12:11","nodeType":"VariableDeclaration","scope":4203,"src":"2990:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4198,"name":"address","nodeType":"ElementaryTypeName","src":"2990:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4201,"indexed":true,"mutability":"mutable","name":"implementationAddress","nameLocation":"3045:21:11","nodeType":"VariableDeclaration","scope":4203,"src":"3029:37:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4200,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2950:123:11"},"src":"2932:142:11"},{"anonymous":false,"documentation":{"id":4204,"nodeType":"StructuredDocumentation","src":"3082:253:11","text":" @dev Emitted when a new non-proxied contract address is registered.\n @param id The identifier of the contract\n @param oldAddress The address of the old contract\n @param newAddress The address of the new contract"},"id":4212,"name":"AddressSet","nameLocation":"3347:10:11","nodeType":"EventDefinition","parameters":{"id":4211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4206,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"3384:2:11","nodeType":"VariableDeclaration","scope":4212,"src":"3368:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4205,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3368:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4208,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"3413:10:11","nodeType":"VariableDeclaration","scope":4212,"src":"3397:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4207,"name":"address","nodeType":"ElementaryTypeName","src":"3397:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4210,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"3450:10:11","nodeType":"VariableDeclaration","scope":4212,"src":"3434:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4209,"name":"address","nodeType":"ElementaryTypeName","src":"3434:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3357:110:11"},"src":"3341:127:11"},{"anonymous":false,"documentation":{"id":4213,"nodeType":"StructuredDocumentation","src":"3476:385:11","text":" @dev Emitted when the implementation of the proxy registered with id is updated\n @param id The identifier of the contract\n @param proxyAddress The address of the proxy contract\n @param oldImplementationAddress The address of the old implementation contract\n @param newImplementationAddress The address of the new implementation contract"},"id":4223,"name":"AddressSetAsProxy","nameLocation":"3873:17:11","nodeType":"EventDefinition","parameters":{"id":4222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4215,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"3917:2:11","nodeType":"VariableDeclaration","scope":4223,"src":"3901:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4214,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3901:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4217,"indexed":true,"mutability":"mutable","name":"proxyAddress","nameLocation":"3946:12:11","nodeType":"VariableDeclaration","scope":4223,"src":"3930:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4216,"name":"address","nodeType":"ElementaryTypeName","src":"3930:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4219,"indexed":false,"mutability":"mutable","name":"oldImplementationAddress","nameLocation":"3977:24:11","nodeType":"VariableDeclaration","scope":4223,"src":"3969:32:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4218,"name":"address","nodeType":"ElementaryTypeName","src":"3969:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4221,"indexed":true,"mutability":"mutable","name":"newImplementationAddress","nameLocation":"4028:24:11","nodeType":"VariableDeclaration","scope":4223,"src":"4012:40:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4220,"name":"address","nodeType":"ElementaryTypeName","src":"4012:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3890:169:11"},"src":"3867:193:11"},{"documentation":{"id":4224,"nodeType":"StructuredDocumentation","src":"4068:126:11","text":" @notice Returns the id of the Aave market to which this contract points to.\n @return The market id"},"functionSelector":"568ef470","id":4229,"implemented":false,"kind":"function","modifiers":[],"name":"getMarketId","nameLocation":"4209:11:11","nodeType":"FunctionDefinition","parameters":{"id":4225,"nodeType":"ParameterList","parameters":[],"src":"4220:2:11"},"returnParameters":{"id":4228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4229,"src":"4246:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4226,"name":"string","nodeType":"ElementaryTypeName","src":"4246:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4245:15:11"},"scope":4344,"src":"4200:61:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4230,"nodeType":"StructuredDocumentation","src":"4269:267:11","text":" @notice Associates an id with a specific PoolAddressesProvider.\n @dev This can be used to create an onchain registry of PoolAddressesProviders to\n identify and validate multiple Aave markets.\n @param newMarketId The market id"},"functionSelector":"f67b1847","id":4235,"implemented":false,"kind":"function","modifiers":[],"name":"setMarketId","nameLocation":"4551:11:11","nodeType":"FunctionDefinition","parameters":{"id":4233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4232,"mutability":"mutable","name":"newMarketId","nameLocation":"4579:11:11","nodeType":"VariableDeclaration","scope":4235,"src":"4563:27:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":4231,"name":"string","nodeType":"ElementaryTypeName","src":"4563:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4562:29:11"},"returnParameters":{"id":4234,"nodeType":"ParameterList","parameters":[],"src":"4600:0:11"},"scope":4344,"src":"4542:59:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4236,"nodeType":"StructuredDocumentation","src":"4609:324:11","text":" @notice Returns an address by its identifier.\n @dev The returned address might be an EOA or a contract, potentially proxied\n @dev It returns ZERO if there is no registered address with the given id\n @param id The id\n @return The address of the registered for the specified id"},"functionSelector":"21f8a721","id":4243,"implemented":false,"kind":"function","modifiers":[],"name":"getAddress","nameLocation":"4948:10:11","nodeType":"FunctionDefinition","parameters":{"id":4239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4238,"mutability":"mutable","name":"id","nameLocation":"4967:2:11","nodeType":"VariableDeclaration","scope":4243,"src":"4959:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4237,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4959:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4958:12:11"},"returnParameters":{"id":4242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4241,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4243,"src":"4994:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4240,"name":"address","nodeType":"ElementaryTypeName","src":"4994:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4993:9:11"},"scope":4344,"src":"4939:64:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4244,"nodeType":"StructuredDocumentation","src":"5011:509:11","text":" @notice General function to update the implementation of a proxy registered with\n certain `id`. If there is no proxy registered, it will instantiate one and\n set as implementation the `newImplementationAddress`.\n @dev IMPORTANT Use this function carefully, only for ids that don't have an explicit\n setter function, in order to avoid unexpected consequences\n @param id The id\n @param newImplementationAddress The address of the new implementation"},"functionSelector":"5dcc528c","id":4251,"implemented":false,"kind":"function","modifiers":[],"name":"setAddressAsProxy","nameLocation":"5535:17:11","nodeType":"FunctionDefinition","parameters":{"id":4249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4246,"mutability":"mutable","name":"id","nameLocation":"5571:2:11","nodeType":"VariableDeclaration","scope":4251,"src":"5563:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5563:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4248,"mutability":"mutable","name":"newImplementationAddress","nameLocation":"5592:24:11","nodeType":"VariableDeclaration","scope":4251,"src":"5584:32:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4247,"name":"address","nodeType":"ElementaryTypeName","src":"5584:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5552:71:11"},"returnParameters":{"id":4250,"nodeType":"ParameterList","parameters":[],"src":"5632:0:11"},"scope":4344,"src":"5526:107:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4252,"nodeType":"StructuredDocumentation","src":"5641:259:11","text":" @notice Sets an address for an id replacing the address saved in the addresses map.\n @dev IMPORTANT Use this function carefully, as it will do a hard replacement\n @param id The id\n @param newAddress The address to set"},"functionSelector":"ca446dd9","id":4259,"implemented":false,"kind":"function","modifiers":[],"name":"setAddress","nameLocation":"5915:10:11","nodeType":"FunctionDefinition","parameters":{"id":4257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4254,"mutability":"mutable","name":"id","nameLocation":"5934:2:11","nodeType":"VariableDeclaration","scope":4259,"src":"5926:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5926:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4256,"mutability":"mutable","name":"newAddress","nameLocation":"5946:10:11","nodeType":"VariableDeclaration","scope":4259,"src":"5938:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4255,"name":"address","nodeType":"ElementaryTypeName","src":"5938:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5925:32:11"},"returnParameters":{"id":4258,"nodeType":"ParameterList","parameters":[],"src":"5966:0:11"},"scope":4344,"src":"5906:61:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4260,"nodeType":"StructuredDocumentation","src":"5975:106:11","text":" @notice Returns the address of the Pool proxy.\n @return The Pool proxy address"},"functionSelector":"026b1d5f","id":4265,"implemented":false,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"6096:7:11","nodeType":"FunctionDefinition","parameters":{"id":4261,"nodeType":"ParameterList","parameters":[],"src":"6103:2:11"},"returnParameters":{"id":4264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4265,"src":"6129:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4262,"name":"address","nodeType":"ElementaryTypeName","src":"6129:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6128:9:11"},"scope":4344,"src":"6087:51:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4266,"nodeType":"StructuredDocumentation","src":"6146:236:11","text":" @notice Updates the implementation of the Pool, or creates a proxy\n setting the new `pool` implementation when the function is called for the first time.\n @param newPoolImpl The new Pool implementation"},"functionSelector":"a1564406","id":4271,"implemented":false,"kind":"function","modifiers":[],"name":"setPoolImpl","nameLocation":"6397:11:11","nodeType":"FunctionDefinition","parameters":{"id":4269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4268,"mutability":"mutable","name":"newPoolImpl","nameLocation":"6417:11:11","nodeType":"VariableDeclaration","scope":4271,"src":"6409:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4267,"name":"address","nodeType":"ElementaryTypeName","src":"6409:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6408:21:11"},"returnParameters":{"id":4270,"nodeType":"ParameterList","parameters":[],"src":"6438:0:11"},"scope":4344,"src":"6388:51:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4272,"nodeType":"StructuredDocumentation","src":"6447:130:11","text":" @notice Returns the address of the PoolConfigurator proxy.\n @return The PoolConfigurator proxy address"},"functionSelector":"631adfca","id":4277,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolConfigurator","nameLocation":"6592:19:11","nodeType":"FunctionDefinition","parameters":{"id":4273,"nodeType":"ParameterList","parameters":[],"src":"6611:2:11"},"returnParameters":{"id":4276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4277,"src":"6637:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4274,"name":"address","nodeType":"ElementaryTypeName","src":"6637:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6636:9:11"},"scope":4344,"src":"6583:63:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4278,"nodeType":"StructuredDocumentation","src":"6654:284:11","text":" @notice Updates the implementation of the PoolConfigurator, or creates a proxy\n setting the new `PoolConfigurator` implementation when the function is called for the first time.\n @param newPoolConfiguratorImpl The new PoolConfigurator implementation"},"functionSelector":"e4ca28b7","id":4283,"implemented":false,"kind":"function","modifiers":[],"name":"setPoolConfiguratorImpl","nameLocation":"6953:23:11","nodeType":"FunctionDefinition","parameters":{"id":4281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4280,"mutability":"mutable","name":"newPoolConfiguratorImpl","nameLocation":"6985:23:11","nodeType":"VariableDeclaration","scope":4283,"src":"6977:31:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4279,"name":"address","nodeType":"ElementaryTypeName","src":"6977:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6976:33:11"},"returnParameters":{"id":4282,"nodeType":"ParameterList","parameters":[],"src":"7018:0:11"},"scope":4344,"src":"6944:75:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4284,"nodeType":"StructuredDocumentation","src":"7027:116:11","text":" @notice Returns the address of the price oracle.\n @return The address of the PriceOracle"},"functionSelector":"fca513a8","id":4289,"implemented":false,"kind":"function","modifiers":[],"name":"getPriceOracle","nameLocation":"7158:14:11","nodeType":"FunctionDefinition","parameters":{"id":4285,"nodeType":"ParameterList","parameters":[],"src":"7172:2:11"},"returnParameters":{"id":4288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4289,"src":"7198:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4286,"name":"address","nodeType":"ElementaryTypeName","src":"7198:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7197:9:11"},"scope":4344,"src":"7149:58:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4290,"nodeType":"StructuredDocumentation","src":"7215:134:11","text":" @notice Updates the address of the price oracle.\n @param newPriceOracle The address of the new PriceOracle"},"functionSelector":"530e784f","id":4295,"implemented":false,"kind":"function","modifiers":[],"name":"setPriceOracle","nameLocation":"7364:14:11","nodeType":"FunctionDefinition","parameters":{"id":4293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4292,"mutability":"mutable","name":"newPriceOracle","nameLocation":"7387:14:11","nodeType":"VariableDeclaration","scope":4295,"src":"7379:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4291,"name":"address","nodeType":"ElementaryTypeName","src":"7379:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7378:24:11"},"returnParameters":{"id":4294,"nodeType":"ParameterList","parameters":[],"src":"7411:0:11"},"scope":4344,"src":"7355:57:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4296,"nodeType":"StructuredDocumentation","src":"7420:114:11","text":" @notice Returns the address of the ACL manager.\n @return The address of the ACLManager"},"functionSelector":"707cd716","id":4301,"implemented":false,"kind":"function","modifiers":[],"name":"getACLManager","nameLocation":"7549:13:11","nodeType":"FunctionDefinition","parameters":{"id":4297,"nodeType":"ParameterList","parameters":[],"src":"7562:2:11"},"returnParameters":{"id":4300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4301,"src":"7588:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4298,"name":"address","nodeType":"ElementaryTypeName","src":"7588:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7587:9:11"},"scope":4344,"src":"7540:57:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4302,"nodeType":"StructuredDocumentation","src":"7605:131:11","text":" @notice Updates the address of the ACL manager.\n @param newAclManager The address of the new ACLManager"},"functionSelector":"ed301ca9","id":4307,"implemented":false,"kind":"function","modifiers":[],"name":"setACLManager","nameLocation":"7751:13:11","nodeType":"FunctionDefinition","parameters":{"id":4305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4304,"mutability":"mutable","name":"newAclManager","nameLocation":"7773:13:11","nodeType":"VariableDeclaration","scope":4307,"src":"7765:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4303,"name":"address","nodeType":"ElementaryTypeName","src":"7765:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7764:23:11"},"returnParameters":{"id":4306,"nodeType":"ParameterList","parameters":[],"src":"7796:0:11"},"scope":4344,"src":"7742:55:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4308,"nodeType":"StructuredDocumentation","src":"7805:111:11","text":" @notice Returns the address of the ACL admin.\n @return The address of the ACL admin"},"functionSelector":"0e67178c","id":4313,"implemented":false,"kind":"function","modifiers":[],"name":"getACLAdmin","nameLocation":"7931:11:11","nodeType":"FunctionDefinition","parameters":{"id":4309,"nodeType":"ParameterList","parameters":[],"src":"7942:2:11"},"returnParameters":{"id":4312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4313,"src":"7968:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4310,"name":"address","nodeType":"ElementaryTypeName","src":"7968:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7967:9:11"},"scope":4344,"src":"7922:55:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4314,"nodeType":"StructuredDocumentation","src":"7985:126:11","text":" @notice Updates the address of the ACL admin.\n @param newAclAdmin The address of the new ACL admin"},"functionSelector":"76d84ffc","id":4319,"implemented":false,"kind":"function","modifiers":[],"name":"setACLAdmin","nameLocation":"8126:11:11","nodeType":"FunctionDefinition","parameters":{"id":4317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4316,"mutability":"mutable","name":"newAclAdmin","nameLocation":"8146:11:11","nodeType":"VariableDeclaration","scope":4319,"src":"8138:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4315,"name":"address","nodeType":"ElementaryTypeName","src":"8138:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8137:21:11"},"returnParameters":{"id":4318,"nodeType":"ParameterList","parameters":[],"src":"8167:0:11"},"scope":4344,"src":"8117:51:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4320,"nodeType":"StructuredDocumentation","src":"8176:133:11","text":" @notice Returns the address of the price oracle sentinel.\n @return The address of the PriceOracleSentinel"},"functionSelector":"5eb88d3d","id":4325,"implemented":false,"kind":"function","modifiers":[],"name":"getPriceOracleSentinel","nameLocation":"8324:22:11","nodeType":"FunctionDefinition","parameters":{"id":4321,"nodeType":"ParameterList","parameters":[],"src":"8346:2:11"},"returnParameters":{"id":4324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4325,"src":"8372:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4322,"name":"address","nodeType":"ElementaryTypeName","src":"8372:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8371:9:11"},"scope":4344,"src":"8315:66:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4326,"nodeType":"StructuredDocumentation","src":"8389:159:11","text":" @notice Updates the address of the price oracle sentinel.\n @param newPriceOracleSentinel The address of the new PriceOracleSentinel"},"functionSelector":"74944cec","id":4331,"implemented":false,"kind":"function","modifiers":[],"name":"setPriceOracleSentinel","nameLocation":"8563:22:11","nodeType":"FunctionDefinition","parameters":{"id":4329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4328,"mutability":"mutable","name":"newPriceOracleSentinel","nameLocation":"8594:22:11","nodeType":"VariableDeclaration","scope":4331,"src":"8586:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4327,"name":"address","nodeType":"ElementaryTypeName","src":"8586:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8585:32:11"},"returnParameters":{"id":4330,"nodeType":"ParameterList","parameters":[],"src":"8626:0:11"},"scope":4344,"src":"8554:73:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4332,"nodeType":"StructuredDocumentation","src":"8635:118:11","text":" @notice Returns the address of the data provider.\n @return The address of the DataProvider"},"functionSelector":"e860accb","id":4337,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolDataProvider","nameLocation":"8768:19:11","nodeType":"FunctionDefinition","parameters":{"id":4333,"nodeType":"ParameterList","parameters":[],"src":"8787:2:11"},"returnParameters":{"id":4336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4337,"src":"8813:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4334,"name":"address","nodeType":"ElementaryTypeName","src":"8813:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8812:9:11"},"scope":4344,"src":"8759:63:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4338,"nodeType":"StructuredDocumentation","src":"8830:137:11","text":" @notice Updates the address of the data provider.\n @param newDataProvider The address of the new DataProvider"},"functionSelector":"e44e9ed1","id":4343,"implemented":false,"kind":"function","modifiers":[],"name":"setPoolDataProvider","nameLocation":"8982:19:11","nodeType":"FunctionDefinition","parameters":{"id":4341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4340,"mutability":"mutable","name":"newDataProvider","nameLocation":"9010:15:11","nodeType":"VariableDeclaration","scope":4343,"src":"9002:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4339,"name":"address","nodeType":"ElementaryTypeName","src":"9002:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9001:25:11"},"returnParameters":{"id":4342,"nodeType":"ParameterList","parameters":[],"src":"9035:0:11"},"scope":4344,"src":"8973:63:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4345,"src":"197:8842:11","usedErrors":[]}],"src":"38:9003:11"},"id":11}},"contracts":{"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol":{"DataTypes":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220568a02bf074575bf03df1daead63a439b3c21802aa055e8a36cf1afcb1d92da764736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP DUP11 MUL 0xBF SMOD GASLIMIT PUSH22 0xBF03DF1DAEAD63A439B3C21802AA055E8A36CF1AFCB1 0xD9 0x2D 0xA7 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"62:7274:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220568a02bf074575bf03df1daead63a439b3c21802aa055e8a36cf1afcb1d92da764736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP DUP11 MUL 0xBF SMOD GASLIMIT PUSH22 0xBF03DF1DAEAD63A439B3C21802AA055E8A36CF1AFCB1 0xD9 0x2D 0xA7 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"62:7274:0:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":\"DataTypes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.0;\\n\\nlibrary DataTypes {\\n  struct ReserveData {\\n    //stores the reserve configuration\\n    ReserveConfigurationMap configuration;\\n    //the liquidity index. Expressed in ray\\n    uint128 liquidityIndex;\\n    //the current supply rate. Expressed in ray\\n    uint128 currentLiquidityRate;\\n    //variable borrow index. Expressed in ray\\n    uint128 variableBorrowIndex;\\n    //the current variable borrow rate. Expressed in ray\\n    uint128 currentVariableBorrowRate;\\n    //the current stable borrow rate. Expressed in ray\\n    uint128 currentStableBorrowRate;\\n    //timestamp of last update\\n    uint40 lastUpdateTimestamp;\\n    //the id of the reserve. Represents the position in the list of the active reserves\\n    uint16 id;\\n    //aToken address\\n    address aTokenAddress;\\n    //stableDebtToken address\\n    address stableDebtTokenAddress;\\n    //variableDebtToken address\\n    address variableDebtTokenAddress;\\n    //address of the interest rate strategy\\n    address interestRateStrategyAddress;\\n    //the current treasury balance, scaled\\n    uint128 accruedToTreasury;\\n    //the outstanding unbacked aTokens minted through the bridging feature\\n    uint128 unbacked;\\n    //the outstanding debt borrowed against this asset in isolation mode\\n    uint128 isolationModeTotalDebt;\\n  }\\n\\n  struct ReserveConfigurationMap {\\n    //bit 0-15: LTV\\n    //bit 16-31: Liq. threshold\\n    //bit 32-47: Liq. bonus\\n    //bit 48-55: Decimals\\n    //bit 56: reserve is active\\n    //bit 57: reserve is frozen\\n    //bit 58: borrowing is enabled\\n    //bit 59: stable rate borrowing enabled\\n    //bit 60: asset is paused\\n    //bit 61: borrowing in isolation mode is enabled\\n    //bit 62-63: reserved\\n    //bit 64-79: reserve factor\\n    //bit 80-115 borrow cap in whole tokens, borrowCap == 0 => no cap\\n    //bit 116-151 supply cap in whole tokens, supplyCap == 0 => no cap\\n    //bit 152-167 liquidation protocol fee\\n    //bit 168-175 eMode category\\n    //bit 176-211 unbacked mint cap in whole tokens, unbackedMintCap == 0 => minting disabled\\n    //bit 212-251 debt ceiling for isolation mode with (ReserveConfiguration::DEBT_CEILING_DECIMALS) decimals\\n    //bit 252-255 unused\\n\\n    uint256 data;\\n  }\\n\\n  struct UserConfigurationMap {\\n    /**\\n     * @dev Bitmap of the users collaterals and borrows. It is divided in pairs of bits, one pair per asset.\\n     * The first bit indicates if an asset is used as collateral by the user, the second whether an\\n     * asset is borrowed by the user.\\n     */\\n    uint256 data;\\n  }\\n\\n  struct EModeCategory {\\n    // each eMode category has a custom ltv and liquidation threshold\\n    uint16 ltv;\\n    uint16 liquidationThreshold;\\n    uint16 liquidationBonus;\\n    // each eMode category may or may not have a custom oracle to override the individual assets price oracles\\n    address priceSource;\\n    string label;\\n  }\\n\\n  enum InterestRateMode {\\n    NONE,\\n    STABLE,\\n    VARIABLE\\n  }\\n\\n  struct ReserveCache {\\n    uint256 currScaledVariableDebt;\\n    uint256 nextScaledVariableDebt;\\n    uint256 currPrincipalStableDebt;\\n    uint256 currAvgStableBorrowRate;\\n    uint256 currTotalStableDebt;\\n    uint256 nextAvgStableBorrowRate;\\n    uint256 nextTotalStableDebt;\\n    uint256 currLiquidityIndex;\\n    uint256 nextLiquidityIndex;\\n    uint256 currVariableBorrowIndex;\\n    uint256 nextVariableBorrowIndex;\\n    uint256 currLiquidityRate;\\n    uint256 currVariableBorrowRate;\\n    uint256 reserveFactor;\\n    ReserveConfigurationMap reserveConfiguration;\\n    address aTokenAddress;\\n    address stableDebtTokenAddress;\\n    address variableDebtTokenAddress;\\n    uint40 reserveLastUpdateTimestamp;\\n    uint40 stableDebtLastUpdateTimestamp;\\n  }\\n\\n  struct ExecuteLiquidationCallParams {\\n    uint256 reservesCount;\\n    uint256 debtToCover;\\n    address collateralAsset;\\n    address debtAsset;\\n    address user;\\n    bool receiveAToken;\\n    address priceOracle;\\n    uint8 userEModeCategory;\\n    address priceOracleSentinel;\\n  }\\n\\n  struct ExecuteSupplyParams {\\n    address asset;\\n    uint256 amount;\\n    address onBehalfOf;\\n    uint16 referralCode;\\n  }\\n\\n  struct ExecuteBorrowParams {\\n    address asset;\\n    address user;\\n    address onBehalfOf;\\n    uint256 amount;\\n    InterestRateMode interestRateMode;\\n    uint16 referralCode;\\n    bool releaseUnderlying;\\n    uint256 maxStableRateBorrowSizePercent;\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 userEModeCategory;\\n    address priceOracleSentinel;\\n  }\\n\\n  struct ExecuteRepayParams {\\n    address asset;\\n    uint256 amount;\\n    InterestRateMode interestRateMode;\\n    address onBehalfOf;\\n    bool useATokens;\\n  }\\n\\n  struct ExecuteWithdrawParams {\\n    address asset;\\n    uint256 amount;\\n    address to;\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 userEModeCategory;\\n  }\\n\\n  struct ExecuteSetUserEModeParams {\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 categoryId;\\n  }\\n\\n  struct FinalizeTransferParams {\\n    address asset;\\n    address from;\\n    address to;\\n    uint256 amount;\\n    uint256 balanceFromBefore;\\n    uint256 balanceToBefore;\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 fromEModeCategory;\\n  }\\n\\n  struct FlashloanParams {\\n    address receiverAddress;\\n    address[] assets;\\n    uint256[] amounts;\\n    uint256[] interestRateModes;\\n    address onBehalfOf;\\n    bytes params;\\n    uint16 referralCode;\\n    uint256 flashLoanPremiumToProtocol;\\n    uint256 flashLoanPremiumTotal;\\n    uint256 maxStableRateBorrowSizePercent;\\n    uint256 reservesCount;\\n    address addressesProvider;\\n    uint8 userEModeCategory;\\n    bool isAuthorizedFlashBorrower;\\n  }\\n\\n  struct FlashloanSimpleParams {\\n    address receiverAddress;\\n    address asset;\\n    uint256 amount;\\n    bytes params;\\n    uint16 referralCode;\\n    uint256 flashLoanPremiumToProtocol;\\n    uint256 flashLoanPremiumTotal;\\n  }\\n\\n  struct FlashLoanRepaymentParams {\\n    uint256 amount;\\n    uint256 totalPremium;\\n    uint256 flashLoanPremiumToProtocol;\\n    address asset;\\n    address receiverAddress;\\n    uint16 referralCode;\\n  }\\n\\n  struct CalculateUserAccountDataParams {\\n    UserConfigurationMap userConfig;\\n    uint256 reservesCount;\\n    address user;\\n    address oracle;\\n    uint8 userEModeCategory;\\n  }\\n\\n  struct ValidateBorrowParams {\\n    ReserveCache reserveCache;\\n    UserConfigurationMap userConfig;\\n    address asset;\\n    address userAddress;\\n    uint256 amount;\\n    InterestRateMode interestRateMode;\\n    uint256 maxStableLoanPercent;\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 userEModeCategory;\\n    address priceOracleSentinel;\\n    bool isolationModeActive;\\n    address isolationModeCollateralAddress;\\n    uint256 isolationModeDebtCeiling;\\n  }\\n\\n  struct ValidateLiquidationCallParams {\\n    ReserveCache debtReserveCache;\\n    uint256 totalDebt;\\n    uint256 healthFactor;\\n    address priceOracleSentinel;\\n  }\\n\\n  struct CalculateInterestRatesParams {\\n    uint256 unbacked;\\n    uint256 liquidityAdded;\\n    uint256 liquidityTaken;\\n    uint256 totalStableDebt;\\n    uint256 totalVariableDebt;\\n    uint256 averageStableBorrowRate;\\n    uint256 reserveFactor;\\n    address reserve;\\n    address aToken;\\n  }\\n\\n  struct InitReserveParams {\\n    address asset;\\n    address aTokenAddress;\\n    address stableDebtAddress;\\n    address variableDebtAddress;\\n    address interestRateStrategyAddress;\\n    uint16 reservesCount;\\n    uint16 maxNumberReserves;\\n  }\\n}\\n\",\"keccak256\":\"0xe5c6db4edc44768b334b6f9271e1ae21c81d6ab0692c2740cce0c56c4ac433dd\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":405,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"SafeMath":{"abi":[],"devdoc":{"details":"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220801a649639a4662f1423a07f295f253ac939f4e1d9e14aa3cc81e609359b6e5264736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 BYTE PUSH5 0x9639A4662F EQ 0x23 LOG0 PUSH32 0x295F253AC939F4E1D9E14AA3CC81E609359B6E5264736F6C6343000807003300 ","sourceMap":"482:6300:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220801a649639a4662f1423a07f295f253ac939f4e1d9e14aa3cc81e609359b6e5264736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 BYTE PUSH5 0x9639A4662F EQ 0x23 LOG0 PUSH32 0x295F253AC939F4E1D9E14AA3CC81E609359B6E5264736F6C6343000807003300 ","sourceMap":"482:6300:4:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","div(uint256,uint256,string memory)":"infinite","mod(uint256,uint256)":"infinite","mod(uint256,uint256,string memory)":"infinite","mul(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite","sub(uint256,uint256,string memory)":"infinite","tryAdd(uint256,uint256)":"infinite","tryDiv(uint256,uint256)":"infinite","tryMod(uint256,uint256)":"infinite","tryMul(uint256,uint256)":"infinite","trySub(uint256,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Exchange.sol":{"Exchange":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"address","name":"tokenA","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountA","type":"uint256"},{"indexed":false,"internalType":"address","name":"tokenB","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountB","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"rate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"indexed":false,"internalType":"bool","name":"waiveFees","type":"bool"}],"name":"Cancel","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"address","name":"tokenA","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountA","type":"uint256"},{"indexed":false,"internalType":"address","name":"tokenB","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountB","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"rate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"indexed":false,"internalType":"bool","name":"waiveFees","type":"bool"}],"name":"Order","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"rate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"waiveFees","type":"bool"}],"indexed":false,"internalType":"struct Exchange._Order","name":"remainingOrder","type":"tuple"},{"indexed":false,"internalType":"uint256","name":"amountBought","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fillBuyRate","type":"uint256"},{"indexed":false,"internalType":"bool","name":"feesWaived","type":"bool"},{"indexed":false,"internalType":"uint256","name":"feesPaid","type":"uint256"}],"name":"fillBuyOrder","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"rate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"waiveFees","type":"bool"}],"indexed":false,"internalType":"struct Exchange._Order","name":"remainingOrder","type":"tuple"},{"indexed":false,"internalType":"uint256","name":"amountSold","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fillSellRate","type":"uint256"},{"indexed":false,"internalType":"bool","name":"feesWaived","type":"bool"},{"indexed":false,"internalType":"uint256","name":"feesPaid","type":"uint256"}],"name":"fillSellOrder","type":"event"},{"inputs":[],"name":"aETH","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_decimals","type":"uint256"}],"name":"addToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"address","name":"_token","type":"address"}],"name":"cancelOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenA","type":"address"},{"internalType":"uint256","name":"_amountA","type":"uint256"},{"internalType":"address","name":"_tokenB","type":"address"},{"internalType":"uint256","name":"_amountB","type":"uint256"},{"internalType":"uint256","name":"_rate","type":"uint256"},{"internalType":"bool","name":"_waiveFees","type":"bool"}],"name":"createLimitBuyOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenA","type":"address"},{"internalType":"uint256","name":"_amountA","type":"uint256"},{"internalType":"address","name":"_tokenB","type":"address"},{"internalType":"uint256","name":"_amountB","type":"uint256"},{"internalType":"uint256","name":"_rate","type":"uint256"},{"internalType":"bool","name":"_waiveFees","type":"bool"}],"name":"createLimitSellOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"ethToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"}],"name":"getFilledOrderLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"side","type":"uint256"},{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"getOrderFromArray","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"rate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"waiveFees","type":"bool"}],"internalType":"struct Exchange._Order","name":"","type":"tuple"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"_token","type":"address"}],"name":"getOrderLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"getTokenInfo","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"isVerifiedToken","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"_token","type":"address"}],"name":"orderExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"s_filledOrders","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountFilled","type":"uint256"},{"internalType":"uint256","name":"fillRate","type":"uint256"},{"internalType":"uint256","name":"originalRate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"feesWaived","type":"bool"},{"internalType":"uint256","name":"feesPaid","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"s_orderBook","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"rate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"waiveFees","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_orderId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokenList","outputs":[{"internalType":"address","name":"add","type":"address"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_421":{"entryPoint":null,"id":421,"parameterSlots":0,"returnSlots":0},"@_msgSender_522":{"entryPoint":251,"id":522,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_509":{"entryPoint":259,"id":509,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"6080604052670de0b6b3a76400006004556000600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507322404b0e2a7067068acdadd8f9d586f834cce2c5600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600a556001600b60006101000a81548160ff021916908315150217905550348015620000d457600080fd5b50620000f5620000e9620000fb60201b60201c565b6200010360201b60201c565b620001c7565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6138ab80620001d76000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638da5cb5b116100ad578063bd8098ec11610071578063bd8098ec1461030a578063c3364be414610345578063e947a69514610375578063f2fde38b146103a5578063f9242d9a146103c157610121565b80638da5cb5b1461026357806392f63d2e146102815780639c07ce261461029f5780639ead7222146102bd578063af81c5b9146102ee57610121565b8063609ae6b5116100f4578063609ae6b5146101d257806362c09cfa146102035780636f4e410b1461021f578063715018a61461023b5780637bf1a6271461024557610121565b80631027b219146101265780631347d60e14610156578063182cffeb146101725780631f69565f146101a2575b600080fd5b610140600480360381019061013b9190612c42565b6103fb565b60405161014d919061320f565b60405180910390f35b610170600480360381019061016b9190612e0f565b6104b1565b005b61018c60048036038101906101879190612ebc565b610f4a565b604051610199919061320f565b60405180910390f35b6101bc60048036038101906101b79190612c42565b6111fa565b6040516101c99190613335565b60405180910390f35b6101ec60048036038101906101e79190612d7c565b6112d0565b6040516101fa92919061330a565b60405180910390f35b61021d60048036038101906102189190612cef565b61159c565b005b61023960048036038101906102349190612cef565b611b79565b005b610243612155565b005b61024d612169565b60405161025a919061315d565b60405180910390f35b61026b61218f565b604051610278919061315d565b60405180910390f35b6102896121b8565b604051610296919061315d565b60405180910390f35b6102a76121de565b6040516102b49190613335565b60405180910390f35b6102d760048036038101906102d29190612e62565b6121e4565b6040516102e59291906131e6565b60405180910390f35b61030860048036038101906103039190612caf565b612238565b005b610324600480360381019061031f9190612d7c565b612336565b60405161033c9c9b9a99989796959493929190613350565b60405180910390f35b61035f600480360381019061035a9190612c6f565b61243a565b60405161036c9190613335565b60405180910390f35b61038f600480360381019061038a9190612dcf565b6124aa565b60405161039c9190613335565b60405180910390f35b6103bf60048036038101906103ba9190612c42565b61251a565b005b6103db60048036038101906103d69190612d7c565b61259e565b6040516103f29b9a9998979695949392919061340a565b60405180910390f35b600080600090505b6007805490508110156104a6578273ffffffffffffffffffffffffffffffffffffffff166007828154811061043b5761043a613693565b5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156104935760019150506104ac565b808061049e906135bd565b915050610403565b50600090505b919050565b8183826104bf838383610f4a565b6104fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f59061322a565b60405180910390fd5b83610508816103fb565b610547576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053e9061326a565b60405180910390fd5b6000600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600089600181111561059d5761059c613635565b5b815260200190815260200160002090506000818054905090506105be612812565b600080600090505b838110156107d8578a8582815481106105e2576105e1613693565b5b90600052602060002090600a02016000015414156107c5578091508481815481106106105761060f613693565b5b90600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff16600181111561065957610658613635565b5b600181111561066b5761066a613635565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff16151515158152505092506107d8565b80806107d0906135bd565b9150506105c6565b50600b60009054906101000a900460ff16156109f957816040015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610860576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610857906132aa565b60405180910390fd5b6000600181111561087457610873613635565b5b8b600181111561088757610886613635565b5b141561092e57600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346a8f820338460a001518560c0015160006040518563ffffffff1660e01b81526004016108f794939291906131a1565b600060405180830381600087803b15801561091157600080fd5b505af1158015610925573d6000803e3d6000fd5b505050506109f8565b60018081111561094157610940613635565b5b8b600181111561095457610953613635565b5b14156109f757600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346a8f820338460600151856080015160006040518563ffffffff1660e01b81526004016109c494939291906131a1565b600060405180830381600087803b1580156109de57600080fd5b505af11580156109f2573d6000803e3d6000fd5b505050505b5b5b60008190505b600184610a0c919061351c565b811015610c595784610a2860018361269c90919063ffffffff16565b81548110610a3957610a38613693565b5b90600052602060002090600a0201858281548110610a5a57610a59613693565b5b90600052602060002090600a0201600082015481600001556001820160009054906101000a900460ff168160010160006101000a81548160ff02191690836001811115610aaa57610aa9613635565b5b02179055506001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600382015481600301556004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600582015481600501556006820154816006015560078201548160070155600882015481600801556009820160009054906101000a900460ff168160090160006101000a81548160ff0219169083151502179055509050508080610c51906135bd565b9150506109ff565b5083610c6f6001856126b290919063ffffffff16565b81548110610c8057610c7f613693565b5b90600052602060002090600a02016000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600090556006820160009055600782016000905560088201600090556009820160006101000a81549060ff0219169055505083805480610d6f57610d6e613664565b5b60019003818190600052602060002090600a02016000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600090556006820160009055600782016000905560088201600090556009820160006101000a81549060ff02191690555050905583600860008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008d6001811115610eaa57610ea9613635565b5b8152602001908152602001600020908054610ec69291906128c2565b507fa1cc643491754200d3eca5769e524a0fd00f9b0862b18d0da7d6e7277a83dfda8a83602001518460400151856060015186608001518760a001518860c001518960e001518a61010001518b61012001518c6101400151604051610f359b9a9998979695949392919061340a565b60405180910390a15050505050505050505050565b600080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000856001811115610fa157610fa0613635565b5b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561119657838290600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff16600181111561102257611021613635565b5b600181111561103457611033613635565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff16151515158152505081526020019060010190610fcf565b50505050905060005b81518110156111ec57858282815181106111bc576111bb613693565b5b60200260200101516000015114156111d9576001925050506111f3565b80806111e4906135bd565b91505061119f565b5060009150505b9392505050565b600080600090505b6007805490508110156112c9578273ffffffffffffffffffffffffffffffffffffffff166007828154811061123a57611239613693565b5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156112b6576007818154811061129c5761129b613693565b5b9060005260206000209060020201600101549150506112cb565b80806112c1906135bd565b915050611202565b505b919050565b6112d8612812565b600080600090506000600860008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561151857838290600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff1660018111156113a4576113a3613635565b5b60018111156113b6576113b5613635565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff16151515158152505081526020019060010190611351565b505050509050611526612812565b5b815183101561158b578582848151811061154457611543613693565b5b60200260200101516000015114156115785781838151811061156957611568613693565b5b6020026020010151905061158b565b8280611583906135bd565b935050611527565b808394509450505050935093915050565b856115a6816103fb565b6115e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115dc9061326a565b60405180910390fd5b846115ef816103fb565b61162e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116259061326a565b60405180910390fd5b8461179a600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634fc121db338a6040518363ffffffff1660e01b815260040161168f929190613178565b60206040518083038186803b1580156116a757600080fd5b505afa1580156116bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116df9190612e8f565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7888aec8a336040518363ffffffff1660e01b815260040161173c929190613178565b60206040518083038186803b15801561175457600080fd5b505afa158015611768573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061178c9190612e8f565b6126b290919063ffffffff16565b10156117db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117d29061328a565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346a8f82033888860016040518563ffffffff1660e01b815260040161183d94939291906131a1565b600060405180830381600087803b15801561185757600080fd5b505af115801561186b573d6000803e3d6000fd5b50505050600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008060018111156118c3576118c2613635565b5b8152602001908152602001600020604051806101600160405280600a548152602001600060018111156118f9576118f8613635565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018a73ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018873ffffffffffffffffffffffffffffffffffffffff16815260200187815260200186815260200189815260200187815260200185151581525090806001815401808255809150506001900390600052602060002090600a02016000909190919091506000820151816000015560208201518160010160006101000a81548160ff021916908360018111156119d4576119d3613635565b5b021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816003015560a08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816005015560e08201518160060155610100820151816007015561012082015181600801556101408201518160090160006101000a81548160ff02191690831515021790555050507fcb2df66a1a7db52683240584eca4355946d7b80a59dcb7707aa8dd95463ed744600a546000338b8b8b8b8b8f8e8d604051611b4b9b9a9998979695949392919061340a565b60405180910390a1611b696001600a5461269c90919063ffffffff16565b600a819055505050505050505050565b85611b83816103fb565b611bc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bb99061326a565b60405180910390fd5b84611bcc816103fb565b611c0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c029061326a565b60405180910390fd5b86611d77600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634fc121db338c6040518363ffffffff1660e01b8152600401611c6c929190613178565b60206040518083038186803b158015611c8457600080fd5b505afa158015611c98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cbc9190612e8f565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7888aec8c336040518363ffffffff1660e01b8152600401611d19929190613178565b60206040518083038186803b158015611d3157600080fd5b505afa158015611d45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d699190612e8f565b6126b290919063ffffffff16565b1015611db8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611daf9061328a565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346a8f820338a8a60016040518563ffffffff1660e01b8152600401611e1a94939291906131a1565b600060405180830381600087803b158015611e3457600080fd5b505af1158015611e48573d6000803e3d6000fd5b50505050600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600180811115611ea057611e9f613635565b5b8152602001908152602001600020604051806101600160405280600a548152602001600180811115611ed557611ed4613635565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018a73ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018873ffffffffffffffffffffffffffffffffffffffff16815260200187815260200186815260200189815260200187815260200185151581525090806001815401808255809150506001900390600052602060002090600a02016000909190919091506000820151816000015560208201518160010160006101000a81548160ff02191690836001811115611fb057611faf613635565b5b021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816003015560a08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816005015560e08201518160060155610100820151816007015561012082015181600801556101408201518160090160006101000a81548160ff02191690831515021790555050507fcb2df66a1a7db52683240584eca4355946d7b80a59dcb7707aa8dd95463ed744600a546001338b8b8b8b8b8f8e8d6040516121279b9a9998979695949392919061340a565b60405180910390a16121456001600a5461269c90919063ffffffff16565b600a819055505050505050505050565b61215d6126c8565b6121676000612746565b565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5481565b600781815481106121f457600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b6122406126c8565b612249826103fb565b15612289576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612280906132ca565b60405180910390fd5b600760405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505050565b6009602052826000526040600020602052816000526040600020818154811061235e57600080fd5b90600052602060002090600b020160009250925050508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050154908060060154908060070154908060080154908060090160009054906101000a900460ff169080600a015490508c565b6000600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008360018111156124905761248f613635565b5b815260200190815260200160002080549050905092915050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000846001811115612500576124ff613635565b5b815260200190815260200160002080549050905092915050565b6125226126c8565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612592576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125899061324a565b60405180910390fd5b61259b81612746565b50565b600860205282600052604060002060205281600052604060002081815481106125c657600080fd5b90600052602060002090600a020160009250925050508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060154908060070154908060080154908060090160009054906101000a900460ff1690508b565b600081836126aa91906134c6565b905092915050565b600081836126c0919061351c565b905092915050565b6126d061280a565b73ffffffffffffffffffffffffffffffffffffffff166126ee61218f565b73ffffffffffffffffffffffffffffffffffffffff1614612744576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161273b906132ea565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b604051806101600160405280600081526020016000600181111561283957612838613635565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000151581525090565b82805482825590600052602060002090600a028101928215612ae457600052602060002091600a0282015b82811115612ae3578282600082015481600001556001820160009054906101000a900460ff168160010160006101000a81548160ff0219169083600181111561293957612938613635565b5b02179055506001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600382015481600301556004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600582015481600501556006820154816006015560078201548160070155600882015481600801556009820160009054906101000a900460ff168160090160006101000a81548160ff021916908315150217905550505091600a019190600a01906128ed565b5b509050612af19190612af5565b5090565b5b80821115612bd5576000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600090556006820160009055600782016000905560088201600090556009820160006101000a81549060ff021916905550600a01612af6565b5090565b600081359050612be881613820565b92915050565b600081359050612bfd81613837565b92915050565b600081359050612c128161384e565b92915050565b600081359050612c278161385e565b92915050565b600081519050612c3c8161385e565b92915050565b600060208284031215612c5857612c576136c2565b5b6000612c6684828501612bd9565b91505092915050565b60008060408385031215612c8657612c856136c2565b5b6000612c9485828601612bd9565b9250506020612ca585828601612c03565b9150509250929050565b60008060408385031215612cc657612cc56136c2565b5b6000612cd485828601612bd9565b9250506020612ce585828601612c18565b9150509250929050565b60008060008060008060c08789031215612d0c57612d0b6136c2565b5b6000612d1a89828a01612bd9565b9650506020612d2b89828a01612c18565b9550506040612d3c89828a01612bd9565b9450506060612d4d89828a01612c18565b9350506080612d5e89828a01612c18565b92505060a0612d6f89828a01612bee565b9150509295509295509295565b600080600060608486031215612d9557612d946136c2565b5b6000612da386828701612bd9565b9350506020612db486828701612c18565b9250506040612dc586828701612c18565b9150509250925092565b60008060408385031215612de657612de56136c2565b5b6000612df485828601612c03565b9250506020612e0585828601612bd9565b9150509250929050565b600080600060608486031215612e2857612e276136c2565b5b6000612e3686828701612c03565b9350506020612e4786828701612c18565b9250506040612e5886828701612bd9565b9150509250925092565b600060208284031215612e7857612e776136c2565b5b6000612e8684828501612c18565b91505092915050565b600060208284031215612ea557612ea46136c2565b5b6000612eb384828501612c2d565b91505092915050565b600080600060608486031215612ed557612ed46136c2565b5b6000612ee386828701612c18565b9350506020612ef486828701612c03565b9250506040612f0586828701612bd9565b9150509250925092565b612f1881613550565b82525050565b612f2781613550565b82525050565b612f3681613562565b82525050565b612f4581613562565b82525050565b612f54816135ab565b82525050565b612f63816135ab565b82525050565b6000612f766010836134b5565b9150612f81826136c7565b602082019050919050565b6000612f996026836134b5565b9150612fa4826136f0565b604082019050919050565b6000612fbc6018836134b5565b9150612fc78261373f565b602082019050919050565b6000612fdf6012836134b5565b9150612fea82613768565b602082019050919050565b60006130026009836134b5565b915061300d82613791565b602082019050919050565b60006130256016836134b5565b9150613030826137ba565b602082019050919050565b60006130486020836134b5565b9150613053826137e3565b602082019050919050565b61016082016000820151613075600085018261313f565b5060208201516130886020850182612f4b565b50604082015161309b6040850182612f0f565b5060608201516130ae6060850182612f0f565b5060808201516130c1608085018261313f565b5060a08201516130d460a0850182612f0f565b5060c08201516130e760c085018261313f565b5060e08201516130fa60e085018261313f565b5061010082015161310f61010085018261313f565b5061012082015161312461012085018261313f565b50610140820151613139610140850182612f2d565b50505050565b613148816135a1565b82525050565b613157816135a1565b82525050565b60006020820190506131726000830184612f1e565b92915050565b600060408201905061318d6000830185612f1e565b61319a6020830184612f1e565b9392505050565b60006080820190506131b66000830187612f1e565b6131c36020830186612f1e565b6131d0604083018561314e565b6131dd6060830184612f3c565b95945050505050565b60006040820190506131fb6000830185612f1e565b613208602083018461314e565b9392505050565b60006020820190506132246000830184612f3c565b92915050565b6000602082019050818103600083015261324381612f69565b9050919050565b6000602082019050818103600083015261326381612f8c565b9050919050565b6000602082019050818103600083015261328381612faf565b9050919050565b600060208201905081810360008301526132a381612fd2565b9050919050565b600060208201905081810360008301526132c381612ff5565b9050919050565b600060208201905081810360008301526132e381613018565b9050919050565b600060208201905081810360008301526133038161303b565b9050919050565b600061018082019050613320600083018561305e565b61332e61016083018461314e565b9392505050565b600060208201905061334a600083018461314e565b92915050565b600061018082019050613366600083018f61314e565b613373602083018e612f5a565b613380604083018d612f1e565b61338d606083018c612f1e565b61339a608083018b612f1e565b6133a760a083018a61314e565b6133b460c083018961314e565b6133c160e083018861314e565b6133cf61010083018761314e565b6133dd61012083018661314e565b6133eb610140830185612f3c565b6133f961016083018461314e565b9d9c50505050505050505050505050565b600061016082019050613420600083018e61314e565b61342d602083018d612f5a565b61343a604083018c612f1e565b613447606083018b612f1e565b613454608083018a61314e565b61346160a0830189612f1e565b61346e60c083018861314e565b61347b60e083018761314e565b61348961010083018661314e565b61349761012083018561314e565b6134a5610140830184612f3c565b9c9b505050505050505050505050565b600082825260208201905092915050565b60006134d1826135a1565b91506134dc836135a1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561351157613510613606565b5b828201905092915050565b6000613527826135a1565b9150613532836135a1565b92508282101561354557613544613606565b5b828203905092915050565b600061355b82613581565b9050919050565b60008115159050919050565b600081905061357c8261380c565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006135b68261356e565b9050919050565b60006135c8826135a1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156135fb576135fa613606565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b7f496e76616c6964204f7264657220494400000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f546f6b656e20756e617661696c61626c6520696e204445580000000000000000600082015250565b7f496e73756666696369656e742046756e64730000000000000000000000000000600082015250565b7f4e6f74204f776e65720000000000000000000000000000000000000000000000600082015250565b7f546f6b656e20616c726561647920766572696669656400000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6002811061381d5761381c613635565b5b50565b61382981613550565b811461383457600080fd5b50565b61384081613562565b811461384b57600080fd5b50565b6002811061385b57600080fd5b50565b613867816135a1565b811461387257600080fd5b5056fea264697066735822122041c26cfe2b8d6edf8606f17274e34a80911e4e4e01060ba2920418faa686f48b64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x4 SSTORE PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x22404B0E2A7067068ACDADD8F9D586F834CCE2C5 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xA SSTORE PUSH1 0x1 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0xD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0xF5 PUSH3 0xE9 PUSH3 0xFB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x103 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1C7 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x38AB DUP1 PUSH3 0x1D7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xBD8098EC GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBD8098EC EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0xC3364BE4 EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xE947A695 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0xF9242D9A EQ PUSH2 0x3C1 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x92F63D2E EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x9C07CE26 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x9EAD7222 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xAF81C5B9 EQ PUSH2 0x2EE JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x609AE6B5 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x609AE6B5 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x62C09CFA EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x6F4E410B EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x7BF1A627 EQ PUSH2 0x245 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x1027B219 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x1347D60E EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x182CFFEB EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x1F69565F EQ PUSH2 0x1A2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x2C42 JUMP JUMPDEST PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x320F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x170 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x2E0F JUMP JUMPDEST PUSH2 0x4B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x187 SWAP2 SWAP1 PUSH2 0x2EBC JUMP JUMPDEST PUSH2 0xF4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x320F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x2C42 JUMP JUMPDEST PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x3335 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x2D7C JUMP JUMPDEST PUSH2 0x12D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP3 SWAP2 SWAP1 PUSH2 0x330A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x2CEF JUMP JUMPDEST PUSH2 0x159C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x2CEF JUMP JUMPDEST PUSH2 0x1B79 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x243 PUSH2 0x2155 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24D PUSH2 0x2169 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x315D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26B PUSH2 0x218F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x315D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x289 PUSH2 0x21B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x315D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH2 0x21DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x3335 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x2E62 JUMP JUMPDEST PUSH2 0x21E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP3 SWAP2 SWAP1 PUSH2 0x31E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x308 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x2CAF JUMP JUMPDEST PUSH2 0x2238 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x324 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x2D7C JUMP JUMPDEST PUSH2 0x2336 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33C SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x2C6F JUMP JUMPDEST PUSH2 0x243A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x3335 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x2DCF JUMP JUMPDEST PUSH2 0x24AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x3335 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x2C42 JUMP JUMPDEST PUSH2 0x251A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x2D7C JUMP JUMPDEST PUSH2 0x259E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F2 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x340A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x4A6 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x43B JUMPI PUSH2 0x43A PUSH2 0x3693 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x493 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x4AC JUMP JUMPDEST DUP1 DUP1 PUSH2 0x49E SWAP1 PUSH2 0x35BD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x403 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 DUP3 PUSH2 0x4BF DUP4 DUP4 DUP4 PUSH2 0xF4A JUMP JUMPDEST PUSH2 0x4FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F5 SWAP1 PUSH2 0x322A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH2 0x508 DUP2 PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x547 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53E SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x59D JUMPI PUSH2 0x59C PUSH2 0x3635 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH2 0x5BE PUSH2 0x2812 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7D8 JUMPI DUP11 DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5E2 JUMPI PUSH2 0x5E1 PUSH2 0x3693 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x7C5 JUMPI DUP1 SWAP2 POP DUP5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x610 JUMPI PUSH2 0x60F PUSH2 0x3693 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x659 JUMPI PUSH2 0x658 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x66B JUMPI PUSH2 0x66A PUSH2 0x3635 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP3 POP PUSH2 0x7D8 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x7D0 SWAP1 PUSH2 0x35BD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5C6 JUMP JUMPDEST POP PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x9F9 JUMPI DUP2 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x860 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x857 SWAP1 PUSH2 0x32AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x874 JUMPI PUSH2 0x873 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST DUP12 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x887 JUMPI PUSH2 0x886 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x92E JUMPI PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x46A8F820 CALLER DUP5 PUSH1 0xA0 ADD MLOAD DUP6 PUSH1 0xC0 ADD MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x31A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x911 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x925 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x9F8 JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x941 JUMPI PUSH2 0x940 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST DUP12 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x954 JUMPI PUSH2 0x953 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x9F7 JUMPI PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x46A8F820 CALLER DUP5 PUSH1 0x60 ADD MLOAD DUP6 PUSH1 0x80 ADD MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x31A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP JUMPDEST PUSH1 0x1 DUP5 PUSH2 0xA0C SWAP2 SWAP1 PUSH2 0x351C JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xC59 JUMPI DUP5 PUSH2 0xA28 PUSH1 0x1 DUP4 PUSH2 0x269C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xA39 JUMPI PUSH2 0xA38 PUSH2 0x3693 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA5A JUMPI PUSH2 0xA59 PUSH2 0x3693 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xAAA JUMPI PUSH2 0xAA9 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP3 ADD SLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 DUP3 ADD SLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0x6 DUP3 ADD SLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0x7 DUP3 ADD SLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH1 0x8 DUP3 ADD SLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 DUP1 PUSH2 0xC51 SWAP1 PUSH2 0x35BD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9FF JUMP JUMPDEST POP DUP4 PUSH2 0xC6F PUSH1 0x1 DUP6 PUSH2 0x26B2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0x3693 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP DUP4 DUP1 SLOAD DUP1 PUSH2 0xD6F JUMPI PUSH2 0xD6E PUSH2 0x3664 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP SWAP1 SSTORE DUP4 PUSH1 0x8 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xEAA JUMPI PUSH2 0xEA9 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 SLOAD PUSH2 0xEC6 SWAP3 SWAP2 SWAP1 PUSH2 0x28C2 JUMP JUMPDEST POP PUSH32 0xA1CC643491754200D3ECA5769E524A0FD00F9B0862B18D0DA7D6E7277A83DFDA DUP11 DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD DUP7 PUSH1 0x80 ADD MLOAD DUP8 PUSH1 0xA0 ADD MLOAD DUP9 PUSH1 0xC0 ADD MLOAD DUP10 PUSH1 0xE0 ADD MLOAD DUP11 PUSH2 0x100 ADD MLOAD DUP12 PUSH2 0x120 ADD MLOAD DUP13 PUSH2 0x140 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xF35 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x340A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xFA1 JUMPI PUSH2 0xFA0 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1196 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1022 JUMPI PUSH2 0x1021 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1034 JUMPI PUSH2 0x1033 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xFCF JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x11EC JUMPI DUP6 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x11BC JUMPI PUSH2 0x11BB PUSH2 0x3693 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x11D9 JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x11F3 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x11E4 SWAP1 PUSH2 0x35BD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x119F JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x12C9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x123A JUMPI PUSH2 0x1239 PUSH2 0x3693 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x12B6 JUMPI PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x129C JUMPI PUSH2 0x129B PUSH2 0x3693 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP POP PUSH2 0x12CB JUMP JUMPDEST DUP1 DUP1 PUSH2 0x12C1 SWAP1 PUSH2 0x35BD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1202 JUMP JUMPDEST POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12D8 PUSH2 0x2812 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1518 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x13A4 JUMPI PUSH2 0x13A3 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x13B6 JUMPI PUSH2 0x13B5 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1351 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH2 0x1526 PUSH2 0x2812 JUMP JUMPDEST JUMPDEST DUP2 MLOAD DUP4 LT ISZERO PUSH2 0x158B JUMPI DUP6 DUP3 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1544 JUMPI PUSH2 0x1543 PUSH2 0x3693 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x1578 JUMPI DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1569 JUMPI PUSH2 0x1568 PUSH2 0x3693 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x158B JUMP JUMPDEST DUP3 DUP1 PUSH2 0x1583 SWAP1 PUSH2 0x35BD JUMP JUMPDEST SWAP4 POP POP PUSH2 0x1527 JUMP JUMPDEST DUP1 DUP4 SWAP5 POP SWAP5 POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST DUP6 PUSH2 0x15A6 DUP2 PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x15E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15DC SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0x15EF DUP2 PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x162E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1625 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0x179A PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4FC121DB CALLER DUP11 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x168F SWAP3 SWAP2 SWAP1 PUSH2 0x3178 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16DF SWAP2 SWAP1 PUSH2 0x2E8F JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF7888AEC DUP11 CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x173C SWAP3 SWAP2 SWAP1 PUSH2 0x3178 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1754 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1768 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x178C SWAP2 SWAP1 PUSH2 0x2E8F JUMP JUMPDEST PUSH2 0x26B2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x17DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D2 SWAP1 PUSH2 0x328A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x46A8F820 CALLER DUP9 DUP9 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x183D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x31A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1857 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x186B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x8 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x18C3 JUMPI PUSH2 0x18C2 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x18F9 JUMPI PUSH2 0x18F8 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x19D4 JUMPI PUSH2 0x19D3 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH32 0xCB2DF66A1A7DB52683240584ECA4355946D7B80A59DCB7707AA8DD95463ED744 PUSH1 0xA SLOAD PUSH1 0x0 CALLER DUP12 DUP12 DUP12 DUP12 DUP12 DUP16 DUP15 DUP14 PUSH1 0x40 MLOAD PUSH2 0x1B4B SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x340A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1B69 PUSH1 0x1 PUSH1 0xA SLOAD PUSH2 0x269C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP6 PUSH2 0x1B83 DUP2 PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x1BC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BB9 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0x1BCC DUP2 PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x1C0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C02 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH2 0x1D77 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4FC121DB CALLER DUP13 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C6C SWAP3 SWAP2 SWAP1 PUSH2 0x3178 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C98 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CBC SWAP2 SWAP1 PUSH2 0x2E8F JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF7888AEC DUP13 CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D19 SWAP3 SWAP2 SWAP1 PUSH2 0x3178 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D69 SWAP2 SWAP1 PUSH2 0x2E8F JUMP JUMPDEST PUSH2 0x26B2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x1DB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DAF SWAP1 PUSH2 0x328A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x46A8F820 CALLER DUP11 DUP11 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E1A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x31A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x8 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x1EA0 JUMPI PUSH2 0x1E9F PUSH2 0x3635 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x1ED5 JUMPI PUSH2 0x1ED4 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1FB0 JUMPI PUSH2 0x1FAF PUSH2 0x3635 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH32 0xCB2DF66A1A7DB52683240584ECA4355946D7B80A59DCB7707AA8DD95463ED744 PUSH1 0xA SLOAD PUSH1 0x1 CALLER DUP12 DUP12 DUP12 DUP12 DUP12 DUP16 DUP15 DUP14 PUSH1 0x40 MLOAD PUSH2 0x2127 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x340A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x2145 PUSH1 0x1 PUSH1 0xA SLOAD PUSH2 0x269C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x215D PUSH2 0x26C8 JUMP JUMPDEST PUSH2 0x2167 PUSH1 0x0 PUSH2 0x2746 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x21F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x2240 PUSH2 0x26C8 JUMP JUMPDEST PUSH2 0x2249 DUP3 PUSH2 0x3FB JUMP JUMPDEST ISZERO PUSH2 0x2289 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2280 SWAP1 PUSH2 0x32CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x235E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xB MUL ADD PUSH1 0x0 SWAP3 POP SWAP3 POP POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0xA ADD SLOAD SWAP1 POP DUP13 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2490 JUMPI PUSH2 0x248F PUSH2 0x3635 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2500 JUMPI PUSH2 0x24FF PUSH2 0x3635 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2522 PUSH2 0x26C8 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2592 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2589 SWAP1 PUSH2 0x324A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x259B DUP2 PUSH2 0x2746 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x25C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 SWAP3 POP SWAP3 POP POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP12 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x26AA SWAP2 SWAP1 PUSH2 0x34C6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x26C0 SWAP2 SWAP1 PUSH2 0x351C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26D0 PUSH2 0x280A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x26EE PUSH2 0x218F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2744 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x273B SWAP1 PUSH2 0x32EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2839 JUMPI PUSH2 0x2838 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2AE4 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0xA MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2AE3 JUMPI DUP3 DUP3 PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2939 JUMPI PUSH2 0x2938 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP3 ADD SLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 DUP3 ADD SLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0x6 DUP3 ADD SLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0x7 DUP3 ADD SLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH1 0x8 DUP3 ADD SLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP SWAP2 PUSH1 0xA ADD SWAP2 SWAP1 PUSH1 0xA ADD SWAP1 PUSH2 0x28ED JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x2AF1 SWAP2 SWAP1 PUSH2 0x2AF5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2BD5 JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP PUSH1 0xA ADD PUSH2 0x2AF6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2BE8 DUP2 PUSH2 0x3820 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2BFD DUP2 PUSH2 0x3837 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C12 DUP2 PUSH2 0x384E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C27 DUP2 PUSH2 0x385E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C3C DUP2 PUSH2 0x385E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C58 JUMPI PUSH2 0x2C57 PUSH2 0x36C2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C66 DUP5 DUP3 DUP6 ADD PUSH2 0x2BD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C86 JUMPI PUSH2 0x2C85 PUSH2 0x36C2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C94 DUP6 DUP3 DUP7 ADD PUSH2 0x2BD9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2CA5 DUP6 DUP3 DUP7 ADD PUSH2 0x2C03 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CC6 JUMPI PUSH2 0x2CC5 PUSH2 0x36C2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CD4 DUP6 DUP3 DUP7 ADD PUSH2 0x2BD9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2CE5 DUP6 DUP3 DUP7 ADD PUSH2 0x2C18 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2D0C JUMPI PUSH2 0x2D0B PUSH2 0x36C2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D1A DUP10 DUP3 DUP11 ADD PUSH2 0x2BD9 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x2D2B DUP10 DUP3 DUP11 ADD PUSH2 0x2C18 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x2D3C DUP10 DUP3 DUP11 ADD PUSH2 0x2BD9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x2D4D DUP10 DUP3 DUP11 ADD PUSH2 0x2C18 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x2D5E DUP10 DUP3 DUP11 ADD PUSH2 0x2C18 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x2D6F DUP10 DUP3 DUP11 ADD PUSH2 0x2BEE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2D95 JUMPI PUSH2 0x2D94 PUSH2 0x36C2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DA3 DUP7 DUP3 DUP8 ADD PUSH2 0x2BD9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2DB4 DUP7 DUP3 DUP8 ADD PUSH2 0x2C18 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2DC5 DUP7 DUP3 DUP8 ADD PUSH2 0x2C18 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2DE6 JUMPI PUSH2 0x2DE5 PUSH2 0x36C2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DF4 DUP6 DUP3 DUP7 ADD PUSH2 0x2C03 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2E05 DUP6 DUP3 DUP7 ADD PUSH2 0x2BD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2E28 JUMPI PUSH2 0x2E27 PUSH2 0x36C2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E36 DUP7 DUP3 DUP8 ADD PUSH2 0x2C03 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2E47 DUP7 DUP3 DUP8 ADD PUSH2 0x2C18 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2E58 DUP7 DUP3 DUP8 ADD PUSH2 0x2BD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E78 JUMPI PUSH2 0x2E77 PUSH2 0x36C2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E86 DUP5 DUP3 DUP6 ADD PUSH2 0x2C18 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EA5 JUMPI PUSH2 0x2EA4 PUSH2 0x36C2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2EB3 DUP5 DUP3 DUP6 ADD PUSH2 0x2C2D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2ED5 JUMPI PUSH2 0x2ED4 PUSH2 0x36C2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2EE3 DUP7 DUP3 DUP8 ADD PUSH2 0x2C18 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2EF4 DUP7 DUP3 DUP8 ADD PUSH2 0x2C03 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2F05 DUP7 DUP3 DUP8 ADD PUSH2 0x2BD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2F18 DUP2 PUSH2 0x3550 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2F27 DUP2 PUSH2 0x3550 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2F36 DUP2 PUSH2 0x3562 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2F45 DUP2 PUSH2 0x3562 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2F54 DUP2 PUSH2 0x35AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2F63 DUP2 PUSH2 0x35AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F76 PUSH1 0x10 DUP4 PUSH2 0x34B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F81 DUP3 PUSH2 0x36C7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F99 PUSH1 0x26 DUP4 PUSH2 0x34B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FA4 DUP3 PUSH2 0x36F0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FBC PUSH1 0x18 DUP4 PUSH2 0x34B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FC7 DUP3 PUSH2 0x373F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FDF PUSH1 0x12 DUP4 PUSH2 0x34B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FEA DUP3 PUSH2 0x3768 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3002 PUSH1 0x9 DUP4 PUSH2 0x34B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x300D DUP3 PUSH2 0x3791 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3025 PUSH1 0x16 DUP4 PUSH2 0x34B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3030 DUP3 PUSH2 0x37BA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3048 PUSH1 0x20 DUP4 PUSH2 0x34B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3053 DUP3 PUSH2 0x37E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x160 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3075 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x313F JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3088 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2F4B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x309B PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2F0F JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x30AE PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2F0F JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x30C1 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x313F JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x30D4 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x2F0F JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x30E7 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x313F JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x30FA PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x313F JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x310F PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x313F JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x3124 PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x313F JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x3139 PUSH2 0x140 DUP6 ADD DUP3 PUSH2 0x2F2D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3148 DUP2 PUSH2 0x35A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3157 DUP2 PUSH2 0x35A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3172 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x318D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2F1E JUMP JUMPDEST PUSH2 0x319A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2F1E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x31B6 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2F1E JUMP JUMPDEST PUSH2 0x31C3 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2F1E JUMP JUMPDEST PUSH2 0x31D0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x31DD PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2F3C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x31FB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2F1E JUMP JUMPDEST PUSH2 0x3208 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x314E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3224 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3243 DUP2 PUSH2 0x2F69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3263 DUP2 PUSH2 0x2F8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3283 DUP2 PUSH2 0x2FAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32A3 DUP2 PUSH2 0x2FD2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32C3 DUP2 PUSH2 0x2FF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32E3 DUP2 PUSH2 0x3018 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3303 DUP2 PUSH2 0x303B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 ADD SWAP1 POP PUSH2 0x3320 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x305E JUMP JUMPDEST PUSH2 0x332E PUSH2 0x160 DUP4 ADD DUP5 PUSH2 0x314E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x334A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x314E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 ADD SWAP1 POP PUSH2 0x3366 PUSH1 0x0 DUP4 ADD DUP16 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x3373 PUSH1 0x20 DUP4 ADD DUP15 PUSH2 0x2F5A JUMP JUMPDEST PUSH2 0x3380 PUSH1 0x40 DUP4 ADD DUP14 PUSH2 0x2F1E JUMP JUMPDEST PUSH2 0x338D PUSH1 0x60 DUP4 ADD DUP13 PUSH2 0x2F1E JUMP JUMPDEST PUSH2 0x339A PUSH1 0x80 DUP4 ADD DUP12 PUSH2 0x2F1E JUMP JUMPDEST PUSH2 0x33A7 PUSH1 0xA0 DUP4 ADD DUP11 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x33B4 PUSH1 0xC0 DUP4 ADD DUP10 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x33C1 PUSH1 0xE0 DUP4 ADD DUP9 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x33CF PUSH2 0x100 DUP4 ADD DUP8 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x33DD PUSH2 0x120 DUP4 ADD DUP7 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x33EB PUSH2 0x140 DUP4 ADD DUP6 PUSH2 0x2F3C JUMP JUMPDEST PUSH2 0x33F9 PUSH2 0x160 DUP4 ADD DUP5 PUSH2 0x314E JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x3420 PUSH1 0x0 DUP4 ADD DUP15 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x342D PUSH1 0x20 DUP4 ADD DUP14 PUSH2 0x2F5A JUMP JUMPDEST PUSH2 0x343A PUSH1 0x40 DUP4 ADD DUP13 PUSH2 0x2F1E JUMP JUMPDEST PUSH2 0x3447 PUSH1 0x60 DUP4 ADD DUP12 PUSH2 0x2F1E JUMP JUMPDEST PUSH2 0x3454 PUSH1 0x80 DUP4 ADD DUP11 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x3461 PUSH1 0xA0 DUP4 ADD DUP10 PUSH2 0x2F1E JUMP JUMPDEST PUSH2 0x346E PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x347B PUSH1 0xE0 DUP4 ADD DUP8 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x3489 PUSH2 0x100 DUP4 ADD DUP7 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x3497 PUSH2 0x120 DUP4 ADD DUP6 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x34A5 PUSH2 0x140 DUP4 ADD DUP5 PUSH2 0x2F3C JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34D1 DUP3 PUSH2 0x35A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x34DC DUP4 PUSH2 0x35A1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x3511 JUMPI PUSH2 0x3510 PUSH2 0x3606 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3527 DUP3 PUSH2 0x35A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x3532 DUP4 PUSH2 0x35A1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x3545 JUMPI PUSH2 0x3544 PUSH2 0x3606 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x355B DUP3 PUSH2 0x3581 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x357C DUP3 PUSH2 0x380C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35B6 DUP3 PUSH2 0x356E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35C8 DUP3 PUSH2 0x35A1 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x35FB JUMPI PUSH2 0x35FA PUSH2 0x3606 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x496E76616C6964204F7264657220494400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E20756E617661696C61626C6520696E204445580000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742046756E64730000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F74204F776E65720000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E20616C726561647920766572696669656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x381D JUMPI PUSH2 0x381C PUSH2 0x3635 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x3829 DUP2 PUSH2 0x3550 JUMP JUMPDEST DUP2 EQ PUSH2 0x3834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3840 DUP2 PUSH2 0x3562 JUMP JUMPDEST DUP2 EQ PUSH2 0x384B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x385B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3867 DUP2 PUSH2 0x35A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x3872 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0xC2 PUSH13 0xFE2B8D6EDF8606F17274E34A80 SWAP2 0x1E 0x4E 0x4E ADD MOD SIGNEXTEND LOG2 SWAP3 DIV XOR STATICCALL 0xA6 DUP7 DELEGATECALL DUP12 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"387:21459:5:-:0;;;596:8;577:27;;645:1;611:36;;;;;;;;;;;;;;;;;;;;684:42;654:73;;;;;;;;;;;;;;;;;;;;1079:1;1052:28;;1113:4;1087:30;;;;;;;;;;;;;;;;;;;;387:21459;;;;;;;;;;936:32:2;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;387:21459:5;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2433:187:2:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;387:21459:5:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_452":{"entryPoint":9928,"id":452,"parameterSlots":0,"returnSlots":0},"@_msgSender_522":{"entryPoint":10250,"id":522,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_509":{"entryPoint":10054,"id":509,"parameterSlots":1,"returnSlots":0},"@aETH_882":{"entryPoint":8632,"id":882,"parameterSlots":0,"returnSlots":0},"@addToken_2406":{"entryPoint":8760,"id":2406,"parameterSlots":2,"returnSlots":0},"@add_708":{"entryPoint":9884,"id":708,"parameterSlots":2,"returnSlots":1},"@cancelOrder_1450":{"entryPoint":1201,"id":1450,"parameterSlots":3,"returnSlots":0},"@createLimitBuyOrder_1151":{"entryPoint":5532,"id":1151,"parameterSlots":6,"returnSlots":0},"@createLimitSellOrder_1253":{"entryPoint":7033,"id":1253,"parameterSlots":6,"returnSlots":0},"@ethToken_876":{"entryPoint":8553,"id":876,"parameterSlots":0,"returnSlots":0},"@getFilledOrderLength_2263":{"entryPoint":9274,"id":2263,"parameterSlots":2,"returnSlots":1},"@getOrderFromArray_2327":{"entryPoint":4816,"id":2327,"parameterSlots":3,"returnSlots":2},"@getOrderLength_2242":{"entryPoint":9386,"id":2242,"parameterSlots":2,"returnSlots":1},"@getTokenInfo_2472":{"entryPoint":4602,"id":2472,"parameterSlots":1,"returnSlots":1},"@isVerifiedToken_2438":{"entryPoint":1019,"id":2438,"parameterSlots":1,"returnSlots":1},"@orderExists_2379":{"entryPoint":3914,"id":2379,"parameterSlots":3,"returnSlots":1},"@owner_438":{"entryPoint":8591,"id":438,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_466":{"entryPoint":8533,"id":466,"parameterSlots":0,"returnSlots":0},"@s_filledOrders_902":{"entryPoint":9014,"id":902,"parameterSlots":0,"returnSlots":0},"@s_orderBook_894":{"entryPoint":9630,"id":894,"parameterSlots":0,"returnSlots":0},"@s_orderId_905":{"entryPoint":8670,"id":905,"parameterSlots":0,"returnSlots":0},"@sub_723":{"entryPoint":9906,"id":723,"parameterSlots":2,"returnSlots":1},"@tokenList_886":{"entryPoint":8676,"id":886,"parameterSlots":0,"returnSlots":0},"@transferOwnership_489":{"entryPoint":9498,"id":489,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":11225,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":11246,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_enum$_Side_$971":{"entryPoint":11267,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":11288,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":11309,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":11330,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_enum$_Side_$971":{"entryPoint":11375,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":11439,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_uint256t_bool":{"entryPoint":11503,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":11644,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_enum$_Side_$971t_address":{"entryPoint":11727,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_enum$_Side_$971t_uint256t_address":{"entryPoint":11791,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":11874,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":11919,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_enum$_Side_$971t_address":{"entryPoint":11964,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address":{"entryPoint":12047,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":12062,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool":{"entryPoint":12077,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":12092,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_Side_$971_to_t_uint8":{"entryPoint":12107,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_Side_$971_to_t_uint8_fromStack":{"entryPoint":12122,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2_to_t_string_memory_ptr_fromStack":{"entryPoint":12137,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":12172,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3_to_t_string_memory_ptr_fromStack":{"entryPoint":12207,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092_to_t_string_memory_ptr_fromStack":{"entryPoint":12242,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4_to_t_string_memory_ptr_fromStack":{"entryPoint":12277,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430_to_t_string_memory_ptr_fromStack":{"entryPoint":12312,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":12347,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$__Order_$942_memory_ptr_to_t_struct$__Order_$942_memory_ptr_fromStack":{"entryPoint":12382,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":12607,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":12622,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":12637,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":12664,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_bool__fromStack_reversed":{"entryPoint":12705,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":12774,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":12815,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12842,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12874,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12906,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12938,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12970,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13002,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13034,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$__Order_$942_memory_ptr_t_uint256__to_t_struct$__Order_$942_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":13066,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":13109,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_enum$_Side_$971_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint8_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed":{"entryPoint":13136,"id":null,"parameterSlots":13,"returnSlots":1},"abi_encode_tuple_t_uint256_t_enum$_Side_$971_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint8_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed":{"entryPoint":13322,"id":null,"parameterSlots":12,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":13493,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":13510,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":13596,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":13648,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":13666,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_Side_$971":{"entryPoint":13678,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":13697,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":13729,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_Side_$971_to_t_uint8":{"entryPoint":13739,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":13757,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":13830,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":13877,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":13924,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":13971,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":14018,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2":{"entryPoint":14023,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":14064,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3":{"entryPoint":14143,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092":{"entryPoint":14184,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4":{"entryPoint":14225,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430":{"entryPoint":14266,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":14307,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_Side_$971":{"entryPoint":14348,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":14368,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":14391,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_enum$_Side_$971":{"entryPoint":14414,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":14430,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:24634:12","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:12","statements":[{"nodeType":"YulAssignment","src":"69:29:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:12"},"nodeType":"YulFunctionCall","src":"78:20:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:12"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:12"},"nodeType":"YulFunctionCall","src":"107:33:12"},"nodeType":"YulExpressionStatement","src":"107:33:12"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:12","type":""}],"src":"7:139:12"},{"body":{"nodeType":"YulBlock","src":"201:84:12","statements":[{"nodeType":"YulAssignment","src":"211:29:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"233:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"220:12:12"},"nodeType":"YulFunctionCall","src":"220:20:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"211:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"273:5:12"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"249:23:12"},"nodeType":"YulFunctionCall","src":"249:30:12"},"nodeType":"YulExpressionStatement","src":"249:30:12"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"179:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"187:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"195:5:12","type":""}],"src":"152:133:12"},{"body":{"nodeType":"YulBlock","src":"351:95:12","statements":[{"nodeType":"YulAssignment","src":"361:29:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"383:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"370:12:12"},"nodeType":"YulFunctionCall","src":"370:20:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"361:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"434:5:12"}],"functionName":{"name":"validator_revert_t_enum$_Side_$971","nodeType":"YulIdentifier","src":"399:34:12"},"nodeType":"YulFunctionCall","src":"399:41:12"},"nodeType":"YulExpressionStatement","src":"399:41:12"}]},"name":"abi_decode_t_enum$_Side_$971","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"329:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"337:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"345:5:12","type":""}],"src":"291:155:12"},{"body":{"nodeType":"YulBlock","src":"504:87:12","statements":[{"nodeType":"YulAssignment","src":"514:29:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"536:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"523:12:12"},"nodeType":"YulFunctionCall","src":"523:20:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"514:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"579:5:12"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"552:26:12"},"nodeType":"YulFunctionCall","src":"552:33:12"},"nodeType":"YulExpressionStatement","src":"552:33:12"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"482:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"490:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"498:5:12","type":""}],"src":"452:139:12"},{"body":{"nodeType":"YulBlock","src":"660:80:12","statements":[{"nodeType":"YulAssignment","src":"670:22:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"685:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"679:5:12"},"nodeType":"YulFunctionCall","src":"679:13:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"670:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"728:5:12"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"701:26:12"},"nodeType":"YulFunctionCall","src":"701:33:12"},"nodeType":"YulExpressionStatement","src":"701:33:12"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"638:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"646:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"654:5:12","type":""}],"src":"597:143:12"},{"body":{"nodeType":"YulBlock","src":"812:263:12","statements":[{"body":{"nodeType":"YulBlock","src":"858:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"860:77:12"},"nodeType":"YulFunctionCall","src":"860:79:12"},"nodeType":"YulExpressionStatement","src":"860:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"833:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"842:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"829:3:12"},"nodeType":"YulFunctionCall","src":"829:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"854:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"825:3:12"},"nodeType":"YulFunctionCall","src":"825:32:12"},"nodeType":"YulIf","src":"822:119:12"},{"nodeType":"YulBlock","src":"951:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"966:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"980:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"970:6:12","type":""}]},{"nodeType":"YulAssignment","src":"995:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1030:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"1041:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1026:3:12"},"nodeType":"YulFunctionCall","src":"1026:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1050:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1005:20:12"},"nodeType":"YulFunctionCall","src":"1005:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"995:6:12"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"782:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"793:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"805:6:12","type":""}],"src":"746:329:12"},{"body":{"nodeType":"YulBlock","src":"1172:399:12","statements":[{"body":{"nodeType":"YulBlock","src":"1218:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1220:77:12"},"nodeType":"YulFunctionCall","src":"1220:79:12"},"nodeType":"YulExpressionStatement","src":"1220:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1193:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"1202:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1189:3:12"},"nodeType":"YulFunctionCall","src":"1189:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"1214:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1185:3:12"},"nodeType":"YulFunctionCall","src":"1185:32:12"},"nodeType":"YulIf","src":"1182:119:12"},{"nodeType":"YulBlock","src":"1311:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"1326:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"1340:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1330:6:12","type":""}]},{"nodeType":"YulAssignment","src":"1355:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1390:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"1401:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1386:3:12"},"nodeType":"YulFunctionCall","src":"1386:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1410:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1365:20:12"},"nodeType":"YulFunctionCall","src":"1365:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1355:6:12"}]}]},{"nodeType":"YulBlock","src":"1438:126:12","statements":[{"nodeType":"YulVariableDeclaration","src":"1453:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"1467:2:12","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1457:6:12","type":""}]},{"nodeType":"YulAssignment","src":"1483:71:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1526:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"1537:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1522:3:12"},"nodeType":"YulFunctionCall","src":"1522:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1546:7:12"}],"functionName":{"name":"abi_decode_t_enum$_Side_$971","nodeType":"YulIdentifier","src":"1493:28:12"},"nodeType":"YulFunctionCall","src":"1493:61:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1483:6:12"}]}]}]},"name":"abi_decode_tuple_t_addresst_enum$_Side_$971","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1134:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1145:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1157:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1165:6:12","type":""}],"src":"1081:490:12"},{"body":{"nodeType":"YulBlock","src":"1660:391:12","statements":[{"body":{"nodeType":"YulBlock","src":"1706:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1708:77:12"},"nodeType":"YulFunctionCall","src":"1708:79:12"},"nodeType":"YulExpressionStatement","src":"1708:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1681:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"1690:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1677:3:12"},"nodeType":"YulFunctionCall","src":"1677:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"1702:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1673:3:12"},"nodeType":"YulFunctionCall","src":"1673:32:12"},"nodeType":"YulIf","src":"1670:119:12"},{"nodeType":"YulBlock","src":"1799:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"1814:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"1828:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1818:6:12","type":""}]},{"nodeType":"YulAssignment","src":"1843:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1878:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"1889:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1874:3:12"},"nodeType":"YulFunctionCall","src":"1874:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1898:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1853:20:12"},"nodeType":"YulFunctionCall","src":"1853:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1843:6:12"}]}]},{"nodeType":"YulBlock","src":"1926:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"1941:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"1955:2:12","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1945:6:12","type":""}]},{"nodeType":"YulAssignment","src":"1971:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2006:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"2017:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2002:3:12"},"nodeType":"YulFunctionCall","src":"2002:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2026:7:12"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1981:20:12"},"nodeType":"YulFunctionCall","src":"1981:53:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1971:6:12"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1622:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1633:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1645:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1653:6:12","type":""}],"src":"1577:474:12"},{"body":{"nodeType":"YulBlock","src":"2205:903:12","statements":[{"body":{"nodeType":"YulBlock","src":"2252:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2254:77:12"},"nodeType":"YulFunctionCall","src":"2254:79:12"},"nodeType":"YulExpressionStatement","src":"2254:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2226:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"2235:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2222:3:12"},"nodeType":"YulFunctionCall","src":"2222:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"2247:3:12","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2218:3:12"},"nodeType":"YulFunctionCall","src":"2218:33:12"},"nodeType":"YulIf","src":"2215:120:12"},{"nodeType":"YulBlock","src":"2345:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"2360:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"2374:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2364:6:12","type":""}]},{"nodeType":"YulAssignment","src":"2389:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2424:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"2435:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2420:3:12"},"nodeType":"YulFunctionCall","src":"2420:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2444:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2399:20:12"},"nodeType":"YulFunctionCall","src":"2399:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2389:6:12"}]}]},{"nodeType":"YulBlock","src":"2472:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"2487:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"2501:2:12","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2491:6:12","type":""}]},{"nodeType":"YulAssignment","src":"2517:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2552:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"2563:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2548:3:12"},"nodeType":"YulFunctionCall","src":"2548:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2572:7:12"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2527:20:12"},"nodeType":"YulFunctionCall","src":"2527:53:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2517:6:12"}]}]},{"nodeType":"YulBlock","src":"2600:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"2615:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"2629:2:12","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2619:6:12","type":""}]},{"nodeType":"YulAssignment","src":"2645:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2680:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"2691:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2676:3:12"},"nodeType":"YulFunctionCall","src":"2676:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2700:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2655:20:12"},"nodeType":"YulFunctionCall","src":"2655:53:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2645:6:12"}]}]},{"nodeType":"YulBlock","src":"2728:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"2743:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"2757:2:12","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2747:6:12","type":""}]},{"nodeType":"YulAssignment","src":"2773:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2808:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"2819:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2804:3:12"},"nodeType":"YulFunctionCall","src":"2804:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2828:7:12"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2783:20:12"},"nodeType":"YulFunctionCall","src":"2783:53:12"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2773:6:12"}]}]},{"nodeType":"YulBlock","src":"2856:119:12","statements":[{"nodeType":"YulVariableDeclaration","src":"2871:17:12","value":{"kind":"number","nodeType":"YulLiteral","src":"2885:3:12","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2875:6:12","type":""}]},{"nodeType":"YulAssignment","src":"2902:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2937:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"2948:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2933:3:12"},"nodeType":"YulFunctionCall","src":"2933:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2957:7:12"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2912:20:12"},"nodeType":"YulFunctionCall","src":"2912:53:12"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2902:6:12"}]}]},{"nodeType":"YulBlock","src":"2985:116:12","statements":[{"nodeType":"YulVariableDeclaration","src":"3000:17:12","value":{"kind":"number","nodeType":"YulLiteral","src":"3014:3:12","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3004:6:12","type":""}]},{"nodeType":"YulAssignment","src":"3031:60:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3063:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"3074:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3059:3:12"},"nodeType":"YulFunctionCall","src":"3059:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3083:7:12"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"3041:17:12"},"nodeType":"YulFunctionCall","src":"3041:50:12"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"3031:6:12"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_uint256t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2135:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2146:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2158:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2166:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2174:6:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2182:6:12","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2190:6:12","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2198:6:12","type":""}],"src":"2057:1051:12"},{"body":{"nodeType":"YulBlock","src":"3214:519:12","statements":[{"body":{"nodeType":"YulBlock","src":"3260:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3262:77:12"},"nodeType":"YulFunctionCall","src":"3262:79:12"},"nodeType":"YulExpressionStatement","src":"3262:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3235:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"3244:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3231:3:12"},"nodeType":"YulFunctionCall","src":"3231:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"3256:2:12","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3227:3:12"},"nodeType":"YulFunctionCall","src":"3227:32:12"},"nodeType":"YulIf","src":"3224:119:12"},{"nodeType":"YulBlock","src":"3353:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"3368:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"3382:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3372:6:12","type":""}]},{"nodeType":"YulAssignment","src":"3397:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3432:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"3443:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3428:3:12"},"nodeType":"YulFunctionCall","src":"3428:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3452:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3407:20:12"},"nodeType":"YulFunctionCall","src":"3407:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3397:6:12"}]}]},{"nodeType":"YulBlock","src":"3480:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"3495:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"3509:2:12","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3499:6:12","type":""}]},{"nodeType":"YulAssignment","src":"3525:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3560:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"3571:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3556:3:12"},"nodeType":"YulFunctionCall","src":"3556:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3580:7:12"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3535:20:12"},"nodeType":"YulFunctionCall","src":"3535:53:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3525:6:12"}]}]},{"nodeType":"YulBlock","src":"3608:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"3623:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"3637:2:12","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3627:6:12","type":""}]},{"nodeType":"YulAssignment","src":"3653:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3688:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"3699:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3684:3:12"},"nodeType":"YulFunctionCall","src":"3684:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3708:7:12"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3663:20:12"},"nodeType":"YulFunctionCall","src":"3663:53:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3653:6:12"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3168:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3179:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3191:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3199:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3207:6:12","type":""}],"src":"3114:619:12"},{"body":{"nodeType":"YulBlock","src":"3830:399:12","statements":[{"body":{"nodeType":"YulBlock","src":"3876:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3878:77:12"},"nodeType":"YulFunctionCall","src":"3878:79:12"},"nodeType":"YulExpressionStatement","src":"3878:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3851:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"3860:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3847:3:12"},"nodeType":"YulFunctionCall","src":"3847:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"3872:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3843:3:12"},"nodeType":"YulFunctionCall","src":"3843:32:12"},"nodeType":"YulIf","src":"3840:119:12"},{"nodeType":"YulBlock","src":"3969:125:12","statements":[{"nodeType":"YulVariableDeclaration","src":"3984:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"3998:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3988:6:12","type":""}]},{"nodeType":"YulAssignment","src":"4013:71:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4056:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"4067:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4052:3:12"},"nodeType":"YulFunctionCall","src":"4052:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4076:7:12"}],"functionName":{"name":"abi_decode_t_enum$_Side_$971","nodeType":"YulIdentifier","src":"4023:28:12"},"nodeType":"YulFunctionCall","src":"4023:61:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4013:6:12"}]}]},{"nodeType":"YulBlock","src":"4104:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"4119:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"4133:2:12","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4123:6:12","type":""}]},{"nodeType":"YulAssignment","src":"4149:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4184:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"4195:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4180:3:12"},"nodeType":"YulFunctionCall","src":"4180:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4204:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4159:20:12"},"nodeType":"YulFunctionCall","src":"4159:53:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4149:6:12"}]}]}]},"name":"abi_decode_tuple_t_enum$_Side_$971t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3792:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3803:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3815:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3823:6:12","type":""}],"src":"3739:490:12"},{"body":{"nodeType":"YulBlock","src":"4343:527:12","statements":[{"body":{"nodeType":"YulBlock","src":"4389:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4391:77:12"},"nodeType":"YulFunctionCall","src":"4391:79:12"},"nodeType":"YulExpressionStatement","src":"4391:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4364:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"4373:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4360:3:12"},"nodeType":"YulFunctionCall","src":"4360:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"4385:2:12","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4356:3:12"},"nodeType":"YulFunctionCall","src":"4356:32:12"},"nodeType":"YulIf","src":"4353:119:12"},{"nodeType":"YulBlock","src":"4482:125:12","statements":[{"nodeType":"YulVariableDeclaration","src":"4497:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"4511:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4501:6:12","type":""}]},{"nodeType":"YulAssignment","src":"4526:71:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4569:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"4580:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4565:3:12"},"nodeType":"YulFunctionCall","src":"4565:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4589:7:12"}],"functionName":{"name":"abi_decode_t_enum$_Side_$971","nodeType":"YulIdentifier","src":"4536:28:12"},"nodeType":"YulFunctionCall","src":"4536:61:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4526:6:12"}]}]},{"nodeType":"YulBlock","src":"4617:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"4632:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"4646:2:12","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4636:6:12","type":""}]},{"nodeType":"YulAssignment","src":"4662:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4697:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"4708:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4693:3:12"},"nodeType":"YulFunctionCall","src":"4693:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4717:7:12"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4672:20:12"},"nodeType":"YulFunctionCall","src":"4672:53:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4662:6:12"}]}]},{"nodeType":"YulBlock","src":"4745:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"4760:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"4774:2:12","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4764:6:12","type":""}]},{"nodeType":"YulAssignment","src":"4790:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4825:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"4836:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4821:3:12"},"nodeType":"YulFunctionCall","src":"4821:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4845:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4800:20:12"},"nodeType":"YulFunctionCall","src":"4800:53:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4790:6:12"}]}]}]},"name":"abi_decode_tuple_t_enum$_Side_$971t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4297:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4308:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4320:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4328:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4336:6:12","type":""}],"src":"4235:635:12"},{"body":{"nodeType":"YulBlock","src":"4942:263:12","statements":[{"body":{"nodeType":"YulBlock","src":"4988:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4990:77:12"},"nodeType":"YulFunctionCall","src":"4990:79:12"},"nodeType":"YulExpressionStatement","src":"4990:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4963:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"4972:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4959:3:12"},"nodeType":"YulFunctionCall","src":"4959:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"4984:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4955:3:12"},"nodeType":"YulFunctionCall","src":"4955:32:12"},"nodeType":"YulIf","src":"4952:119:12"},{"nodeType":"YulBlock","src":"5081:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"5096:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"5110:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5100:6:12","type":""}]},{"nodeType":"YulAssignment","src":"5125:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5160:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"5171:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5156:3:12"},"nodeType":"YulFunctionCall","src":"5156:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5180:7:12"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5135:20:12"},"nodeType":"YulFunctionCall","src":"5135:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5125:6:12"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4912:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4923:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4935:6:12","type":""}],"src":"4876:329:12"},{"body":{"nodeType":"YulBlock","src":"5288:274:12","statements":[{"body":{"nodeType":"YulBlock","src":"5334:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5336:77:12"},"nodeType":"YulFunctionCall","src":"5336:79:12"},"nodeType":"YulExpressionStatement","src":"5336:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5309:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"5318:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5305:3:12"},"nodeType":"YulFunctionCall","src":"5305:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"5330:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5301:3:12"},"nodeType":"YulFunctionCall","src":"5301:32:12"},"nodeType":"YulIf","src":"5298:119:12"},{"nodeType":"YulBlock","src":"5427:128:12","statements":[{"nodeType":"YulVariableDeclaration","src":"5442:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"5456:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5446:6:12","type":""}]},{"nodeType":"YulAssignment","src":"5471:74:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5517:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"5528:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5513:3:12"},"nodeType":"YulFunctionCall","src":"5513:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5537:7:12"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"5481:31:12"},"nodeType":"YulFunctionCall","src":"5481:64:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5471:6:12"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5258:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5269:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5281:6:12","type":""}],"src":"5211:351:12"},{"body":{"nodeType":"YulBlock","src":"5676:527:12","statements":[{"body":{"nodeType":"YulBlock","src":"5722:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5724:77:12"},"nodeType":"YulFunctionCall","src":"5724:79:12"},"nodeType":"YulExpressionStatement","src":"5724:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5697:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"5706:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5693:3:12"},"nodeType":"YulFunctionCall","src":"5693:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"5718:2:12","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5689:3:12"},"nodeType":"YulFunctionCall","src":"5689:32:12"},"nodeType":"YulIf","src":"5686:119:12"},{"nodeType":"YulBlock","src":"5815:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"5830:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"5844:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5834:6:12","type":""}]},{"nodeType":"YulAssignment","src":"5859:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5894:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"5905:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5890:3:12"},"nodeType":"YulFunctionCall","src":"5890:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5914:7:12"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5869:20:12"},"nodeType":"YulFunctionCall","src":"5869:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5859:6:12"}]}]},{"nodeType":"YulBlock","src":"5942:126:12","statements":[{"nodeType":"YulVariableDeclaration","src":"5957:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"5971:2:12","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5961:6:12","type":""}]},{"nodeType":"YulAssignment","src":"5987:71:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6030:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"6041:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6026:3:12"},"nodeType":"YulFunctionCall","src":"6026:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6050:7:12"}],"functionName":{"name":"abi_decode_t_enum$_Side_$971","nodeType":"YulIdentifier","src":"5997:28:12"},"nodeType":"YulFunctionCall","src":"5997:61:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5987:6:12"}]}]},{"nodeType":"YulBlock","src":"6078:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"6093:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"6107:2:12","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6097:6:12","type":""}]},{"nodeType":"YulAssignment","src":"6123:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6158:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"6169:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6154:3:12"},"nodeType":"YulFunctionCall","src":"6154:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6178:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6133:20:12"},"nodeType":"YulFunctionCall","src":"6133:53:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6123:6:12"}]}]}]},"name":"abi_decode_tuple_t_uint256t_enum$_Side_$971t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5630:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5641:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5653:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5661:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5669:6:12","type":""}],"src":"5568:635:12"},{"body":{"nodeType":"YulBlock","src":"6264:53:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6281:3:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6304:5:12"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6286:17:12"},"nodeType":"YulFunctionCall","src":"6286:24:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6274:6:12"},"nodeType":"YulFunctionCall","src":"6274:37:12"},"nodeType":"YulExpressionStatement","src":"6274:37:12"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6252:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6259:3:12","type":""}],"src":"6209:108:12"},{"body":{"nodeType":"YulBlock","src":"6388:53:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6405:3:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6428:5:12"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6410:17:12"},"nodeType":"YulFunctionCall","src":"6410:24:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6398:6:12"},"nodeType":"YulFunctionCall","src":"6398:37:12"},"nodeType":"YulExpressionStatement","src":"6398:37:12"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6376:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6383:3:12","type":""}],"src":"6323:118:12"},{"body":{"nodeType":"YulBlock","src":"6496:50:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6513:3:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6533:5:12"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6518:14:12"},"nodeType":"YulFunctionCall","src":"6518:21:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6506:6:12"},"nodeType":"YulFunctionCall","src":"6506:34:12"},"nodeType":"YulExpressionStatement","src":"6506:34:12"}]},"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6484:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6491:3:12","type":""}],"src":"6447:99:12"},{"body":{"nodeType":"YulBlock","src":"6611:50:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6628:3:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6648:5:12"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6633:14:12"},"nodeType":"YulFunctionCall","src":"6633:21:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6621:6:12"},"nodeType":"YulFunctionCall","src":"6621:34:12"},"nodeType":"YulExpressionStatement","src":"6621:34:12"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6599:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6606:3:12","type":""}],"src":"6552:109:12"},{"body":{"nodeType":"YulBlock","src":"6728:72:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6745:3:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6787:5:12"}],"functionName":{"name":"convert_t_enum$_Side_$971_to_t_uint8","nodeType":"YulIdentifier","src":"6750:36:12"},"nodeType":"YulFunctionCall","src":"6750:43:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6738:6:12"},"nodeType":"YulFunctionCall","src":"6738:56:12"},"nodeType":"YulExpressionStatement","src":"6738:56:12"}]},"name":"abi_encode_t_enum$_Side_$971_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6716:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6723:3:12","type":""}],"src":"6667:133:12"},{"body":{"nodeType":"YulBlock","src":"6877:72:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6894:3:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6936:5:12"}],"functionName":{"name":"convert_t_enum$_Side_$971_to_t_uint8","nodeType":"YulIdentifier","src":"6899:36:12"},"nodeType":"YulFunctionCall","src":"6899:43:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6887:6:12"},"nodeType":"YulFunctionCall","src":"6887:56:12"},"nodeType":"YulExpressionStatement","src":"6887:56:12"}]},"name":"abi_encode_t_enum$_Side_$971_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6865:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6872:3:12","type":""}],"src":"6806:143:12"},{"body":{"nodeType":"YulBlock","src":"7101:220:12","statements":[{"nodeType":"YulAssignment","src":"7111:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7177:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"7182:2:12","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7118:58:12"},"nodeType":"YulFunctionCall","src":"7118:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7111:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7283:3:12"}],"functionName":{"name":"store_literal_in_memory_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2","nodeType":"YulIdentifier","src":"7194:88:12"},"nodeType":"YulFunctionCall","src":"7194:93:12"},"nodeType":"YulExpressionStatement","src":"7194:93:12"},{"nodeType":"YulAssignment","src":"7296:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7307:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"7312:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7303:3:12"},"nodeType":"YulFunctionCall","src":"7303:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7296:3:12"}]}]},"name":"abi_encode_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7089:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7097:3:12","type":""}],"src":"6955:366:12"},{"body":{"nodeType":"YulBlock","src":"7473:220:12","statements":[{"nodeType":"YulAssignment","src":"7483:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7549:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"7554:2:12","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7490:58:12"},"nodeType":"YulFunctionCall","src":"7490:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7483:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7655:3:12"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"7566:88:12"},"nodeType":"YulFunctionCall","src":"7566:93:12"},"nodeType":"YulExpressionStatement","src":"7566:93:12"},{"nodeType":"YulAssignment","src":"7668:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7679:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"7684:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7675:3:12"},"nodeType":"YulFunctionCall","src":"7675:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7668:3:12"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7461:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7469:3:12","type":""}],"src":"7327:366:12"},{"body":{"nodeType":"YulBlock","src":"7845:220:12","statements":[{"nodeType":"YulAssignment","src":"7855:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7921:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"7926:2:12","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7862:58:12"},"nodeType":"YulFunctionCall","src":"7862:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7855:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8027:3:12"}],"functionName":{"name":"store_literal_in_memory_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3","nodeType":"YulIdentifier","src":"7938:88:12"},"nodeType":"YulFunctionCall","src":"7938:93:12"},"nodeType":"YulExpressionStatement","src":"7938:93:12"},{"nodeType":"YulAssignment","src":"8040:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8051:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"8056:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8047:3:12"},"nodeType":"YulFunctionCall","src":"8047:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8040:3:12"}]}]},"name":"abi_encode_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7833:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7841:3:12","type":""}],"src":"7699:366:12"},{"body":{"nodeType":"YulBlock","src":"8217:220:12","statements":[{"nodeType":"YulAssignment","src":"8227:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8293:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"8298:2:12","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8234:58:12"},"nodeType":"YulFunctionCall","src":"8234:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8227:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8399:3:12"}],"functionName":{"name":"store_literal_in_memory_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092","nodeType":"YulIdentifier","src":"8310:88:12"},"nodeType":"YulFunctionCall","src":"8310:93:12"},"nodeType":"YulExpressionStatement","src":"8310:93:12"},{"nodeType":"YulAssignment","src":"8412:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8423:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"8428:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8419:3:12"},"nodeType":"YulFunctionCall","src":"8419:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8412:3:12"}]}]},"name":"abi_encode_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8205:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8213:3:12","type":""}],"src":"8071:366:12"},{"body":{"nodeType":"YulBlock","src":"8589:219:12","statements":[{"nodeType":"YulAssignment","src":"8599:73:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8665:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"8670:1:12","type":"","value":"9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8606:58:12"},"nodeType":"YulFunctionCall","src":"8606:66:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8599:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8770:3:12"}],"functionName":{"name":"store_literal_in_memory_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4","nodeType":"YulIdentifier","src":"8681:88:12"},"nodeType":"YulFunctionCall","src":"8681:93:12"},"nodeType":"YulExpressionStatement","src":"8681:93:12"},{"nodeType":"YulAssignment","src":"8783:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8794:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"8799:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8790:3:12"},"nodeType":"YulFunctionCall","src":"8790:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8783:3:12"}]}]},"name":"abi_encode_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8577:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8585:3:12","type":""}],"src":"8443:365:12"},{"body":{"nodeType":"YulBlock","src":"8960:220:12","statements":[{"nodeType":"YulAssignment","src":"8970:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9036:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"9041:2:12","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8977:58:12"},"nodeType":"YulFunctionCall","src":"8977:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8970:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9142:3:12"}],"functionName":{"name":"store_literal_in_memory_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430","nodeType":"YulIdentifier","src":"9053:88:12"},"nodeType":"YulFunctionCall","src":"9053:93:12"},"nodeType":"YulExpressionStatement","src":"9053:93:12"},{"nodeType":"YulAssignment","src":"9155:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9166:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"9171:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9162:3:12"},"nodeType":"YulFunctionCall","src":"9162:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9155:3:12"}]}]},"name":"abi_encode_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8948:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8956:3:12","type":""}],"src":"8814:366:12"},{"body":{"nodeType":"YulBlock","src":"9332:220:12","statements":[{"nodeType":"YulAssignment","src":"9342:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9408:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"9413:2:12","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9349:58:12"},"nodeType":"YulFunctionCall","src":"9349:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9342:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9514:3:12"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"9425:88:12"},"nodeType":"YulFunctionCall","src":"9425:93:12"},"nodeType":"YulExpressionStatement","src":"9425:93:12"},{"nodeType":"YulAssignment","src":"9527:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9538:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"9543:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9534:3:12"},"nodeType":"YulFunctionCall","src":"9534:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9527:3:12"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9320:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9328:3:12","type":""}],"src":"9186:366:12"},{"body":{"nodeType":"YulBlock","src":"9726:2006:12","statements":[{"nodeType":"YulVariableDeclaration","src":"9736:28:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9752:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"9757:6:12","type":"","value":"0x0160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9748:3:12"},"nodeType":"YulFunctionCall","src":"9748:16:12"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"9740:4:12","type":""}]},{"nodeType":"YulBlock","src":"9774:162:12","statements":[{"nodeType":"YulVariableDeclaration","src":"9807:43:12","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9837:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"9844:4:12","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9833:3:12"},"nodeType":"YulFunctionCall","src":"9833:16:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9827:5:12"},"nodeType":"YulFunctionCall","src":"9827:23:12"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9811:12:12","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9897:12:12"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9915:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"9920:4:12","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9911:3:12"},"nodeType":"YulFunctionCall","src":"9911:14:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9863:33:12"},"nodeType":"YulFunctionCall","src":"9863:63:12"},"nodeType":"YulExpressionStatement","src":"9863:63:12"}]},{"nodeType":"YulBlock","src":"9946:170:12","statements":[{"nodeType":"YulVariableDeclaration","src":"9981:43:12","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10011:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"10018:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10007:3:12"},"nodeType":"YulFunctionCall","src":"10007:16:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10001:5:12"},"nodeType":"YulFunctionCall","src":"10001:23:12"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9985:12:12","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10077:12:12"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10095:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"10100:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10091:3:12"},"nodeType":"YulFunctionCall","src":"10091:14:12"}],"functionName":{"name":"abi_encode_t_enum$_Side_$971_to_t_uint8","nodeType":"YulIdentifier","src":"10037:39:12"},"nodeType":"YulFunctionCall","src":"10037:69:12"},"nodeType":"YulExpressionStatement","src":"10037:69:12"}]},{"nodeType":"YulBlock","src":"10126:164:12","statements":[{"nodeType":"YulVariableDeclaration","src":"10161:43:12","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10191:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"10198:4:12","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10187:3:12"},"nodeType":"YulFunctionCall","src":"10187:16:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10181:5:12"},"nodeType":"YulFunctionCall","src":"10181:23:12"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10165:12:12","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10251:12:12"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10269:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"10274:4:12","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10265:3:12"},"nodeType":"YulFunctionCall","src":"10265:14:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"10217:33:12"},"nodeType":"YulFunctionCall","src":"10217:63:12"},"nodeType":"YulExpressionStatement","src":"10217:63:12"}]},{"nodeType":"YulBlock","src":"10300:166:12","statements":[{"nodeType":"YulVariableDeclaration","src":"10337:43:12","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10367:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"10374:4:12","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10363:3:12"},"nodeType":"YulFunctionCall","src":"10363:16:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10357:5:12"},"nodeType":"YulFunctionCall","src":"10357:23:12"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10341:12:12","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10427:12:12"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10445:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"10450:4:12","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10441:3:12"},"nodeType":"YulFunctionCall","src":"10441:14:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"10393:33:12"},"nodeType":"YulFunctionCall","src":"10393:63:12"},"nodeType":"YulExpressionStatement","src":"10393:63:12"}]},{"nodeType":"YulBlock","src":"10476:167:12","statements":[{"nodeType":"YulVariableDeclaration","src":"10514:43:12","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10544:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"10551:4:12","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10540:3:12"},"nodeType":"YulFunctionCall","src":"10540:16:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10534:5:12"},"nodeType":"YulFunctionCall","src":"10534:23:12"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10518:12:12","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10604:12:12"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10622:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"10627:4:12","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10618:3:12"},"nodeType":"YulFunctionCall","src":"10618:14:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"10570:33:12"},"nodeType":"YulFunctionCall","src":"10570:63:12"},"nodeType":"YulExpressionStatement","src":"10570:63:12"}]},{"nodeType":"YulBlock","src":"10653:166:12","statements":[{"nodeType":"YulVariableDeclaration","src":"10690:43:12","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10720:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"10727:4:12","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10716:3:12"},"nodeType":"YulFunctionCall","src":"10716:16:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10710:5:12"},"nodeType":"YulFunctionCall","src":"10710:23:12"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10694:12:12","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10780:12:12"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10798:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"10803:4:12","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10794:3:12"},"nodeType":"YulFunctionCall","src":"10794:14:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"10746:33:12"},"nodeType":"YulFunctionCall","src":"10746:63:12"},"nodeType":"YulExpressionStatement","src":"10746:63:12"}]},{"nodeType":"YulBlock","src":"10829:167:12","statements":[{"nodeType":"YulVariableDeclaration","src":"10867:43:12","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10897:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"10904:4:12","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10893:3:12"},"nodeType":"YulFunctionCall","src":"10893:16:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10887:5:12"},"nodeType":"YulFunctionCall","src":"10887:23:12"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10871:12:12","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10957:12:12"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10975:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"10980:4:12","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10971:3:12"},"nodeType":"YulFunctionCall","src":"10971:14:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"10923:33:12"},"nodeType":"YulFunctionCall","src":"10923:63:12"},"nodeType":"YulExpressionStatement","src":"10923:63:12"}]},{"nodeType":"YulBlock","src":"11006:164:12","statements":[{"nodeType":"YulVariableDeclaration","src":"11041:43:12","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11071:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"11078:4:12","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11067:3:12"},"nodeType":"YulFunctionCall","src":"11067:16:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11061:5:12"},"nodeType":"YulFunctionCall","src":"11061:23:12"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11045:12:12","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11131:12:12"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11149:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"11154:4:12","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11145:3:12"},"nodeType":"YulFunctionCall","src":"11145:14:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"11097:33:12"},"nodeType":"YulFunctionCall","src":"11097:63:12"},"nodeType":"YulExpressionStatement","src":"11097:63:12"}]},{"nodeType":"YulBlock","src":"11180:179:12","statements":[{"nodeType":"YulVariableDeclaration","src":"11226:45:12","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11256:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"11263:6:12","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11252:3:12"},"nodeType":"YulFunctionCall","src":"11252:18:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11246:5:12"},"nodeType":"YulFunctionCall","src":"11246:25:12"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11230:12:12","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11318:12:12"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11336:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"11341:6:12","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11332:3:12"},"nodeType":"YulFunctionCall","src":"11332:16:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"11284:33:12"},"nodeType":"YulFunctionCall","src":"11284:65:12"},"nodeType":"YulExpressionStatement","src":"11284:65:12"}]},{"nodeType":"YulBlock","src":"11369:179:12","statements":[{"nodeType":"YulVariableDeclaration","src":"11415:45:12","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11445:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"11452:6:12","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11441:3:12"},"nodeType":"YulFunctionCall","src":"11441:18:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11435:5:12"},"nodeType":"YulFunctionCall","src":"11435:25:12"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11419:12:12","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11507:12:12"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11525:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"11530:6:12","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11521:3:12"},"nodeType":"YulFunctionCall","src":"11521:16:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"11473:33:12"},"nodeType":"YulFunctionCall","src":"11473:65:12"},"nodeType":"YulExpressionStatement","src":"11473:65:12"}]},{"nodeType":"YulBlock","src":"11558:167:12","statements":[{"nodeType":"YulVariableDeclaration","src":"11598:45:12","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11628:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"11635:6:12","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11624:3:12"},"nodeType":"YulFunctionCall","src":"11624:18:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11618:5:12"},"nodeType":"YulFunctionCall","src":"11618:25:12"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11602:12:12","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11684:12:12"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11702:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"11707:6:12","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11698:3:12"},"nodeType":"YulFunctionCall","src":"11698:16:12"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"11656:27:12"},"nodeType":"YulFunctionCall","src":"11656:59:12"},"nodeType":"YulExpressionStatement","src":"11656:59:12"}]}]},"name":"abi_encode_t_struct$__Order_$942_memory_ptr_to_t_struct$__Order_$942_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9713:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9720:3:12","type":""}],"src":"9614:2118:12"},{"body":{"nodeType":"YulBlock","src":"11793:53:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11810:3:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11833:5:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11815:17:12"},"nodeType":"YulFunctionCall","src":"11815:24:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11803:6:12"},"nodeType":"YulFunctionCall","src":"11803:37:12"},"nodeType":"YulExpressionStatement","src":"11803:37:12"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11781:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11788:3:12","type":""}],"src":"11738:108:12"},{"body":{"nodeType":"YulBlock","src":"11917:53:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11934:3:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11957:5:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11939:17:12"},"nodeType":"YulFunctionCall","src":"11939:24:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11927:6:12"},"nodeType":"YulFunctionCall","src":"11927:37:12"},"nodeType":"YulExpressionStatement","src":"11927:37:12"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11905:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11912:3:12","type":""}],"src":"11852:118:12"},{"body":{"nodeType":"YulBlock","src":"12074:124:12","statements":[{"nodeType":"YulAssignment","src":"12084:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12096:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12107:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12092:3:12"},"nodeType":"YulFunctionCall","src":"12092:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12084:4:12"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12164:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12177:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12188:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12173:3:12"},"nodeType":"YulFunctionCall","src":"12173:17:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12120:43:12"},"nodeType":"YulFunctionCall","src":"12120:71:12"},"nodeType":"YulExpressionStatement","src":"12120:71:12"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12046:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12058:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12069:4:12","type":""}],"src":"11976:222:12"},{"body":{"nodeType":"YulBlock","src":"12330:206:12","statements":[{"nodeType":"YulAssignment","src":"12340:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12352:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12363:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12348:3:12"},"nodeType":"YulFunctionCall","src":"12348:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12340:4:12"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12420:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12433:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12444:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12429:3:12"},"nodeType":"YulFunctionCall","src":"12429:17:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12376:43:12"},"nodeType":"YulFunctionCall","src":"12376:71:12"},"nodeType":"YulExpressionStatement","src":"12376:71:12"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12501:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12514:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12525:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12510:3:12"},"nodeType":"YulFunctionCall","src":"12510:18:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12457:43:12"},"nodeType":"YulFunctionCall","src":"12457:72:12"},"nodeType":"YulExpressionStatement","src":"12457:72:12"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12294:9:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12306:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12314:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12325:4:12","type":""}],"src":"12204:332:12"},{"body":{"nodeType":"YulBlock","src":"12718:365:12","statements":[{"nodeType":"YulAssignment","src":"12728:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12740:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12751:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12736:3:12"},"nodeType":"YulFunctionCall","src":"12736:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12728:4:12"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12809:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12822:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12833:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12818:3:12"},"nodeType":"YulFunctionCall","src":"12818:17:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12765:43:12"},"nodeType":"YulFunctionCall","src":"12765:71:12"},"nodeType":"YulExpressionStatement","src":"12765:71:12"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12890:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12903:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12914:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12899:3:12"},"nodeType":"YulFunctionCall","src":"12899:18:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12846:43:12"},"nodeType":"YulFunctionCall","src":"12846:72:12"},"nodeType":"YulExpressionStatement","src":"12846:72:12"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12972:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12985:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12996:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12981:3:12"},"nodeType":"YulFunctionCall","src":"12981:18:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12928:43:12"},"nodeType":"YulFunctionCall","src":"12928:72:12"},"nodeType":"YulExpressionStatement","src":"12928:72:12"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"13048:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13061:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"13072:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13057:3:12"},"nodeType":"YulFunctionCall","src":"13057:18:12"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"13010:37:12"},"nodeType":"YulFunctionCall","src":"13010:66:12"},"nodeType":"YulExpressionStatement","src":"13010:66:12"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12666:9:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12678:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12686:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12694:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12702:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12713:4:12","type":""}],"src":"12542:541:12"},{"body":{"nodeType":"YulBlock","src":"13215:206:12","statements":[{"nodeType":"YulAssignment","src":"13225:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13237:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"13248:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13233:3:12"},"nodeType":"YulFunctionCall","src":"13233:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13225:4:12"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13305:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13318:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"13329:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13314:3:12"},"nodeType":"YulFunctionCall","src":"13314:17:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13261:43:12"},"nodeType":"YulFunctionCall","src":"13261:71:12"},"nodeType":"YulExpressionStatement","src":"13261:71:12"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13386:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13399:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"13410:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13395:3:12"},"nodeType":"YulFunctionCall","src":"13395:18:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13342:43:12"},"nodeType":"YulFunctionCall","src":"13342:72:12"},"nodeType":"YulExpressionStatement","src":"13342:72:12"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13179:9:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13191:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13199:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13210:4:12","type":""}],"src":"13089:332:12"},{"body":{"nodeType":"YulBlock","src":"13519:118:12","statements":[{"nodeType":"YulAssignment","src":"13529:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13541:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"13552:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13537:3:12"},"nodeType":"YulFunctionCall","src":"13537:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13529:4:12"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13603:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13616:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"13627:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13612:3:12"},"nodeType":"YulFunctionCall","src":"13612:17:12"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"13565:37:12"},"nodeType":"YulFunctionCall","src":"13565:65:12"},"nodeType":"YulExpressionStatement","src":"13565:65:12"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13491:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13503:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13514:4:12","type":""}],"src":"13427:210:12"},{"body":{"nodeType":"YulBlock","src":"13814:248:12","statements":[{"nodeType":"YulAssignment","src":"13824:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13836:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"13847:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13832:3:12"},"nodeType":"YulFunctionCall","src":"13832:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13824:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13871:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"13882:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13867:3:12"},"nodeType":"YulFunctionCall","src":"13867:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13890:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"13896:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13886:3:12"},"nodeType":"YulFunctionCall","src":"13886:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13860:6:12"},"nodeType":"YulFunctionCall","src":"13860:47:12"},"nodeType":"YulExpressionStatement","src":"13860:47:12"},{"nodeType":"YulAssignment","src":"13916:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14050:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13924:124:12"},"nodeType":"YulFunctionCall","src":"13924:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13916:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13794:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13809:4:12","type":""}],"src":"13643:419:12"},{"body":{"nodeType":"YulBlock","src":"14239:248:12","statements":[{"nodeType":"YulAssignment","src":"14249:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14261:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14272:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14257:3:12"},"nodeType":"YulFunctionCall","src":"14257:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14249:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14296:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14307:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14292:3:12"},"nodeType":"YulFunctionCall","src":"14292:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14315:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"14321:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14311:3:12"},"nodeType":"YulFunctionCall","src":"14311:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14285:6:12"},"nodeType":"YulFunctionCall","src":"14285:47:12"},"nodeType":"YulExpressionStatement","src":"14285:47:12"},{"nodeType":"YulAssignment","src":"14341:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14475:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14349:124:12"},"nodeType":"YulFunctionCall","src":"14349:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14341:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14219:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14234:4:12","type":""}],"src":"14068:419:12"},{"body":{"nodeType":"YulBlock","src":"14664:248:12","statements":[{"nodeType":"YulAssignment","src":"14674:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14686:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14697:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14682:3:12"},"nodeType":"YulFunctionCall","src":"14682:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14674:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14721:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14732:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14717:3:12"},"nodeType":"YulFunctionCall","src":"14717:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14740:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"14746:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14736:3:12"},"nodeType":"YulFunctionCall","src":"14736:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14710:6:12"},"nodeType":"YulFunctionCall","src":"14710:47:12"},"nodeType":"YulExpressionStatement","src":"14710:47:12"},{"nodeType":"YulAssignment","src":"14766:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14900:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14774:124:12"},"nodeType":"YulFunctionCall","src":"14774:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14766:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14644:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14659:4:12","type":""}],"src":"14493:419:12"},{"body":{"nodeType":"YulBlock","src":"15089:248:12","statements":[{"nodeType":"YulAssignment","src":"15099:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15111:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15122:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15107:3:12"},"nodeType":"YulFunctionCall","src":"15107:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15099:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15146:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15157:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15142:3:12"},"nodeType":"YulFunctionCall","src":"15142:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15165:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"15171:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15161:3:12"},"nodeType":"YulFunctionCall","src":"15161:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15135:6:12"},"nodeType":"YulFunctionCall","src":"15135:47:12"},"nodeType":"YulExpressionStatement","src":"15135:47:12"},{"nodeType":"YulAssignment","src":"15191:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15325:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15199:124:12"},"nodeType":"YulFunctionCall","src":"15199:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15191:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15069:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15084:4:12","type":""}],"src":"14918:419:12"},{"body":{"nodeType":"YulBlock","src":"15514:248:12","statements":[{"nodeType":"YulAssignment","src":"15524:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15536:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15547:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15532:3:12"},"nodeType":"YulFunctionCall","src":"15532:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15524:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15571:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15582:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15567:3:12"},"nodeType":"YulFunctionCall","src":"15567:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15590:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"15596:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15586:3:12"},"nodeType":"YulFunctionCall","src":"15586:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15560:6:12"},"nodeType":"YulFunctionCall","src":"15560:47:12"},"nodeType":"YulExpressionStatement","src":"15560:47:12"},{"nodeType":"YulAssignment","src":"15616:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15750:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15624:124:12"},"nodeType":"YulFunctionCall","src":"15624:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15616:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15494:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15509:4:12","type":""}],"src":"15343:419:12"},{"body":{"nodeType":"YulBlock","src":"15939:248:12","statements":[{"nodeType":"YulAssignment","src":"15949:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15961:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15972:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15957:3:12"},"nodeType":"YulFunctionCall","src":"15957:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15949:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15996:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"16007:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15992:3:12"},"nodeType":"YulFunctionCall","src":"15992:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16015:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"16021:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16011:3:12"},"nodeType":"YulFunctionCall","src":"16011:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15985:6:12"},"nodeType":"YulFunctionCall","src":"15985:47:12"},"nodeType":"YulExpressionStatement","src":"15985:47:12"},{"nodeType":"YulAssignment","src":"16041:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16175:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16049:124:12"},"nodeType":"YulFunctionCall","src":"16049:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16041:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15919:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15934:4:12","type":""}],"src":"15768:419:12"},{"body":{"nodeType":"YulBlock","src":"16364:248:12","statements":[{"nodeType":"YulAssignment","src":"16374:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16386:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"16397:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16382:3:12"},"nodeType":"YulFunctionCall","src":"16382:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16374:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16421:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"16432:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16417:3:12"},"nodeType":"YulFunctionCall","src":"16417:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16440:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"16446:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16436:3:12"},"nodeType":"YulFunctionCall","src":"16436:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16410:6:12"},"nodeType":"YulFunctionCall","src":"16410:47:12"},"nodeType":"YulExpressionStatement","src":"16410:47:12"},{"nodeType":"YulAssignment","src":"16466:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16600:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16474:124:12"},"nodeType":"YulFunctionCall","src":"16474:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16466:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16344:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16359:4:12","type":""}],"src":"16193:419:12"},{"body":{"nodeType":"YulBlock","src":"16790:254:12","statements":[{"nodeType":"YulAssignment","src":"16800:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16812:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"16823:3:12","type":"","value":"384"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16808:3:12"},"nodeType":"YulFunctionCall","src":"16808:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16800:4:12"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16927:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16940:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"16951:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16936:3:12"},"nodeType":"YulFunctionCall","src":"16936:17:12"}],"functionName":{"name":"abi_encode_t_struct$__Order_$942_memory_ptr_to_t_struct$__Order_$942_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16837:89:12"},"nodeType":"YulFunctionCall","src":"16837:117:12"},"nodeType":"YulExpressionStatement","src":"16837:117:12"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17008:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17021:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"17032:3:12","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17017:3:12"},"nodeType":"YulFunctionCall","src":"17017:19:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16964:43:12"},"nodeType":"YulFunctionCall","src":"16964:73:12"},"nodeType":"YulExpressionStatement","src":"16964:73:12"}]},"name":"abi_encode_tuple_t_struct$__Order_$942_memory_ptr_t_uint256__to_t_struct$__Order_$942_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16754:9:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16766:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16774:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16785:4:12","type":""}],"src":"16618:426:12"},{"body":{"nodeType":"YulBlock","src":"17148:124:12","statements":[{"nodeType":"YulAssignment","src":"17158:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17170:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"17181:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17166:3:12"},"nodeType":"YulFunctionCall","src":"17166:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17158:4:12"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17238:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17251:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"17262:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17247:3:12"},"nodeType":"YulFunctionCall","src":"17247:17:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17194:43:12"},"nodeType":"YulFunctionCall","src":"17194:71:12"},"nodeType":"YulExpressionStatement","src":"17194:71:12"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17120:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17132:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17143:4:12","type":""}],"src":"17050:222:12"},{"body":{"nodeType":"YulBlock","src":"17686:1037:12","statements":[{"nodeType":"YulAssignment","src":"17696:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17708:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"17719:3:12","type":"","value":"384"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17704:3:12"},"nodeType":"YulFunctionCall","src":"17704:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17696:4:12"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17777:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17790:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"17801:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17786:3:12"},"nodeType":"YulFunctionCall","src":"17786:17:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17733:43:12"},"nodeType":"YulFunctionCall","src":"17733:71:12"},"nodeType":"YulExpressionStatement","src":"17733:71:12"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17864:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17877:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"17888:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17873:3:12"},"nodeType":"YulFunctionCall","src":"17873:18:12"}],"functionName":{"name":"abi_encode_t_enum$_Side_$971_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"17814:49:12"},"nodeType":"YulFunctionCall","src":"17814:78:12"},"nodeType":"YulExpressionStatement","src":"17814:78:12"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17946:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17959:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"17970:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17955:3:12"},"nodeType":"YulFunctionCall","src":"17955:18:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17902:43:12"},"nodeType":"YulFunctionCall","src":"17902:72:12"},"nodeType":"YulExpressionStatement","src":"17902:72:12"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"18028:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18041:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"18052:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18037:3:12"},"nodeType":"YulFunctionCall","src":"18037:18:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17984:43:12"},"nodeType":"YulFunctionCall","src":"17984:72:12"},"nodeType":"YulExpressionStatement","src":"17984:72:12"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"18110:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18123:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"18134:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18119:3:12"},"nodeType":"YulFunctionCall","src":"18119:19:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18066:43:12"},"nodeType":"YulFunctionCall","src":"18066:73:12"},"nodeType":"YulExpressionStatement","src":"18066:73:12"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"18193:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18206:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"18217:3:12","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18202:3:12"},"nodeType":"YulFunctionCall","src":"18202:19:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18149:43:12"},"nodeType":"YulFunctionCall","src":"18149:73:12"},"nodeType":"YulExpressionStatement","src":"18149:73:12"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"18276:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18289:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"18300:3:12","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18285:3:12"},"nodeType":"YulFunctionCall","src":"18285:19:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18232:43:12"},"nodeType":"YulFunctionCall","src":"18232:73:12"},"nodeType":"YulExpressionStatement","src":"18232:73:12"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"18359:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18372:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"18383:3:12","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18368:3:12"},"nodeType":"YulFunctionCall","src":"18368:19:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18315:43:12"},"nodeType":"YulFunctionCall","src":"18315:73:12"},"nodeType":"YulExpressionStatement","src":"18315:73:12"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"18442:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18455:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"18466:3:12","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18451:3:12"},"nodeType":"YulFunctionCall","src":"18451:19:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18398:43:12"},"nodeType":"YulFunctionCall","src":"18398:73:12"},"nodeType":"YulExpressionStatement","src":"18398:73:12"},{"expression":{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"18525:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18538:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"18549:3:12","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18534:3:12"},"nodeType":"YulFunctionCall","src":"18534:19:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18481:43:12"},"nodeType":"YulFunctionCall","src":"18481:73:12"},"nodeType":"YulExpressionStatement","src":"18481:73:12"},{"expression":{"arguments":[{"name":"value10","nodeType":"YulIdentifier","src":"18602:7:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18616:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"18627:3:12","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18612:3:12"},"nodeType":"YulFunctionCall","src":"18612:19:12"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"18564:37:12"},"nodeType":"YulFunctionCall","src":"18564:68:12"},"nodeType":"YulExpressionStatement","src":"18564:68:12"},{"expression":{"arguments":[{"name":"value11","nodeType":"YulIdentifier","src":"18686:7:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18700:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"18711:3:12","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18696:3:12"},"nodeType":"YulFunctionCall","src":"18696:19:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18642:43:12"},"nodeType":"YulFunctionCall","src":"18642:74:12"},"nodeType":"YulExpressionStatement","src":"18642:74:12"}]},"name":"abi_encode_tuple_t_uint256_t_enum$_Side_$971_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint8_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17568:9:12","type":""},{"name":"value11","nodeType":"YulTypedName","src":"17580:7:12","type":""},{"name":"value10","nodeType":"YulTypedName","src":"17589:7:12","type":""},{"name":"value9","nodeType":"YulTypedName","src":"17598:6:12","type":""},{"name":"value8","nodeType":"YulTypedName","src":"17606:6:12","type":""},{"name":"value7","nodeType":"YulTypedName","src":"17614:6:12","type":""},{"name":"value6","nodeType":"YulTypedName","src":"17622:6:12","type":""},{"name":"value5","nodeType":"YulTypedName","src":"17630:6:12","type":""},{"name":"value4","nodeType":"YulTypedName","src":"17638:6:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17646:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17654:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17662:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17670:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17681:4:12","type":""}],"src":"17278:1445:12"},{"body":{"nodeType":"YulBlock","src":"19108:953:12","statements":[{"nodeType":"YulAssignment","src":"19118:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19130:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"19141:3:12","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19126:3:12"},"nodeType":"YulFunctionCall","src":"19126:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19118:4:12"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19199:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19212:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"19223:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19208:3:12"},"nodeType":"YulFunctionCall","src":"19208:17:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19155:43:12"},"nodeType":"YulFunctionCall","src":"19155:71:12"},"nodeType":"YulExpressionStatement","src":"19155:71:12"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19286:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19299:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"19310:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19295:3:12"},"nodeType":"YulFunctionCall","src":"19295:18:12"}],"functionName":{"name":"abi_encode_t_enum$_Side_$971_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"19236:49:12"},"nodeType":"YulFunctionCall","src":"19236:78:12"},"nodeType":"YulExpressionStatement","src":"19236:78:12"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"19368:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19381:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"19392:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19377:3:12"},"nodeType":"YulFunctionCall","src":"19377:18:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19324:43:12"},"nodeType":"YulFunctionCall","src":"19324:72:12"},"nodeType":"YulExpressionStatement","src":"19324:72:12"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"19450:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19463:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"19474:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19459:3:12"},"nodeType":"YulFunctionCall","src":"19459:18:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19406:43:12"},"nodeType":"YulFunctionCall","src":"19406:72:12"},"nodeType":"YulExpressionStatement","src":"19406:72:12"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"19532:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19545:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"19556:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19541:3:12"},"nodeType":"YulFunctionCall","src":"19541:19:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19488:43:12"},"nodeType":"YulFunctionCall","src":"19488:73:12"},"nodeType":"YulExpressionStatement","src":"19488:73:12"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"19615:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19628:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"19639:3:12","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19624:3:12"},"nodeType":"YulFunctionCall","src":"19624:19:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19571:43:12"},"nodeType":"YulFunctionCall","src":"19571:73:12"},"nodeType":"YulExpressionStatement","src":"19571:73:12"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"19698:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19711:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"19722:3:12","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19707:3:12"},"nodeType":"YulFunctionCall","src":"19707:19:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19654:43:12"},"nodeType":"YulFunctionCall","src":"19654:73:12"},"nodeType":"YulExpressionStatement","src":"19654:73:12"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"19781:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19794:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"19805:3:12","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19790:3:12"},"nodeType":"YulFunctionCall","src":"19790:19:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19737:43:12"},"nodeType":"YulFunctionCall","src":"19737:73:12"},"nodeType":"YulExpressionStatement","src":"19737:73:12"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"19864:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19877:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"19888:3:12","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19873:3:12"},"nodeType":"YulFunctionCall","src":"19873:19:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19820:43:12"},"nodeType":"YulFunctionCall","src":"19820:73:12"},"nodeType":"YulExpressionStatement","src":"19820:73:12"},{"expression":{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"19947:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19960:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"19971:3:12","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19956:3:12"},"nodeType":"YulFunctionCall","src":"19956:19:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19903:43:12"},"nodeType":"YulFunctionCall","src":"19903:73:12"},"nodeType":"YulExpressionStatement","src":"19903:73:12"},{"expression":{"arguments":[{"name":"value10","nodeType":"YulIdentifier","src":"20024:7:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20038:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"20049:3:12","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20034:3:12"},"nodeType":"YulFunctionCall","src":"20034:19:12"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"19986:37:12"},"nodeType":"YulFunctionCall","src":"19986:68:12"},"nodeType":"YulExpressionStatement","src":"19986:68:12"}]},"name":"abi_encode_tuple_t_uint256_t_enum$_Side_$971_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint8_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18999:9:12","type":""},{"name":"value10","nodeType":"YulTypedName","src":"19011:7:12","type":""},{"name":"value9","nodeType":"YulTypedName","src":"19020:6:12","type":""},{"name":"value8","nodeType":"YulTypedName","src":"19028:6:12","type":""},{"name":"value7","nodeType":"YulTypedName","src":"19036:6:12","type":""},{"name":"value6","nodeType":"YulTypedName","src":"19044:6:12","type":""},{"name":"value5","nodeType":"YulTypedName","src":"19052:6:12","type":""},{"name":"value4","nodeType":"YulTypedName","src":"19060:6:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19068:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19076:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19084:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19092:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19103:4:12","type":""}],"src":"18729:1332:12"},{"body":{"nodeType":"YulBlock","src":"20107:35:12","statements":[{"nodeType":"YulAssignment","src":"20117:19:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20133:2:12","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20127:5:12"},"nodeType":"YulFunctionCall","src":"20127:9:12"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20117:6:12"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"20100:6:12","type":""}],"src":"20067:75:12"},{"body":{"nodeType":"YulBlock","src":"20244:73:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20261:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"20266:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20254:6:12"},"nodeType":"YulFunctionCall","src":"20254:19:12"},"nodeType":"YulExpressionStatement","src":"20254:19:12"},{"nodeType":"YulAssignment","src":"20282:29:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20301:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"20306:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20297:3:12"},"nodeType":"YulFunctionCall","src":"20297:14:12"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"20282:11:12"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20216:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"20221:6:12","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"20232:11:12","type":""}],"src":"20148:169:12"},{"body":{"nodeType":"YulBlock","src":"20367:261:12","statements":[{"nodeType":"YulAssignment","src":"20377:25:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20400:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20382:17:12"},"nodeType":"YulFunctionCall","src":"20382:20:12"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"20377:1:12"}]},{"nodeType":"YulAssignment","src":"20411:25:12","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20434:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20416:17:12"},"nodeType":"YulFunctionCall","src":"20416:20:12"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"20411:1:12"}]},{"body":{"nodeType":"YulBlock","src":"20574:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20576:16:12"},"nodeType":"YulFunctionCall","src":"20576:18:12"},"nodeType":"YulExpressionStatement","src":"20576:18:12"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20495:1:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20502:66:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"20570:1:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20498:3:12"},"nodeType":"YulFunctionCall","src":"20498:74:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20492:2:12"},"nodeType":"YulFunctionCall","src":"20492:81:12"},"nodeType":"YulIf","src":"20489:107:12"},{"nodeType":"YulAssignment","src":"20606:16:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20617:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"20620:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20613:3:12"},"nodeType":"YulFunctionCall","src":"20613:9:12"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"20606:3:12"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"20354:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"20357:1:12","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"20363:3:12","type":""}],"src":"20323:305:12"},{"body":{"nodeType":"YulBlock","src":"20679:146:12","statements":[{"nodeType":"YulAssignment","src":"20689:25:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20712:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20694:17:12"},"nodeType":"YulFunctionCall","src":"20694:20:12"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"20689:1:12"}]},{"nodeType":"YulAssignment","src":"20723:25:12","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20746:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20728:17:12"},"nodeType":"YulFunctionCall","src":"20728:20:12"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"20723:1:12"}]},{"body":{"nodeType":"YulBlock","src":"20770:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20772:16:12"},"nodeType":"YulFunctionCall","src":"20772:18:12"},"nodeType":"YulExpressionStatement","src":"20772:18:12"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20764:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"20767:1:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20761:2:12"},"nodeType":"YulFunctionCall","src":"20761:8:12"},"nodeType":"YulIf","src":"20758:34:12"},{"nodeType":"YulAssignment","src":"20802:17:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20814:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"20817:1:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20810:3:12"},"nodeType":"YulFunctionCall","src":"20810:9:12"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"20802:4:12"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"20665:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"20668:1:12","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"20674:4:12","type":""}],"src":"20634:191:12"},{"body":{"nodeType":"YulBlock","src":"20876:51:12","statements":[{"nodeType":"YulAssignment","src":"20886:35:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20915:5:12"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"20897:17:12"},"nodeType":"YulFunctionCall","src":"20897:24:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"20886:7:12"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20858:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"20868:7:12","type":""}],"src":"20831:96:12"},{"body":{"nodeType":"YulBlock","src":"20975:48:12","statements":[{"nodeType":"YulAssignment","src":"20985:32:12","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21010:5:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21003:6:12"},"nodeType":"YulFunctionCall","src":"21003:13:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20996:6:12"},"nodeType":"YulFunctionCall","src":"20996:21:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"20985:7:12"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20957:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"20967:7:12","type":""}],"src":"20933:90:12"},{"body":{"nodeType":"YulBlock","src":"21082:74:12","statements":[{"nodeType":"YulAssignment","src":"21092:16:12","value":{"name":"value","nodeType":"YulIdentifier","src":"21103:5:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"21092:7:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21144:5:12"}],"functionName":{"name":"validator_assert_t_enum$_Side_$971","nodeType":"YulIdentifier","src":"21109:34:12"},"nodeType":"YulFunctionCall","src":"21109:41:12"},"nodeType":"YulExpressionStatement","src":"21109:41:12"}]},"name":"cleanup_t_enum$_Side_$971","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21064:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"21074:7:12","type":""}],"src":"21029:127:12"},{"body":{"nodeType":"YulBlock","src":"21207:81:12","statements":[{"nodeType":"YulAssignment","src":"21217:65:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21232:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"21239:42:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21228:3:12"},"nodeType":"YulFunctionCall","src":"21228:54:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"21217:7:12"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21189:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"21199:7:12","type":""}],"src":"21162:126:12"},{"body":{"nodeType":"YulBlock","src":"21339:32:12","statements":[{"nodeType":"YulAssignment","src":"21349:16:12","value":{"name":"value","nodeType":"YulIdentifier","src":"21360:5:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"21349:7:12"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21321:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"21331:7:12","type":""}],"src":"21294:77:12"},{"body":{"nodeType":"YulBlock","src":"21443:61:12","statements":[{"nodeType":"YulAssignment","src":"21453:45:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21492:5:12"}],"functionName":{"name":"cleanup_t_enum$_Side_$971","nodeType":"YulIdentifier","src":"21466:25:12"},"nodeType":"YulFunctionCall","src":"21466:32:12"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"21453:9:12"}]}]},"name":"convert_t_enum$_Side_$971_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21423:5:12","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"21433:9:12","type":""}],"src":"21377:127:12"},{"body":{"nodeType":"YulBlock","src":"21553:190:12","statements":[{"nodeType":"YulAssignment","src":"21563:33:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21590:5:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21572:17:12"},"nodeType":"YulFunctionCall","src":"21572:24:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21563:5:12"}]},{"body":{"nodeType":"YulBlock","src":"21686:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21688:16:12"},"nodeType":"YulFunctionCall","src":"21688:18:12"},"nodeType":"YulExpressionStatement","src":"21688:18:12"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21611:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"21618:66:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21608:2:12"},"nodeType":"YulFunctionCall","src":"21608:77:12"},"nodeType":"YulIf","src":"21605:103:12"},{"nodeType":"YulAssignment","src":"21717:20:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21728:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"21735:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21724:3:12"},"nodeType":"YulFunctionCall","src":"21724:13:12"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"21717:3:12"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21539:5:12","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"21549:3:12","type":""}],"src":"21510:233:12"},{"body":{"nodeType":"YulBlock","src":"21777:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21794:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21797:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21787:6:12"},"nodeType":"YulFunctionCall","src":"21787:88:12"},"nodeType":"YulExpressionStatement","src":"21787:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21891:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21894:4:12","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21884:6:12"},"nodeType":"YulFunctionCall","src":"21884:15:12"},"nodeType":"YulExpressionStatement","src":"21884:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21915:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21918:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21908:6:12"},"nodeType":"YulFunctionCall","src":"21908:15:12"},"nodeType":"YulExpressionStatement","src":"21908:15:12"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"21749:180:12"},{"body":{"nodeType":"YulBlock","src":"21963:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21980:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21983:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21973:6:12"},"nodeType":"YulFunctionCall","src":"21973:88:12"},"nodeType":"YulExpressionStatement","src":"21973:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22077:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22080:4:12","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22070:6:12"},"nodeType":"YulFunctionCall","src":"22070:15:12"},"nodeType":"YulExpressionStatement","src":"22070:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22101:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22104:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22094:6:12"},"nodeType":"YulFunctionCall","src":"22094:15:12"},"nodeType":"YulExpressionStatement","src":"22094:15:12"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"21935:180:12"},{"body":{"nodeType":"YulBlock","src":"22149:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22166:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22169:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22159:6:12"},"nodeType":"YulFunctionCall","src":"22159:88:12"},"nodeType":"YulExpressionStatement","src":"22159:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22263:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22266:4:12","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22256:6:12"},"nodeType":"YulFunctionCall","src":"22256:15:12"},"nodeType":"YulExpressionStatement","src":"22256:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22287:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22290:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22280:6:12"},"nodeType":"YulFunctionCall","src":"22280:15:12"},"nodeType":"YulExpressionStatement","src":"22280:15:12"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"22121:180:12"},{"body":{"nodeType":"YulBlock","src":"22335:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22352:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22355:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22345:6:12"},"nodeType":"YulFunctionCall","src":"22345:88:12"},"nodeType":"YulExpressionStatement","src":"22345:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22449:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22452:4:12","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22442:6:12"},"nodeType":"YulFunctionCall","src":"22442:15:12"},"nodeType":"YulExpressionStatement","src":"22442:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22473:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22476:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22466:6:12"},"nodeType":"YulFunctionCall","src":"22466:15:12"},"nodeType":"YulExpressionStatement","src":"22466:15:12"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"22307:180:12"},{"body":{"nodeType":"YulBlock","src":"22582:28:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22599:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22602:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22592:6:12"},"nodeType":"YulFunctionCall","src":"22592:12:12"},"nodeType":"YulExpressionStatement","src":"22592:12:12"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"22493:117:12"},{"body":{"nodeType":"YulBlock","src":"22705:28:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22722:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22725:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22715:6:12"},"nodeType":"YulFunctionCall","src":"22715:12:12"},"nodeType":"YulExpressionStatement","src":"22715:12:12"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"22616:117:12"},{"body":{"nodeType":"YulBlock","src":"22845:60:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22867:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"22875:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22863:3:12"},"nodeType":"YulFunctionCall","src":"22863:14:12"},{"hexValue":"496e76616c6964204f72646572204944","kind":"string","nodeType":"YulLiteral","src":"22879:18:12","type":"","value":"Invalid Order ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22856:6:12"},"nodeType":"YulFunctionCall","src":"22856:42:12"},"nodeType":"YulExpressionStatement","src":"22856:42:12"}]},"name":"store_literal_in_memory_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22837:6:12","type":""}],"src":"22739:166:12"},{"body":{"nodeType":"YulBlock","src":"23017:119:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23039:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"23047:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23035:3:12"},"nodeType":"YulFunctionCall","src":"23035:14:12"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"23051:34:12","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23028:6:12"},"nodeType":"YulFunctionCall","src":"23028:58:12"},"nodeType":"YulExpressionStatement","src":"23028:58:12"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23107:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"23115:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23103:3:12"},"nodeType":"YulFunctionCall","src":"23103:15:12"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"23120:8:12","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23096:6:12"},"nodeType":"YulFunctionCall","src":"23096:33:12"},"nodeType":"YulExpressionStatement","src":"23096:33:12"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23009:6:12","type":""}],"src":"22911:225:12"},{"body":{"nodeType":"YulBlock","src":"23248:68:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23270:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"23278:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23266:3:12"},"nodeType":"YulFunctionCall","src":"23266:14:12"},{"hexValue":"546f6b656e20756e617661696c61626c6520696e20444558","kind":"string","nodeType":"YulLiteral","src":"23282:26:12","type":"","value":"Token unavailable in DEX"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23259:6:12"},"nodeType":"YulFunctionCall","src":"23259:50:12"},"nodeType":"YulExpressionStatement","src":"23259:50:12"}]},"name":"store_literal_in_memory_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23240:6:12","type":""}],"src":"23142:174:12"},{"body":{"nodeType":"YulBlock","src":"23428:62:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23450:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"23458:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23446:3:12"},"nodeType":"YulFunctionCall","src":"23446:14:12"},{"hexValue":"496e73756666696369656e742046756e6473","kind":"string","nodeType":"YulLiteral","src":"23462:20:12","type":"","value":"Insufficient Funds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23439:6:12"},"nodeType":"YulFunctionCall","src":"23439:44:12"},"nodeType":"YulExpressionStatement","src":"23439:44:12"}]},"name":"store_literal_in_memory_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23420:6:12","type":""}],"src":"23322:168:12"},{"body":{"nodeType":"YulBlock","src":"23602:53:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23624:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"23632:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23620:3:12"},"nodeType":"YulFunctionCall","src":"23620:14:12"},{"hexValue":"4e6f74204f776e6572","kind":"string","nodeType":"YulLiteral","src":"23636:11:12","type":"","value":"Not Owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23613:6:12"},"nodeType":"YulFunctionCall","src":"23613:35:12"},"nodeType":"YulExpressionStatement","src":"23613:35:12"}]},"name":"store_literal_in_memory_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23594:6:12","type":""}],"src":"23496:159:12"},{"body":{"nodeType":"YulBlock","src":"23767:66:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23789:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"23797:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23785:3:12"},"nodeType":"YulFunctionCall","src":"23785:14:12"},{"hexValue":"546f6b656e20616c7265616479207665726966696564","kind":"string","nodeType":"YulLiteral","src":"23801:24:12","type":"","value":"Token already verified"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23778:6:12"},"nodeType":"YulFunctionCall","src":"23778:48:12"},"nodeType":"YulExpressionStatement","src":"23778:48:12"}]},"name":"store_literal_in_memory_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23759:6:12","type":""}],"src":"23661:172:12"},{"body":{"nodeType":"YulBlock","src":"23945:76:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23967:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"23975:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23963:3:12"},"nodeType":"YulFunctionCall","src":"23963:14:12"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"23979:34:12","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23956:6:12"},"nodeType":"YulFunctionCall","src":"23956:58:12"},"nodeType":"YulExpressionStatement","src":"23956:58:12"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23937:6:12","type":""}],"src":"23839:182:12"},{"body":{"nodeType":"YulBlock","src":"24078:62:12","statements":[{"body":{"nodeType":"YulBlock","src":"24112:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"24114:16:12"},"nodeType":"YulFunctionCall","src":"24114:18:12"},"nodeType":"YulExpressionStatement","src":"24114:18:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24101:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"24108:1:12","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"24098:2:12"},"nodeType":"YulFunctionCall","src":"24098:12:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24091:6:12"},"nodeType":"YulFunctionCall","src":"24091:20:12"},"nodeType":"YulIf","src":"24088:46:12"}]},"name":"validator_assert_t_enum$_Side_$971","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24071:5:12","type":""}],"src":"24027:113:12"},{"body":{"nodeType":"YulBlock","src":"24189:79:12","statements":[{"body":{"nodeType":"YulBlock","src":"24246:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24255:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24258:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24248:6:12"},"nodeType":"YulFunctionCall","src":"24248:12:12"},"nodeType":"YulExpressionStatement","src":"24248:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24212:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24237:5:12"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"24219:17:12"},"nodeType":"YulFunctionCall","src":"24219:24:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"24209:2:12"},"nodeType":"YulFunctionCall","src":"24209:35:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24202:6:12"},"nodeType":"YulFunctionCall","src":"24202:43:12"},"nodeType":"YulIf","src":"24199:63:12"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24182:5:12","type":""}],"src":"24146:122:12"},{"body":{"nodeType":"YulBlock","src":"24314:76:12","statements":[{"body":{"nodeType":"YulBlock","src":"24368:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24377:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24380:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24370:6:12"},"nodeType":"YulFunctionCall","src":"24370:12:12"},"nodeType":"YulExpressionStatement","src":"24370:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24337:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24359:5:12"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"24344:14:12"},"nodeType":"YulFunctionCall","src":"24344:21:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"24334:2:12"},"nodeType":"YulFunctionCall","src":"24334:32:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24327:6:12"},"nodeType":"YulFunctionCall","src":"24327:40:12"},"nodeType":"YulIf","src":"24324:60:12"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24307:5:12","type":""}],"src":"24274:116:12"},{"body":{"nodeType":"YulBlock","src":"24447:56:12","statements":[{"body":{"nodeType":"YulBlock","src":"24481:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24490:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24493:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24483:6:12"},"nodeType":"YulFunctionCall","src":"24483:12:12"},"nodeType":"YulExpressionStatement","src":"24483:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24470:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"24477:1:12","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"24467:2:12"},"nodeType":"YulFunctionCall","src":"24467:12:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24460:6:12"},"nodeType":"YulFunctionCall","src":"24460:20:12"},"nodeType":"YulIf","src":"24457:40:12"}]},"name":"validator_revert_t_enum$_Side_$971","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24440:5:12","type":""}],"src":"24396:107:12"},{"body":{"nodeType":"YulBlock","src":"24552:79:12","statements":[{"body":{"nodeType":"YulBlock","src":"24609:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24618:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24621:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24611:6:12"},"nodeType":"YulFunctionCall","src":"24611:12:12"},"nodeType":"YulExpressionStatement","src":"24611:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24575:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24600:5:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24582:17:12"},"nodeType":"YulFunctionCall","src":"24582:24:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"24572:2:12"},"nodeType":"YulFunctionCall","src":"24572:35:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24565:6:12"},"nodeType":"YulFunctionCall","src":"24565:43:12"},"nodeType":"YulIf","src":"24562:63:12"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24545:5:12","type":""}],"src":"24509:122:12"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_enum$_Side_$971(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Side_$971(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_enum$_Side_$971(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_Side_$971(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_enum$_Side_$971t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Side_$971(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_enum$_Side_$971t_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Side_$971(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_enum$_Side_$971t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_Side_$971(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_enum$_Side_$971_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_Side_$971_to_t_uint8(value))\n    }\n\n    function abi_encode_t_enum$_Side_$971_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Side_$971_to_t_uint8(value))\n    }\n\n    function abi_encode_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    // struct Exchange._Order -> struct Exchange._Order\n    function abi_encode_t_struct$__Order_$942_memory_ptr_to_t_struct$__Order_$942_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0160)\n\n        {\n            // id\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // side\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_enum$_Side_$971_to_t_uint8(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // user\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // tokenA\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // amountA\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // tokenB\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountB\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // rate\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // originalAmountA\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0100))\n        }\n\n        {\n            // originalAmountB\n\n            let memberValue0 := mload(add(value, 0x0120))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0120))\n        }\n\n        {\n            // waiveFees\n\n            let memberValue0 := mload(add(value, 0x0140))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x0140))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$__Order_$942_memory_ptr_t_uint256__to_t_struct$__Order_$942_memory_ptr_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 384)\n\n        abi_encode_t_struct$__Order_$942_memory_ptr_to_t_struct$__Order_$942_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 352))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_enum$_Side_$971_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint8_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart , value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 384)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_Side_$971_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value9,  add(headStart, 288))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value10,  add(headStart, 320))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value11,  add(headStart, 352))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_enum$_Side_$971_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint8_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 352)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_Side_$971_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_address_to_t_address_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value9,  add(headStart, 288))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value10,  add(headStart, 320))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_enum$_Side_$971(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Side_$971(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_enum$_Side_$971_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Side_$971(value)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Order ID\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token unavailable in DEX\")\n\n    }\n\n    function store_literal_in_memory_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient Funds\")\n\n    }\n\n    function store_literal_in_memory_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not Owner\")\n\n    }\n\n    function store_literal_in_memory_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token already verified\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_assert_t_enum$_Side_$971(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_enum$_Side_$971(value) {\n        if iszero(lt(value, 2)) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":12,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101215760003560e01c80638da5cb5b116100ad578063bd8098ec11610071578063bd8098ec1461030a578063c3364be414610345578063e947a69514610375578063f2fde38b146103a5578063f9242d9a146103c157610121565b80638da5cb5b1461026357806392f63d2e146102815780639c07ce261461029f5780639ead7222146102bd578063af81c5b9146102ee57610121565b8063609ae6b5116100f4578063609ae6b5146101d257806362c09cfa146102035780636f4e410b1461021f578063715018a61461023b5780637bf1a6271461024557610121565b80631027b219146101265780631347d60e14610156578063182cffeb146101725780631f69565f146101a2575b600080fd5b610140600480360381019061013b9190612c42565b6103fb565b60405161014d919061320f565b60405180910390f35b610170600480360381019061016b9190612e0f565b6104b1565b005b61018c60048036038101906101879190612ebc565b610f4a565b604051610199919061320f565b60405180910390f35b6101bc60048036038101906101b79190612c42565b6111fa565b6040516101c99190613335565b60405180910390f35b6101ec60048036038101906101e79190612d7c565b6112d0565b6040516101fa92919061330a565b60405180910390f35b61021d60048036038101906102189190612cef565b61159c565b005b61023960048036038101906102349190612cef565b611b79565b005b610243612155565b005b61024d612169565b60405161025a919061315d565b60405180910390f35b61026b61218f565b604051610278919061315d565b60405180910390f35b6102896121b8565b604051610296919061315d565b60405180910390f35b6102a76121de565b6040516102b49190613335565b60405180910390f35b6102d760048036038101906102d29190612e62565b6121e4565b6040516102e59291906131e6565b60405180910390f35b61030860048036038101906103039190612caf565b612238565b005b610324600480360381019061031f9190612d7c565b612336565b60405161033c9c9b9a99989796959493929190613350565b60405180910390f35b61035f600480360381019061035a9190612c6f565b61243a565b60405161036c9190613335565b60405180910390f35b61038f600480360381019061038a9190612dcf565b6124aa565b60405161039c9190613335565b60405180910390f35b6103bf60048036038101906103ba9190612c42565b61251a565b005b6103db60048036038101906103d69190612d7c565b61259e565b6040516103f29b9a9998979695949392919061340a565b60405180910390f35b600080600090505b6007805490508110156104a6578273ffffffffffffffffffffffffffffffffffffffff166007828154811061043b5761043a613693565b5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156104935760019150506104ac565b808061049e906135bd565b915050610403565b50600090505b919050565b8183826104bf838383610f4a565b6104fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f59061322a565b60405180910390fd5b83610508816103fb565b610547576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053e9061326a565b60405180910390fd5b6000600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600089600181111561059d5761059c613635565b5b815260200190815260200160002090506000818054905090506105be612812565b600080600090505b838110156107d8578a8582815481106105e2576105e1613693565b5b90600052602060002090600a02016000015414156107c5578091508481815481106106105761060f613693565b5b90600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff16600181111561065957610658613635565b5b600181111561066b5761066a613635565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff16151515158152505092506107d8565b80806107d0906135bd565b9150506105c6565b50600b60009054906101000a900460ff16156109f957816040015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610860576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610857906132aa565b60405180910390fd5b6000600181111561087457610873613635565b5b8b600181111561088757610886613635565b5b141561092e57600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346a8f820338460a001518560c0015160006040518563ffffffff1660e01b81526004016108f794939291906131a1565b600060405180830381600087803b15801561091157600080fd5b505af1158015610925573d6000803e3d6000fd5b505050506109f8565b60018081111561094157610940613635565b5b8b600181111561095457610953613635565b5b14156109f757600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346a8f820338460600151856080015160006040518563ffffffff1660e01b81526004016109c494939291906131a1565b600060405180830381600087803b1580156109de57600080fd5b505af11580156109f2573d6000803e3d6000fd5b505050505b5b5b60008190505b600184610a0c919061351c565b811015610c595784610a2860018361269c90919063ffffffff16565b81548110610a3957610a38613693565b5b90600052602060002090600a0201858281548110610a5a57610a59613693565b5b90600052602060002090600a0201600082015481600001556001820160009054906101000a900460ff168160010160006101000a81548160ff02191690836001811115610aaa57610aa9613635565b5b02179055506001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600382015481600301556004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600582015481600501556006820154816006015560078201548160070155600882015481600801556009820160009054906101000a900460ff168160090160006101000a81548160ff0219169083151502179055509050508080610c51906135bd565b9150506109ff565b5083610c6f6001856126b290919063ffffffff16565b81548110610c8057610c7f613693565b5b90600052602060002090600a02016000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600090556006820160009055600782016000905560088201600090556009820160006101000a81549060ff0219169055505083805480610d6f57610d6e613664565b5b60019003818190600052602060002090600a02016000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600090556006820160009055600782016000905560088201600090556009820160006101000a81549060ff02191690555050905583600860008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008d6001811115610eaa57610ea9613635565b5b8152602001908152602001600020908054610ec69291906128c2565b507fa1cc643491754200d3eca5769e524a0fd00f9b0862b18d0da7d6e7277a83dfda8a83602001518460400151856060015186608001518760a001518860c001518960e001518a61010001518b61012001518c6101400151604051610f359b9a9998979695949392919061340a565b60405180910390a15050505050505050505050565b600080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000856001811115610fa157610fa0613635565b5b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561119657838290600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff16600181111561102257611021613635565b5b600181111561103457611033613635565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff16151515158152505081526020019060010190610fcf565b50505050905060005b81518110156111ec57858282815181106111bc576111bb613693565b5b60200260200101516000015114156111d9576001925050506111f3565b80806111e4906135bd565b91505061119f565b5060009150505b9392505050565b600080600090505b6007805490508110156112c9578273ffffffffffffffffffffffffffffffffffffffff166007828154811061123a57611239613693565b5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156112b6576007818154811061129c5761129b613693565b5b9060005260206000209060020201600101549150506112cb565b80806112c1906135bd565b915050611202565b505b919050565b6112d8612812565b600080600090506000600860008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561151857838290600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff1660018111156113a4576113a3613635565b5b60018111156113b6576113b5613635565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff16151515158152505081526020019060010190611351565b505050509050611526612812565b5b815183101561158b578582848151811061154457611543613693565b5b60200260200101516000015114156115785781838151811061156957611568613693565b5b6020026020010151905061158b565b8280611583906135bd565b935050611527565b808394509450505050935093915050565b856115a6816103fb565b6115e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115dc9061326a565b60405180910390fd5b846115ef816103fb565b61162e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116259061326a565b60405180910390fd5b8461179a600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634fc121db338a6040518363ffffffff1660e01b815260040161168f929190613178565b60206040518083038186803b1580156116a757600080fd5b505afa1580156116bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116df9190612e8f565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7888aec8a336040518363ffffffff1660e01b815260040161173c929190613178565b60206040518083038186803b15801561175457600080fd5b505afa158015611768573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061178c9190612e8f565b6126b290919063ffffffff16565b10156117db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117d29061328a565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346a8f82033888860016040518563ffffffff1660e01b815260040161183d94939291906131a1565b600060405180830381600087803b15801561185757600080fd5b505af115801561186b573d6000803e3d6000fd5b50505050600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008060018111156118c3576118c2613635565b5b8152602001908152602001600020604051806101600160405280600a548152602001600060018111156118f9576118f8613635565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018a73ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018873ffffffffffffffffffffffffffffffffffffffff16815260200187815260200186815260200189815260200187815260200185151581525090806001815401808255809150506001900390600052602060002090600a02016000909190919091506000820151816000015560208201518160010160006101000a81548160ff021916908360018111156119d4576119d3613635565b5b021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816003015560a08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816005015560e08201518160060155610100820151816007015561012082015181600801556101408201518160090160006101000a81548160ff02191690831515021790555050507fcb2df66a1a7db52683240584eca4355946d7b80a59dcb7707aa8dd95463ed744600a546000338b8b8b8b8b8f8e8d604051611b4b9b9a9998979695949392919061340a565b60405180910390a1611b696001600a5461269c90919063ffffffff16565b600a819055505050505050505050565b85611b83816103fb565b611bc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bb99061326a565b60405180910390fd5b84611bcc816103fb565b611c0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c029061326a565b60405180910390fd5b86611d77600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634fc121db338c6040518363ffffffff1660e01b8152600401611c6c929190613178565b60206040518083038186803b158015611c8457600080fd5b505afa158015611c98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cbc9190612e8f565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7888aec8c336040518363ffffffff1660e01b8152600401611d19929190613178565b60206040518083038186803b158015611d3157600080fd5b505afa158015611d45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d699190612e8f565b6126b290919063ffffffff16565b1015611db8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611daf9061328a565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346a8f820338a8a60016040518563ffffffff1660e01b8152600401611e1a94939291906131a1565b600060405180830381600087803b158015611e3457600080fd5b505af1158015611e48573d6000803e3d6000fd5b50505050600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600180811115611ea057611e9f613635565b5b8152602001908152602001600020604051806101600160405280600a548152602001600180811115611ed557611ed4613635565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018a73ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018873ffffffffffffffffffffffffffffffffffffffff16815260200187815260200186815260200189815260200187815260200185151581525090806001815401808255809150506001900390600052602060002090600a02016000909190919091506000820151816000015560208201518160010160006101000a81548160ff02191690836001811115611fb057611faf613635565b5b021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816003015560a08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816005015560e08201518160060155610100820151816007015561012082015181600801556101408201518160090160006101000a81548160ff02191690831515021790555050507fcb2df66a1a7db52683240584eca4355946d7b80a59dcb7707aa8dd95463ed744600a546001338b8b8b8b8b8f8e8d6040516121279b9a9998979695949392919061340a565b60405180910390a16121456001600a5461269c90919063ffffffff16565b600a819055505050505050505050565b61215d6126c8565b6121676000612746565b565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5481565b600781815481106121f457600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b6122406126c8565b612249826103fb565b15612289576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612280906132ca565b60405180910390fd5b600760405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505050565b6009602052826000526040600020602052816000526040600020818154811061235e57600080fd5b90600052602060002090600b020160009250925050508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050154908060060154908060070154908060080154908060090160009054906101000a900460ff169080600a015490508c565b6000600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008360018111156124905761248f613635565b5b815260200190815260200160002080549050905092915050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000846001811115612500576124ff613635565b5b815260200190815260200160002080549050905092915050565b6125226126c8565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612592576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125899061324a565b60405180910390fd5b61259b81612746565b50565b600860205282600052604060002060205281600052604060002081815481106125c657600080fd5b90600052602060002090600a020160009250925050508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060154908060070154908060080154908060090160009054906101000a900460ff1690508b565b600081836126aa91906134c6565b905092915050565b600081836126c0919061351c565b905092915050565b6126d061280a565b73ffffffffffffffffffffffffffffffffffffffff166126ee61218f565b73ffffffffffffffffffffffffffffffffffffffff1614612744576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161273b906132ea565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b604051806101600160405280600081526020016000600181111561283957612838613635565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000151581525090565b82805482825590600052602060002090600a028101928215612ae457600052602060002091600a0282015b82811115612ae3578282600082015481600001556001820160009054906101000a900460ff168160010160006101000a81548160ff0219169083600181111561293957612938613635565b5b02179055506001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600382015481600301556004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600582015481600501556006820154816006015560078201548160070155600882015481600801556009820160009054906101000a900460ff168160090160006101000a81548160ff021916908315150217905550505091600a019190600a01906128ed565b5b509050612af19190612af5565b5090565b5b80821115612bd5576000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600090556006820160009055600782016000905560088201600090556009820160006101000a81549060ff021916905550600a01612af6565b5090565b600081359050612be881613820565b92915050565b600081359050612bfd81613837565b92915050565b600081359050612c128161384e565b92915050565b600081359050612c278161385e565b92915050565b600081519050612c3c8161385e565b92915050565b600060208284031215612c5857612c576136c2565b5b6000612c6684828501612bd9565b91505092915050565b60008060408385031215612c8657612c856136c2565b5b6000612c9485828601612bd9565b9250506020612ca585828601612c03565b9150509250929050565b60008060408385031215612cc657612cc56136c2565b5b6000612cd485828601612bd9565b9250506020612ce585828601612c18565b9150509250929050565b60008060008060008060c08789031215612d0c57612d0b6136c2565b5b6000612d1a89828a01612bd9565b9650506020612d2b89828a01612c18565b9550506040612d3c89828a01612bd9565b9450506060612d4d89828a01612c18565b9350506080612d5e89828a01612c18565b92505060a0612d6f89828a01612bee565b9150509295509295509295565b600080600060608486031215612d9557612d946136c2565b5b6000612da386828701612bd9565b9350506020612db486828701612c18565b9250506040612dc586828701612c18565b9150509250925092565b60008060408385031215612de657612de56136c2565b5b6000612df485828601612c03565b9250506020612e0585828601612bd9565b9150509250929050565b600080600060608486031215612e2857612e276136c2565b5b6000612e3686828701612c03565b9350506020612e4786828701612c18565b9250506040612e5886828701612bd9565b9150509250925092565b600060208284031215612e7857612e776136c2565b5b6000612e8684828501612c18565b91505092915050565b600060208284031215612ea557612ea46136c2565b5b6000612eb384828501612c2d565b91505092915050565b600080600060608486031215612ed557612ed46136c2565b5b6000612ee386828701612c18565b9350506020612ef486828701612c03565b9250506040612f0586828701612bd9565b9150509250925092565b612f1881613550565b82525050565b612f2781613550565b82525050565b612f3681613562565b82525050565b612f4581613562565b82525050565b612f54816135ab565b82525050565b612f63816135ab565b82525050565b6000612f766010836134b5565b9150612f81826136c7565b602082019050919050565b6000612f996026836134b5565b9150612fa4826136f0565b604082019050919050565b6000612fbc6018836134b5565b9150612fc78261373f565b602082019050919050565b6000612fdf6012836134b5565b9150612fea82613768565b602082019050919050565b60006130026009836134b5565b915061300d82613791565b602082019050919050565b60006130256016836134b5565b9150613030826137ba565b602082019050919050565b60006130486020836134b5565b9150613053826137e3565b602082019050919050565b61016082016000820151613075600085018261313f565b5060208201516130886020850182612f4b565b50604082015161309b6040850182612f0f565b5060608201516130ae6060850182612f0f565b5060808201516130c1608085018261313f565b5060a08201516130d460a0850182612f0f565b5060c08201516130e760c085018261313f565b5060e08201516130fa60e085018261313f565b5061010082015161310f61010085018261313f565b5061012082015161312461012085018261313f565b50610140820151613139610140850182612f2d565b50505050565b613148816135a1565b82525050565b613157816135a1565b82525050565b60006020820190506131726000830184612f1e565b92915050565b600060408201905061318d6000830185612f1e565b61319a6020830184612f1e565b9392505050565b60006080820190506131b66000830187612f1e565b6131c36020830186612f1e565b6131d0604083018561314e565b6131dd6060830184612f3c565b95945050505050565b60006040820190506131fb6000830185612f1e565b613208602083018461314e565b9392505050565b60006020820190506132246000830184612f3c565b92915050565b6000602082019050818103600083015261324381612f69565b9050919050565b6000602082019050818103600083015261326381612f8c565b9050919050565b6000602082019050818103600083015261328381612faf565b9050919050565b600060208201905081810360008301526132a381612fd2565b9050919050565b600060208201905081810360008301526132c381612ff5565b9050919050565b600060208201905081810360008301526132e381613018565b9050919050565b600060208201905081810360008301526133038161303b565b9050919050565b600061018082019050613320600083018561305e565b61332e61016083018461314e565b9392505050565b600060208201905061334a600083018461314e565b92915050565b600061018082019050613366600083018f61314e565b613373602083018e612f5a565b613380604083018d612f1e565b61338d606083018c612f1e565b61339a608083018b612f1e565b6133a760a083018a61314e565b6133b460c083018961314e565b6133c160e083018861314e565b6133cf61010083018761314e565b6133dd61012083018661314e565b6133eb610140830185612f3c565b6133f961016083018461314e565b9d9c50505050505050505050505050565b600061016082019050613420600083018e61314e565b61342d602083018d612f5a565b61343a604083018c612f1e565b613447606083018b612f1e565b613454608083018a61314e565b61346160a0830189612f1e565b61346e60c083018861314e565b61347b60e083018761314e565b61348961010083018661314e565b61349761012083018561314e565b6134a5610140830184612f3c565b9c9b505050505050505050505050565b600082825260208201905092915050565b60006134d1826135a1565b91506134dc836135a1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561351157613510613606565b5b828201905092915050565b6000613527826135a1565b9150613532836135a1565b92508282101561354557613544613606565b5b828203905092915050565b600061355b82613581565b9050919050565b60008115159050919050565b600081905061357c8261380c565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006135b68261356e565b9050919050565b60006135c8826135a1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156135fb576135fa613606565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b7f496e76616c6964204f7264657220494400000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f546f6b656e20756e617661696c61626c6520696e204445580000000000000000600082015250565b7f496e73756666696369656e742046756e64730000000000000000000000000000600082015250565b7f4e6f74204f776e65720000000000000000000000000000000000000000000000600082015250565b7f546f6b656e20616c726561647920766572696669656400000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6002811061381d5761381c613635565b5b50565b61382981613550565b811461383457600080fd5b50565b61384081613562565b811461384b57600080fd5b50565b6002811061385b57600080fd5b50565b613867816135a1565b811461387257600080fd5b5056fea264697066735822122041c26cfe2b8d6edf8606f17274e34a80911e4e4e01060ba2920418faa686f48b64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xBD8098EC GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBD8098EC EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0xC3364BE4 EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xE947A695 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0xF9242D9A EQ PUSH2 0x3C1 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x92F63D2E EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x9C07CE26 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x9EAD7222 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xAF81C5B9 EQ PUSH2 0x2EE JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x609AE6B5 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x609AE6B5 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x62C09CFA EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x6F4E410B EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x7BF1A627 EQ PUSH2 0x245 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x1027B219 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x1347D60E EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x182CFFEB EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x1F69565F EQ PUSH2 0x1A2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x2C42 JUMP JUMPDEST PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x320F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x170 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x2E0F JUMP JUMPDEST PUSH2 0x4B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x187 SWAP2 SWAP1 PUSH2 0x2EBC JUMP JUMPDEST PUSH2 0xF4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x320F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x2C42 JUMP JUMPDEST PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x3335 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x2D7C JUMP JUMPDEST PUSH2 0x12D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP3 SWAP2 SWAP1 PUSH2 0x330A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x2CEF JUMP JUMPDEST PUSH2 0x159C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x2CEF JUMP JUMPDEST PUSH2 0x1B79 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x243 PUSH2 0x2155 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24D PUSH2 0x2169 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x315D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26B PUSH2 0x218F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x315D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x289 PUSH2 0x21B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x315D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH2 0x21DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x3335 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x2E62 JUMP JUMPDEST PUSH2 0x21E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP3 SWAP2 SWAP1 PUSH2 0x31E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x308 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x2CAF JUMP JUMPDEST PUSH2 0x2238 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x324 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x2D7C JUMP JUMPDEST PUSH2 0x2336 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33C SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x2C6F JUMP JUMPDEST PUSH2 0x243A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x3335 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x2DCF JUMP JUMPDEST PUSH2 0x24AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x3335 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x2C42 JUMP JUMPDEST PUSH2 0x251A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x2D7C JUMP JUMPDEST PUSH2 0x259E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F2 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x340A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x4A6 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x43B JUMPI PUSH2 0x43A PUSH2 0x3693 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x493 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x4AC JUMP JUMPDEST DUP1 DUP1 PUSH2 0x49E SWAP1 PUSH2 0x35BD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x403 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 DUP3 PUSH2 0x4BF DUP4 DUP4 DUP4 PUSH2 0xF4A JUMP JUMPDEST PUSH2 0x4FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F5 SWAP1 PUSH2 0x322A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH2 0x508 DUP2 PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x547 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53E SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x59D JUMPI PUSH2 0x59C PUSH2 0x3635 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH2 0x5BE PUSH2 0x2812 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7D8 JUMPI DUP11 DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5E2 JUMPI PUSH2 0x5E1 PUSH2 0x3693 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x7C5 JUMPI DUP1 SWAP2 POP DUP5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x610 JUMPI PUSH2 0x60F PUSH2 0x3693 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x659 JUMPI PUSH2 0x658 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x66B JUMPI PUSH2 0x66A PUSH2 0x3635 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP3 POP PUSH2 0x7D8 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x7D0 SWAP1 PUSH2 0x35BD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5C6 JUMP JUMPDEST POP PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x9F9 JUMPI DUP2 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x860 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x857 SWAP1 PUSH2 0x32AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x874 JUMPI PUSH2 0x873 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST DUP12 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x887 JUMPI PUSH2 0x886 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x92E JUMPI PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x46A8F820 CALLER DUP5 PUSH1 0xA0 ADD MLOAD DUP6 PUSH1 0xC0 ADD MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x31A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x911 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x925 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x9F8 JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x941 JUMPI PUSH2 0x940 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST DUP12 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x954 JUMPI PUSH2 0x953 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x9F7 JUMPI PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x46A8F820 CALLER DUP5 PUSH1 0x60 ADD MLOAD DUP6 PUSH1 0x80 ADD MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x31A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP JUMPDEST PUSH1 0x1 DUP5 PUSH2 0xA0C SWAP2 SWAP1 PUSH2 0x351C JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xC59 JUMPI DUP5 PUSH2 0xA28 PUSH1 0x1 DUP4 PUSH2 0x269C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xA39 JUMPI PUSH2 0xA38 PUSH2 0x3693 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA5A JUMPI PUSH2 0xA59 PUSH2 0x3693 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xAAA JUMPI PUSH2 0xAA9 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP3 ADD SLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 DUP3 ADD SLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0x6 DUP3 ADD SLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0x7 DUP3 ADD SLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH1 0x8 DUP3 ADD SLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 DUP1 PUSH2 0xC51 SWAP1 PUSH2 0x35BD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9FF JUMP JUMPDEST POP DUP4 PUSH2 0xC6F PUSH1 0x1 DUP6 PUSH2 0x26B2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0x3693 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP DUP4 DUP1 SLOAD DUP1 PUSH2 0xD6F JUMPI PUSH2 0xD6E PUSH2 0x3664 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP SWAP1 SSTORE DUP4 PUSH1 0x8 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xEAA JUMPI PUSH2 0xEA9 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 SLOAD PUSH2 0xEC6 SWAP3 SWAP2 SWAP1 PUSH2 0x28C2 JUMP JUMPDEST POP PUSH32 0xA1CC643491754200D3ECA5769E524A0FD00F9B0862B18D0DA7D6E7277A83DFDA DUP11 DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD DUP7 PUSH1 0x80 ADD MLOAD DUP8 PUSH1 0xA0 ADD MLOAD DUP9 PUSH1 0xC0 ADD MLOAD DUP10 PUSH1 0xE0 ADD MLOAD DUP11 PUSH2 0x100 ADD MLOAD DUP12 PUSH2 0x120 ADD MLOAD DUP13 PUSH2 0x140 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xF35 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x340A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xFA1 JUMPI PUSH2 0xFA0 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1196 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1022 JUMPI PUSH2 0x1021 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1034 JUMPI PUSH2 0x1033 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xFCF JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x11EC JUMPI DUP6 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x11BC JUMPI PUSH2 0x11BB PUSH2 0x3693 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x11D9 JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x11F3 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x11E4 SWAP1 PUSH2 0x35BD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x119F JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x12C9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x123A JUMPI PUSH2 0x1239 PUSH2 0x3693 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x12B6 JUMPI PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x129C JUMPI PUSH2 0x129B PUSH2 0x3693 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP POP PUSH2 0x12CB JUMP JUMPDEST DUP1 DUP1 PUSH2 0x12C1 SWAP1 PUSH2 0x35BD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1202 JUMP JUMPDEST POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12D8 PUSH2 0x2812 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1518 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x13A4 JUMPI PUSH2 0x13A3 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x13B6 JUMPI PUSH2 0x13B5 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1351 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH2 0x1526 PUSH2 0x2812 JUMP JUMPDEST JUMPDEST DUP2 MLOAD DUP4 LT ISZERO PUSH2 0x158B JUMPI DUP6 DUP3 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1544 JUMPI PUSH2 0x1543 PUSH2 0x3693 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x1578 JUMPI DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1569 JUMPI PUSH2 0x1568 PUSH2 0x3693 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x158B JUMP JUMPDEST DUP3 DUP1 PUSH2 0x1583 SWAP1 PUSH2 0x35BD JUMP JUMPDEST SWAP4 POP POP PUSH2 0x1527 JUMP JUMPDEST DUP1 DUP4 SWAP5 POP SWAP5 POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST DUP6 PUSH2 0x15A6 DUP2 PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x15E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15DC SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0x15EF DUP2 PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x162E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1625 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0x179A PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4FC121DB CALLER DUP11 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x168F SWAP3 SWAP2 SWAP1 PUSH2 0x3178 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16DF SWAP2 SWAP1 PUSH2 0x2E8F JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF7888AEC DUP11 CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x173C SWAP3 SWAP2 SWAP1 PUSH2 0x3178 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1754 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1768 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x178C SWAP2 SWAP1 PUSH2 0x2E8F JUMP JUMPDEST PUSH2 0x26B2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x17DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D2 SWAP1 PUSH2 0x328A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x46A8F820 CALLER DUP9 DUP9 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x183D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x31A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1857 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x186B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x8 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x18C3 JUMPI PUSH2 0x18C2 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x18F9 JUMPI PUSH2 0x18F8 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x19D4 JUMPI PUSH2 0x19D3 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH32 0xCB2DF66A1A7DB52683240584ECA4355946D7B80A59DCB7707AA8DD95463ED744 PUSH1 0xA SLOAD PUSH1 0x0 CALLER DUP12 DUP12 DUP12 DUP12 DUP12 DUP16 DUP15 DUP14 PUSH1 0x40 MLOAD PUSH2 0x1B4B SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x340A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1B69 PUSH1 0x1 PUSH1 0xA SLOAD PUSH2 0x269C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP6 PUSH2 0x1B83 DUP2 PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x1BC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BB9 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0x1BCC DUP2 PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x1C0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C02 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH2 0x1D77 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4FC121DB CALLER DUP13 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C6C SWAP3 SWAP2 SWAP1 PUSH2 0x3178 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C98 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CBC SWAP2 SWAP1 PUSH2 0x2E8F JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF7888AEC DUP13 CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D19 SWAP3 SWAP2 SWAP1 PUSH2 0x3178 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D69 SWAP2 SWAP1 PUSH2 0x2E8F JUMP JUMPDEST PUSH2 0x26B2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x1DB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DAF SWAP1 PUSH2 0x328A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x46A8F820 CALLER DUP11 DUP11 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E1A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x31A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x8 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x1EA0 JUMPI PUSH2 0x1E9F PUSH2 0x3635 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x1ED5 JUMPI PUSH2 0x1ED4 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1FB0 JUMPI PUSH2 0x1FAF PUSH2 0x3635 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH32 0xCB2DF66A1A7DB52683240584ECA4355946D7B80A59DCB7707AA8DD95463ED744 PUSH1 0xA SLOAD PUSH1 0x1 CALLER DUP12 DUP12 DUP12 DUP12 DUP12 DUP16 DUP15 DUP14 PUSH1 0x40 MLOAD PUSH2 0x2127 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x340A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x2145 PUSH1 0x1 PUSH1 0xA SLOAD PUSH2 0x269C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x215D PUSH2 0x26C8 JUMP JUMPDEST PUSH2 0x2167 PUSH1 0x0 PUSH2 0x2746 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x21F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x2240 PUSH2 0x26C8 JUMP JUMPDEST PUSH2 0x2249 DUP3 PUSH2 0x3FB JUMP JUMPDEST ISZERO PUSH2 0x2289 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2280 SWAP1 PUSH2 0x32CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x235E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xB MUL ADD PUSH1 0x0 SWAP3 POP SWAP3 POP POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0xA ADD SLOAD SWAP1 POP DUP13 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2490 JUMPI PUSH2 0x248F PUSH2 0x3635 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2500 JUMPI PUSH2 0x24FF PUSH2 0x3635 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2522 PUSH2 0x26C8 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2592 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2589 SWAP1 PUSH2 0x324A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x259B DUP2 PUSH2 0x2746 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x25C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 SWAP3 POP SWAP3 POP POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP12 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x26AA SWAP2 SWAP1 PUSH2 0x34C6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x26C0 SWAP2 SWAP1 PUSH2 0x351C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26D0 PUSH2 0x280A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x26EE PUSH2 0x218F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2744 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x273B SWAP1 PUSH2 0x32EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2839 JUMPI PUSH2 0x2838 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2AE4 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0xA MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2AE3 JUMPI DUP3 DUP3 PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2939 JUMPI PUSH2 0x2938 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP3 ADD SLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 DUP3 ADD SLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0x6 DUP3 ADD SLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0x7 DUP3 ADD SLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH1 0x8 DUP3 ADD SLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP SWAP2 PUSH1 0xA ADD SWAP2 SWAP1 PUSH1 0xA ADD SWAP1 PUSH2 0x28ED JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x2AF1 SWAP2 SWAP1 PUSH2 0x2AF5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2BD5 JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP PUSH1 0xA ADD PUSH2 0x2AF6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2BE8 DUP2 PUSH2 0x3820 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2BFD DUP2 PUSH2 0x3837 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C12 DUP2 PUSH2 0x384E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C27 DUP2 PUSH2 0x385E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C3C DUP2 PUSH2 0x385E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C58 JUMPI PUSH2 0x2C57 PUSH2 0x36C2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C66 DUP5 DUP3 DUP6 ADD PUSH2 0x2BD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C86 JUMPI PUSH2 0x2C85 PUSH2 0x36C2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C94 DUP6 DUP3 DUP7 ADD PUSH2 0x2BD9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2CA5 DUP6 DUP3 DUP7 ADD PUSH2 0x2C03 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CC6 JUMPI PUSH2 0x2CC5 PUSH2 0x36C2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CD4 DUP6 DUP3 DUP7 ADD PUSH2 0x2BD9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2CE5 DUP6 DUP3 DUP7 ADD PUSH2 0x2C18 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2D0C JUMPI PUSH2 0x2D0B PUSH2 0x36C2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D1A DUP10 DUP3 DUP11 ADD PUSH2 0x2BD9 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x2D2B DUP10 DUP3 DUP11 ADD PUSH2 0x2C18 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x2D3C DUP10 DUP3 DUP11 ADD PUSH2 0x2BD9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x2D4D DUP10 DUP3 DUP11 ADD PUSH2 0x2C18 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x2D5E DUP10 DUP3 DUP11 ADD PUSH2 0x2C18 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x2D6F DUP10 DUP3 DUP11 ADD PUSH2 0x2BEE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2D95 JUMPI PUSH2 0x2D94 PUSH2 0x36C2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DA3 DUP7 DUP3 DUP8 ADD PUSH2 0x2BD9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2DB4 DUP7 DUP3 DUP8 ADD PUSH2 0x2C18 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2DC5 DUP7 DUP3 DUP8 ADD PUSH2 0x2C18 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2DE6 JUMPI PUSH2 0x2DE5 PUSH2 0x36C2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DF4 DUP6 DUP3 DUP7 ADD PUSH2 0x2C03 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2E05 DUP6 DUP3 DUP7 ADD PUSH2 0x2BD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2E28 JUMPI PUSH2 0x2E27 PUSH2 0x36C2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E36 DUP7 DUP3 DUP8 ADD PUSH2 0x2C03 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2E47 DUP7 DUP3 DUP8 ADD PUSH2 0x2C18 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2E58 DUP7 DUP3 DUP8 ADD PUSH2 0x2BD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E78 JUMPI PUSH2 0x2E77 PUSH2 0x36C2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E86 DUP5 DUP3 DUP6 ADD PUSH2 0x2C18 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EA5 JUMPI PUSH2 0x2EA4 PUSH2 0x36C2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2EB3 DUP5 DUP3 DUP6 ADD PUSH2 0x2C2D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2ED5 JUMPI PUSH2 0x2ED4 PUSH2 0x36C2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2EE3 DUP7 DUP3 DUP8 ADD PUSH2 0x2C18 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2EF4 DUP7 DUP3 DUP8 ADD PUSH2 0x2C03 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2F05 DUP7 DUP3 DUP8 ADD PUSH2 0x2BD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2F18 DUP2 PUSH2 0x3550 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2F27 DUP2 PUSH2 0x3550 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2F36 DUP2 PUSH2 0x3562 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2F45 DUP2 PUSH2 0x3562 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2F54 DUP2 PUSH2 0x35AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2F63 DUP2 PUSH2 0x35AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F76 PUSH1 0x10 DUP4 PUSH2 0x34B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F81 DUP3 PUSH2 0x36C7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F99 PUSH1 0x26 DUP4 PUSH2 0x34B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FA4 DUP3 PUSH2 0x36F0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FBC PUSH1 0x18 DUP4 PUSH2 0x34B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FC7 DUP3 PUSH2 0x373F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FDF PUSH1 0x12 DUP4 PUSH2 0x34B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FEA DUP3 PUSH2 0x3768 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3002 PUSH1 0x9 DUP4 PUSH2 0x34B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x300D DUP3 PUSH2 0x3791 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3025 PUSH1 0x16 DUP4 PUSH2 0x34B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3030 DUP3 PUSH2 0x37BA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3048 PUSH1 0x20 DUP4 PUSH2 0x34B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3053 DUP3 PUSH2 0x37E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x160 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3075 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x313F JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3088 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2F4B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x309B PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2F0F JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x30AE PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2F0F JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x30C1 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x313F JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x30D4 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x2F0F JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x30E7 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x313F JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x30FA PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x313F JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x310F PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x313F JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x3124 PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x313F JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x3139 PUSH2 0x140 DUP6 ADD DUP3 PUSH2 0x2F2D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3148 DUP2 PUSH2 0x35A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3157 DUP2 PUSH2 0x35A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3172 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x318D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2F1E JUMP JUMPDEST PUSH2 0x319A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2F1E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x31B6 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2F1E JUMP JUMPDEST PUSH2 0x31C3 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2F1E JUMP JUMPDEST PUSH2 0x31D0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x31DD PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2F3C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x31FB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2F1E JUMP JUMPDEST PUSH2 0x3208 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x314E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3224 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3243 DUP2 PUSH2 0x2F69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3263 DUP2 PUSH2 0x2F8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3283 DUP2 PUSH2 0x2FAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32A3 DUP2 PUSH2 0x2FD2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32C3 DUP2 PUSH2 0x2FF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32E3 DUP2 PUSH2 0x3018 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3303 DUP2 PUSH2 0x303B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 ADD SWAP1 POP PUSH2 0x3320 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x305E JUMP JUMPDEST PUSH2 0x332E PUSH2 0x160 DUP4 ADD DUP5 PUSH2 0x314E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x334A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x314E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 ADD SWAP1 POP PUSH2 0x3366 PUSH1 0x0 DUP4 ADD DUP16 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x3373 PUSH1 0x20 DUP4 ADD DUP15 PUSH2 0x2F5A JUMP JUMPDEST PUSH2 0x3380 PUSH1 0x40 DUP4 ADD DUP14 PUSH2 0x2F1E JUMP JUMPDEST PUSH2 0x338D PUSH1 0x60 DUP4 ADD DUP13 PUSH2 0x2F1E JUMP JUMPDEST PUSH2 0x339A PUSH1 0x80 DUP4 ADD DUP12 PUSH2 0x2F1E JUMP JUMPDEST PUSH2 0x33A7 PUSH1 0xA0 DUP4 ADD DUP11 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x33B4 PUSH1 0xC0 DUP4 ADD DUP10 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x33C1 PUSH1 0xE0 DUP4 ADD DUP9 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x33CF PUSH2 0x100 DUP4 ADD DUP8 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x33DD PUSH2 0x120 DUP4 ADD DUP7 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x33EB PUSH2 0x140 DUP4 ADD DUP6 PUSH2 0x2F3C JUMP JUMPDEST PUSH2 0x33F9 PUSH2 0x160 DUP4 ADD DUP5 PUSH2 0x314E JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x3420 PUSH1 0x0 DUP4 ADD DUP15 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x342D PUSH1 0x20 DUP4 ADD DUP14 PUSH2 0x2F5A JUMP JUMPDEST PUSH2 0x343A PUSH1 0x40 DUP4 ADD DUP13 PUSH2 0x2F1E JUMP JUMPDEST PUSH2 0x3447 PUSH1 0x60 DUP4 ADD DUP12 PUSH2 0x2F1E JUMP JUMPDEST PUSH2 0x3454 PUSH1 0x80 DUP4 ADD DUP11 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x3461 PUSH1 0xA0 DUP4 ADD DUP10 PUSH2 0x2F1E JUMP JUMPDEST PUSH2 0x346E PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x347B PUSH1 0xE0 DUP4 ADD DUP8 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x3489 PUSH2 0x100 DUP4 ADD DUP7 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x3497 PUSH2 0x120 DUP4 ADD DUP6 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x34A5 PUSH2 0x140 DUP4 ADD DUP5 PUSH2 0x2F3C JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34D1 DUP3 PUSH2 0x35A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x34DC DUP4 PUSH2 0x35A1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x3511 JUMPI PUSH2 0x3510 PUSH2 0x3606 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3527 DUP3 PUSH2 0x35A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x3532 DUP4 PUSH2 0x35A1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x3545 JUMPI PUSH2 0x3544 PUSH2 0x3606 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x355B DUP3 PUSH2 0x3581 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x357C DUP3 PUSH2 0x380C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35B6 DUP3 PUSH2 0x356E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35C8 DUP3 PUSH2 0x35A1 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x35FB JUMPI PUSH2 0x35FA PUSH2 0x3606 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x496E76616C6964204F7264657220494400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E20756E617661696C61626C6520696E204445580000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742046756E64730000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F74204F776E65720000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E20616C726561647920766572696669656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x381D JUMPI PUSH2 0x381C PUSH2 0x3635 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x3829 DUP2 PUSH2 0x3550 JUMP JUMPDEST DUP2 EQ PUSH2 0x3834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3840 DUP2 PUSH2 0x3562 JUMP JUMPDEST DUP2 EQ PUSH2 0x384B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x385B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3867 DUP2 PUSH2 0x35A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x3872 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0xC2 PUSH13 0xFE2B8D6EDF8606F17274E34A80 SWAP2 0x1E 0x4E 0x4E ADD MOD SIGNEXTEND LOG2 SWAP3 DIV XOR STATICCALL 0xA6 DUP7 DELEGATECALL DUP12 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"387:21459:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20982:272;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6192:1748;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;20386:376;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;21262:254;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19909:469;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3398:1367;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4773:1411;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101:2;;;:::i;:::-;;611:36:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;654:73:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1052:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;779:29;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;20770:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;958:85;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;18447:180;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17185:173;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;882:67:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;20982:272;21044:4;21112:9;21124:1;21112:13;;21107:117;21131:9;:16;;;;21127:1;:20;21107:117;;;21193:6;21173:26;;:9;21183:1;21173:12;;;;;;;;:::i;:::-;;;;;;;;;;;;:16;;;;;;;;;;;;:26;;;21169:43;;;21208:4;21201:11;;;;;21169:43;21149:3;;;;;:::i;:::-;;;;21107:117;;;;21241:5;21234:12;;20982:272;;;;:::o;6192:1748::-;6305:3;6310:4;6316:6;21637:30;21649:3;21654:4;21660:6;21637:11;:30::i;:::-;21629:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;6335:6:::1;21771:23;21787:6;21771:15;:23::i;:::-;21763:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;6354:23:::2;6380:11;:19;6392:6;6380:19;;;;;;;;;;;;;;;:34;6408:4;6400:13;;;;;;;;:::i;:::-;;6380:34;;;;;;;;;;;6354:60;;6425:12;6440:6;:13;;;;6425:28;;6464:19;;:::i;:::-;6496:13;6525:9:::0;6537:1:::2;6525:13;;6520:190;6544:4;6540:1;:8;6520:190;;;6590:3;6574:6;6581:1;6574:9;;;;;;;;:::i;:::-;;;;;;;;;;;;:12;;;:19;6570:129;;;6622:1;6614:9;;6650:6;6657:1;6650:9;;;;;;;;:::i;:::-;;;;;;;;;;;;6642:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;6678:5;;6570:129;6550:3;;;;;:::i;:::-;;;;6520:190;;;;6767:10;;;;;;;;;;;6763:604;;;6816:5;:10;;;6802:24;;:10;:24;;;6794:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;6897:8;6889:16;;;;;;;;:::i;:::-;;:4;:16;;;;;;;;:::i;:::-;;;6885:471;;;6926:6;;;;;;;;;;;:24;;;6973:10;7006:5;:12;;;7041:5;:13;;;7077:5;6926:175;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;6885:471;;;7135:9;7127:17:::0;::::2;;;;;;;:::i;:::-;;:4;:17;;;;;;;;:::i;:::-;;;7123:233;;;7165:6;;;;;;;;;;;:24;;;7212:10;7245:5;:12;;;7280:5;:13;;;7316:5;7165:175;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;7123:233;6885:471;6763:604;7384:9;7396:5;7384:17;;7379:98;7414:1;7407:4;:8;;;;:::i;:::-;7403:1;:12;7379:98;;;7449:6;7456:8;7462:1;7456;:5;;:8;;;;:::i;:::-;7449:16;;;;;;;;:::i;:::-;;;;;;;;;;;;7437:6;7444:1;7437:9;;;;;;;;:::i;:::-;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7417:3;;;;;:::i;:::-;;;;7379:98;;;;7494:6;7501:11;7510:1;7501:4;:8;;:11;;;;:::i;:::-;7494:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;7487:26:::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7524:6;:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7586:6;7549:11;:19;7561:6;7549:19;;;;;;;;;;;;;;;:34;7577:4;7569:13;;;;;;;;:::i;:::-;;7549:34;;;;;;;;;;;:43;;;;;;;;:::i;:::-;;7610:322;7631:3;7649:5;:10;;;7674:5;:10;;;7699:5;:12;;;7726:5;:13;;;7754:5;:12;;;7781:5;:13;;;7809:5;:10;;;7834:5;:21;;;7870:5;:21;;;7906:5;:15;;;7610:322;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;6343:1597;;;;21699:1:::1;6192:1748:::0;;;;;;:::o;20386:376::-;20502:4;20519:22;20544:11;:19;20556:6;20544:19;;;;;;;;;;;;;;;:34;20572:4;20564:13;;;;;;;;:::i;:::-;;20544:34;;;;;;;;;;;20519:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20596:9;20591:141;20615:6;:13;20611:1;:17;20591:141;;;20670:3;20654:6;20661:1;20654:9;;;;;;;;:::i;:::-;;;;;;;;:12;;;:19;20650:71;;;20701:4;20694:11;;;;;;20650:71;20630:3;;;;;:::i;:::-;;;;20591:141;;;;20749:5;20742:12;;;20386:376;;;;;;:::o;21262:254::-;21321:7;21346:9;21358:1;21346:13;;21341:168;21365:9;:16;;;;21361:1;:20;21341:168;;;21427:6;21407:26;;:9;21417:1;21407:12;;;;;;;;:::i;:::-;;;;;;;;;;;;:16;;;;;;;;;;;;:26;;;21403:95;;;21461:9;21471:1;21461:12;;;;;;;;:::i;:::-;;;;;;;;;;;;:21;;;21454:28;;;;;21403:95;21383:3;;;;;:::i;:::-;;;;21341:168;;;;21262:254;;;;:::o;19909:469::-;20034:13;;:::i;:::-;20049:7;20069:9;20081:1;20069:13;;20093:22;20118:11;:19;20130:6;20118:19;;;;;;;;;;;;;;;:25;20138:4;20118:25;;;;;;;;;;;20093:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20154:19;;:::i;:::-;20184:159;20196:6;:13;20192:1;:17;20184:159;;;20251:3;20235:6;20242:1;20235:9;;;;;;;;:::i;:::-;;;;;;;;:12;;;:19;20231:101;;;20283:6;20290:1;20283:9;;;;;;;;:::i;:::-;;;;;;;;20275:17;;20311:5;;20231:101;20211:3;;;;;:::i;:::-;;;;20184:159;;;20361:5;20368:1;20353:17;;;;;;;19909:469;;;;;;:::o;3398:1367::-;3636:7;21771:23;21787:6;21771:15;:23::i;:::-;21763:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;3656:7:::1;21771:23;21787:6;21771:15;:23::i;:::-;21763:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;3900:8:::2;3779:117;3839:6;;;;;;;;;;;:21;;;3861:10;3873:7;3839:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3779:6;;;;;;;;;;;:16;;;3796:7;3805:10;3779:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;:117;;;;:::i;:::-;:129;;3757:197;;;;;;;;;;;;:::i;:::-;;;;;;;;;3967:6;;;;;;;;;;;:24;;;3992:10;4004:7;4013:8;4023:4;3967:61;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;4041:11;:20;4053:7;4041:20;;;;;;;;;;;;;;;:39;4070:8:::0;4062:17:::2;;;;;;;;:::i;:::-;;4041:39;;;;;;;;;;;4100:318;;;;;;;;4125:9;;4100:318;;;;4153:8;4100:318;;;;;;;;:::i;:::-;;;;;;4180:10;4100:318;;;;;;4209:7;4100:318;;;;;;4235:8;4100:318;;;;4262:7;4100:318;;;;;;4288:8;4100:318;;;;4315:5;4100:318;;;;4339:8;4100:318;;;;4366:8;4100:318;;;;4393:10;4100:318;;;;::::0;4041:388:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4447:269;4467:9;;4491:8;4514:10;4539:7;4561:8;4584:7;4606:8;4629:5;4649:8;4672;4695:10;4447:269;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;4741:16;4755:1;4741:9;;:13;;:16;;;;:::i;:::-;4729:9;:28;;;;21834:1:::1;3398:1367:::0;;;;;;;:::o;4773:1411::-;4986:7;21771:23;21787:6;21771:15;:23::i;:::-;21763:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5006:7:::1;21771:23;21787:6;21771:15;:23::i;:::-;21763:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5267:8:::2;5146:117;5206:6;;;;;;;;;;;:21;;;5228:10;5240:7;5206:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5146:6;;;;;;;;;;;:16;;;5163:7;5172:10;5146:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;:117;;;;:::i;:::-;:129;;5124:197;;;;;;;;;;;;:::i;:::-;;;;;;;;;5383:6;;;;;;;;;;;:24;;;5408:10;5420:7;5429:8;5439:4;5383:61;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;5457:11;:20;5469:7;5457:20;;;;;;;;;;;;;;;:40;5486:9;5478:18:::0;::::2;;;;;;;:::i;:::-;;5457:40;;;;;;;;;;;5517:319;;;;;;;;5542:9;;5517:319;;;;5570:9;5517:319:::0;::::2;;;;;;;:::i;:::-;;;;;;5598:10;5517:319;;;;;;5627:7;5517:319;;;;;;5653:8;5517:319;;;;5680:7;5517:319;;;;;;5706:8;5517:319;;;;5733:5;5517:319;;;;5757:8;5517:319;;;;5784:8;5517:319;;;;5811:10;5517:319;;;;::::0;5457:390:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5865:270;5885:9;;5909;5933:10;5958:7;5980:8;6003:7;6025:8;6048:5;6068:8;6091;6114:10;5865:270;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;6160:16;6174:1;6160:9;;:13;;:16;;;;:::i;:::-;6148:9;:28;;;;21834:1:::1;4773:1411:::0;;;;;;;:::o;1831:101:2:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;611:36:5:-;;;;;;;;;;;;;:::o;1201:85:2:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;654:73:5:-;;;;;;;;;;;;;:::o;1052:28::-;;;;:::o;779:29::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;20770:204::-;1094:13:2;:11;:13::i;:::-;20860:23:5::1;20876:6;20860:15;:23::i;:::-;20859:24;20851:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;20921:9;20936:29;;;;;;;;20947:6;20936:29;;;;;;20955:9;20936:29;;::::0;20921:45:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20770:204:::0;;:::o;958:85::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;18447:180::-;18549:7;18576:14;:21;18591:5;18576:21;;;;;;;;;;;;;;;:36;18606:4;18598:13;;;;;;;;:::i;:::-;;18576:36;;;;;;;;;;;:43;;;;18569:50;;18447:180;;;;:::o;17185:173::-;17282:7;17309:11;:19;17321:6;17309:19;;;;;;;;;;;;;;;:34;17337:4;17329:13;;;;;;;;:::i;:::-;;17309:34;;;;;;;;;;;:41;;;;17302:48;;17185:173;;;;:::o;2081:198:2:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;882:67:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2755:96:4:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3122:::-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;1359:130:2:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:12:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:133::-;195:5;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;152:133;;;;:::o;291:155::-;345:5;383:6;370:20;361:29;;399:41;434:5;399:41;:::i;:::-;291:155;;;;:::o;452:139::-;498:5;536:6;523:20;514:29;;552:33;579:5;552:33;:::i;:::-;452:139;;;;:::o;597:143::-;654:5;685:6;679:13;670:22;;701:33;728:5;701:33;:::i;:::-;597:143;;;;:::o;746:329::-;805:6;854:2;842:9;833:7;829:23;825:32;822:119;;;860:79;;:::i;:::-;822:119;980:1;1005:53;1050:7;1041:6;1030:9;1026:22;1005:53;:::i;:::-;995:63;;951:117;746:329;;;;:::o;1081:490::-;1157:6;1165;1214:2;1202:9;1193:7;1189:23;1185:32;1182:119;;;1220:79;;:::i;:::-;1182:119;1340:1;1365:53;1410:7;1401:6;1390:9;1386:22;1365:53;:::i;:::-;1355:63;;1311:117;1467:2;1493:61;1546:7;1537:6;1526:9;1522:22;1493:61;:::i;:::-;1483:71;;1438:126;1081:490;;;;;:::o;1577:474::-;1645:6;1653;1702:2;1690:9;1681:7;1677:23;1673:32;1670:119;;;1708:79;;:::i;:::-;1670:119;1828:1;1853:53;1898:7;1889:6;1878:9;1874:22;1853:53;:::i;:::-;1843:63;;1799:117;1955:2;1981:53;2026:7;2017:6;2006:9;2002:22;1981:53;:::i;:::-;1971:63;;1926:118;1577:474;;;;;:::o;2057:1051::-;2158:6;2166;2174;2182;2190;2198;2247:3;2235:9;2226:7;2222:23;2218:33;2215:120;;;2254:79;;:::i;:::-;2215:120;2374:1;2399:53;2444:7;2435:6;2424:9;2420:22;2399:53;:::i;:::-;2389:63;;2345:117;2501:2;2527:53;2572:7;2563:6;2552:9;2548:22;2527:53;:::i;:::-;2517:63;;2472:118;2629:2;2655:53;2700:7;2691:6;2680:9;2676:22;2655:53;:::i;:::-;2645:63;;2600:118;2757:2;2783:53;2828:7;2819:6;2808:9;2804:22;2783:53;:::i;:::-;2773:63;;2728:118;2885:3;2912:53;2957:7;2948:6;2937:9;2933:22;2912:53;:::i;:::-;2902:63;;2856:119;3014:3;3041:50;3083:7;3074:6;3063:9;3059:22;3041:50;:::i;:::-;3031:60;;2985:116;2057:1051;;;;;;;;:::o;3114:619::-;3191:6;3199;3207;3256:2;3244:9;3235:7;3231:23;3227:32;3224:119;;;3262:79;;:::i;:::-;3224:119;3382:1;3407:53;3452:7;3443:6;3432:9;3428:22;3407:53;:::i;:::-;3397:63;;3353:117;3509:2;3535:53;3580:7;3571:6;3560:9;3556:22;3535:53;:::i;:::-;3525:63;;3480:118;3637:2;3663:53;3708:7;3699:6;3688:9;3684:22;3663:53;:::i;:::-;3653:63;;3608:118;3114:619;;;;;:::o;3739:490::-;3815:6;3823;3872:2;3860:9;3851:7;3847:23;3843:32;3840:119;;;3878:79;;:::i;:::-;3840:119;3998:1;4023:61;4076:7;4067:6;4056:9;4052:22;4023:61;:::i;:::-;4013:71;;3969:125;4133:2;4159:53;4204:7;4195:6;4184:9;4180:22;4159:53;:::i;:::-;4149:63;;4104:118;3739:490;;;;;:::o;4235:635::-;4320:6;4328;4336;4385:2;4373:9;4364:7;4360:23;4356:32;4353:119;;;4391:79;;:::i;:::-;4353:119;4511:1;4536:61;4589:7;4580:6;4569:9;4565:22;4536:61;:::i;:::-;4526:71;;4482:125;4646:2;4672:53;4717:7;4708:6;4697:9;4693:22;4672:53;:::i;:::-;4662:63;;4617:118;4774:2;4800:53;4845:7;4836:6;4825:9;4821:22;4800:53;:::i;:::-;4790:63;;4745:118;4235:635;;;;;:::o;4876:329::-;4935:6;4984:2;4972:9;4963:7;4959:23;4955:32;4952:119;;;4990:79;;:::i;:::-;4952:119;5110:1;5135:53;5180:7;5171:6;5160:9;5156:22;5135:53;:::i;:::-;5125:63;;5081:117;4876:329;;;;:::o;5211:351::-;5281:6;5330:2;5318:9;5309:7;5305:23;5301:32;5298:119;;;5336:79;;:::i;:::-;5298:119;5456:1;5481:64;5537:7;5528:6;5517:9;5513:22;5481:64;:::i;:::-;5471:74;;5427:128;5211:351;;;;:::o;5568:635::-;5653:6;5661;5669;5718:2;5706:9;5697:7;5693:23;5689:32;5686:119;;;5724:79;;:::i;:::-;5686:119;5844:1;5869:53;5914:7;5905:6;5894:9;5890:22;5869:53;:::i;:::-;5859:63;;5815:117;5971:2;5997:61;6050:7;6041:6;6030:9;6026:22;5997:61;:::i;:::-;5987:71;;5942:126;6107:2;6133:53;6178:7;6169:6;6158:9;6154:22;6133:53;:::i;:::-;6123:63;;6078:118;5568:635;;;;;:::o;6209:108::-;6286:24;6304:5;6286:24;:::i;:::-;6281:3;6274:37;6209:108;;:::o;6323:118::-;6410:24;6428:5;6410:24;:::i;:::-;6405:3;6398:37;6323:118;;:::o;6447:99::-;6518:21;6533:5;6518:21;:::i;:::-;6513:3;6506:34;6447:99;;:::o;6552:109::-;6633:21;6648:5;6633:21;:::i;:::-;6628:3;6621:34;6552:109;;:::o;6667:133::-;6750:43;6787:5;6750:43;:::i;:::-;6745:3;6738:56;6667:133;;:::o;6806:143::-;6899:43;6936:5;6899:43;:::i;:::-;6894:3;6887:56;6806:143;;:::o;6955:366::-;7097:3;7118:67;7182:2;7177:3;7118:67;:::i;:::-;7111:74;;7194:93;7283:3;7194:93;:::i;:::-;7312:2;7307:3;7303:12;7296:19;;6955:366;;;:::o;7327:::-;7469:3;7490:67;7554:2;7549:3;7490:67;:::i;:::-;7483:74;;7566:93;7655:3;7566:93;:::i;:::-;7684:2;7679:3;7675:12;7668:19;;7327:366;;;:::o;7699:::-;7841:3;7862:67;7926:2;7921:3;7862:67;:::i;:::-;7855:74;;7938:93;8027:3;7938:93;:::i;:::-;8056:2;8051:3;8047:12;8040:19;;7699:366;;;:::o;8071:::-;8213:3;8234:67;8298:2;8293:3;8234:67;:::i;:::-;8227:74;;8310:93;8399:3;8310:93;:::i;:::-;8428:2;8423:3;8419:12;8412:19;;8071:366;;;:::o;8443:365::-;8585:3;8606:66;8670:1;8665:3;8606:66;:::i;:::-;8599:73;;8681:93;8770:3;8681:93;:::i;:::-;8799:2;8794:3;8790:12;8783:19;;8443:365;;;:::o;8814:366::-;8956:3;8977:67;9041:2;9036:3;8977:67;:::i;:::-;8970:74;;9053:93;9142:3;9053:93;:::i;:::-;9171:2;9166:3;9162:12;9155:19;;8814:366;;;:::o;9186:::-;9328:3;9349:67;9413:2;9408:3;9349:67;:::i;:::-;9342:74;;9425:93;9514:3;9425:93;:::i;:::-;9543:2;9538:3;9534:12;9527:19;;9186:366;;;:::o;9614:2118::-;9757:6;9752:3;9748:16;9844:4;9837:5;9833:16;9827:23;9863:63;9920:4;9915:3;9911:14;9897:12;9863:63;:::i;:::-;9774:162;10018:4;10011:5;10007:16;10001:23;10037:69;10100:4;10095:3;10091:14;10077:12;10037:69;:::i;:::-;9946:170;10198:4;10191:5;10187:16;10181:23;10217:63;10274:4;10269:3;10265:14;10251:12;10217:63;:::i;:::-;10126:164;10374:4;10367:5;10363:16;10357:23;10393:63;10450:4;10445:3;10441:14;10427:12;10393:63;:::i;:::-;10300:166;10551:4;10544:5;10540:16;10534:23;10570:63;10627:4;10622:3;10618:14;10604:12;10570:63;:::i;:::-;10476:167;10727:4;10720:5;10716:16;10710:23;10746:63;10803:4;10798:3;10794:14;10780:12;10746:63;:::i;:::-;10653:166;10904:4;10897:5;10893:16;10887:23;10923:63;10980:4;10975:3;10971:14;10957:12;10923:63;:::i;:::-;10829:167;11078:4;11071:5;11067:16;11061:23;11097:63;11154:4;11149:3;11145:14;11131:12;11097:63;:::i;:::-;11006:164;11263:6;11256:5;11252:18;11246:25;11284:65;11341:6;11336:3;11332:16;11318:12;11284:65;:::i;:::-;11180:179;11452:6;11445:5;11441:18;11435:25;11473:65;11530:6;11525:3;11521:16;11507:12;11473:65;:::i;:::-;11369:179;11635:6;11628:5;11624:18;11618:25;11656:59;11707:6;11702:3;11698:16;11684:12;11656:59;:::i;:::-;11558:167;9726:2006;9614:2118;;:::o;11738:108::-;11815:24;11833:5;11815:24;:::i;:::-;11810:3;11803:37;11738:108;;:::o;11852:118::-;11939:24;11957:5;11939:24;:::i;:::-;11934:3;11927:37;11852:118;;:::o;11976:222::-;12069:4;12107:2;12096:9;12092:18;12084:26;;12120:71;12188:1;12177:9;12173:17;12164:6;12120:71;:::i;:::-;11976:222;;;;:::o;12204:332::-;12325:4;12363:2;12352:9;12348:18;12340:26;;12376:71;12444:1;12433:9;12429:17;12420:6;12376:71;:::i;:::-;12457:72;12525:2;12514:9;12510:18;12501:6;12457:72;:::i;:::-;12204:332;;;;;:::o;12542:541::-;12713:4;12751:3;12740:9;12736:19;12728:27;;12765:71;12833:1;12822:9;12818:17;12809:6;12765:71;:::i;:::-;12846:72;12914:2;12903:9;12899:18;12890:6;12846:72;:::i;:::-;12928;12996:2;12985:9;12981:18;12972:6;12928:72;:::i;:::-;13010:66;13072:2;13061:9;13057:18;13048:6;13010:66;:::i;:::-;12542:541;;;;;;;:::o;13089:332::-;13210:4;13248:2;13237:9;13233:18;13225:26;;13261:71;13329:1;13318:9;13314:17;13305:6;13261:71;:::i;:::-;13342:72;13410:2;13399:9;13395:18;13386:6;13342:72;:::i;:::-;13089:332;;;;;:::o;13427:210::-;13514:4;13552:2;13541:9;13537:18;13529:26;;13565:65;13627:1;13616:9;13612:17;13603:6;13565:65;:::i;:::-;13427:210;;;;:::o;13643:419::-;13809:4;13847:2;13836:9;13832:18;13824:26;;13896:9;13890:4;13886:20;13882:1;13871:9;13867:17;13860:47;13924:131;14050:4;13924:131;:::i;:::-;13916:139;;13643:419;;;:::o;14068:::-;14234:4;14272:2;14261:9;14257:18;14249:26;;14321:9;14315:4;14311:20;14307:1;14296:9;14292:17;14285:47;14349:131;14475:4;14349:131;:::i;:::-;14341:139;;14068:419;;;:::o;14493:::-;14659:4;14697:2;14686:9;14682:18;14674:26;;14746:9;14740:4;14736:20;14732:1;14721:9;14717:17;14710:47;14774:131;14900:4;14774:131;:::i;:::-;14766:139;;14493:419;;;:::o;14918:::-;15084:4;15122:2;15111:9;15107:18;15099:26;;15171:9;15165:4;15161:20;15157:1;15146:9;15142:17;15135:47;15199:131;15325:4;15199:131;:::i;:::-;15191:139;;14918:419;;;:::o;15343:::-;15509:4;15547:2;15536:9;15532:18;15524:26;;15596:9;15590:4;15586:20;15582:1;15571:9;15567:17;15560:47;15624:131;15750:4;15624:131;:::i;:::-;15616:139;;15343:419;;;:::o;15768:::-;15934:4;15972:2;15961:9;15957:18;15949:26;;16021:9;16015:4;16011:20;16007:1;15996:9;15992:17;15985:47;16049:131;16175:4;16049:131;:::i;:::-;16041:139;;15768:419;;;:::o;16193:::-;16359:4;16397:2;16386:9;16382:18;16374:26;;16446:9;16440:4;16436:20;16432:1;16421:9;16417:17;16410:47;16474:131;16600:4;16474:131;:::i;:::-;16466:139;;16193:419;;;:::o;16618:426::-;16785:4;16823:3;16812:9;16808:19;16800:27;;16837:117;16951:1;16940:9;16936:17;16927:6;16837:117;:::i;:::-;16964:73;17032:3;17021:9;17017:19;17008:6;16964:73;:::i;:::-;16618:426;;;;;:::o;17050:222::-;17143:4;17181:2;17170:9;17166:18;17158:26;;17194:71;17262:1;17251:9;17247:17;17238:6;17194:71;:::i;:::-;17050:222;;;;:::o;17278:1445::-;17681:4;17719:3;17708:9;17704:19;17696:27;;17733:71;17801:1;17790:9;17786:17;17777:6;17733:71;:::i;:::-;17814:78;17888:2;17877:9;17873:18;17864:6;17814:78;:::i;:::-;17902:72;17970:2;17959:9;17955:18;17946:6;17902:72;:::i;:::-;17984;18052:2;18041:9;18037:18;18028:6;17984:72;:::i;:::-;18066:73;18134:3;18123:9;18119:19;18110:6;18066:73;:::i;:::-;18149;18217:3;18206:9;18202:19;18193:6;18149:73;:::i;:::-;18232;18300:3;18289:9;18285:19;18276:6;18232:73;:::i;:::-;18315;18383:3;18372:9;18368:19;18359:6;18315:73;:::i;:::-;18398;18466:3;18455:9;18451:19;18442:6;18398:73;:::i;:::-;18481;18549:3;18538:9;18534:19;18525:6;18481:73;:::i;:::-;18564:68;18627:3;18616:9;18612:19;18602:7;18564:68;:::i;:::-;18642:74;18711:3;18700:9;18696:19;18686:7;18642:74;:::i;:::-;17278:1445;;;;;;;;;;;;;;;:::o;18729:1332::-;19103:4;19141:3;19130:9;19126:19;19118:27;;19155:71;19223:1;19212:9;19208:17;19199:6;19155:71;:::i;:::-;19236:78;19310:2;19299:9;19295:18;19286:6;19236:78;:::i;:::-;19324:72;19392:2;19381:9;19377:18;19368:6;19324:72;:::i;:::-;19406;19474:2;19463:9;19459:18;19450:6;19406:72;:::i;:::-;19488:73;19556:3;19545:9;19541:19;19532:6;19488:73;:::i;:::-;19571;19639:3;19628:9;19624:19;19615:6;19571:73;:::i;:::-;19654;19722:3;19711:9;19707:19;19698:6;19654:73;:::i;:::-;19737;19805:3;19794:9;19790:19;19781:6;19737:73;:::i;:::-;19820;19888:3;19877:9;19873:19;19864:6;19820:73;:::i;:::-;19903;19971:3;19960:9;19956:19;19947:6;19903:73;:::i;:::-;19986:68;20049:3;20038:9;20034:19;20024:7;19986:68;:::i;:::-;18729:1332;;;;;;;;;;;;;;:::o;20148:169::-;20232:11;20266:6;20261:3;20254:19;20306:4;20301:3;20297:14;20282:29;;20148:169;;;;:::o;20323:305::-;20363:3;20382:20;20400:1;20382:20;:::i;:::-;20377:25;;20416:20;20434:1;20416:20;:::i;:::-;20411:25;;20570:1;20502:66;20498:74;20495:1;20492:81;20489:107;;;20576:18;;:::i;:::-;20489:107;20620:1;20617;20613:9;20606:16;;20323:305;;;;:::o;20634:191::-;20674:4;20694:20;20712:1;20694:20;:::i;:::-;20689:25;;20728:20;20746:1;20728:20;:::i;:::-;20723:25;;20767:1;20764;20761:8;20758:34;;;20772:18;;:::i;:::-;20758:34;20817:1;20814;20810:9;20802:17;;20634:191;;;;:::o;20831:96::-;20868:7;20897:24;20915:5;20897:24;:::i;:::-;20886:35;;20831:96;;;:::o;20933:90::-;20967:7;21010:5;21003:13;20996:21;20985:32;;20933:90;;;:::o;21029:127::-;21074:7;21103:5;21092:16;;21109:41;21144:5;21109:41;:::i;:::-;21029:127;;;:::o;21162:126::-;21199:7;21239:42;21232:5;21228:54;21217:65;;21162:126;;;:::o;21294:77::-;21331:7;21360:5;21349:16;;21294:77;;;:::o;21377:127::-;21433:9;21466:32;21492:5;21466:32;:::i;:::-;21453:45;;21377:127;;;:::o;21510:233::-;21549:3;21572:24;21590:5;21572:24;:::i;:::-;21563:33;;21618:66;21611:5;21608:77;21605:103;;;21688:18;;:::i;:::-;21605:103;21735:1;21728:5;21724:13;21717:20;;21510:233;;;:::o;21749:180::-;21797:77;21794:1;21787:88;21894:4;21891:1;21884:15;21918:4;21915:1;21908:15;21935:180;21983:77;21980:1;21973:88;22080:4;22077:1;22070:15;22104:4;22101:1;22094:15;22121:180;22169:77;22166:1;22159:88;22266:4;22263:1;22256:15;22290:4;22287:1;22280:15;22307:180;22355:77;22352:1;22345:88;22452:4;22449:1;22442:15;22476:4;22473:1;22466:15;22616:117;22725:1;22722;22715:12;22739:166;22879:18;22875:1;22867:6;22863:14;22856:42;22739:166;:::o;22911:225::-;23051:34;23047:1;23039:6;23035:14;23028:58;23120:8;23115:2;23107:6;23103:15;23096:33;22911:225;:::o;23142:174::-;23282:26;23278:1;23270:6;23266:14;23259:50;23142:174;:::o;23322:168::-;23462:20;23458:1;23450:6;23446:14;23439:44;23322:168;:::o;23496:159::-;23636:11;23632:1;23624:6;23620:14;23613:35;23496:159;:::o;23661:172::-;23801:24;23797:1;23789:6;23785:14;23778:48;23661:172;:::o;23839:182::-;23979:34;23975:1;23967:6;23963:14;23956:58;23839:182;:::o;24027:113::-;24108:1;24101:5;24098:12;24088:46;;24114:18;;:::i;:::-;24088:46;24027:113;:::o;24146:122::-;24219:24;24237:5;24219:24;:::i;:::-;24212:5;24209:35;24199:63;;24258:1;24255;24248:12;24199:63;24146:122;:::o;24274:116::-;24344:21;24359:5;24344:21;:::i;:::-;24337:5;24334:32;24324:60;;24380:1;24377;24370:12;24324:60;24274:116;:::o;24396:107::-;24477:1;24470:5;24467:12;24457:40;;24493:1;24490;24483:12;24457:40;24396:107;:::o;24509:122::-;24582:24;24600:5;24582:24;:::i;:::-;24575:5;24572:35;24562:63;;24621:1;24618;24611:12;24562:63;24509:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2901400","executionCost":"infinite","totalCost":"infinite"},"external":{"aETH()":"2559","addToken(address,uint256)":"infinite","cancelOrder(uint8,uint256,address)":"infinite","createLimitBuyOrder(address,uint256,address,uint256,uint256,bool)":"infinite","createLimitSellOrder(address,uint256,address,uint256,uint256,bool)":"infinite","ethToken()":"2625","getFilledOrderLength(address,uint8)":"3127","getOrderFromArray(address,uint256,uint256)":"infinite","getOrderLength(uint8,address)":"3149","getTokenInfo(address)":"infinite","isVerifiedToken(address)":"infinite","orderExists(uint256,uint8,address)":"infinite","owner()":"2545","renounceOwnership()":"30487","s_filledOrders(address,uint256,uint256)":"infinite","s_orderBook(address,uint256,uint256)":"infinite","s_orderId()":"2496","tokenList(uint256)":"infinite","transferOwnership(address)":"30835"},"internal":{"fillBuyOrders(struct Exchange._Order memory,uint256,uint256,bool,uint256)":"infinite","fillOrder(enum Exchange.Side,uint256,address,struct Exchange._fillOrderValues memory)":"infinite","fillSellOrders(struct Exchange._Order memory,uint256,uint256,bool,uint256)":"infinite","matchOrders(address,uint256,enum Exchange.Side)":"infinite"}},"methodIdentifiers":{"aETH()":"92f63d2e","addToken(address,uint256)":"af81c5b9","cancelOrder(uint8,uint256,address)":"1347d60e","createLimitBuyOrder(address,uint256,address,uint256,uint256,bool)":"62c09cfa","createLimitSellOrder(address,uint256,address,uint256,uint256,bool)":"6f4e410b","ethToken()":"7bf1a627","getFilledOrderLength(address,uint8)":"c3364be4","getOrderFromArray(address,uint256,uint256)":"609ae6b5","getOrderLength(uint8,address)":"e947a695","getTokenInfo(address)":"1f69565f","isVerifiedToken(address)":"1027b219","orderExists(uint256,uint8,address)":"182cffeb","owner()":"8da5cb5b","renounceOwnership()":"715018a6","s_filledOrders(address,uint256,uint256)":"bd8098ec","s_orderBook(address,uint256,uint256)":"f9242d9a","s_orderId()":"9c07ce26","tokenList(uint256)":"9ead7222","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"name\":\"Cancel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"name\":\"Order\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct Exchange._Order\",\"name\":\"remainingOrder\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountBought\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fillBuyRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"feesWaived\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feesPaid\",\"type\":\"uint256\"}],\"name\":\"fillBuyOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct Exchange._Order\",\"name\":\"remainingOrder\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountSold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fillSellRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"feesWaived\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feesPaid\",\"type\":\"uint256\"}],\"name\":\"fillSellOrder\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"aETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"cancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_waiveFees\",\"type\":\"bool\"}],\"name\":\"createLimitBuyOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_waiveFees\",\"type\":\"bool\"}],\"name\":\"createLimitSellOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"}],\"name\":\"getFilledOrderLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"side\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getOrderFromArray\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"internalType\":\"struct Exchange._Order\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getOrderLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTokenInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isVerifiedToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"orderExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_filledOrders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountFilled\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fillRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"feesWaived\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"feesPaid\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_orderBook\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_orderId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Cancel(uint256,uint8,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)\":{\"notice\":\"Event when an order is cancelled\"},\"Order(uint256,uint8,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)\":{\"notice\":\"Event when an order is placed on an exchange\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Exchange.sol\":\"Exchange\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/Exchange.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./PriceChecker.sol\\\";\\r\\nimport \\\"./TradingFees.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Exchange is Ownable {\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n    PriceChecker priceChecker;\\r\\n    TradingFees tradingFees;\\r\\n    Wallet wallet;\\r\\n\\r\\n    uint256 decimals = 10 ** 18;\\r\\n    address public ethToken = address(0);\\r\\n    address public aETH = address(0x22404B0e2a7067068AcdaDd8f9D586F834cCe2c5);\\r\\n\\r\\n    //Token Address List available in DEX\\r\\n    _tokenInfo[] public tokenList;\\r\\n\\r\\n    //s_orderBook mappping: tokenAddress -> Side -> Order Array\\r\\n    mapping(address => mapping(uint256 => _Order[])) public s_orderBook;\\r\\n\\r\\n    mapping(address => mapping(uint256 => _filledOrder[]))\\r\\n        public s_filledOrders;\\r\\n\\r\\n    uint256 public s_orderId = 0;\\r\\n    bool private s_isManual = true;\\r\\n\\r\\n    struct _tokenInfo {\\r\\n        address add;\\r\\n        uint256 decimals;\\r\\n    }\\r\\n\\r\\n    struct _fillOrderValues {\\r\\n        uint256 rate;\\r\\n        uint256 amount;\\r\\n    }\\r\\n\\r\\n    //Structs representing an order that has unique id, user and amounts to give and get between two tokens to exchange\\r\\n    struct _Order {\\r\\n        uint256 id;\\r\\n        Side side;\\r\\n        address user;\\r\\n        address tokenA;\\r\\n        uint256 amountA;\\r\\n        address tokenB;\\r\\n        uint256 amountB;\\r\\n        uint256 rate; // TokenB/TokenA = price in terms of TokenB\\r\\n        uint256 originalAmountA;\\r\\n        uint256 originalAmountB;\\r\\n        bool waiveFees;\\r\\n    }\\r\\n\\r\\n    //For any order that is filled even if it is partially filled or fully filled\\r\\n    struct _filledOrder {\\r\\n        uint256 id;\\r\\n        Side side;\\r\\n        address user;\\r\\n        address tokenA;\\r\\n        address tokenB;\\r\\n        uint256 amountFilled;\\r\\n        uint256 fillRate;\\r\\n        uint256 originalRate;\\r\\n        uint256 originalAmountA;\\r\\n        uint256 originalAmountB;\\r\\n        bool feesWaived;\\r\\n        uint256 feesPaid; //in terms of ETH\\r\\n    }\\r\\n\\r\\n    enum Side {\\r\\n        BUY,\\r\\n        SELL\\r\\n    }\\r\\n\\r\\n    //add events\\r\\n    /// @notice Event when an order is placed on an exchange\\r\\n    event Order(\\r\\n        uint256 id,\\r\\n        Side side,\\r\\n        address user,\\r\\n        address tokenA,\\r\\n        uint256 amountA,\\r\\n        address tokenB,\\r\\n        uint256 amountB,\\r\\n        uint256 rate,\\r\\n        uint256 originalAmountA,\\r\\n        uint256 originalAmountB,\\r\\n        bool waiveFees\\r\\n    );\\r\\n\\r\\n    /// @notice Event when an order is cancelled\\r\\n    event Cancel(\\r\\n        uint256 id,\\r\\n        Side side,\\r\\n        address user,\\r\\n        address tokenA,\\r\\n        uint256 amountA,\\r\\n        address tokenB,\\r\\n        uint256 amountB,\\r\\n        uint256 rate,\\r\\n        uint256 originalAmountA,\\r\\n        uint256 originalAmountB,\\r\\n        bool waiveFees\\r\\n    );\\r\\n\\r\\n    event fillBuyOrder(\\r\\n        _Order remainingOrder,\\r\\n        uint256 amountBought,\\r\\n        uint256 fillBuyRate,\\r\\n        bool feesWaived,\\r\\n        uint256 feesPaid\\r\\n    );\\r\\n\\r\\n    event fillSellOrder(\\r\\n        _Order remainingOrder,\\r\\n        uint256 amountSold,\\r\\n        uint256 fillSellRate,\\r\\n        bool feesWaived,\\r\\n        uint256 feesPaid\\r\\n    );\\r\\n\\r\\n    function createLimitBuyOrder(\\r\\n        // TokenA/TokenB\\r\\n        address _tokenA,\\r\\n        uint256 _amountA,\\r\\n        address _tokenB,\\r\\n        uint256 _amountB,\\r\\n        uint256 _rate,\\r\\n        bool _waiveFees\\r\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\r\\n        //Amount user has deposited in the DEX must be >= value he wants to buy\\r\\n        require(\\r\\n            wallet.balanceOf(_tokenB, msg.sender).sub(\\r\\n                wallet.getlockedFunds(msg.sender, _tokenB)\\r\\n            ) >= _amountB,\\r\\n            \\\"Insufficient Funds\\\"\\r\\n        );\\r\\n\\r\\n        wallet.updateLockedFunds(msg.sender, _tokenB, _amountB, true);\\r\\n\\r\\n        s_orderBook[_tokenA][uint256(Side.BUY)].push(\\r\\n            _Order(\\r\\n                s_orderId,\\r\\n                Side.BUY,\\r\\n                msg.sender,\\r\\n                _tokenA,\\r\\n                _amountA,\\r\\n                _tokenB,\\r\\n                _amountB,\\r\\n                _rate,\\r\\n                _amountA,\\r\\n                _amountB,\\r\\n                _waiveFees\\r\\n            )\\r\\n        );\\r\\n\\r\\n        emit Order(\\r\\n            s_orderId,\\r\\n            Side.BUY,\\r\\n            msg.sender,\\r\\n            _tokenA,\\r\\n            _amountA,\\r\\n            _tokenB,\\r\\n            _amountB,\\r\\n            _rate,\\r\\n            _amountA,\\r\\n            _amountB,\\r\\n            _waiveFees\\r\\n        );\\r\\n\\r\\n        s_orderId = s_orderId.add(1);\\r\\n    }\\r\\n\\r\\n    function createLimitSellOrder(\\r\\n        address _tokenA,\\r\\n        uint256 _amountA,\\r\\n        address _tokenB,\\r\\n        uint256 _amountB,\\r\\n        uint256 _rate,\\r\\n        bool _waiveFees\\r\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\r\\n        //Amount of tokens user deposit in DEX must be >= the amount of tokens they want to sell\\r\\n        require(\\r\\n            wallet.balanceOf(_tokenA, msg.sender).sub(\\r\\n                wallet.getlockedFunds(msg.sender, _tokenA)\\r\\n            ) >= _amountA,\\r\\n            \\\"Insufficient Funds\\\"\\r\\n        );\\r\\n\\r\\n        //Lock the funds (tokens) in the wallet\\r\\n        wallet.updateLockedFunds(msg.sender, _tokenA, _amountA, true);\\r\\n\\r\\n        s_orderBook[_tokenA][uint256(Side.SELL)].push(\\r\\n            _Order(\\r\\n                s_orderId,\\r\\n                Side.SELL,\\r\\n                msg.sender,\\r\\n                _tokenA,\\r\\n                _amountA,\\r\\n                _tokenB,\\r\\n                _amountB,\\r\\n                _rate,\\r\\n                _amountA,\\r\\n                _amountB,\\r\\n                _waiveFees\\r\\n            )\\r\\n        );\\r\\n\\r\\n        emit Order(\\r\\n            s_orderId,\\r\\n            Side.SELL,\\r\\n            msg.sender,\\r\\n            _tokenA,\\r\\n            _amountA,\\r\\n            _tokenB,\\r\\n            _amountB,\\r\\n            _rate,\\r\\n            _amountA,\\r\\n            _amountB,\\r\\n            _waiveFees\\r\\n        );\\r\\n\\r\\n        s_orderId = s_orderId.add(1);\\r\\n    }\\r\\n\\r\\n    function cancelOrder(\\r\\n        Side side,\\r\\n        uint256 _id,\\r\\n        address _token\\r\\n    ) public validOrder(_id, side, _token) validToken(_token) {\\r\\n        _Order[] storage _order = s_orderBook[_token][uint256(side)];\\r\\n        uint256 size = _order.length;\\r\\n        _Order memory order;\\r\\n\\r\\n        uint256 index;\\r\\n        for (uint256 i = 0; i < size; i++) {\\r\\n            if (_order[i].id == _id) {\\r\\n                index = i;\\r\\n                order = _order[i];\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        //Manual cancellation of orders\\r\\n        if (s_isManual) {\\r\\n            require(msg.sender == order.user, \\\"Not Owner\\\");\\r\\n\\r\\n            //Unlock funds\\r\\n            if (side == Side.BUY) {\\r\\n                wallet.updateLockedFunds(\\r\\n                    msg.sender,\\r\\n                    order.tokenB,\\r\\n                    order.amountB,\\r\\n                    false\\r\\n                );\\r\\n            } else if (side == Side.SELL) {\\r\\n                wallet.updateLockedFunds(\\r\\n                    msg.sender,\\r\\n                    order.tokenA,\\r\\n                    order.amountA,\\r\\n                    false\\r\\n                );\\r\\n            }\\r\\n        }\\r\\n\\r\\n        for (uint256 j = index; j < size - 1; j++) {\\r\\n            _order[j] = _order[j.add(1)];\\r\\n        }\\r\\n        delete _order[size.sub(1)];\\r\\n        _order.pop();\\r\\n\\r\\n        s_orderBook[_token][uint256(side)] = _order;\\r\\n\\r\\n        emit Cancel(\\r\\n            _id,\\r\\n            order.side,\\r\\n            order.user,\\r\\n            order.tokenA,\\r\\n            order.amountA,\\r\\n            order.tokenB,\\r\\n            order.amountB,\\r\\n            order.rate,\\r\\n            order.originalAmountA,\\r\\n            order.originalAmountB,\\r\\n            order.waiveFees\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function fillOrder(\\r\\n        Side side,\\r\\n        uint256 _id,\\r\\n        address _token,\\r\\n        _fillOrderValues memory a\\r\\n    ) internal validOrder(_id, side, _token) validToken(_token) {\\r\\n        uint256 _side = uint256(side);\\r\\n        (_Order memory order, uint256 index) = getOrderFromArray(\\r\\n            _token,\\r\\n            _side,\\r\\n            _id\\r\\n        );\\r\\n\\r\\n        require(order.amountA >= a.amount, \\\"Invalid Order Amount to fill\\\");\\r\\n\\r\\n        order.amountA = order.amountA.sub(a.amount);\\r\\n        order.amountB = order.amountB.sub(\\r\\n            order.rate.mul(a.amount).div(decimals)\\r\\n        );\\r\\n        s_orderBook[_token][_side][index].amountA = order.amountA;\\r\\n        s_orderBook[_token][_side][index].amountB = order.amountB;\\r\\n\\r\\n        uint256 fees = tradingFees.calculateFees(\\r\\n            a.amount,\\r\\n            a.rate,\\r\\n            order.tokenB\\r\\n        ); //fees in ETH\\r\\n        bool feesWaived = order.waiveFees &&\\r\\n            tradingFees.checkSufficientaETH(fees, order.user);\\r\\n\\r\\n        if (side == Side.BUY) {\\r\\n            fillBuyOrders(order, a.amount, a.rate, feesWaived, fees);\\r\\n            emit fillBuyOrder(order, a.amount, a.rate, feesWaived, fees);\\r\\n        } else if (side == Side.SELL) {\\r\\n            fillSellOrders(order, a.amount, a.rate, feesWaived, fees);\\r\\n            emit fillSellOrder(order, a.amount, a.rate, feesWaived, fees);\\r\\n        }\\r\\n\\r\\n        if (order.amountA == 0) {\\r\\n            s_isManual = false;\\r\\n            cancelOrder(side, order.id, order.tokenA); //remove filled orders\\r\\n            s_isManual = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function fillBuyOrders(\\r\\n        _Order memory order,\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        bool feesWaived,\\r\\n        uint256 fees\\r\\n    ) internal {\\r\\n        if (feesWaived) {\\r\\n            //Deduct aETH\\r\\n            wallet.updateBalance(aETH, order.user, fees, false);\\r\\n            //Credit Bought tokens\\r\\n            wallet.updateBalance(order.tokenA, order.user, _amount, true);\\r\\n        } else {\\r\\n            uint256 amountToDeduct = tradingFees.amountToDeduct(\\r\\n                order.tokenA,\\r\\n                fees\\r\\n            );\\r\\n            //Credit Bought tokens after minusing fees\\r\\n            wallet.updateBalance(\\r\\n                order.tokenA,\\r\\n                order.user,\\r\\n                _amount.sub(amountToDeduct),\\r\\n                true\\r\\n            );\\r\\n        }\\r\\n\\r\\n        //Original Locked Funds unlocked\\r\\n        wallet.updateLockedFunds(\\r\\n            order.user,\\r\\n            order.tokenB,\\r\\n            (order.rate.mul(_amount)).div(decimals),\\r\\n            false\\r\\n        );\\r\\n\\r\\n        //buyer update\\r\\n        //Buyer balance deducted from what he paid\\r\\n        wallet.updateBalance(\\r\\n            order.tokenB,\\r\\n            order.user,\\r\\n            (_rate.mul(_amount)).div(decimals),\\r\\n            false\\r\\n        );\\r\\n\\r\\n        s_filledOrders[order.user][0].push(\\r\\n            _filledOrder(\\r\\n                order.id,\\r\\n                order.side,\\r\\n                order.user,\\r\\n                order.tokenA,\\r\\n                order.tokenB,\\r\\n                _amount,\\r\\n                _rate,\\r\\n                order.rate,\\r\\n                order.originalAmountA,\\r\\n                order.originalAmountB,\\r\\n                feesWaived,\\r\\n                fees\\r\\n            )\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function fillSellOrders(\\r\\n        _Order memory order,\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        bool feesWaived,\\r\\n        uint256 fees\\r\\n    ) internal {\\r\\n        if (feesWaived) {\\r\\n            //Deduct aETH\\r\\n            wallet.updateBalance(aETH, order.user, fees, false);\\r\\n            //Credit Earned tokens\\r\\n            wallet.updateBalance(\\r\\n                order.tokenB,\\r\\n                order.user,\\r\\n                (_rate.mul(_amount)).div(decimals),\\r\\n                true\\r\\n            );\\r\\n        } else {\\r\\n            uint256 amountToDeduct = tradingFees.amountToDeduct(\\r\\n                order.tokenB,\\r\\n                fees\\r\\n            );\\r\\n            //Credit Earned tokens after minusing fees\\r\\n            wallet.updateBalance(\\r\\n                order.tokenB,\\r\\n                order.user,\\r\\n                (_rate.mul(_amount)).div(decimals).sub(amountToDeduct),\\r\\n                true\\r\\n            );\\r\\n        }\\r\\n\\r\\n        wallet.updateLockedFunds(order.user, order.tokenA, _amount, false);\\r\\n        //seller update\\r\\n        wallet.updateBalance(order.tokenA, order.user, _amount, false);\\r\\n    }\\r\\n\\r\\n    function matchOrders(\\r\\n        address _token,\\r\\n        uint256 _id,\\r\\n        Side side\\r\\n    ) internal validOrder(_id, side, _token) validToken(_token) {\\r\\n        uint256 saleTokenAmt;\\r\\n\\r\\n        if (side == Side.BUY) {\\r\\n            //Retrieve sell order to match\\r\\n            _Order[] memory _sellOrder = s_orderBook[_token][1];\\r\\n            for (uint256 i = 0; i < _sellOrder.length; i++) {\\r\\n                //Retrieve buy order to be filled\\r\\n                (_Order memory buyOrderToFill, ) = getOrderFromArray(\\r\\n                    _token,\\r\\n                    uint8(side),\\r\\n                    _id\\r\\n                );\\r\\n                //sell order hit buyer's limit price & tokenB matches\\r\\n                if (\\r\\n                    _sellOrder[i].rate <= buyOrderToFill.rate &&\\r\\n                    buyOrderToFill.tokenB == _sellOrder[i].tokenB\\r\\n                ) {\\r\\n                    _Order memory sellOrder = _sellOrder[i];\\r\\n                    //if buyer's amount to buy > seller's amount to sell\\r\\n                    if (buyOrderToFill.amountA > sellOrder.amountA) {\\r\\n                        saleTokenAmt = sellOrder.amountA;\\r\\n                    }\\r\\n                    //if seller's amount to sell >= buyer's amount to buy\\r\\n                    else if (buyOrderToFill.amountA <= sellOrder.amountA) {\\r\\n                        saleTokenAmt = buyOrderToFill.amountA;\\r\\n                    }\\r\\n\\r\\n                    //Verify current balance\\r\\n                    require(\\r\\n                        wallet.balanceOf(\\r\\n                            buyOrderToFill.tokenB,\\r\\n                            buyOrderToFill.user\\r\\n                        ) >= (saleTokenAmt.mul(sellOrder.rate)).div(decimals),\\r\\n                        \\\"Insufficient Buyer Token Balance\\\"\\r\\n                    );\\r\\n                    require(\\r\\n                        wallet.balanceOf(_token, sellOrder.user) >=\\r\\n                            saleTokenAmt,\\r\\n                        \\\"Insufficient Seller Token Balance\\\"\\r\\n                    );\\r\\n\\r\\n                    //update orders\\r\\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\\r\\n                        sellOrder.rate,\\r\\n                        saleTokenAmt\\r\\n                    );\\r\\n                    fillOrder(Side.BUY, _id, _token, fillOrderValues);\\r\\n                    fillOrder(Side.SELL, sellOrder.id, _token, fillOrderValues);\\r\\n                }\\r\\n\\r\\n                bool orderExist = orderExists(_id, side, _token);\\r\\n                if (!orderExist) break;\\r\\n            }\\r\\n        } else if (side == Side.SELL) {\\r\\n            //Retrieve buy order to match\\r\\n            _Order[] memory _buyOrder = s_orderBook[_token][0];\\r\\n            for (uint256 i = 0; i < _buyOrder.length; i++) {\\r\\n                //Retrieve sell order to be filled\\r\\n                (_Order memory sellOrderToFill, ) = getOrderFromArray(\\r\\n                    _token,\\r\\n                    1,\\r\\n                    _id\\r\\n                );\\r\\n                //sell order hit buyer's limit price\\r\\n                if (\\r\\n                    _buyOrder[i].rate >= sellOrderToFill.rate &&\\r\\n                    _buyOrder[i].tokenB == sellOrderToFill.tokenB\\r\\n                ) {\\r\\n                    _Order memory order = _buyOrder[i];\\r\\n\\r\\n                    //if seller's amount to sell > buyer's amount to buy\\r\\n                    if (sellOrderToFill.amountA > order.amountA) {\\r\\n                        saleTokenAmt = order.amountA;\\r\\n                    }\\r\\n                    //if buyer's amount to buy > seller's amount to sell\\r\\n                    else if (sellOrderToFill.amountA <= order.amountA) {\\r\\n                        saleTokenAmt = sellOrderToFill.amountA;\\r\\n                    }\\r\\n                    //Verify current balance\\r\\n                    require(\\r\\n                        wallet.balanceOf(_token, sellOrderToFill.user) >=\\r\\n                            saleTokenAmt,\\r\\n                        \\\"Insufficient Seller Token Balance\\\"\\r\\n                    );\\r\\n                    require(\\r\\n                        wallet.balanceOf(order.tokenB, order.user) >=\\r\\n                            (saleTokenAmt.mul(order.rate)).div(decimals),\\r\\n                        \\\"Insufficient Buyer Token Balance\\\"\\r\\n                    );\\r\\n\\r\\n                    //update orders\\r\\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\\r\\n                        order.rate,\\r\\n                        saleTokenAmt\\r\\n                    );\\r\\n                    fillOrder(Side.SELL, _id, _token, fillOrderValues);\\r\\n                    fillOrder(Side.BUY, order.id, _token, fillOrderValues);\\r\\n                }\\r\\n                bool orderExist = orderExists(_id, side, _token);\\r\\n                if (!orderExist) break;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getOrderLength(\\r\\n        Side side,\\r\\n        address _token\\r\\n    ) public view returns (uint256) {\\r\\n        return s_orderBook[_token][uint256(side)].length;\\r\\n    }\\r\\n\\r\\n    // function getOrder(\\r\\n    //     address _token,\\r\\n    //     uint256 index,\\r\\n    //     Side side\\r\\n    // )\\r\\n    //     public\\r\\n    //     view\\r\\n    //     returns (\\r\\n    //         uint256, //id\\r\\n    //         uint256, //Side\\r\\n    //         address, //user\\r\\n    //         address, //tokenA\\r\\n    //         uint256, //amountA\\r\\n    //         address, //tokenB\\r\\n    //         uint256, //amountB\\r\\n    //         uint256, //rate -> TokenB/TokenA\\r\\n    //         uint256, //originalAmountA\\r\\n    //         uint256, //originalAmountB\\r\\n    //         bool //feesWaived enabled\\r\\n    //     )\\r\\n    // {\\r\\n    //     _Order memory order = s_orderBook[_token][uint256(side)][index];\\r\\n    //     return (\\r\\n    //         order.id,\\r\\n    //         uint256(order.side),\\r\\n    //         order.user,\\r\\n    //         order.tokenA,\\r\\n    //         order.amountA,\\r\\n    //         order.tokenB,\\r\\n    //         order.amountB,\\r\\n    //         order.rate,\\r\\n    //         order.originalAmountA,\\r\\n    //         order.originalAmountB,\\r\\n    //         order.waiveFees\\r\\n    //     );\\r\\n    // }\\r\\n\\r\\n    function getFilledOrderLength(\\r\\n        address _user,\\r\\n        Side side\\r\\n    ) public view returns (uint256) {\\r\\n        return s_filledOrders[_user][uint256(side)].length;\\r\\n    }\\r\\n\\r\\n    // function getFilledOrder(\\r\\n    //     address _user,\\r\\n    //     Side side,\\r\\n    //     uint256 index\\r\\n    // )\\r\\n    //     public\\r\\n    //     view\\r\\n    //     returns (\\r\\n    //         uint256, //id\\r\\n    //         uint256, //side\\r\\n    //         address, //user\\r\\n    //         address, //tokenA\\r\\n    //         address, //tokenB\\r\\n    //         uint256, //amountFilled\\r\\n    //         uint256, //fillRate\\r\\n    //         uint256, //originalRate\\r\\n    //         uint256, //originalAmountA\\r\\n    //         uint256, //originalAmountB\\r\\n    //         bool, //feesWaived\\r\\n    //         uint256 //feesPaid\\r\\n    //     )\\r\\n    // {\\r\\n    //     _filledOrder memory filledOrder = s_filledOrders[_user][uint256(side)][\\r\\n    //         index\\r\\n    //     ];\\r\\n    //     return (\\r\\n    //         filledOrder.id,\\r\\n    //         uint256(filledOrder.side),\\r\\n    //         filledOrder.user,\\r\\n    //         filledOrder.tokenA,\\r\\n    //         filledOrder.tokenB,\\r\\n    //         filledOrder.amountFilled,\\r\\n    //         filledOrder.fillRate,\\r\\n    //         filledOrder.originalRate,\\r\\n    //         filledOrder.originalAmountA,\\r\\n    //         filledOrder.originalAmountB,\\r\\n    //         filledOrder.feesWaived,\\r\\n    //         filledOrder.feesPaid\\r\\n    //     );\\r\\n    // }\\r\\n\\r\\n    function getOrderFromArray(\\r\\n        address _token,\\r\\n        uint256 side,\\r\\n        uint256 _id\\r\\n    ) public view returns (_Order memory, uint256) {\\r\\n        uint256 i = 0;\\r\\n        _Order[] memory _order = s_orderBook[_token][side];\\r\\n        _Order memory order;\\r\\n        for (i; i < _order.length; i++) {\\r\\n            if (_order[i].id == _id) {\\r\\n                order = _order[i];\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        return (order, i);\\r\\n    }\\r\\n\\r\\n    function orderExists(\\r\\n        uint256 _id,\\r\\n        Side side,\\r\\n        address _token\\r\\n    ) public view returns (bool) {\\r\\n        _Order[] memory orders = s_orderBook[_token][uint256(side)];\\r\\n\\r\\n        for (uint256 i = 0; i < orders.length; i++) {\\r\\n            if (orders[i].id == _id) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function addToken(address _token, uint256 _decimals) public onlyOwner {\\r\\n        require(!isVerifiedToken(_token), \\\"Token already verified\\\");\\r\\n        tokenList.push(_tokenInfo(_token, _decimals));\\r\\n    }\\r\\n\\r\\n    function isVerifiedToken(address _token) public view returns (bool) {\\r\\n        //uint256 size = tokenList.length;\\r\\n\\r\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\r\\n            if (tokenList[i].add == _token) return true;\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function getTokenInfo(address _token) public view returns (uint256) {\\r\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\r\\n            if (tokenList[i].add == _token) {\\r\\n                return tokenList[i].decimals;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    modifier validOrder(\\r\\n        uint256 _id,\\r\\n        Side side,\\r\\n        address _token\\r\\n    ) {\\r\\n        require(orderExists(_id, side, _token), \\\"Invalid Order ID\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier validToken(address _token) {\\r\\n        require(isVerifiedToken(_token), \\\"Token unavailable in DEX\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x76eb2771baa68f352d66f561ca21444dcf2b09426e9ef5fe53fb48b2b55db119\",\"license\":\"MIT\"},\"contracts/PriceChecker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract PriceChecker is Ownable {\\r\\n    // We could make this public, but then we'd have to deploy it\\r\\n    _priceFeed[] public priceFeeds;\\r\\n\\r\\n    struct _priceFeed {\\r\\n        string name;\\r\\n        address token;\\r\\n        AggregatorV3Interface priceFeed;\\r\\n    }\\r\\n\\r\\n    //only using PriceFeeds pegged to USD\\r\\n    function addPriceFeed(\\r\\n        string memory _name,\\r\\n        address _token,\\r\\n        address _address\\r\\n    ) external onlyOwner {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n        bool isAdded = false;\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (\\r\\n                keccak256(abi.encodePacked(_name)) ==\\r\\n                keccak256(abi.encodePacked(pricefeed[i].name))\\r\\n            ) {\\r\\n                isAdded = true;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        require(!isAdded, \\\"Price Feed already added\\\");\\r\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(_address);\\r\\n        priceFeeds.push(_priceFeed(_name, _token, priceFeed));\\r\\n    }\\r\\n\\r\\n    function getPriceFeed(\\r\\n        address _token\\r\\n    ) internal view returns (AggregatorV3Interface priceFeed) {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (_token == pricefeed[i].token) {\\r\\n                return pricefeed[i].priceFeed;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getPrice(address _address) external view returns (uint256) {\\r\\n        // Goerli ETH / USD Address\\r\\n        // https://docs.chain.link/docs/ethereum-addresses/\\r\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\r\\n        //     0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\r\\n        // );\\r\\n        AggregatorV3Interface priceFeed = getPriceFeed(_address);\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        // ETH/USD rate in 18 digit\\r\\n        return uint256(answer);\\r\\n        // or (Both will do the same thing)\\r\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xff808af17a6506dedcd342e9c444725ef89b81188c0bc52ff40e148fb84f157d\",\"license\":\"MIT\"},\"contracts/TradingFees.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./PriceChecker.sol\\\";\\r\\nimport \\\"./Wallet.sol\\\";\\r\\nimport \\\"./Exchange.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract TradingFees is Ownable {\\r\\n    //This wallet holds the trading fees collected\\r\\n    //When trading, have an option toggle to waive trading fees or not using deposited aETH\\r\\n    //Users have to first deposit aETH tokens into the Exchange contract to waive, aETH tokens are not for trading\\r\\n    //When a trade order goes through, trading fees of the trade fulfilled  = trade amount x trade price x 0.01,\\r\\n    //contract checks how much aETH is deposited and what is the value of aETH, if sufficient to waive fees fully, deduct balance in deposit\\r\\n    //and waive trading fees\\r\\n\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n\\r\\n    uint256 decimals = 10 ** 18;\\r\\n    address public ethToken = address(0);\\r\\n    address public aETH = address(0x22404B0e2a7067068AcdaDd8f9D586F834cCe2c5);\\r\\n    PriceChecker priceFeed;\\r\\n    Wallet wallet;\\r\\n    Exchange exchange;\\r\\n\\r\\n    function calculateFees(\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        address _refToken\\r\\n    ) external view returns (uint256) {\\r\\n        //Calculated based on TokenB price, require actual price in 18dp\\r\\n        //trading fees is 0.1% of trade = 0.001\\r\\n        //moving up 18dp is 0.001 x 10**18 = 10**14\\r\\n        //have to fetch tokenPrice from PriceFeed\\r\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 18decimals\\r\\n        uint256 value = (((_amount.mul(_rate)).div(decimals)).mul(priceOfToken))\\r\\n            .div(decimals);\\r\\n        uint256 fees = value.div(10 ** 4);\\r\\n\\r\\n        //Convert to aETH value\\r\\n        uint256 aETH_Price = priceFeed.getPrice(ethToken);\\r\\n\\r\\n        uint256 amountOfETH = (fees.mul(decimals)).div(aETH_Price);\\r\\n\\r\\n        return amountOfETH; //still in 18decimals\\r\\n    }\\r\\n\\r\\n    //Note fees in amountOfETH\\r\\n    function amountToDeduct(\\r\\n        address _refToken,\\r\\n        uint256 fees\\r\\n    ) external view returns (uint256) {\\r\\n        uint256 aETH_Price = priceFeed.getPrice(ethToken);\\r\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 18decimals\\r\\n        uint256 value = aETH_Price.mul(fees);\\r\\n        return value.div(priceOfToken);\\r\\n    }\\r\\n\\r\\n    function checkSufficientaETH(\\r\\n        uint256 _amount,\\r\\n        address _user\\r\\n    ) external view returns (bool) {\\r\\n        uint256 balance = wallet.s_tokens(aETH, _user);\\r\\n\\r\\n        return balance >= _amount;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xb3efc359fa2ba5b57caccad506e01ed279230e74eeb0bc5e1c8eaa2d2cd67340\",\"license\":\"MIT\"},\"contracts/Wallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./interface/IERC20.sol\\\";\\r\\nimport \\\"./Exchange.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Wallet is Ownable {\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n\\r\\n    address public immutable Owner;\\r\\n\\r\\n    //For prevention of reentrancy\\r\\n    bool private locked;\\r\\n\\r\\n    address public ethToken = address(0);\\r\\n    address public aETH = address(0x22404B0e2a7067068AcdaDd8f9D586F834cCe2c5);\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) public s_tokens; //tokenAdress -> msg.sender -> tokenAmt\\r\\n    mapping(address => mapping(address => uint256)) public lockedFunds;\\r\\n\\r\\n    Exchange exchange;\\r\\n    IERC20 token;\\r\\n\\r\\n    event Deposit(address token, address user, uint256 amount, uint256 balance);\\r\\n\\r\\n    /// @notice Event when amount withdrawn exchange\\r\\n    event Withdraw(\\r\\n        address token,\\r\\n        address user,\\r\\n        uint256 amount,\\r\\n        uint256 balance\\r\\n    );\\r\\n\\r\\n    constructor() {\\r\\n        Owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    function depositETH() external payable {\\r\\n        updateBalance(ethToken, msg.sender, msg.value, true);\\r\\n\\r\\n        emit Deposit(\\r\\n            ethToken,\\r\\n            msg.sender,\\r\\n            msg.value,\\r\\n            balanceOf(ethToken, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdrawETH(uint256 _amount) external {\\r\\n        require(\\r\\n            balanceOf(ethToken, msg.sender).sub(\\r\\n                getlockedFunds(msg.sender, ethToken)\\r\\n            ) >= _amount,\\r\\n            \\\"Insufficient balance ETH to withdraw\\\"\\r\\n        );\\r\\n        require(!locked, \\\"Reentrant call detected!\\\");\\r\\n        locked = true;\\r\\n        updateBalance(ethToken, msg.sender, _amount, false);\\r\\n        locked = false;\\r\\n        (bool success, ) = msg.sender.call{value: _amount}(\\\"\\\");\\r\\n        require(success, \\\"failed to send amount\\\");\\r\\n\\r\\n        emit Withdraw(\\r\\n            ethToken,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(ethToken, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    //from and transferFrom is from ERC20 contract\\r\\n    //_token should be an ERC20 token\\r\\n    function depositToken(\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        uint256 _decimals\\r\\n    ) external {\\r\\n        require(_token != ethToken);\\r\\n        require(\\r\\n            exchange.isVerifiedToken(_token),\\r\\n            \\\"Token not verified on Exchange\\\"\\r\\n        );\\r\\n        //need to add a check to prove that it is an ERC20 token\\r\\n        token = IERC20(_token);\\r\\n\\r\\n        //Requires approval first\\r\\n        require(\\r\\n            token.transferFrom(msg.sender, address(this), _amount),\\r\\n            \\\"No Approval yet\\\"\\r\\n        );\\r\\n        uint256 decimals = 18;\\r\\n        if (_decimals == 18) {\\r\\n            updateBalance(_token, msg.sender, _amount, true);\\r\\n        } else\\r\\n            updateBalance(\\r\\n                _token,\\r\\n                msg.sender,\\r\\n                _amount.mul(10 ** decimals.sub(_decimals)),\\r\\n                true\\r\\n            );\\r\\n\\r\\n        emit Deposit(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(_token, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdrawToken(\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        uint256 _decimals\\r\\n    ) external {\\r\\n        require(_token != ethToken);\\r\\n        require(\\r\\n            exchange.isVerifiedToken(_token),\\r\\n            \\\"Token not verified on Exchange\\\"\\r\\n        );\\r\\n\\r\\n        require(\\r\\n            balanceOf(_token, msg.sender).sub(\\r\\n                getlockedFunds(msg.sender, _token)\\r\\n            ) >= _amount,\\r\\n            \\\"Insufficient Tokens to withdraw\\\"\\r\\n        );\\r\\n        require(!locked, \\\"Reentrant call detected!\\\");\\r\\n        locked = true;\\r\\n\\r\\n        token = IERC20(_token);\\r\\n        uint256 decimals = 18;\\r\\n        if (_decimals == 18) {\\r\\n            updateBalance(_token, msg.sender, _amount, false);\\r\\n            require(token.transfer(msg.sender, _amount));\\r\\n        } else {\\r\\n            updateBalance(\\r\\n                _token,\\r\\n                msg.sender,\\r\\n                _amount.mul(10 ** decimals.sub(_decimals)),\\r\\n                false\\r\\n            );\\r\\n            require(\\r\\n                token.transfer(\\r\\n                    msg.sender,\\r\\n                    _amount.div(10 ** decimals.sub(_decimals))\\r\\n                )\\r\\n            );\\r\\n        }\\r\\n\\r\\n        locked = false;\\r\\n        emit Withdraw(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(_token, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getlockedFunds(\\r\\n        address _user,\\r\\n        address _token\\r\\n    ) public view returns (uint256) {\\r\\n        return lockedFunds[_user][_token];\\r\\n    }\\r\\n\\r\\n    function updateLockedFunds(\\r\\n        address _user,\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) public isAuthorised {\\r\\n        if (isAdd) {\\r\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].add(\\r\\n                _amount\\r\\n            );\\r\\n        } else if (!isAdd) {\\r\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].sub(\\r\\n                _amount\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //balance of specific tokens in the dex owned by specific user\\r\\n    function balanceOf(\\r\\n        address _token,\\r\\n        address _user\\r\\n    ) public view returns (uint256) {\\r\\n        return s_tokens[_token][_user];\\r\\n    }\\r\\n\\r\\n    function updateBalance(\\r\\n        address _token,\\r\\n        address _user,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) public isAuthorised {\\r\\n        if (isAdd) {\\r\\n            s_tokens[_token][_user] = s_tokens[_token][_user].add(_amount);\\r\\n        } else if (!isAdd) {\\r\\n            s_tokens[_token][_user] = s_tokens[_token][_user].sub(_amount);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function updateExchangeAddress(\\r\\n        address _exchangeAddress\\r\\n    ) external onlyOwner {\\r\\n        exchange = Exchange(_exchangeAddress);\\r\\n    }\\r\\n\\r\\n    modifier isAuthorised() {\\r\\n        require(\\r\\n            msg.sender == address(this) || msg.sender == address(exchange),\\r\\n            \\\"Unauthorised Function Call\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x537d0dfa8a4e93a6f7ec1c0e3aed058dd72346e6bc263044b06791a6dba90d50\",\"license\":\"MIT\"},\"contracts/interface/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IERC20 {\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256 remaining);\\r\\n\\r\\n    function approve(\\r\\n        address spender,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function balanceOf(address owner) external view returns (uint256 balance);\\r\\n\\r\\n    function decimals() external view returns (uint8 decimalPlaces);\\r\\n\\r\\n    function decreaseApproval(\\r\\n        address spender,\\r\\n        uint256 subtractedValue\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function increaseApproval(\\r\\n        address spender,\\r\\n        uint256 addedValue\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function name() external view returns (string memory tokenName);\\r\\n\\r\\n    function symbol() external view returns (string memory tokenSymbol);\\r\\n\\r\\n    function totalSupply() external view returns (uint256 totalTokensIssued);\\r\\n\\r\\n    function transfer(\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n}\\r\\n\",\"keccak256\":\"0xef48d46afc4efefcd6d7f1799f25aee5d8fcd588e2aaa80a84af726128194326\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":405,"contract":"contracts/Exchange.sol:Exchange","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":859,"contract":"contracts/Exchange.sol:Exchange","label":"priceChecker","offset":0,"slot":"1","type":"t_contract(PriceChecker)2675"},{"astId":862,"contract":"contracts/Exchange.sol:Exchange","label":"tradingFees","offset":0,"slot":"2","type":"t_contract(TradingFees)2840"},{"astId":865,"contract":"contracts/Exchange.sol:Exchange","label":"wallet","offset":0,"slot":"3","type":"t_contract(Wallet)3410"},{"astId":870,"contract":"contracts/Exchange.sol:Exchange","label":"decimals","offset":0,"slot":"4","type":"t_uint256"},{"astId":876,"contract":"contracts/Exchange.sol:Exchange","label":"ethToken","offset":0,"slot":"5","type":"t_address"},{"astId":882,"contract":"contracts/Exchange.sol:Exchange","label":"aETH","offset":0,"slot":"6","type":"t_address"},{"astId":886,"contract":"contracts/Exchange.sol:Exchange","label":"tokenList","offset":0,"slot":"7","type":"t_array(t_struct(_tokenInfo)913_storage)dyn_storage"},{"astId":894,"contract":"contracts/Exchange.sol:Exchange","label":"s_orderBook","offset":0,"slot":"8","type":"t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(_Order)942_storage)dyn_storage))"},{"astId":902,"contract":"contracts/Exchange.sol:Exchange","label":"s_filledOrders","offset":0,"slot":"9","type":"t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(_filledOrder)968_storage)dyn_storage))"},{"astId":905,"contract":"contracts/Exchange.sol:Exchange","label":"s_orderId","offset":0,"slot":"10","type":"t_uint256"},{"astId":908,"contract":"contracts/Exchange.sol:Exchange","label":"s_isManual","offset":0,"slot":"11","type":"t_bool"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(_Order)942_storage)dyn_storage":{"base":"t_struct(_Order)942_storage","encoding":"dynamic_array","label":"struct Exchange._Order[]","numberOfBytes":"32"},"t_array(t_struct(_filledOrder)968_storage)dyn_storage":{"base":"t_struct(_filledOrder)968_storage","encoding":"dynamic_array","label":"struct Exchange._filledOrder[]","numberOfBytes":"32"},"t_array(t_struct(_tokenInfo)913_storage)dyn_storage":{"base":"t_struct(_tokenInfo)913_storage","encoding":"dynamic_array","label":"struct Exchange._tokenInfo[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(PriceChecker)2675":{"encoding":"inplace","label":"contract PriceChecker","numberOfBytes":"20"},"t_contract(TradingFees)2840":{"encoding":"inplace","label":"contract TradingFees","numberOfBytes":"20"},"t_contract(Wallet)3410":{"encoding":"inplace","label":"contract Wallet","numberOfBytes":"20"},"t_enum(Side)971":{"encoding":"inplace","label":"enum Exchange.Side","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(_Order)942_storage)dyn_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => struct Exchange._Order[]))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_array(t_struct(_Order)942_storage)dyn_storage)"},"t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(_filledOrder)968_storage)dyn_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => struct Exchange._filledOrder[]))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_array(t_struct(_filledOrder)968_storage)dyn_storage)"},"t_mapping(t_uint256,t_array(t_struct(_Order)942_storage)dyn_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Exchange._Order[])","numberOfBytes":"32","value":"t_array(t_struct(_Order)942_storage)dyn_storage"},"t_mapping(t_uint256,t_array(t_struct(_filledOrder)968_storage)dyn_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Exchange._filledOrder[])","numberOfBytes":"32","value":"t_array(t_struct(_filledOrder)968_storage)dyn_storage"},"t_struct(_Order)942_storage":{"encoding":"inplace","label":"struct Exchange._Order","members":[{"astId":920,"contract":"contracts/Exchange.sol:Exchange","label":"id","offset":0,"slot":"0","type":"t_uint256"},{"astId":923,"contract":"contracts/Exchange.sol:Exchange","label":"side","offset":0,"slot":"1","type":"t_enum(Side)971"},{"astId":925,"contract":"contracts/Exchange.sol:Exchange","label":"user","offset":1,"slot":"1","type":"t_address"},{"astId":927,"contract":"contracts/Exchange.sol:Exchange","label":"tokenA","offset":0,"slot":"2","type":"t_address"},{"astId":929,"contract":"contracts/Exchange.sol:Exchange","label":"amountA","offset":0,"slot":"3","type":"t_uint256"},{"astId":931,"contract":"contracts/Exchange.sol:Exchange","label":"tokenB","offset":0,"slot":"4","type":"t_address"},{"astId":933,"contract":"contracts/Exchange.sol:Exchange","label":"amountB","offset":0,"slot":"5","type":"t_uint256"},{"astId":935,"contract":"contracts/Exchange.sol:Exchange","label":"rate","offset":0,"slot":"6","type":"t_uint256"},{"astId":937,"contract":"contracts/Exchange.sol:Exchange","label":"originalAmountA","offset":0,"slot":"7","type":"t_uint256"},{"astId":939,"contract":"contracts/Exchange.sol:Exchange","label":"originalAmountB","offset":0,"slot":"8","type":"t_uint256"},{"astId":941,"contract":"contracts/Exchange.sol:Exchange","label":"waiveFees","offset":0,"slot":"9","type":"t_bool"}],"numberOfBytes":"320"},"t_struct(_filledOrder)968_storage":{"encoding":"inplace","label":"struct Exchange._filledOrder","members":[{"astId":944,"contract":"contracts/Exchange.sol:Exchange","label":"id","offset":0,"slot":"0","type":"t_uint256"},{"astId":947,"contract":"contracts/Exchange.sol:Exchange","label":"side","offset":0,"slot":"1","type":"t_enum(Side)971"},{"astId":949,"contract":"contracts/Exchange.sol:Exchange","label":"user","offset":1,"slot":"1","type":"t_address"},{"astId":951,"contract":"contracts/Exchange.sol:Exchange","label":"tokenA","offset":0,"slot":"2","type":"t_address"},{"astId":953,"contract":"contracts/Exchange.sol:Exchange","label":"tokenB","offset":0,"slot":"3","type":"t_address"},{"astId":955,"contract":"contracts/Exchange.sol:Exchange","label":"amountFilled","offset":0,"slot":"4","type":"t_uint256"},{"astId":957,"contract":"contracts/Exchange.sol:Exchange","label":"fillRate","offset":0,"slot":"5","type":"t_uint256"},{"astId":959,"contract":"contracts/Exchange.sol:Exchange","label":"originalRate","offset":0,"slot":"6","type":"t_uint256"},{"astId":961,"contract":"contracts/Exchange.sol:Exchange","label":"originalAmountA","offset":0,"slot":"7","type":"t_uint256"},{"astId":963,"contract":"contracts/Exchange.sol:Exchange","label":"originalAmountB","offset":0,"slot":"8","type":"t_uint256"},{"astId":965,"contract":"contracts/Exchange.sol:Exchange","label":"feesWaived","offset":0,"slot":"9","type":"t_bool"},{"astId":967,"contract":"contracts/Exchange.sol:Exchange","label":"feesPaid","offset":0,"slot":"10","type":"t_uint256"}],"numberOfBytes":"352"},"t_struct(_tokenInfo)913_storage":{"encoding":"inplace","label":"struct Exchange._tokenInfo","members":[{"astId":910,"contract":"contracts/Exchange.sol:Exchange","label":"add","offset":0,"slot":"0","type":"t_address"},{"astId":912,"contract":"contracts/Exchange.sol:Exchange","label":"decimals","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"events":{"Cancel(uint256,uint8,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)":{"notice":"Event when an order is cancelled"},"Order(uint256,uint8,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)":{"notice":"Event when an order is placed on an exchange"}},"kind":"user","methods":{},"version":1}}},"contracts/PriceChecker.sol":{"PriceChecker":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_address","type":"address"}],"name":"addPriceFeed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"getPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"priceFeeds","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"token","type":"address"},{"internalType":"contract AggregatorV3Interface","name":"priceFeed","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_421":{"entryPoint":null,"id":421,"parameterSlots":0,"returnSlots":0},"@_msgSender_522":{"entryPoint":50,"id":522,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_509":{"entryPoint":58,"id":509,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6113778061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806310c7f0b91461006757806341976e0914610099578063715018a6146100c95780638c35423e146100d35780638da5cb5b146100ef578063f2fde38b1461010d575b600080fd5b610081600480360381019061007c9190610cd3565b610129565b60405161009093929190610ead565b60405180910390f35b6100b360048036038101906100ae9190610c37565b61022b565b6040516100c09190610f4b565b60405180910390f35b6100d16102c9565b005b6100ed60048036038101906100e89190610c64565b6102dd565b005b6100f7610688565b6040516101049190610e92565b60405180910390f35b61012760048036038101906101229190610c37565b6106b1565b005b6001818154811061013957600080fd5b906000526020600020906003020160009150905080600001805461015c906110b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610188906110b7565b80156101d55780601f106101aa576101008083540402835291602001916101d5565b820191906000526020600020905b8154815290600101906020018083116101b857829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b60008061023783610735565b905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561028157600080fd5b505afa158015610295573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b99190610d00565b5050509150508092505050919050565b6102d1610971565b6102db60006109ef565b565b6102e5610971565b60006001805480602002602001604051908101604052809291908181526020016000905b82821015610479578382906000526020600020906003020160405180606001604052908160008201805461033c906110b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610368906110b7565b80156103b55780601f1061038a576101008083540402835291602001916103b5565b820191906000526020600020905b81548152906001019060200180831161039857829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190610309565b5050505090506000805b825181101561051a5782818151811061049f5761049e6111c1565b5b6020026020010151600001516040516020016104bb9190610e7b565b60405160208183030381529060405280519060200120866040516020016104e29190610e7b565b604051602081830303815290604052805190602001201415610507576001915061051a565b80806105129061111a565b915050610483565b50801561055c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055390610f0b565b60405180910390fd5b6000839050600160405180606001604052808881526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000190805190602001906105ef929190610abb565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106b9610971565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610729576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072090610eeb565b60405180910390fd5b610732816109ef565b50565b6000806001805480602002602001604051908101604052809291908181526020016000905b828210156108ca578382906000526020600020906003020160405180606001604052908160008201805461078d906110b7565b80601f01602080910402602001604051908101604052809291908181526020018280546107b9906110b7565b80156108065780601f106107db57610100808354040283529160200191610806565b820191906000526020600020905b8154815290600101906020018083116107e957829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508152602001906001019061075a565b50505050905060005b8151811015610969578181815181106108ef576108ee6111c1565b5b60200260200101516020015173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561095657818181518110610941576109406111c1565b5b6020026020010151604001519250505061096c565b80806109619061111a565b9150506108d3565b50505b919050565b610979610ab3565b73ffffffffffffffffffffffffffffffffffffffff16610997610688565b73ffffffffffffffffffffffffffffffffffffffff16146109ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e490610f2b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b828054610ac7906110b7565b90600052602060002090601f016020900481019282610ae95760008555610b30565b82601f10610b0257805160ff1916838001178555610b30565b82800160010185558215610b30579182015b82811115610b2f578251825591602001919060010190610b14565b5b509050610b3d9190610b41565b5090565b5b80821115610b5a576000816000905550600101610b42565b5090565b6000610b71610b6c84610f8b565b610f66565b905082815260208101848484011115610b8d57610b8c611224565b5b610b98848285611075565b509392505050565b600081359050610baf816112e5565b92915050565b600081519050610bc4816112fc565b92915050565b600082601f830112610bdf57610bde61121f565b5b8135610bef848260208601610b5e565b91505092915050565b600081359050610c0781611313565b92915050565b600081519050610c1c81611313565b92915050565b600081519050610c318161132a565b92915050565b600060208284031215610c4d57610c4c61122e565b5b6000610c5b84828501610ba0565b91505092915050565b600080600060608486031215610c7d57610c7c61122e565b5b600084013567ffffffffffffffff811115610c9b57610c9a611229565b5b610ca786828701610bca565b9350506020610cb886828701610ba0565b9250506040610cc986828701610ba0565b9150509250925092565b600060208284031215610ce957610ce861122e565b5b6000610cf784828501610bf8565b91505092915050565b600080600080600060a08688031215610d1c57610d1b61122e565b5b6000610d2a88828901610c22565b9550506020610d3b88828901610bb5565b9450506040610d4c88828901610c0d565b9350506060610d5d88828901610c0d565b9250506080610d6e88828901610c22565b9150509295509295909350565b610d8481610fe3565b82525050565b610d938161103f565b82525050565b6000610da482610fbc565b610dae8185610fc7565b9350610dbe818560208601611084565b610dc781611233565b840191505092915050565b6000610ddd82610fbc565b610de78185610fd8565b9350610df7818560208601611084565b80840191505092915050565b6000610e10602683610fc7565b9150610e1b82611244565b604082019050919050565b6000610e33601883610fc7565b9150610e3e82611293565b602082019050919050565b6000610e56602083610fc7565b9150610e61826112bc565b602082019050919050565b610e758161101f565b82525050565b6000610e878284610dd2565b915081905092915050565b6000602082019050610ea76000830184610d7b565b92915050565b60006060820190508181036000830152610ec78186610d99565b9050610ed66020830185610d7b565b610ee36040830184610d8a565b949350505050565b60006020820190508181036000830152610f0481610e03565b9050919050565b60006020820190508181036000830152610f2481610e26565b9050919050565b60006020820190508181036000830152610f4481610e49565b9050919050565b6000602082019050610f606000830184610e6c565b92915050565b6000610f70610f81565b9050610f7c82826110e9565b919050565b6000604051905090565b600067ffffffffffffffff821115610fa657610fa56111f0565b5b610faf82611233565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000610fee82610fff565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b600061104a82611051565b9050919050565b600061105c82611063565b9050919050565b600061106e82610fff565b9050919050565b82818337600083830152505050565b60005b838110156110a2578082015181840152602081019050611087565b838111156110b1576000848401525b50505050565b600060028204905060018216806110cf57607f821691505b602082108114156110e3576110e2611192565b5b50919050565b6110f282611233565b810181811067ffffffffffffffff82111715611111576111106111f0565b5b80604052505050565b60006111258261101f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561115857611157611163565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5072696365204665656420616c72656164792061646465640000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6112ee81610fe3565b81146112f957600080fd5b50565b61130581610ff5565b811461131057600080fd5b50565b61131c8161101f565b811461132757600080fd5b50565b61133381611029565b811461133e57600080fd5b5056fea2646970667358221220b9278595a97bb13549adc1206e0adce24331ce782cf072286f634e1e61d6b25c64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1377 DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x10C7F0B9 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x41976E09 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x8C35423E EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x10D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH2 0x129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x90 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAE SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH2 0x2C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xC64 JUMP JUMPDEST PUSH2 0x2DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF7 PUSH2 0x688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x6B1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x15C SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x188 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x237 DUP4 PUSH2 0x735 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x295 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0xD00 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x971 JUMP JUMPDEST PUSH2 0x2DB PUSH1 0x0 PUSH2 0x9EF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2E5 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x479 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x33C SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x368 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x38A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3B5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x398 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x309 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x51A JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x49F JUMPI PUSH2 0x49E PUSH2 0x11C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4E2 SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0x507 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x51A JUMP JUMPDEST DUP1 DUP1 PUSH2 0x512 SWAP1 PUSH2 0x111A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x483 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x553 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x5EF SWAP3 SWAP2 SWAP1 PUSH2 0xABB JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6B9 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x729 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x720 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x732 DUP2 PUSH2 0x9EF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x8CA JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x78D SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7B9 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x806 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7DB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x806 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7E9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x75A JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x969 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x8EF JUMPI PUSH2 0x8EE PUSH2 0x11C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x956 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x941 JUMPI PUSH2 0x940 PUSH2 0x11C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD SWAP3 POP POP POP PUSH2 0x96C JUMP JUMPDEST DUP1 DUP1 PUSH2 0x961 SWAP1 PUSH2 0x111A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8D3 JUMP JUMPDEST POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x979 PUSH2 0xAB3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x997 PUSH2 0x688 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E4 SWAP1 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xAC7 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xAE9 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xB30 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xB02 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xB30 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xB30 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB2F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB14 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0xB41 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xB5A JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xB42 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB71 PUSH2 0xB6C DUP5 PUSH2 0xF8B JUMP JUMPDEST PUSH2 0xF66 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xB8D JUMPI PUSH2 0xB8C PUSH2 0x1224 JUMP JUMPDEST JUMPDEST PUSH2 0xB98 DUP5 DUP3 DUP6 PUSH2 0x1075 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBAF DUP2 PUSH2 0x12E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xBC4 DUP2 PUSH2 0x12FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBDF JUMPI PUSH2 0xBDE PUSH2 0x121F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBEF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xB5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC07 DUP2 PUSH2 0x1313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC1C DUP2 PUSH2 0x1313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC31 DUP2 PUSH2 0x132A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC4D JUMPI PUSH2 0xC4C PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC5B DUP5 DUP3 DUP6 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC7D JUMPI PUSH2 0xC7C PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC9B JUMPI PUSH2 0xC9A PUSH2 0x1229 JUMP JUMPDEST JUMPDEST PUSH2 0xCA7 DUP7 DUP3 DUP8 ADD PUSH2 0xBCA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCB8 DUP7 DUP3 DUP8 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCC9 DUP7 DUP3 DUP8 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE9 JUMPI PUSH2 0xCE8 PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCF7 DUP5 DUP3 DUP6 ADD PUSH2 0xBF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD1C JUMPI PUSH2 0xD1B PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD2A DUP9 DUP3 DUP10 ADD PUSH2 0xC22 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xD3B DUP9 DUP3 DUP10 ADD PUSH2 0xBB5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xD4C DUP9 DUP3 DUP10 ADD PUSH2 0xC0D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xD5D DUP9 DUP3 DUP10 ADD PUSH2 0xC0D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xD6E DUP9 DUP3 DUP10 ADD PUSH2 0xC22 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0xD84 DUP2 PUSH2 0xFE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD93 DUP2 PUSH2 0x103F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA4 DUP3 PUSH2 0xFBC JUMP JUMPDEST PUSH2 0xDAE DUP2 DUP6 PUSH2 0xFC7 JUMP JUMPDEST SWAP4 POP PUSH2 0xDBE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1084 JUMP JUMPDEST PUSH2 0xDC7 DUP2 PUSH2 0x1233 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDD DUP3 PUSH2 0xFBC JUMP JUMPDEST PUSH2 0xDE7 DUP2 DUP6 PUSH2 0xFD8 JUMP JUMPDEST SWAP4 POP PUSH2 0xDF7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1084 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE10 PUSH1 0x26 DUP4 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE1B DUP3 PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE33 PUSH1 0x18 DUP4 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE3E DUP3 PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE56 PUSH1 0x20 DUP4 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE61 DUP3 PUSH2 0x12BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE75 DUP2 PUSH2 0x101F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE87 DUP3 DUP5 PUSH2 0xDD2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEA7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEC7 DUP2 DUP7 PUSH2 0xD99 JUMP JUMPDEST SWAP1 POP PUSH2 0xED6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0xEE3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD8A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF04 DUP2 PUSH2 0xE03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF24 DUP2 PUSH2 0xE26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF44 DUP2 PUSH2 0xE49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF60 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF70 PUSH2 0xF81 JUMP JUMPDEST SWAP1 POP PUSH2 0xF7C DUP3 DUP3 PUSH2 0x10E9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xFA6 JUMPI PUSH2 0xFA5 PUSH2 0x11F0 JUMP JUMPDEST JUMPDEST PUSH2 0xFAF DUP3 PUSH2 0x1233 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFEE DUP3 PUSH2 0xFFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104A DUP3 PUSH2 0x1051 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105C DUP3 PUSH2 0x1063 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x106E DUP3 PUSH2 0xFFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10A2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1087 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x10B1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10CF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x10E3 JUMPI PUSH2 0x10E2 PUSH2 0x1192 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F2 DUP3 PUSH2 0x1233 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1111 JUMPI PUSH2 0x1110 PUSH2 0x11F0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1125 DUP3 PUSH2 0x101F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1158 JUMPI PUSH2 0x1157 PUSH2 0x1163 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5072696365204665656420616C72656164792061646465640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x12EE DUP2 PUSH2 0xFE3 JUMP JUMPDEST DUP2 EQ PUSH2 0x12F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1305 DUP2 PUSH2 0xFF5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x131C DUP2 PUSH2 0x101F JUMP JUMPDEST DUP2 EQ PUSH2 0x1327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1333 DUP2 PUSH2 0x1029 JUMP JUMPDEST DUP2 EQ PUSH2 0x133E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 0x27 DUP6 SWAP6 0xA9 PUSH28 0xB13549ADC1206E0ADCE24331CE782CF072286F634E1E61D6B25C6473 PUSH16 0x6C634300080700330000000000000000 ","sourceMap":"194:2033:6:-:0;;;;;;;;;;;;;936:32:2;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;194:2033:6;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2433:187:2:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;194:2033:6:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_452":{"entryPoint":2417,"id":452,"parameterSlots":0,"returnSlots":0},"@_msgSender_522":{"entryPoint":2739,"id":522,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_509":{"entryPoint":2543,"id":509,"parameterSlots":1,"returnSlots":0},"@addPriceFeed_2606":{"entryPoint":733,"id":2606,"parameterSlots":3,"returnSlots":0},"@getPriceFeed_2648":{"entryPoint":1845,"id":2648,"parameterSlots":1,"returnSlots":1},"@getPrice_2674":{"entryPoint":555,"id":2674,"parameterSlots":1,"returnSlots":1},"@owner_438":{"entryPoint":1672,"id":438,"parameterSlots":0,"returnSlots":1},"@priceFeeds_2516":{"entryPoint":297,"id":2516,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_466":{"entryPoint":713,"id":466,"parameterSlots":0,"returnSlots":0},"@transferOwnership_489":{"entryPoint":1713,"id":489,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":2910,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2976,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_int256_fromMemory":{"entryPoint":2997,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":3018,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3064,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":3085,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint80_fromMemory":{"entryPoint":3106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3127,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_addresst_address":{"entryPoint":3172,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":3283,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory":{"entryPoint":3328,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3451,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_AggregatorV3Interface_$397_to_t_address_fromStack":{"entryPoint":3466,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3481,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":3538,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":3587,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f_to_t_string_memory_ptr_fromStack":{"entryPoint":3622,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":3657,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3692,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":3707,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3730,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_address_t_contract$_AggregatorV3Interface_$397__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed":{"entryPoint":3757,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3819,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3851,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3883,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3915,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":3942,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":3969,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":3979,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":4028,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4039,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4056,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":4067,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int256":{"entryPoint":4085,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4095,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4127,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint80":{"entryPoint":4137,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_AggregatorV3Interface_$397_to_t_address":{"entryPoint":4159,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":4177,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":4195,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":4213,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":4228,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4279,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":4329,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":4378,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4451,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4498,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4545,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4592,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":4639,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":4644,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":4649,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4654,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":4659,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":4676,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f":{"entryPoint":4755,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":4796,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":4837,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_int256":{"entryPoint":4860,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":4883,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint80":{"entryPoint":4906,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:14550:12","statements":[{"body":{"nodeType":"YulBlock","src":"91:328:12","statements":[{"nodeType":"YulAssignment","src":"101:75:12","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"168:6:12"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"126:41:12"},"nodeType":"YulFunctionCall","src":"126:49:12"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"110:15:12"},"nodeType":"YulFunctionCall","src":"110:66:12"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"101:5:12"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"192:5:12"},{"name":"length","nodeType":"YulIdentifier","src":"199:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"185:6:12"},"nodeType":"YulFunctionCall","src":"185:21:12"},"nodeType":"YulExpressionStatement","src":"185:21:12"},{"nodeType":"YulVariableDeclaration","src":"215:27:12","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"230:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"237:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"226:3:12"},"nodeType":"YulFunctionCall","src":"226:16:12"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"219:3:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"280:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"282:77:12"},"nodeType":"YulFunctionCall","src":"282:79:12"},"nodeType":"YulExpressionStatement","src":"282:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"261:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"266:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"257:3:12"},"nodeType":"YulFunctionCall","src":"257:16:12"},{"name":"end","nodeType":"YulIdentifier","src":"275:3:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"254:2:12"},"nodeType":"YulFunctionCall","src":"254:25:12"},"nodeType":"YulIf","src":"251:112:12"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"396:3:12"},{"name":"dst","nodeType":"YulIdentifier","src":"401:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"406:6:12"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"372:23:12"},"nodeType":"YulFunctionCall","src":"372:41:12"},"nodeType":"YulExpressionStatement","src":"372:41:12"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"64:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"69:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"77:3:12","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"85:5:12","type":""}],"src":"7:412:12"},{"body":{"nodeType":"YulBlock","src":"477:87:12","statements":[{"nodeType":"YulAssignment","src":"487:29:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"509:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"496:12:12"},"nodeType":"YulFunctionCall","src":"496:20:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"487:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"552:5:12"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"525:26:12"},"nodeType":"YulFunctionCall","src":"525:33:12"},"nodeType":"YulExpressionStatement","src":"525:33:12"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"455:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"463:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"471:5:12","type":""}],"src":"425:139:12"},{"body":{"nodeType":"YulBlock","src":"632:79:12","statements":[{"nodeType":"YulAssignment","src":"642:22:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"657:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"651:5:12"},"nodeType":"YulFunctionCall","src":"651:13:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"642:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"699:5:12"}],"functionName":{"name":"validator_revert_t_int256","nodeType":"YulIdentifier","src":"673:25:12"},"nodeType":"YulFunctionCall","src":"673:32:12"},"nodeType":"YulExpressionStatement","src":"673:32:12"}]},"name":"abi_decode_t_int256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"610:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"618:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"626:5:12","type":""}],"src":"570:141:12"},{"body":{"nodeType":"YulBlock","src":"793:278:12","statements":[{"body":{"nodeType":"YulBlock","src":"842:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"844:77:12"},"nodeType":"YulFunctionCall","src":"844:79:12"},"nodeType":"YulExpressionStatement","src":"844:79:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"821:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"829:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"817:3:12"},"nodeType":"YulFunctionCall","src":"817:17:12"},{"name":"end","nodeType":"YulIdentifier","src":"836:3:12"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"813:3:12"},"nodeType":"YulFunctionCall","src":"813:27:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"806:6:12"},"nodeType":"YulFunctionCall","src":"806:35:12"},"nodeType":"YulIf","src":"803:122:12"},{"nodeType":"YulVariableDeclaration","src":"934:34:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"961:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"948:12:12"},"nodeType":"YulFunctionCall","src":"948:20:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"938:6:12","type":""}]},{"nodeType":"YulAssignment","src":"977:88:12","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1038:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"1046:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1034:3:12"},"nodeType":"YulFunctionCall","src":"1034:17:12"},{"name":"length","nodeType":"YulIdentifier","src":"1053:6:12"},{"name":"end","nodeType":"YulIdentifier","src":"1061:3:12"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"986:47:12"},"nodeType":"YulFunctionCall","src":"986:79:12"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"977:5:12"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"771:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"779:3:12","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"787:5:12","type":""}],"src":"731:340:12"},{"body":{"nodeType":"YulBlock","src":"1129:87:12","statements":[{"nodeType":"YulAssignment","src":"1139:29:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1161:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1148:12:12"},"nodeType":"YulFunctionCall","src":"1148:20:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1139:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1204:5:12"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1177:26:12"},"nodeType":"YulFunctionCall","src":"1177:33:12"},"nodeType":"YulExpressionStatement","src":"1177:33:12"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1107:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"1115:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1123:5:12","type":""}],"src":"1077:139:12"},{"body":{"nodeType":"YulBlock","src":"1285:80:12","statements":[{"nodeType":"YulAssignment","src":"1295:22:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1310:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1304:5:12"},"nodeType":"YulFunctionCall","src":"1304:13:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1295:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1353:5:12"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1326:26:12"},"nodeType":"YulFunctionCall","src":"1326:33:12"},"nodeType":"YulExpressionStatement","src":"1326:33:12"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1263:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"1271:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1279:5:12","type":""}],"src":"1222:143:12"},{"body":{"nodeType":"YulBlock","src":"1433:79:12","statements":[{"nodeType":"YulAssignment","src":"1443:22:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1458:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1452:5:12"},"nodeType":"YulFunctionCall","src":"1452:13:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1443:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1500:5:12"}],"functionName":{"name":"validator_revert_t_uint80","nodeType":"YulIdentifier","src":"1474:25:12"},"nodeType":"YulFunctionCall","src":"1474:32:12"},"nodeType":"YulExpressionStatement","src":"1474:32:12"}]},"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1411:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"1419:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1427:5:12","type":""}],"src":"1371:141:12"},{"body":{"nodeType":"YulBlock","src":"1584:263:12","statements":[{"body":{"nodeType":"YulBlock","src":"1630:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1632:77:12"},"nodeType":"YulFunctionCall","src":"1632:79:12"},"nodeType":"YulExpressionStatement","src":"1632:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1605:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"1614:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1601:3:12"},"nodeType":"YulFunctionCall","src":"1601:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"1626:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1597:3:12"},"nodeType":"YulFunctionCall","src":"1597:32:12"},"nodeType":"YulIf","src":"1594:119:12"},{"nodeType":"YulBlock","src":"1723:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"1738:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"1752:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1742:6:12","type":""}]},{"nodeType":"YulAssignment","src":"1767:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1802:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"1813:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1798:3:12"},"nodeType":"YulFunctionCall","src":"1798:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1822:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1777:20:12"},"nodeType":"YulFunctionCall","src":"1777:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1767:6:12"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1554:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1565:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1577:6:12","type":""}],"src":"1518:329:12"},{"body":{"nodeType":"YulBlock","src":"1963:689:12","statements":[{"body":{"nodeType":"YulBlock","src":"2009:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2011:77:12"},"nodeType":"YulFunctionCall","src":"2011:79:12"},"nodeType":"YulExpressionStatement","src":"2011:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1984:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"1993:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1980:3:12"},"nodeType":"YulFunctionCall","src":"1980:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"2005:2:12","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1976:3:12"},"nodeType":"YulFunctionCall","src":"1976:32:12"},"nodeType":"YulIf","src":"1973:119:12"},{"nodeType":"YulBlock","src":"2102:287:12","statements":[{"nodeType":"YulVariableDeclaration","src":"2117:45:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2148:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2159:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2144:3:12"},"nodeType":"YulFunctionCall","src":"2144:17:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2131:12:12"},"nodeType":"YulFunctionCall","src":"2131:31:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2121:6:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"2209:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"2211:77:12"},"nodeType":"YulFunctionCall","src":"2211:79:12"},"nodeType":"YulExpressionStatement","src":"2211:79:12"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2181:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"2189:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2178:2:12"},"nodeType":"YulFunctionCall","src":"2178:30:12"},"nodeType":"YulIf","src":"2175:117:12"},{"nodeType":"YulAssignment","src":"2306:73:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2351:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"2362:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2347:3:12"},"nodeType":"YulFunctionCall","src":"2347:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2371:7:12"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2316:30:12"},"nodeType":"YulFunctionCall","src":"2316:63:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2306:6:12"}]}]},{"nodeType":"YulBlock","src":"2399:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"2414:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"2428:2:12","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2418:6:12","type":""}]},{"nodeType":"YulAssignment","src":"2444:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2479:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"2490:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2475:3:12"},"nodeType":"YulFunctionCall","src":"2475:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2499:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2454:20:12"},"nodeType":"YulFunctionCall","src":"2454:53:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2444:6:12"}]}]},{"nodeType":"YulBlock","src":"2527:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"2542:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"2556:2:12","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2546:6:12","type":""}]},{"nodeType":"YulAssignment","src":"2572:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2607:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"2618:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2603:3:12"},"nodeType":"YulFunctionCall","src":"2603:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2627:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2582:20:12"},"nodeType":"YulFunctionCall","src":"2582:53:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2572:6:12"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1917:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1928:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1940:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1948:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1956:6:12","type":""}],"src":"1853:799:12"},{"body":{"nodeType":"YulBlock","src":"2724:263:12","statements":[{"body":{"nodeType":"YulBlock","src":"2770:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2772:77:12"},"nodeType":"YulFunctionCall","src":"2772:79:12"},"nodeType":"YulExpressionStatement","src":"2772:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2745:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"2754:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2741:3:12"},"nodeType":"YulFunctionCall","src":"2741:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"2766:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2737:3:12"},"nodeType":"YulFunctionCall","src":"2737:32:12"},"nodeType":"YulIf","src":"2734:119:12"},{"nodeType":"YulBlock","src":"2863:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"2878:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"2892:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2882:6:12","type":""}]},{"nodeType":"YulAssignment","src":"2907:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2942:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"2953:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2938:3:12"},"nodeType":"YulFunctionCall","src":"2938:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2962:7:12"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2917:20:12"},"nodeType":"YulFunctionCall","src":"2917:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2907:6:12"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2694:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2705:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2717:6:12","type":""}],"src":"2658:329:12"},{"body":{"nodeType":"YulBlock","src":"3135:829:12","statements":[{"body":{"nodeType":"YulBlock","src":"3182:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3184:77:12"},"nodeType":"YulFunctionCall","src":"3184:79:12"},"nodeType":"YulExpressionStatement","src":"3184:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3156:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"3165:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3152:3:12"},"nodeType":"YulFunctionCall","src":"3152:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"3177:3:12","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3148:3:12"},"nodeType":"YulFunctionCall","src":"3148:33:12"},"nodeType":"YulIf","src":"3145:120:12"},{"nodeType":"YulBlock","src":"3275:127:12","statements":[{"nodeType":"YulVariableDeclaration","src":"3290:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"3304:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3294:6:12","type":""}]},{"nodeType":"YulAssignment","src":"3319:73:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3364:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"3375:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3360:3:12"},"nodeType":"YulFunctionCall","src":"3360:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3384:7:12"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"3329:30:12"},"nodeType":"YulFunctionCall","src":"3329:63:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3319:6:12"}]}]},{"nodeType":"YulBlock","src":"3412:128:12","statements":[{"nodeType":"YulVariableDeclaration","src":"3427:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"3441:2:12","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3431:6:12","type":""}]},{"nodeType":"YulAssignment","src":"3457:73:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3502:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"3513:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3498:3:12"},"nodeType":"YulFunctionCall","src":"3498:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3522:7:12"}],"functionName":{"name":"abi_decode_t_int256_fromMemory","nodeType":"YulIdentifier","src":"3467:30:12"},"nodeType":"YulFunctionCall","src":"3467:63:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3457:6:12"}]}]},{"nodeType":"YulBlock","src":"3550:129:12","statements":[{"nodeType":"YulVariableDeclaration","src":"3565:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"3579:2:12","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3569:6:12","type":""}]},{"nodeType":"YulAssignment","src":"3595:74:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3641:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"3652:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3637:3:12"},"nodeType":"YulFunctionCall","src":"3637:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3661:7:12"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"3605:31:12"},"nodeType":"YulFunctionCall","src":"3605:64:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3595:6:12"}]}]},{"nodeType":"YulBlock","src":"3689:129:12","statements":[{"nodeType":"YulVariableDeclaration","src":"3704:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"3718:2:12","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3708:6:12","type":""}]},{"nodeType":"YulAssignment","src":"3734:74:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3780:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"3791:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3776:3:12"},"nodeType":"YulFunctionCall","src":"3776:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3800:7:12"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"3744:31:12"},"nodeType":"YulFunctionCall","src":"3744:64:12"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3734:6:12"}]}]},{"nodeType":"YulBlock","src":"3828:129:12","statements":[{"nodeType":"YulVariableDeclaration","src":"3843:17:12","value":{"kind":"number","nodeType":"YulLiteral","src":"3857:3:12","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3847:6:12","type":""}]},{"nodeType":"YulAssignment","src":"3874:73:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3919:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"3930:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3915:3:12"},"nodeType":"YulFunctionCall","src":"3915:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3939:7:12"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"3884:30:12"},"nodeType":"YulFunctionCall","src":"3884:63:12"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3874:6:12"}]}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3073:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3084:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3096:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3104:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3112:6:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3120:6:12","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3128:6:12","type":""}],"src":"2993:971:12"},{"body":{"nodeType":"YulBlock","src":"4035:53:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4052:3:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4075:5:12"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4057:17:12"},"nodeType":"YulFunctionCall","src":"4057:24:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4045:6:12"},"nodeType":"YulFunctionCall","src":"4045:37:12"},"nodeType":"YulExpressionStatement","src":"4045:37:12"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4023:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4030:3:12","type":""}],"src":"3970:118:12"},{"body":{"nodeType":"YulBlock","src":"4188:95:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4205:3:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4270:5:12"}],"functionName":{"name":"convert_t_contract$_AggregatorV3Interface_$397_to_t_address","nodeType":"YulIdentifier","src":"4210:59:12"},"nodeType":"YulFunctionCall","src":"4210:66:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4198:6:12"},"nodeType":"YulFunctionCall","src":"4198:79:12"},"nodeType":"YulExpressionStatement","src":"4198:79:12"}]},"name":"abi_encode_t_contract$_AggregatorV3Interface_$397_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4176:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4183:3:12","type":""}],"src":"4094:189:12"},{"body":{"nodeType":"YulBlock","src":"4381:272:12","statements":[{"nodeType":"YulVariableDeclaration","src":"4391:53:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4438:5:12"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4405:32:12"},"nodeType":"YulFunctionCall","src":"4405:39:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4395:6:12","type":""}]},{"nodeType":"YulAssignment","src":"4453:78:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4519:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"4524:6:12"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4460:58:12"},"nodeType":"YulFunctionCall","src":"4460:71:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4453:3:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4566:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"4573:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4562:3:12"},"nodeType":"YulFunctionCall","src":"4562:16:12"},{"name":"pos","nodeType":"YulIdentifier","src":"4580:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"4585:6:12"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4540:21:12"},"nodeType":"YulFunctionCall","src":"4540:52:12"},"nodeType":"YulExpressionStatement","src":"4540:52:12"},{"nodeType":"YulAssignment","src":"4601:46:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4612:3:12"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4639:6:12"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4617:21:12"},"nodeType":"YulFunctionCall","src":"4617:29:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:12"},"nodeType":"YulFunctionCall","src":"4608:39:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4601:3:12"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4362:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4369:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4377:3:12","type":""}],"src":"4289:364:12"},{"body":{"nodeType":"YulBlock","src":"4769:267:12","statements":[{"nodeType":"YulVariableDeclaration","src":"4779:53:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4826:5:12"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4793:32:12"},"nodeType":"YulFunctionCall","src":"4793:39:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4783:6:12","type":""}]},{"nodeType":"YulAssignment","src":"4841:96:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4925:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"4930:6:12"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"4848:76:12"},"nodeType":"YulFunctionCall","src":"4848:89:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4841:3:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4972:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"4979:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4968:3:12"},"nodeType":"YulFunctionCall","src":"4968:16:12"},{"name":"pos","nodeType":"YulIdentifier","src":"4986:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"4991:6:12"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4946:21:12"},"nodeType":"YulFunctionCall","src":"4946:52:12"},"nodeType":"YulExpressionStatement","src":"4946:52:12"},{"nodeType":"YulAssignment","src":"5007:23:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5018:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"5023:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5014:3:12"},"nodeType":"YulFunctionCall","src":"5014:16:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5007:3:12"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4750:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4757:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4765:3:12","type":""}],"src":"4659:377:12"},{"body":{"nodeType":"YulBlock","src":"5188:220:12","statements":[{"nodeType":"YulAssignment","src":"5198:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5264:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"5269:2:12","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5205:58:12"},"nodeType":"YulFunctionCall","src":"5205:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5198:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5370:3:12"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"5281:88:12"},"nodeType":"YulFunctionCall","src":"5281:93:12"},"nodeType":"YulExpressionStatement","src":"5281:93:12"},{"nodeType":"YulAssignment","src":"5383:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5394:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"5399:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5390:3:12"},"nodeType":"YulFunctionCall","src":"5390:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5383:3:12"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5176:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5184:3:12","type":""}],"src":"5042:366:12"},{"body":{"nodeType":"YulBlock","src":"5560:220:12","statements":[{"nodeType":"YulAssignment","src":"5570:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5636:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"5641:2:12","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5577:58:12"},"nodeType":"YulFunctionCall","src":"5577:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5570:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5742:3:12"}],"functionName":{"name":"store_literal_in_memory_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f","nodeType":"YulIdentifier","src":"5653:88:12"},"nodeType":"YulFunctionCall","src":"5653:93:12"},"nodeType":"YulExpressionStatement","src":"5653:93:12"},{"nodeType":"YulAssignment","src":"5755:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5766:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"5771:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5762:3:12"},"nodeType":"YulFunctionCall","src":"5762:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5755:3:12"}]}]},"name":"abi_encode_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5548:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5556:3:12","type":""}],"src":"5414:366:12"},{"body":{"nodeType":"YulBlock","src":"5932:220:12","statements":[{"nodeType":"YulAssignment","src":"5942:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6008:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"6013:2:12","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5949:58:12"},"nodeType":"YulFunctionCall","src":"5949:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5942:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6114:3:12"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"6025:88:12"},"nodeType":"YulFunctionCall","src":"6025:93:12"},"nodeType":"YulExpressionStatement","src":"6025:93:12"},{"nodeType":"YulAssignment","src":"6127:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6138:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"6143:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6134:3:12"},"nodeType":"YulFunctionCall","src":"6134:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6127:3:12"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5920:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5928:3:12","type":""}],"src":"5786:366:12"},{"body":{"nodeType":"YulBlock","src":"6223:53:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6240:3:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6263:5:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6245:17:12"},"nodeType":"YulFunctionCall","src":"6245:24:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6233:6:12"},"nodeType":"YulFunctionCall","src":"6233:37:12"},"nodeType":"YulExpressionStatement","src":"6233:37:12"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6211:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6218:3:12","type":""}],"src":"6158:118:12"},{"body":{"nodeType":"YulBlock","src":"6418:139:12","statements":[{"nodeType":"YulAssignment","src":"6429:102:12","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6518:6:12"},{"name":"pos","nodeType":"YulIdentifier","src":"6527:3:12"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"6436:81:12"},"nodeType":"YulFunctionCall","src":"6436:95:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6429:3:12"}]},{"nodeType":"YulAssignment","src":"6541:10:12","value":{"name":"pos","nodeType":"YulIdentifier","src":"6548:3:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6541:3:12"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6397:3:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6403:6:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6414:3:12","type":""}],"src":"6282:275:12"},{"body":{"nodeType":"YulBlock","src":"6661:124:12","statements":[{"nodeType":"YulAssignment","src":"6671:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6683:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6694:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6679:3:12"},"nodeType":"YulFunctionCall","src":"6679:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6671:4:12"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6751:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6764:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6775:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6760:3:12"},"nodeType":"YulFunctionCall","src":"6760:17:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6707:43:12"},"nodeType":"YulFunctionCall","src":"6707:71:12"},"nodeType":"YulExpressionStatement","src":"6707:71:12"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6633:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6645:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6656:4:12","type":""}],"src":"6563:222:12"},{"body":{"nodeType":"YulBlock","src":"6994:388:12","statements":[{"nodeType":"YulAssignment","src":"7004:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7016:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7027:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7012:3:12"},"nodeType":"YulFunctionCall","src":"7012:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7004:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7051:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7062:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7047:3:12"},"nodeType":"YulFunctionCall","src":"7047:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7070:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"7076:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7066:3:12"},"nodeType":"YulFunctionCall","src":"7066:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7040:6:12"},"nodeType":"YulFunctionCall","src":"7040:47:12"},"nodeType":"YulExpressionStatement","src":"7040:47:12"},{"nodeType":"YulAssignment","src":"7096:86:12","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7168:6:12"},{"name":"tail","nodeType":"YulIdentifier","src":"7177:4:12"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7104:63:12"},"nodeType":"YulFunctionCall","src":"7104:78:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7096:4:12"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7236:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7249:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7260:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7245:3:12"},"nodeType":"YulFunctionCall","src":"7245:18:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7192:43:12"},"nodeType":"YulFunctionCall","src":"7192:72:12"},"nodeType":"YulExpressionStatement","src":"7192:72:12"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7347:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7360:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7371:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7356:3:12"},"nodeType":"YulFunctionCall","src":"7356:18:12"}],"functionName":{"name":"abi_encode_t_contract$_AggregatorV3Interface_$397_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7274:72:12"},"nodeType":"YulFunctionCall","src":"7274:101:12"},"nodeType":"YulExpressionStatement","src":"7274:101:12"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_address_t_contract$_AggregatorV3Interface_$397__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6950:9:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6962:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6970:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6978:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6989:4:12","type":""}],"src":"6791:591:12"},{"body":{"nodeType":"YulBlock","src":"7559:248:12","statements":[{"nodeType":"YulAssignment","src":"7569:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7581:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7592:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7577:3:12"},"nodeType":"YulFunctionCall","src":"7577:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7569:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7616:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7627:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7612:3:12"},"nodeType":"YulFunctionCall","src":"7612:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7635:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"7641:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7631:3:12"},"nodeType":"YulFunctionCall","src":"7631:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7605:6:12"},"nodeType":"YulFunctionCall","src":"7605:47:12"},"nodeType":"YulExpressionStatement","src":"7605:47:12"},{"nodeType":"YulAssignment","src":"7661:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7795:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7669:124:12"},"nodeType":"YulFunctionCall","src":"7669:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7661:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7539:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7554:4:12","type":""}],"src":"7388:419:12"},{"body":{"nodeType":"YulBlock","src":"7984:248:12","statements":[{"nodeType":"YulAssignment","src":"7994:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8006:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8017:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8002:3:12"},"nodeType":"YulFunctionCall","src":"8002:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7994:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8041:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8052:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8037:3:12"},"nodeType":"YulFunctionCall","src":"8037:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8060:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"8066:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8056:3:12"},"nodeType":"YulFunctionCall","src":"8056:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8030:6:12"},"nodeType":"YulFunctionCall","src":"8030:47:12"},"nodeType":"YulExpressionStatement","src":"8030:47:12"},{"nodeType":"YulAssignment","src":"8086:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8220:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8094:124:12"},"nodeType":"YulFunctionCall","src":"8094:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8086:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7964:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7979:4:12","type":""}],"src":"7813:419:12"},{"body":{"nodeType":"YulBlock","src":"8409:248:12","statements":[{"nodeType":"YulAssignment","src":"8419:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8431:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8442:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:12"},"nodeType":"YulFunctionCall","src":"8427:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8419:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8466:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8477:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8462:3:12"},"nodeType":"YulFunctionCall","src":"8462:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8485:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"8491:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8481:3:12"},"nodeType":"YulFunctionCall","src":"8481:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8455:6:12"},"nodeType":"YulFunctionCall","src":"8455:47:12"},"nodeType":"YulExpressionStatement","src":"8455:47:12"},{"nodeType":"YulAssignment","src":"8511:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8645:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8519:124:12"},"nodeType":"YulFunctionCall","src":"8519:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8511:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8389:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8404:4:12","type":""}],"src":"8238:419:12"},{"body":{"nodeType":"YulBlock","src":"8761:124:12","statements":[{"nodeType":"YulAssignment","src":"8771:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8783:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8794:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8779:3:12"},"nodeType":"YulFunctionCall","src":"8779:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8771:4:12"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8851:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8864:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8875:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8860:3:12"},"nodeType":"YulFunctionCall","src":"8860:17:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8807:43:12"},"nodeType":"YulFunctionCall","src":"8807:71:12"},"nodeType":"YulExpressionStatement","src":"8807:71:12"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8733:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8745:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8756:4:12","type":""}],"src":"8663:222:12"},{"body":{"nodeType":"YulBlock","src":"8932:88:12","statements":[{"nodeType":"YulAssignment","src":"8942:30:12","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"8952:18:12"},"nodeType":"YulFunctionCall","src":"8952:20:12"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8942:6:12"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9001:6:12"},{"name":"size","nodeType":"YulIdentifier","src":"9009:4:12"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"8981:19:12"},"nodeType":"YulFunctionCall","src":"8981:33:12"},"nodeType":"YulExpressionStatement","src":"8981:33:12"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"8916:4:12","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"8925:6:12","type":""}],"src":"8891:129:12"},{"body":{"nodeType":"YulBlock","src":"9066:35:12","statements":[{"nodeType":"YulAssignment","src":"9076:19:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9092:2:12","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9086:5:12"},"nodeType":"YulFunctionCall","src":"9086:9:12"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9076:6:12"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"9059:6:12","type":""}],"src":"9026:75:12"},{"body":{"nodeType":"YulBlock","src":"9174:241:12","statements":[{"body":{"nodeType":"YulBlock","src":"9279:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9281:16:12"},"nodeType":"YulFunctionCall","src":"9281:18:12"},"nodeType":"YulExpressionStatement","src":"9281:18:12"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9251:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"9259:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9248:2:12"},"nodeType":"YulFunctionCall","src":"9248:30:12"},"nodeType":"YulIf","src":"9245:56:12"},{"nodeType":"YulAssignment","src":"9311:37:12","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9341:6:12"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9319:21:12"},"nodeType":"YulFunctionCall","src":"9319:29:12"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9311:4:12"}]},{"nodeType":"YulAssignment","src":"9385:23:12","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"9397:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"9403:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9393:3:12"},"nodeType":"YulFunctionCall","src":"9393:15:12"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9385:4:12"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"9158:6:12","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"9169:4:12","type":""}],"src":"9107:308:12"},{"body":{"nodeType":"YulBlock","src":"9480:40:12","statements":[{"nodeType":"YulAssignment","src":"9491:22:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9507:5:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9501:5:12"},"nodeType":"YulFunctionCall","src":"9501:12:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9491:6:12"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9463:5:12","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9473:6:12","type":""}],"src":"9421:99:12"},{"body":{"nodeType":"YulBlock","src":"9622:73:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9639:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"9644:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9632:6:12"},"nodeType":"YulFunctionCall","src":"9632:19:12"},"nodeType":"YulExpressionStatement","src":"9632:19:12"},{"nodeType":"YulAssignment","src":"9660:29:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9679:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"9684:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9675:3:12"},"nodeType":"YulFunctionCall","src":"9675:14:12"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9660:11:12"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9594:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"9599:6:12","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9610:11:12","type":""}],"src":"9526:169:12"},{"body":{"nodeType":"YulBlock","src":"9815:34:12","statements":[{"nodeType":"YulAssignment","src":"9825:18:12","value":{"name":"pos","nodeType":"YulIdentifier","src":"9840:3:12"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9825:11:12"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9787:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"9792:6:12","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9803:11:12","type":""}],"src":"9701:148:12"},{"body":{"nodeType":"YulBlock","src":"9900:51:12","statements":[{"nodeType":"YulAssignment","src":"9910:35:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9939:5:12"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9921:17:12"},"nodeType":"YulFunctionCall","src":"9921:24:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9910:7:12"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9882:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9892:7:12","type":""}],"src":"9855:96:12"},{"body":{"nodeType":"YulBlock","src":"10001:32:12","statements":[{"nodeType":"YulAssignment","src":"10011:16:12","value":{"name":"value","nodeType":"YulIdentifier","src":"10022:5:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10011:7:12"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9983:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9993:7:12","type":""}],"src":"9957:76:12"},{"body":{"nodeType":"YulBlock","src":"10084:81:12","statements":[{"nodeType":"YulAssignment","src":"10094:65:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10109:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"10116:42:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10105:3:12"},"nodeType":"YulFunctionCall","src":"10105:54:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10094:7:12"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10066:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10076:7:12","type":""}],"src":"10039:126:12"},{"body":{"nodeType":"YulBlock","src":"10216:32:12","statements":[{"nodeType":"YulAssignment","src":"10226:16:12","value":{"name":"value","nodeType":"YulIdentifier","src":"10237:5:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10226:7:12"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10198:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10208:7:12","type":""}],"src":"10171:77:12"},{"body":{"nodeType":"YulBlock","src":"10298:61:12","statements":[{"nodeType":"YulAssignment","src":"10308:45:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10323:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"10330:22:12","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10319:3:12"},"nodeType":"YulFunctionCall","src":"10319:34:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10308:7:12"}]}]},"name":"cleanup_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10280:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10290:7:12","type":""}],"src":"10254:105:12"},{"body":{"nodeType":"YulBlock","src":"10454:66:12","statements":[{"nodeType":"YulAssignment","src":"10464:50:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10508:5:12"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"10477:30:12"},"nodeType":"YulFunctionCall","src":"10477:37:12"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10464:9:12"}]}]},"name":"convert_t_contract$_AggregatorV3Interface_$397_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10434:5:12","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10444:9:12","type":""}],"src":"10365:155:12"},{"body":{"nodeType":"YulBlock","src":"10586:66:12","statements":[{"nodeType":"YulAssignment","src":"10596:50:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10640:5:12"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"10609:30:12"},"nodeType":"YulFunctionCall","src":"10609:37:12"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10596:9:12"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10566:5:12","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10576:9:12","type":""}],"src":"10526:126:12"},{"body":{"nodeType":"YulBlock","src":"10718:53:12","statements":[{"nodeType":"YulAssignment","src":"10728:37:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10759:5:12"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"10741:17:12"},"nodeType":"YulFunctionCall","src":"10741:24:12"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10728:9:12"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10698:5:12","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10708:9:12","type":""}],"src":"10658:113:12"},{"body":{"nodeType":"YulBlock","src":"10828:103:12","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10851:3:12"},{"name":"src","nodeType":"YulIdentifier","src":"10856:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"10861:6:12"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"10838:12:12"},"nodeType":"YulFunctionCall","src":"10838:30:12"},"nodeType":"YulExpressionStatement","src":"10838:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10909:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"10914:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10905:3:12"},"nodeType":"YulFunctionCall","src":"10905:16:12"},{"kind":"number","nodeType":"YulLiteral","src":"10923:1:12","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10898:6:12"},"nodeType":"YulFunctionCall","src":"10898:27:12"},"nodeType":"YulExpressionStatement","src":"10898:27:12"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10810:3:12","type":""},{"name":"dst","nodeType":"YulTypedName","src":"10815:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"10820:6:12","type":""}],"src":"10777:154:12"},{"body":{"nodeType":"YulBlock","src":"10986:258:12","statements":[{"nodeType":"YulVariableDeclaration","src":"10996:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"11005:1:12","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11000:1:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"11065:63:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11090:3:12"},{"name":"i","nodeType":"YulIdentifier","src":"11095:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11086:3:12"},"nodeType":"YulFunctionCall","src":"11086:11:12"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11109:3:12"},{"name":"i","nodeType":"YulIdentifier","src":"11114:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11105:3:12"},"nodeType":"YulFunctionCall","src":"11105:11:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11099:5:12"},"nodeType":"YulFunctionCall","src":"11099:18:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11079:6:12"},"nodeType":"YulFunctionCall","src":"11079:39:12"},"nodeType":"YulExpressionStatement","src":"11079:39:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11026:1:12"},{"name":"length","nodeType":"YulIdentifier","src":"11029:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11023:2:12"},"nodeType":"YulFunctionCall","src":"11023:13:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11037:19:12","statements":[{"nodeType":"YulAssignment","src":"11039:15:12","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11048:1:12"},{"kind":"number","nodeType":"YulLiteral","src":"11051:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11044:3:12"},"nodeType":"YulFunctionCall","src":"11044:10:12"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11039:1:12"}]}]},"pre":{"nodeType":"YulBlock","src":"11019:3:12","statements":[]},"src":"11015:113:12"},{"body":{"nodeType":"YulBlock","src":"11162:76:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11212:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"11217:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11208:3:12"},"nodeType":"YulFunctionCall","src":"11208:16:12"},{"kind":"number","nodeType":"YulLiteral","src":"11226:1:12","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11201:6:12"},"nodeType":"YulFunctionCall","src":"11201:27:12"},"nodeType":"YulExpressionStatement","src":"11201:27:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11143:1:12"},{"name":"length","nodeType":"YulIdentifier","src":"11146:6:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11140:2:12"},"nodeType":"YulFunctionCall","src":"11140:13:12"},"nodeType":"YulIf","src":"11137:101:12"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10968:3:12","type":""},{"name":"dst","nodeType":"YulTypedName","src":"10973:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"10978:6:12","type":""}],"src":"10937:307:12"},{"body":{"nodeType":"YulBlock","src":"11301:269:12","statements":[{"nodeType":"YulAssignment","src":"11311:22:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11325:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"11331:1:12","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11321:3:12"},"nodeType":"YulFunctionCall","src":"11321:12:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11311:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"11342:38:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11372:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"11378:1:12","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11368:3:12"},"nodeType":"YulFunctionCall","src":"11368:12:12"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"11346:18:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"11419:51:12","statements":[{"nodeType":"YulAssignment","src":"11433:27:12","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11447:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"11455:4:12","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11443:3:12"},"nodeType":"YulFunctionCall","src":"11443:17:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11433:6:12"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11399:18:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11392:6:12"},"nodeType":"YulFunctionCall","src":"11392:26:12"},"nodeType":"YulIf","src":"11389:81:12"},{"body":{"nodeType":"YulBlock","src":"11522:42:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"11536:16:12"},"nodeType":"YulFunctionCall","src":"11536:18:12"},"nodeType":"YulExpressionStatement","src":"11536:18:12"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11486:18:12"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11509:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"11517:2:12","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11506:2:12"},"nodeType":"YulFunctionCall","src":"11506:14:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11483:2:12"},"nodeType":"YulFunctionCall","src":"11483:38:12"},"nodeType":"YulIf","src":"11480:84:12"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11285:4:12","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11294:6:12","type":""}],"src":"11250:320:12"},{"body":{"nodeType":"YulBlock","src":"11619:238:12","statements":[{"nodeType":"YulVariableDeclaration","src":"11629:58:12","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11651:6:12"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"11681:4:12"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"11659:21:12"},"nodeType":"YulFunctionCall","src":"11659:27:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11647:3:12"},"nodeType":"YulFunctionCall","src":"11647:40:12"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"11633:10:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"11798:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"11800:16:12"},"nodeType":"YulFunctionCall","src":"11800:18:12"},"nodeType":"YulExpressionStatement","src":"11800:18:12"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"11741:10:12"},{"kind":"number","nodeType":"YulLiteral","src":"11753:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11738:2:12"},"nodeType":"YulFunctionCall","src":"11738:34:12"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"11777:10:12"},{"name":"memPtr","nodeType":"YulIdentifier","src":"11789:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11774:2:12"},"nodeType":"YulFunctionCall","src":"11774:22:12"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11735:2:12"},"nodeType":"YulFunctionCall","src":"11735:62:12"},"nodeType":"YulIf","src":"11732:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11836:2:12","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"11840:10:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11829:6:12"},"nodeType":"YulFunctionCall","src":"11829:22:12"},"nodeType":"YulExpressionStatement","src":"11829:22:12"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11605:6:12","type":""},{"name":"size","nodeType":"YulTypedName","src":"11613:4:12","type":""}],"src":"11576:281:12"},{"body":{"nodeType":"YulBlock","src":"11906:190:12","statements":[{"nodeType":"YulAssignment","src":"11916:33:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11943:5:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11925:17:12"},"nodeType":"YulFunctionCall","src":"11925:24:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11916:5:12"}]},{"body":{"nodeType":"YulBlock","src":"12039:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12041:16:12"},"nodeType":"YulFunctionCall","src":"12041:18:12"},"nodeType":"YulExpressionStatement","src":"12041:18:12"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11964:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"11971:66:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11961:2:12"},"nodeType":"YulFunctionCall","src":"11961:77:12"},"nodeType":"YulIf","src":"11958:103:12"},{"nodeType":"YulAssignment","src":"12070:20:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12081:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"12088:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12077:3:12"},"nodeType":"YulFunctionCall","src":"12077:13:12"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12070:3:12"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11892:5:12","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"11902:3:12","type":""}],"src":"11863:233:12"},{"body":{"nodeType":"YulBlock","src":"12130:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12147:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12150:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12140:6:12"},"nodeType":"YulFunctionCall","src":"12140:88:12"},"nodeType":"YulExpressionStatement","src":"12140:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12244:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12247:4:12","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12237:6:12"},"nodeType":"YulFunctionCall","src":"12237:15:12"},"nodeType":"YulExpressionStatement","src":"12237:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12268:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12271:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12261:6:12"},"nodeType":"YulFunctionCall","src":"12261:15:12"},"nodeType":"YulExpressionStatement","src":"12261:15:12"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"12102:180:12"},{"body":{"nodeType":"YulBlock","src":"12316:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12333:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12336:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12326:6:12"},"nodeType":"YulFunctionCall","src":"12326:88:12"},"nodeType":"YulExpressionStatement","src":"12326:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12430:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12433:4:12","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12423:6:12"},"nodeType":"YulFunctionCall","src":"12423:15:12"},"nodeType":"YulExpressionStatement","src":"12423:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12454:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12457:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12447:6:12"},"nodeType":"YulFunctionCall","src":"12447:15:12"},"nodeType":"YulExpressionStatement","src":"12447:15:12"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"12288:180:12"},{"body":{"nodeType":"YulBlock","src":"12502:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12519:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12522:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12512:6:12"},"nodeType":"YulFunctionCall","src":"12512:88:12"},"nodeType":"YulExpressionStatement","src":"12512:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12616:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12619:4:12","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12609:6:12"},"nodeType":"YulFunctionCall","src":"12609:15:12"},"nodeType":"YulExpressionStatement","src":"12609:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12640:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12643:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12633:6:12"},"nodeType":"YulFunctionCall","src":"12633:15:12"},"nodeType":"YulExpressionStatement","src":"12633:15:12"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"12474:180:12"},{"body":{"nodeType":"YulBlock","src":"12688:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12705:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12708:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12698:6:12"},"nodeType":"YulFunctionCall","src":"12698:88:12"},"nodeType":"YulExpressionStatement","src":"12698:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12802:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12805:4:12","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12795:6:12"},"nodeType":"YulFunctionCall","src":"12795:15:12"},"nodeType":"YulExpressionStatement","src":"12795:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12826:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12829:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12819:6:12"},"nodeType":"YulFunctionCall","src":"12819:15:12"},"nodeType":"YulExpressionStatement","src":"12819:15:12"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"12660:180:12"},{"body":{"nodeType":"YulBlock","src":"12935:28:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12952:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12955:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12945:6:12"},"nodeType":"YulFunctionCall","src":"12945:12:12"},"nodeType":"YulExpressionStatement","src":"12945:12:12"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"12846:117:12"},{"body":{"nodeType":"YulBlock","src":"13058:28:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13075:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13078:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13068:6:12"},"nodeType":"YulFunctionCall","src":"13068:12:12"},"nodeType":"YulExpressionStatement","src":"13068:12:12"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"12969:117:12"},{"body":{"nodeType":"YulBlock","src":"13181:28:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13198:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13201:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13191:6:12"},"nodeType":"YulFunctionCall","src":"13191:12:12"},"nodeType":"YulExpressionStatement","src":"13191:12:12"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"13092:117:12"},{"body":{"nodeType":"YulBlock","src":"13304:28:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13321:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13324:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13314:6:12"},"nodeType":"YulFunctionCall","src":"13314:12:12"},"nodeType":"YulExpressionStatement","src":"13314:12:12"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"13215:117:12"},{"body":{"nodeType":"YulBlock","src":"13386:54:12","statements":[{"nodeType":"YulAssignment","src":"13396:38:12","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13414:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"13421:2:12","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13410:3:12"},"nodeType":"YulFunctionCall","src":"13410:14:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13430:2:12","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13426:3:12"},"nodeType":"YulFunctionCall","src":"13426:7:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13406:3:12"},"nodeType":"YulFunctionCall","src":"13406:28:12"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13396:6:12"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13369:5:12","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"13379:6:12","type":""}],"src":"13338:102:12"},{"body":{"nodeType":"YulBlock","src":"13552:119:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13574:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"13582:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13570:3:12"},"nodeType":"YulFunctionCall","src":"13570:14:12"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"13586:34:12","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13563:6:12"},"nodeType":"YulFunctionCall","src":"13563:58:12"},"nodeType":"YulExpressionStatement","src":"13563:58:12"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13642:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"13650:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13638:3:12"},"nodeType":"YulFunctionCall","src":"13638:15:12"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"13655:8:12","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13631:6:12"},"nodeType":"YulFunctionCall","src":"13631:33:12"},"nodeType":"YulExpressionStatement","src":"13631:33:12"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13544:6:12","type":""}],"src":"13446:225:12"},{"body":{"nodeType":"YulBlock","src":"13783:68:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13805:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"13813:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13801:3:12"},"nodeType":"YulFunctionCall","src":"13801:14:12"},{"hexValue":"5072696365204665656420616c7265616479206164646564","kind":"string","nodeType":"YulLiteral","src":"13817:26:12","type":"","value":"Price Feed already added"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13794:6:12"},"nodeType":"YulFunctionCall","src":"13794:50:12"},"nodeType":"YulExpressionStatement","src":"13794:50:12"}]},"name":"store_literal_in_memory_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13775:6:12","type":""}],"src":"13677:174:12"},{"body":{"nodeType":"YulBlock","src":"13963:76:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13985:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"13993:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13981:3:12"},"nodeType":"YulFunctionCall","src":"13981:14:12"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"13997:34:12","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13974:6:12"},"nodeType":"YulFunctionCall","src":"13974:58:12"},"nodeType":"YulExpressionStatement","src":"13974:58:12"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13955:6:12","type":""}],"src":"13857:182:12"},{"body":{"nodeType":"YulBlock","src":"14088:79:12","statements":[{"body":{"nodeType":"YulBlock","src":"14145:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14154:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14157:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14147:6:12"},"nodeType":"YulFunctionCall","src":"14147:12:12"},"nodeType":"YulExpressionStatement","src":"14147:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14111:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14136:5:12"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"14118:17:12"},"nodeType":"YulFunctionCall","src":"14118:24:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14108:2:12"},"nodeType":"YulFunctionCall","src":"14108:35:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14101:6:12"},"nodeType":"YulFunctionCall","src":"14101:43:12"},"nodeType":"YulIf","src":"14098:63:12"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14081:5:12","type":""}],"src":"14045:122:12"},{"body":{"nodeType":"YulBlock","src":"14215:78:12","statements":[{"body":{"nodeType":"YulBlock","src":"14271:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14280:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14283:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14273:6:12"},"nodeType":"YulFunctionCall","src":"14273:12:12"},"nodeType":"YulExpressionStatement","src":"14273:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14238:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14262:5:12"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"14245:16:12"},"nodeType":"YulFunctionCall","src":"14245:23:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14235:2:12"},"nodeType":"YulFunctionCall","src":"14235:34:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14228:6:12"},"nodeType":"YulFunctionCall","src":"14228:42:12"},"nodeType":"YulIf","src":"14225:62:12"}]},"name":"validator_revert_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14208:5:12","type":""}],"src":"14173:120:12"},{"body":{"nodeType":"YulBlock","src":"14342:79:12","statements":[{"body":{"nodeType":"YulBlock","src":"14399:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14408:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14411:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14401:6:12"},"nodeType":"YulFunctionCall","src":"14401:12:12"},"nodeType":"YulExpressionStatement","src":"14401:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14365:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14390:5:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14372:17:12"},"nodeType":"YulFunctionCall","src":"14372:24:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14362:2:12"},"nodeType":"YulFunctionCall","src":"14362:35:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14355:6:12"},"nodeType":"YulFunctionCall","src":"14355:43:12"},"nodeType":"YulIf","src":"14352:63:12"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14335:5:12","type":""}],"src":"14299:122:12"},{"body":{"nodeType":"YulBlock","src":"14469:78:12","statements":[{"body":{"nodeType":"YulBlock","src":"14525:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14534:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14537:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14527:6:12"},"nodeType":"YulFunctionCall","src":"14527:12:12"},"nodeType":"YulExpressionStatement","src":"14527:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14492:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14516:5:12"}],"functionName":{"name":"cleanup_t_uint80","nodeType":"YulIdentifier","src":"14499:16:12"},"nodeType":"YulFunctionCall","src":"14499:23:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14489:2:12"},"nodeType":"YulFunctionCall","src":"14489:34:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14482:6:12"},"nodeType":"YulFunctionCall","src":"14482:42:12"},"nodeType":"YulIf","src":"14479:62:12"}]},"name":"validator_revert_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14462:5:12","type":""}],"src":"14427:120:12"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_addresst_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_AggregatorV3Interface_$397_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AggregatorV3Interface_$397_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_address_t_contract$_AggregatorV3Interface_$397__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_contract$_AggregatorV3Interface_$397_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function convert_t_contract$_AggregatorV3Interface_$397_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Price Feed already added\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n}\n","id":12,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100625760003560e01c806310c7f0b91461006757806341976e0914610099578063715018a6146100c95780638c35423e146100d35780638da5cb5b146100ef578063f2fde38b1461010d575b600080fd5b610081600480360381019061007c9190610cd3565b610129565b60405161009093929190610ead565b60405180910390f35b6100b360048036038101906100ae9190610c37565b61022b565b6040516100c09190610f4b565b60405180910390f35b6100d16102c9565b005b6100ed60048036038101906100e89190610c64565b6102dd565b005b6100f7610688565b6040516101049190610e92565b60405180910390f35b61012760048036038101906101229190610c37565b6106b1565b005b6001818154811061013957600080fd5b906000526020600020906003020160009150905080600001805461015c906110b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610188906110b7565b80156101d55780601f106101aa576101008083540402835291602001916101d5565b820191906000526020600020905b8154815290600101906020018083116101b857829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b60008061023783610735565b905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561028157600080fd5b505afa158015610295573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b99190610d00565b5050509150508092505050919050565b6102d1610971565b6102db60006109ef565b565b6102e5610971565b60006001805480602002602001604051908101604052809291908181526020016000905b82821015610479578382906000526020600020906003020160405180606001604052908160008201805461033c906110b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610368906110b7565b80156103b55780601f1061038a576101008083540402835291602001916103b5565b820191906000526020600020905b81548152906001019060200180831161039857829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190610309565b5050505090506000805b825181101561051a5782818151811061049f5761049e6111c1565b5b6020026020010151600001516040516020016104bb9190610e7b565b60405160208183030381529060405280519060200120866040516020016104e29190610e7b565b604051602081830303815290604052805190602001201415610507576001915061051a565b80806105129061111a565b915050610483565b50801561055c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055390610f0b565b60405180910390fd5b6000839050600160405180606001604052808881526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000190805190602001906105ef929190610abb565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106b9610971565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610729576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072090610eeb565b60405180910390fd5b610732816109ef565b50565b6000806001805480602002602001604051908101604052809291908181526020016000905b828210156108ca578382906000526020600020906003020160405180606001604052908160008201805461078d906110b7565b80601f01602080910402602001604051908101604052809291908181526020018280546107b9906110b7565b80156108065780601f106107db57610100808354040283529160200191610806565b820191906000526020600020905b8154815290600101906020018083116107e957829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508152602001906001019061075a565b50505050905060005b8151811015610969578181815181106108ef576108ee6111c1565b5b60200260200101516020015173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561095657818181518110610941576109406111c1565b5b6020026020010151604001519250505061096c565b80806109619061111a565b9150506108d3565b50505b919050565b610979610ab3565b73ffffffffffffffffffffffffffffffffffffffff16610997610688565b73ffffffffffffffffffffffffffffffffffffffff16146109ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e490610f2b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b828054610ac7906110b7565b90600052602060002090601f016020900481019282610ae95760008555610b30565b82601f10610b0257805160ff1916838001178555610b30565b82800160010185558215610b30579182015b82811115610b2f578251825591602001919060010190610b14565b5b509050610b3d9190610b41565b5090565b5b80821115610b5a576000816000905550600101610b42565b5090565b6000610b71610b6c84610f8b565b610f66565b905082815260208101848484011115610b8d57610b8c611224565b5b610b98848285611075565b509392505050565b600081359050610baf816112e5565b92915050565b600081519050610bc4816112fc565b92915050565b600082601f830112610bdf57610bde61121f565b5b8135610bef848260208601610b5e565b91505092915050565b600081359050610c0781611313565b92915050565b600081519050610c1c81611313565b92915050565b600081519050610c318161132a565b92915050565b600060208284031215610c4d57610c4c61122e565b5b6000610c5b84828501610ba0565b91505092915050565b600080600060608486031215610c7d57610c7c61122e565b5b600084013567ffffffffffffffff811115610c9b57610c9a611229565b5b610ca786828701610bca565b9350506020610cb886828701610ba0565b9250506040610cc986828701610ba0565b9150509250925092565b600060208284031215610ce957610ce861122e565b5b6000610cf784828501610bf8565b91505092915050565b600080600080600060a08688031215610d1c57610d1b61122e565b5b6000610d2a88828901610c22565b9550506020610d3b88828901610bb5565b9450506040610d4c88828901610c0d565b9350506060610d5d88828901610c0d565b9250506080610d6e88828901610c22565b9150509295509295909350565b610d8481610fe3565b82525050565b610d938161103f565b82525050565b6000610da482610fbc565b610dae8185610fc7565b9350610dbe818560208601611084565b610dc781611233565b840191505092915050565b6000610ddd82610fbc565b610de78185610fd8565b9350610df7818560208601611084565b80840191505092915050565b6000610e10602683610fc7565b9150610e1b82611244565b604082019050919050565b6000610e33601883610fc7565b9150610e3e82611293565b602082019050919050565b6000610e56602083610fc7565b9150610e61826112bc565b602082019050919050565b610e758161101f565b82525050565b6000610e878284610dd2565b915081905092915050565b6000602082019050610ea76000830184610d7b565b92915050565b60006060820190508181036000830152610ec78186610d99565b9050610ed66020830185610d7b565b610ee36040830184610d8a565b949350505050565b60006020820190508181036000830152610f0481610e03565b9050919050565b60006020820190508181036000830152610f2481610e26565b9050919050565b60006020820190508181036000830152610f4481610e49565b9050919050565b6000602082019050610f606000830184610e6c565b92915050565b6000610f70610f81565b9050610f7c82826110e9565b919050565b6000604051905090565b600067ffffffffffffffff821115610fa657610fa56111f0565b5b610faf82611233565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000610fee82610fff565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b600061104a82611051565b9050919050565b600061105c82611063565b9050919050565b600061106e82610fff565b9050919050565b82818337600083830152505050565b60005b838110156110a2578082015181840152602081019050611087565b838111156110b1576000848401525b50505050565b600060028204905060018216806110cf57607f821691505b602082108114156110e3576110e2611192565b5b50919050565b6110f282611233565b810181811067ffffffffffffffff82111715611111576111106111f0565b5b80604052505050565b60006111258261101f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561115857611157611163565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5072696365204665656420616c72656164792061646465640000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6112ee81610fe3565b81146112f957600080fd5b50565b61130581610ff5565b811461131057600080fd5b50565b61131c8161101f565b811461132757600080fd5b50565b61133381611029565b811461133e57600080fd5b5056fea2646970667358221220b9278595a97bb13549adc1206e0adce24331ce782cf072286f634e1e61d6b25c64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x10C7F0B9 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x41976E09 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x8C35423E EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x10D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH2 0x129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x90 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAE SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH2 0x2C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xC64 JUMP JUMPDEST PUSH2 0x2DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF7 PUSH2 0x688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x6B1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x15C SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x188 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x237 DUP4 PUSH2 0x735 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x295 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0xD00 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x971 JUMP JUMPDEST PUSH2 0x2DB PUSH1 0x0 PUSH2 0x9EF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2E5 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x479 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x33C SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x368 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x38A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3B5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x398 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x309 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x51A JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x49F JUMPI PUSH2 0x49E PUSH2 0x11C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4E2 SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0x507 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x51A JUMP JUMPDEST DUP1 DUP1 PUSH2 0x512 SWAP1 PUSH2 0x111A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x483 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x553 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x5EF SWAP3 SWAP2 SWAP1 PUSH2 0xABB JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6B9 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x729 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x720 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x732 DUP2 PUSH2 0x9EF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x8CA JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x78D SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7B9 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x806 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7DB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x806 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7E9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x75A JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x969 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x8EF JUMPI PUSH2 0x8EE PUSH2 0x11C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x956 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x941 JUMPI PUSH2 0x940 PUSH2 0x11C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD SWAP3 POP POP POP PUSH2 0x96C JUMP JUMPDEST DUP1 DUP1 PUSH2 0x961 SWAP1 PUSH2 0x111A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8D3 JUMP JUMPDEST POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x979 PUSH2 0xAB3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x997 PUSH2 0x688 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E4 SWAP1 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xAC7 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xAE9 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xB30 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xB02 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xB30 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xB30 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB2F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB14 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0xB41 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xB5A JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xB42 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB71 PUSH2 0xB6C DUP5 PUSH2 0xF8B JUMP JUMPDEST PUSH2 0xF66 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xB8D JUMPI PUSH2 0xB8C PUSH2 0x1224 JUMP JUMPDEST JUMPDEST PUSH2 0xB98 DUP5 DUP3 DUP6 PUSH2 0x1075 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBAF DUP2 PUSH2 0x12E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xBC4 DUP2 PUSH2 0x12FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBDF JUMPI PUSH2 0xBDE PUSH2 0x121F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBEF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xB5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC07 DUP2 PUSH2 0x1313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC1C DUP2 PUSH2 0x1313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC31 DUP2 PUSH2 0x132A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC4D JUMPI PUSH2 0xC4C PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC5B DUP5 DUP3 DUP6 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC7D JUMPI PUSH2 0xC7C PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC9B JUMPI PUSH2 0xC9A PUSH2 0x1229 JUMP JUMPDEST JUMPDEST PUSH2 0xCA7 DUP7 DUP3 DUP8 ADD PUSH2 0xBCA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCB8 DUP7 DUP3 DUP8 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCC9 DUP7 DUP3 DUP8 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE9 JUMPI PUSH2 0xCE8 PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCF7 DUP5 DUP3 DUP6 ADD PUSH2 0xBF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD1C JUMPI PUSH2 0xD1B PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD2A DUP9 DUP3 DUP10 ADD PUSH2 0xC22 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xD3B DUP9 DUP3 DUP10 ADD PUSH2 0xBB5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xD4C DUP9 DUP3 DUP10 ADD PUSH2 0xC0D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xD5D DUP9 DUP3 DUP10 ADD PUSH2 0xC0D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xD6E DUP9 DUP3 DUP10 ADD PUSH2 0xC22 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0xD84 DUP2 PUSH2 0xFE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD93 DUP2 PUSH2 0x103F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA4 DUP3 PUSH2 0xFBC JUMP JUMPDEST PUSH2 0xDAE DUP2 DUP6 PUSH2 0xFC7 JUMP JUMPDEST SWAP4 POP PUSH2 0xDBE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1084 JUMP JUMPDEST PUSH2 0xDC7 DUP2 PUSH2 0x1233 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDD DUP3 PUSH2 0xFBC JUMP JUMPDEST PUSH2 0xDE7 DUP2 DUP6 PUSH2 0xFD8 JUMP JUMPDEST SWAP4 POP PUSH2 0xDF7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1084 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE10 PUSH1 0x26 DUP4 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE1B DUP3 PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE33 PUSH1 0x18 DUP4 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE3E DUP3 PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE56 PUSH1 0x20 DUP4 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE61 DUP3 PUSH2 0x12BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE75 DUP2 PUSH2 0x101F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE87 DUP3 DUP5 PUSH2 0xDD2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEA7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEC7 DUP2 DUP7 PUSH2 0xD99 JUMP JUMPDEST SWAP1 POP PUSH2 0xED6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0xEE3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD8A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF04 DUP2 PUSH2 0xE03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF24 DUP2 PUSH2 0xE26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF44 DUP2 PUSH2 0xE49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF60 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF70 PUSH2 0xF81 JUMP JUMPDEST SWAP1 POP PUSH2 0xF7C DUP3 DUP3 PUSH2 0x10E9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xFA6 JUMPI PUSH2 0xFA5 PUSH2 0x11F0 JUMP JUMPDEST JUMPDEST PUSH2 0xFAF DUP3 PUSH2 0x1233 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFEE DUP3 PUSH2 0xFFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104A DUP3 PUSH2 0x1051 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105C DUP3 PUSH2 0x1063 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x106E DUP3 PUSH2 0xFFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10A2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1087 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x10B1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10CF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x10E3 JUMPI PUSH2 0x10E2 PUSH2 0x1192 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F2 DUP3 PUSH2 0x1233 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1111 JUMPI PUSH2 0x1110 PUSH2 0x11F0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1125 DUP3 PUSH2 0x101F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1158 JUMPI PUSH2 0x1157 PUSH2 0x1163 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5072696365204665656420616C72656164792061646465640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x12EE DUP2 PUSH2 0xFE3 JUMP JUMPDEST DUP2 EQ PUSH2 0x12F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1305 DUP2 PUSH2 0xFF5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x131C DUP2 PUSH2 0x101F JUMP JUMPDEST DUP2 EQ PUSH2 0x1327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1333 DUP2 PUSH2 0x1029 JUMP JUMPDEST DUP2 EQ PUSH2 0x133E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 0x27 DUP6 SWAP6 0xA9 PUSH28 0xB13549ADC1206E0ADCE24331CE782CF072286F634E1E61D6B25C6473 PUSH16 0x6C634300080700330000000000000000 ","sourceMap":"194:2033:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;301:30;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1588:636;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:2;;;:::i;:::-;;505:713:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;301:30:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1588:636::-;1647:7;1908:31;1942:22;1955:8;1942:12;:22::i;:::-;1908:56;;1978:13;2001:9;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1975:53;;;;;;2091:6;2076:22;;;;1588:636;;;:::o;1831:101:2:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;505:713:6:-;1094:13:2;:11;:13::i;:::-;646:29:6::1;678:10;646:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;699:12;735:9:::0;730:285:::1;754:9;:16;750:1;:20;730:285;;;896:9;906:1;896:12;;;;;;;;:::i;:::-;;;;;;;;:17;;;879:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;869:46;;;;;;841:5;824:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;814:34;;;;;;:101;792:212;;;960:4;950:14;;983:5;;792:212;772:3;;;;;:::i;:::-;;;;730:285;;;;1034:7;1033:8;1025:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;1081:31;1137:8;1081:65;;1157:10;1173:36;;;;;;;;1184:5;1173:36;;;;1191:6;1173:36;;;;;;1199:9;1173:36;;;;::::0;1157:53:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;635:583;;;505:713:::0;;;:::o;1201:85:2:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2081:198::-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1226:354:6:-;1303:31;1347:29;1379:10;1347:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1407:9;1402:171;1426:9;:16;1422:1;:20;1402:171;;;1478:9;1488:1;1478:12;;;;;;;;:::i;:::-;;;;;;;;:18;;;1468:28;;:6;:28;;;1464:98;;;1524:9;1534:1;1524:12;;;;;;;;:::i;:::-;;;;;;;;:22;;;1517:29;;;;;;1464:98;1444:3;;;;;:::i;:::-;;;;1402:171;;;;1336:244;1226:354;;;;:::o;1359:130:2:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:412:12:-;85:5;110:66;126:49;168:6;126:49;:::i;:::-;110:66;:::i;:::-;101:75;;199:6;192:5;185:21;237:4;230:5;226:16;275:3;266:6;261:3;257:16;254:25;251:112;;;282:79;;:::i;:::-;251:112;372:41;406:6;401:3;396;372:41;:::i;:::-;91:328;7:412;;;;;:::o;425:139::-;471:5;509:6;496:20;487:29;;525:33;552:5;525:33;:::i;:::-;425:139;;;;:::o;570:141::-;626:5;657:6;651:13;642:22;;673:32;699:5;673:32;:::i;:::-;570:141;;;;:::o;731:340::-;787:5;836:3;829:4;821:6;817:17;813:27;803:122;;844:79;;:::i;:::-;803:122;961:6;948:20;986:79;1061:3;1053:6;1046:4;1038:6;1034:17;986:79;:::i;:::-;977:88;;793:278;731:340;;;;:::o;1077:139::-;1123:5;1161:6;1148:20;1139:29;;1177:33;1204:5;1177:33;:::i;:::-;1077:139;;;;:::o;1222:143::-;1279:5;1310:6;1304:13;1295:22;;1326:33;1353:5;1326:33;:::i;:::-;1222:143;;;;:::o;1371:141::-;1427:5;1458:6;1452:13;1443:22;;1474:32;1500:5;1474:32;:::i;:::-;1371:141;;;;:::o;1518:329::-;1577:6;1626:2;1614:9;1605:7;1601:23;1597:32;1594:119;;;1632:79;;:::i;:::-;1594:119;1752:1;1777:53;1822:7;1813:6;1802:9;1798:22;1777:53;:::i;:::-;1767:63;;1723:117;1518:329;;;;:::o;1853:799::-;1940:6;1948;1956;2005:2;1993:9;1984:7;1980:23;1976:32;1973:119;;;2011:79;;:::i;:::-;1973:119;2159:1;2148:9;2144:17;2131:31;2189:18;2181:6;2178:30;2175:117;;;2211:79;;:::i;:::-;2175:117;2316:63;2371:7;2362:6;2351:9;2347:22;2316:63;:::i;:::-;2306:73;;2102:287;2428:2;2454:53;2499:7;2490:6;2479:9;2475:22;2454:53;:::i;:::-;2444:63;;2399:118;2556:2;2582:53;2627:7;2618:6;2607:9;2603:22;2582:53;:::i;:::-;2572:63;;2527:118;1853:799;;;;;:::o;2658:329::-;2717:6;2766:2;2754:9;2745:7;2741:23;2737:32;2734:119;;;2772:79;;:::i;:::-;2734:119;2892:1;2917:53;2962:7;2953:6;2942:9;2938:22;2917:53;:::i;:::-;2907:63;;2863:117;2658:329;;;;:::o;2993:971::-;3096:6;3104;3112;3120;3128;3177:3;3165:9;3156:7;3152:23;3148:33;3145:120;;;3184:79;;:::i;:::-;3145:120;3304:1;3329:63;3384:7;3375:6;3364:9;3360:22;3329:63;:::i;:::-;3319:73;;3275:127;3441:2;3467:63;3522:7;3513:6;3502:9;3498:22;3467:63;:::i;:::-;3457:73;;3412:128;3579:2;3605:64;3661:7;3652:6;3641:9;3637:22;3605:64;:::i;:::-;3595:74;;3550:129;3718:2;3744:64;3800:7;3791:6;3780:9;3776:22;3744:64;:::i;:::-;3734:74;;3689:129;3857:3;3884:63;3939:7;3930:6;3919:9;3915:22;3884:63;:::i;:::-;3874:73;;3828:129;2993:971;;;;;;;;:::o;3970:118::-;4057:24;4075:5;4057:24;:::i;:::-;4052:3;4045:37;3970:118;;:::o;4094:189::-;4210:66;4270:5;4210:66;:::i;:::-;4205:3;4198:79;4094:189;;:::o;4289:364::-;4377:3;4405:39;4438:5;4405:39;:::i;:::-;4460:71;4524:6;4519:3;4460:71;:::i;:::-;4453:78;;4540:52;4585:6;4580:3;4573:4;4566:5;4562:16;4540:52;:::i;:::-;4617:29;4639:6;4617:29;:::i;:::-;4612:3;4608:39;4601:46;;4381:272;4289:364;;;;:::o;4659:377::-;4765:3;4793:39;4826:5;4793:39;:::i;:::-;4848:89;4930:6;4925:3;4848:89;:::i;:::-;4841:96;;4946:52;4991:6;4986:3;4979:4;4972:5;4968:16;4946:52;:::i;:::-;5023:6;5018:3;5014:16;5007:23;;4769:267;4659:377;;;;:::o;5042:366::-;5184:3;5205:67;5269:2;5264:3;5205:67;:::i;:::-;5198:74;;5281:93;5370:3;5281:93;:::i;:::-;5399:2;5394:3;5390:12;5383:19;;5042:366;;;:::o;5414:::-;5556:3;5577:67;5641:2;5636:3;5577:67;:::i;:::-;5570:74;;5653:93;5742:3;5653:93;:::i;:::-;5771:2;5766:3;5762:12;5755:19;;5414:366;;;:::o;5786:::-;5928:3;5949:67;6013:2;6008:3;5949:67;:::i;:::-;5942:74;;6025:93;6114:3;6025:93;:::i;:::-;6143:2;6138:3;6134:12;6127:19;;5786:366;;;:::o;6158:118::-;6245:24;6263:5;6245:24;:::i;:::-;6240:3;6233:37;6158:118;;:::o;6282:275::-;6414:3;6436:95;6527:3;6518:6;6436:95;:::i;:::-;6429:102;;6548:3;6541:10;;6282:275;;;;:::o;6563:222::-;6656:4;6694:2;6683:9;6679:18;6671:26;;6707:71;6775:1;6764:9;6760:17;6751:6;6707:71;:::i;:::-;6563:222;;;;:::o;6791:591::-;6989:4;7027:2;7016:9;7012:18;7004:26;;7076:9;7070:4;7066:20;7062:1;7051:9;7047:17;7040:47;7104:78;7177:4;7168:6;7104:78;:::i;:::-;7096:86;;7192:72;7260:2;7249:9;7245:18;7236:6;7192:72;:::i;:::-;7274:101;7371:2;7360:9;7356:18;7347:6;7274:101;:::i;:::-;6791:591;;;;;;:::o;7388:419::-;7554:4;7592:2;7581:9;7577:18;7569:26;;7641:9;7635:4;7631:20;7627:1;7616:9;7612:17;7605:47;7669:131;7795:4;7669:131;:::i;:::-;7661:139;;7388:419;;;:::o;7813:::-;7979:4;8017:2;8006:9;8002:18;7994:26;;8066:9;8060:4;8056:20;8052:1;8041:9;8037:17;8030:47;8094:131;8220:4;8094:131;:::i;:::-;8086:139;;7813:419;;;:::o;8238:::-;8404:4;8442:2;8431:9;8427:18;8419:26;;8491:9;8485:4;8481:20;8477:1;8466:9;8462:17;8455:47;8519:131;8645:4;8519:131;:::i;:::-;8511:139;;8238:419;;;:::o;8663:222::-;8756:4;8794:2;8783:9;8779:18;8771:26;;8807:71;8875:1;8864:9;8860:17;8851:6;8807:71;:::i;:::-;8663:222;;;;:::o;8891:129::-;8925:6;8952:20;;:::i;:::-;8942:30;;8981:33;9009:4;9001:6;8981:33;:::i;:::-;8891:129;;;:::o;9026:75::-;9059:6;9092:2;9086:9;9076:19;;9026:75;:::o;9107:308::-;9169:4;9259:18;9251:6;9248:30;9245:56;;;9281:18;;:::i;:::-;9245:56;9319:29;9341:6;9319:29;:::i;:::-;9311:37;;9403:4;9397;9393:15;9385:23;;9107:308;;;:::o;9421:99::-;9473:6;9507:5;9501:12;9491:22;;9421:99;;;:::o;9526:169::-;9610:11;9644:6;9639:3;9632:19;9684:4;9679:3;9675:14;9660:29;;9526:169;;;;:::o;9701:148::-;9803:11;9840:3;9825:18;;9701:148;;;;:::o;9855:96::-;9892:7;9921:24;9939:5;9921:24;:::i;:::-;9910:35;;9855:96;;;:::o;9957:76::-;9993:7;10022:5;10011:16;;9957:76;;;:::o;10039:126::-;10076:7;10116:42;10109:5;10105:54;10094:65;;10039:126;;;:::o;10171:77::-;10208:7;10237:5;10226:16;;10171:77;;;:::o;10254:105::-;10290:7;10330:22;10323:5;10319:34;10308:45;;10254:105;;;:::o;10365:155::-;10444:9;10477:37;10508:5;10477:37;:::i;:::-;10464:50;;10365:155;;;:::o;10526:126::-;10576:9;10609:37;10640:5;10609:37;:::i;:::-;10596:50;;10526:126;;;:::o;10658:113::-;10708:9;10741:24;10759:5;10741:24;:::i;:::-;10728:37;;10658:113;;;:::o;10777:154::-;10861:6;10856:3;10851;10838:30;10923:1;10914:6;10909:3;10905:16;10898:27;10777:154;;;:::o;10937:307::-;11005:1;11015:113;11029:6;11026:1;11023:13;11015:113;;;11114:1;11109:3;11105:11;11099:18;11095:1;11090:3;11086:11;11079:39;11051:2;11048:1;11044:10;11039:15;;11015:113;;;11146:6;11143:1;11140:13;11137:101;;;11226:1;11217:6;11212:3;11208:16;11201:27;11137:101;10986:258;10937:307;;;:::o;11250:320::-;11294:6;11331:1;11325:4;11321:12;11311:22;;11378:1;11372:4;11368:12;11399:18;11389:81;;11455:4;11447:6;11443:17;11433:27;;11389:81;11517:2;11509:6;11506:14;11486:18;11483:38;11480:84;;;11536:18;;:::i;:::-;11480:84;11301:269;11250:320;;;:::o;11576:281::-;11659:27;11681:4;11659:27;:::i;:::-;11651:6;11647:40;11789:6;11777:10;11774:22;11753:18;11741:10;11738:34;11735:62;11732:88;;;11800:18;;:::i;:::-;11732:88;11840:10;11836:2;11829:22;11619:238;11576:281;;:::o;11863:233::-;11902:3;11925:24;11943:5;11925:24;:::i;:::-;11916:33;;11971:66;11964:5;11961:77;11958:103;;;12041:18;;:::i;:::-;11958:103;12088:1;12081:5;12077:13;12070:20;;11863:233;;;:::o;12102:180::-;12150:77;12147:1;12140:88;12247:4;12244:1;12237:15;12271:4;12268:1;12261:15;12288:180;12336:77;12333:1;12326:88;12433:4;12430:1;12423:15;12457:4;12454:1;12447:15;12474:180;12522:77;12519:1;12512:88;12619:4;12616:1;12609:15;12643:4;12640:1;12633:15;12660:180;12708:77;12705:1;12698:88;12805:4;12802:1;12795:15;12829:4;12826:1;12819:15;12846:117;12955:1;12952;12945:12;12969:117;13078:1;13075;13068:12;13092:117;13201:1;13198;13191:12;13215:117;13324:1;13321;13314:12;13338:102;13379:6;13430:2;13426:7;13421:2;13414:5;13410:14;13406:28;13396:38;;13338:102;;;:::o;13446:225::-;13586:34;13582:1;13574:6;13570:14;13563:58;13655:8;13650:2;13642:6;13638:15;13631:33;13446:225;:::o;13677:174::-;13817:26;13813:1;13805:6;13801:14;13794:50;13677:174;:::o;13857:182::-;13997:34;13993:1;13985:6;13981:14;13974:58;13857:182;:::o;14045:122::-;14118:24;14136:5;14118:24;:::i;:::-;14111:5;14108:35;14098:63;;14157:1;14154;14147:12;14098:63;14045:122;:::o;14173:120::-;14245:23;14262:5;14245:23;:::i;:::-;14238:5;14235:34;14225:62;;14283:1;14280;14273:12;14225:62;14173:120;:::o;14299:122::-;14372:24;14390:5;14372:24;:::i;:::-;14365:5;14362:35;14352:63;;14411:1;14408;14401:12;14352:63;14299:122;:::o;14427:120::-;14499:23;14516:5;14499:23;:::i;:::-;14492:5;14489:34;14479:62;;14537:1;14534;14527:12;14479:62;14427:120;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"996600","executionCost":"infinite","totalCost":"infinite"},"external":{"addPriceFeed(string,address,address)":"infinite","getPrice(address)":"infinite","owner()":"2588","priceFeeds(uint256)":"infinite","renounceOwnership()":"30420","transferOwnership(address)":"30835"},"internal":{"getPriceFeed(address)":"infinite"}},"methodIdentifiers":{"addPriceFeed(string,address,address)":"8c35423e","getPrice(address)":"41976e09","owner()":"8da5cb5b","priceFeeds(uint256)":"10c7f0b9","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"priceFeeds\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PriceChecker.sol\":\"PriceChecker\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/PriceChecker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract PriceChecker is Ownable {\\r\\n    // We could make this public, but then we'd have to deploy it\\r\\n    _priceFeed[] public priceFeeds;\\r\\n\\r\\n    struct _priceFeed {\\r\\n        string name;\\r\\n        address token;\\r\\n        AggregatorV3Interface priceFeed;\\r\\n    }\\r\\n\\r\\n    //only using PriceFeeds pegged to USD\\r\\n    function addPriceFeed(\\r\\n        string memory _name,\\r\\n        address _token,\\r\\n        address _address\\r\\n    ) external onlyOwner {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n        bool isAdded = false;\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (\\r\\n                keccak256(abi.encodePacked(_name)) ==\\r\\n                keccak256(abi.encodePacked(pricefeed[i].name))\\r\\n            ) {\\r\\n                isAdded = true;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        require(!isAdded, \\\"Price Feed already added\\\");\\r\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(_address);\\r\\n        priceFeeds.push(_priceFeed(_name, _token, priceFeed));\\r\\n    }\\r\\n\\r\\n    function getPriceFeed(\\r\\n        address _token\\r\\n    ) internal view returns (AggregatorV3Interface priceFeed) {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (_token == pricefeed[i].token) {\\r\\n                return pricefeed[i].priceFeed;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getPrice(address _address) external view returns (uint256) {\\r\\n        // Goerli ETH / USD Address\\r\\n        // https://docs.chain.link/docs/ethereum-addresses/\\r\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\r\\n        //     0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\r\\n        // );\\r\\n        AggregatorV3Interface priceFeed = getPriceFeed(_address);\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        // ETH/USD rate in 18 digit\\r\\n        return uint256(answer);\\r\\n        // or (Both will do the same thing)\\r\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xff808af17a6506dedcd342e9c444725ef89b81188c0bc52ff40e148fb84f157d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":405,"contract":"contracts/PriceChecker.sol:PriceChecker","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":2516,"contract":"contracts/PriceChecker.sol:PriceChecker","label":"priceFeeds","offset":0,"slot":"1","type":"t_array(t_struct(_priceFeed)2524_storage)dyn_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(_priceFeed)2524_storage)dyn_storage":{"base":"t_struct(_priceFeed)2524_storage","encoding":"dynamic_array","label":"struct PriceChecker._priceFeed[]","numberOfBytes":"32"},"t_contract(AggregatorV3Interface)397":{"encoding":"inplace","label":"contract AggregatorV3Interface","numberOfBytes":"20"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(_priceFeed)2524_storage":{"encoding":"inplace","label":"struct PriceChecker._priceFeed","members":[{"astId":2518,"contract":"contracts/PriceChecker.sol:PriceChecker","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":2520,"contract":"contracts/PriceChecker.sol:PriceChecker","label":"token","offset":0,"slot":"1","type":"t_address"},{"astId":2523,"contract":"contracts/PriceChecker.sol:PriceChecker","label":"priceFeed","offset":0,"slot":"2","type":"t_contract(AggregatorV3Interface)397"}],"numberOfBytes":"96"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/TradingFees.sol":{"TradingFees":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"aETH","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_refToken","type":"address"},{"internalType":"uint256","name":"fees","type":"uint256"}],"name":"amountToDeduct","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_rate","type":"uint256"},{"internalType":"address","name":"_refToken","type":"address"}],"name":"calculateFees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"checkSufficientaETH","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ethToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_421":{"entryPoint":null,"id":421,"parameterSlots":0,"returnSlots":0},"@_msgSender_522":{"entryPoint":213,"id":522,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_509":{"entryPoint":221,"id":509,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"6080604052670de0b6b3a76400006001556000600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507322404b0e2a7067068acdadd8f9d586f834cce2c5600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156100b357600080fd5b506100d06100c56100d560201b60201c565b6100dd60201b60201c565b6101a1565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610d98806101b06000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80637bf1a6271161005b5780637bf1a627146101275780638da5cb5b1461014557806392f63d2e14610163578063f2fde38b1461018157610088565b806310daf2881461008d57806321d6ce10146100bd578063513ffedd146100ed578063715018a61461011d575b600080fd5b6100a760048036038101906100a291906109b5565b61019d565b6040516100b49190610aff565b60405180910390f35b6100d760048036038101906100d29190610948565b61027e565b6040516100e49190610b5a565b60405180910390f35b610107600480360381019061010291906109f5565b610434565b6040516101149190610b5a565b60405180910390f35b610125610659565b005b61012f61066d565b60405161013c9190610abb565b60405180910390f35b61014d610693565b60405161015a9190610abb565b60405180910390f35b61016b6106bc565b6040516101789190610abb565b60405180910390f35b61019b6004803603810190610196919061091b565b6106e2565b005b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cd5d767c600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff1660e01b815260040161021f929190610ad6565b60206040518083038186803b15801561023757600080fd5b505afa15801561024b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026f9190610988565b90508381101591505092915050565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016102fe9190610abb565b60206040518083038186803b15801561031657600080fd5b505afa15801561032a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034e9190610988565b90506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09866040518263ffffffff1660e01b81526004016103ad9190610abb565b60206040518083038186803b1580156103c557600080fd5b505afa1580156103d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fd9190610988565b90506000610414858461076690919063ffffffff16565b9050610429828261077c90919063ffffffff16565b935050505092915050565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09846040518263ffffffff1660e01b81526004016104929190610abb565b60206040518083038186803b1580156104aa57600080fd5b505afa1580156104be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e29190610988565b90506000610533600154610525846105176001546105098b8d61076690919063ffffffff16565b61077c90919063ffffffff16565b61076690919063ffffffff16565b61077c90919063ffffffff16565b9050600061054c6127108361077c90919063ffffffff16565b90506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016105cd9190610abb565b60206040518083038186803b1580156105e557600080fd5b505afa1580156105f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061d9190610988565b905060006106488261063a6001548661076690919063ffffffff16565b61077c90919063ffffffff16565b905080955050505050509392505050565b610661610792565b61066b6000610810565b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106ea610792565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561075a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075190610b1a565b60405180910390fd5b61076381610810565b50565b600081836107749190610bb7565b905092915050565b6000818361078a9190610b86565b905092915050565b61079a6108d4565b73ffffffffffffffffffffffffffffffffffffffff166107b8610693565b73ffffffffffffffffffffffffffffffffffffffff161461080e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080590610b3a565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000813590506108eb81610d34565b92915050565b60008135905061090081610d4b565b92915050565b60008151905061091581610d4b565b92915050565b60006020828403121561093157610930610cb7565b5b600061093f848285016108dc565b91505092915050565b6000806040838503121561095f5761095e610cb7565b5b600061096d858286016108dc565b925050602061097e858286016108f1565b9150509250929050565b60006020828403121561099e5761099d610cb7565b5b60006109ac84828501610906565b91505092915050565b600080604083850312156109cc576109cb610cb7565b5b60006109da858286016108f1565b92505060206109eb858286016108dc565b9150509250929050565b600080600060608486031215610a0e57610a0d610cb7565b5b6000610a1c868287016108f1565b9350506020610a2d868287016108f1565b9250506040610a3e868287016108dc565b9150509250925092565b610a5181610c11565b82525050565b610a6081610c23565b82525050565b6000610a73602683610b75565b9150610a7e82610cbc565b604082019050919050565b6000610a96602083610b75565b9150610aa182610d0b565b602082019050919050565b610ab581610c4f565b82525050565b6000602082019050610ad06000830184610a48565b92915050565b6000604082019050610aeb6000830185610a48565b610af86020830184610a48565b9392505050565b6000602082019050610b146000830184610a57565b92915050565b60006020820190508181036000830152610b3381610a66565b9050919050565b60006020820190508181036000830152610b5381610a89565b9050919050565b6000602082019050610b6f6000830184610aac565b92915050565b600082825260208201905092915050565b6000610b9182610c4f565b9150610b9c83610c4f565b925082610bac57610bab610c88565b5b828204905092915050565b6000610bc282610c4f565b9150610bcd83610c4f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c0657610c05610c59565b5b828202905092915050565b6000610c1c82610c2f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610d3d81610c11565b8114610d4857600080fd5b50565b610d5481610c4f565b8114610d5f57600080fd5b5056fea2646970667358221220372cd6049074400e424a3980f6763bf0d0b2689ed30435a7c152d5a17954610064736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 SSTORE PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x22404B0E2A7067068ACDADD8F9D586F834CCE2C5 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0xB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD0 PUSH2 0xC5 PUSH2 0xD5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xDD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xD98 DUP1 PUSH2 0x1B0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7BF1A627 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x7BF1A627 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x92F63D2E EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x181 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x10DAF288 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x21D6CE10 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x513FFEDD EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x11D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x9B5 JUMP JUMPDEST PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0xAFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x948 JUMP JUMPDEST PUSH2 0x27E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x434 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x125 PUSH2 0x659 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12F PUSH2 0x66D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0xABB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH2 0x693 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0xABB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH2 0x6BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0xABB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x91B JUMP JUMPDEST PUSH2 0x6E2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCD5D767C PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21F SWAP3 SWAP2 SWAP1 PUSH2 0xAD6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x988 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0xABB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x32A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x988 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0xABB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3FD SWAP2 SWAP1 PUSH2 0x988 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x414 DUP6 DUP5 PUSH2 0x766 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x429 DUP3 DUP3 PUSH2 0x77C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x492 SWAP2 SWAP1 PUSH2 0xABB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E2 SWAP2 SWAP1 PUSH2 0x988 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x533 PUSH1 0x1 SLOAD PUSH2 0x525 DUP5 PUSH2 0x517 PUSH1 0x1 SLOAD PUSH2 0x509 DUP12 DUP14 PUSH2 0x766 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x77C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x766 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x77C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x54C PUSH2 0x2710 DUP4 PUSH2 0x77C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CD SWAP2 SWAP1 PUSH2 0xABB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x61D SWAP2 SWAP1 PUSH2 0x988 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x648 DUP3 PUSH2 0x63A PUSH1 0x1 SLOAD DUP7 PUSH2 0x766 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x77C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x661 PUSH2 0x792 JUMP JUMPDEST PUSH2 0x66B PUSH1 0x0 PUSH2 0x810 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x6EA PUSH2 0x792 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x75A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x751 SWAP1 PUSH2 0xB1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x763 DUP2 PUSH2 0x810 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x774 SWAP2 SWAP1 PUSH2 0xBB7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x78A SWAP2 SWAP1 PUSH2 0xB86 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x79A PUSH2 0x8D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7B8 PUSH2 0x693 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x80E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x805 SWAP1 PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8EB DUP2 PUSH2 0xD34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x900 DUP2 PUSH2 0xD4B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x915 DUP2 PUSH2 0xD4B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x931 JUMPI PUSH2 0x930 PUSH2 0xCB7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x93F DUP5 DUP3 DUP6 ADD PUSH2 0x8DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x95F JUMPI PUSH2 0x95E PUSH2 0xCB7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x96D DUP6 DUP3 DUP7 ADD PUSH2 0x8DC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x97E DUP6 DUP3 DUP7 ADD PUSH2 0x8F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x99E JUMPI PUSH2 0x99D PUSH2 0xCB7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9AC DUP5 DUP3 DUP6 ADD PUSH2 0x906 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9CC JUMPI PUSH2 0x9CB PUSH2 0xCB7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9DA DUP6 DUP3 DUP7 ADD PUSH2 0x8F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9EB DUP6 DUP3 DUP7 ADD PUSH2 0x8DC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA0E JUMPI PUSH2 0xA0D PUSH2 0xCB7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA1C DUP7 DUP3 DUP8 ADD PUSH2 0x8F1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xA2D DUP7 DUP3 DUP8 ADD PUSH2 0x8F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xA3E DUP7 DUP3 DUP8 ADD PUSH2 0x8DC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xA51 DUP2 PUSH2 0xC11 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xA60 DUP2 PUSH2 0xC23 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA73 PUSH1 0x26 DUP4 PUSH2 0xB75 JUMP JUMPDEST SWAP2 POP PUSH2 0xA7E DUP3 PUSH2 0xCBC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA96 PUSH1 0x20 DUP4 PUSH2 0xB75 JUMP JUMPDEST SWAP2 POP PUSH2 0xAA1 DUP3 PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB5 DUP2 PUSH2 0xC4F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAD0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xAEB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xA48 JUMP JUMPDEST PUSH2 0xAF8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA48 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB14 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB33 DUP2 PUSH2 0xA66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB53 DUP2 PUSH2 0xA89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB6F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB91 DUP3 PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP PUSH2 0xB9C DUP4 PUSH2 0xC4F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xBAC JUMPI PUSH2 0xBAB PUSH2 0xC88 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC2 DUP3 PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP PUSH2 0xBCD DUP4 PUSH2 0xC4F JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xC06 JUMPI PUSH2 0xC05 PUSH2 0xC59 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1C DUP3 PUSH2 0xC2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xD3D DUP2 PUSH2 0xC11 JUMP JUMPDEST DUP2 EQ PUSH2 0xD48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xD54 DUP2 PUSH2 0xC4F JUMP JUMPDEST DUP2 EQ PUSH2 0xD5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0x2C 0xD6 DIV SWAP1 PUSH21 0x400E424A3980F6763BF0D0B2689ED30435A7C152D5 LOG1 PUSH26 0x54610064736F6C63430008070033000000000000000000000000 ","sourceMap":"408:2338:7:-:0;;;1087:8;1068:27;;1136:1;1102:36;;;;;;;;;;;;;;;;;;;;1175:42;1145:73;;;;;;;;;;;;;;;;;;;;408:2338;;;;;;;;;;936:32:2;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;408:2338:7;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2433:187:2:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;408:2338:7:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_452":{"entryPoint":1938,"id":452,"parameterSlots":0,"returnSlots":0},"@_msgSender_522":{"entryPoint":2260,"id":522,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_509":{"entryPoint":2064,"id":509,"parameterSlots":1,"returnSlots":0},"@aETH_2705":{"entryPoint":1724,"id":2705,"parameterSlots":0,"returnSlots":0},"@amountToDeduct_2817":{"entryPoint":638,"id":2817,"parameterSlots":2,"returnSlots":1},"@calculateFees_2781":{"entryPoint":1076,"id":2781,"parameterSlots":3,"returnSlots":1},"@checkSufficientaETH_2839":{"entryPoint":413,"id":2839,"parameterSlots":2,"returnSlots":1},"@div_753":{"entryPoint":1916,"id":753,"parameterSlots":2,"returnSlots":1},"@ethToken_2699":{"entryPoint":1645,"id":2699,"parameterSlots":0,"returnSlots":0},"@mul_738":{"entryPoint":1894,"id":738,"parameterSlots":2,"returnSlots":1},"@owner_438":{"entryPoint":1683,"id":438,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_466":{"entryPoint":1625,"id":466,"parameterSlots":0,"returnSlots":0},"@transferOwnership_489":{"entryPoint":1762,"id":489,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":2268,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2289,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":2310,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2331,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2376,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":2440,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":2485,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_address":{"entryPoint":2549,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2632,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2647,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":2662,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":2697,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2732,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2747,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":2774,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":2815,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2842,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2874,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2906,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2933,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":2950,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":2999,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3089,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3107,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3119,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3151,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3161,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":3208,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3255,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":3260,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":3339,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3380,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3403,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8194:12","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:12","statements":[{"nodeType":"YulAssignment","src":"69:29:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:12"},"nodeType":"YulFunctionCall","src":"78:20:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:12"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:12"},"nodeType":"YulFunctionCall","src":"107:33:12"},"nodeType":"YulExpressionStatement","src":"107:33:12"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:12","type":""}],"src":"7:139:12"},{"body":{"nodeType":"YulBlock","src":"204:87:12","statements":[{"nodeType":"YulAssignment","src":"214:29:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"236:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"223:12:12"},"nodeType":"YulFunctionCall","src":"223:20:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"214:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"279:5:12"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"252:26:12"},"nodeType":"YulFunctionCall","src":"252:33:12"},"nodeType":"YulExpressionStatement","src":"252:33:12"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"182:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"190:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"198:5:12","type":""}],"src":"152:139:12"},{"body":{"nodeType":"YulBlock","src":"360:80:12","statements":[{"nodeType":"YulAssignment","src":"370:22:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"385:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"379:5:12"},"nodeType":"YulFunctionCall","src":"379:13:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"370:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"428:5:12"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"401:26:12"},"nodeType":"YulFunctionCall","src":"401:33:12"},"nodeType":"YulExpressionStatement","src":"401:33:12"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"338:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"346:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"354:5:12","type":""}],"src":"297:143:12"},{"body":{"nodeType":"YulBlock","src":"512:263:12","statements":[{"body":{"nodeType":"YulBlock","src":"558:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"560:77:12"},"nodeType":"YulFunctionCall","src":"560:79:12"},"nodeType":"YulExpressionStatement","src":"560:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"533:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"542:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"529:3:12"},"nodeType":"YulFunctionCall","src":"529:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"554:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"525:3:12"},"nodeType":"YulFunctionCall","src":"525:32:12"},"nodeType":"YulIf","src":"522:119:12"},{"nodeType":"YulBlock","src":"651:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"666:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"680:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"670:6:12","type":""}]},{"nodeType":"YulAssignment","src":"695:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"730:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"741:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"726:3:12"},"nodeType":"YulFunctionCall","src":"726:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"750:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"705:20:12"},"nodeType":"YulFunctionCall","src":"705:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"695:6:12"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"482:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"493:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"505:6:12","type":""}],"src":"446:329:12"},{"body":{"nodeType":"YulBlock","src":"864:391:12","statements":[{"body":{"nodeType":"YulBlock","src":"910:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"912:77:12"},"nodeType":"YulFunctionCall","src":"912:79:12"},"nodeType":"YulExpressionStatement","src":"912:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"885:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"894:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"881:3:12"},"nodeType":"YulFunctionCall","src":"881:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"906:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"877:3:12"},"nodeType":"YulFunctionCall","src":"877:32:12"},"nodeType":"YulIf","src":"874:119:12"},{"nodeType":"YulBlock","src":"1003:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"1018:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"1032:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1022:6:12","type":""}]},{"nodeType":"YulAssignment","src":"1047:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1082:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"1093:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1078:3:12"},"nodeType":"YulFunctionCall","src":"1078:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1102:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1057:20:12"},"nodeType":"YulFunctionCall","src":"1057:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1047:6:12"}]}]},{"nodeType":"YulBlock","src":"1130:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"1145:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"1159:2:12","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1149:6:12","type":""}]},{"nodeType":"YulAssignment","src":"1175:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1210:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"1221:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1206:3:12"},"nodeType":"YulFunctionCall","src":"1206:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1230:7:12"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1185:20:12"},"nodeType":"YulFunctionCall","src":"1185:53:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1175:6:12"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"826:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"837:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"849:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"857:6:12","type":""}],"src":"781:474:12"},{"body":{"nodeType":"YulBlock","src":"1338:274:12","statements":[{"body":{"nodeType":"YulBlock","src":"1384:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1386:77:12"},"nodeType":"YulFunctionCall","src":"1386:79:12"},"nodeType":"YulExpressionStatement","src":"1386:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1359:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"1368:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1355:3:12"},"nodeType":"YulFunctionCall","src":"1355:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"1380:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1351:3:12"},"nodeType":"YulFunctionCall","src":"1351:32:12"},"nodeType":"YulIf","src":"1348:119:12"},{"nodeType":"YulBlock","src":"1477:128:12","statements":[{"nodeType":"YulVariableDeclaration","src":"1492:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"1506:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1496:6:12","type":""}]},{"nodeType":"YulAssignment","src":"1521:74:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1567:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"1578:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1563:3:12"},"nodeType":"YulFunctionCall","src":"1563:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1587:7:12"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"1531:31:12"},"nodeType":"YulFunctionCall","src":"1531:64:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1521:6:12"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1308:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1319:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1331:6:12","type":""}],"src":"1261:351:12"},{"body":{"nodeType":"YulBlock","src":"1701:391:12","statements":[{"body":{"nodeType":"YulBlock","src":"1747:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1749:77:12"},"nodeType":"YulFunctionCall","src":"1749:79:12"},"nodeType":"YulExpressionStatement","src":"1749:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1722:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"1731:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1718:3:12"},"nodeType":"YulFunctionCall","src":"1718:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"1743:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1714:3:12"},"nodeType":"YulFunctionCall","src":"1714:32:12"},"nodeType":"YulIf","src":"1711:119:12"},{"nodeType":"YulBlock","src":"1840:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"1855:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"1869:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1859:6:12","type":""}]},{"nodeType":"YulAssignment","src":"1884:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1919:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"1930:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1915:3:12"},"nodeType":"YulFunctionCall","src":"1915:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1939:7:12"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1894:20:12"},"nodeType":"YulFunctionCall","src":"1894:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1884:6:12"}]}]},{"nodeType":"YulBlock","src":"1967:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"1982:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"1996:2:12","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1986:6:12","type":""}]},{"nodeType":"YulAssignment","src":"2012:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2047:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"2058:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2043:3:12"},"nodeType":"YulFunctionCall","src":"2043:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2067:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2022:20:12"},"nodeType":"YulFunctionCall","src":"2022:53:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2012:6:12"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1663:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1674:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1686:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1694:6:12","type":""}],"src":"1618:474:12"},{"body":{"nodeType":"YulBlock","src":"2198:519:12","statements":[{"body":{"nodeType":"YulBlock","src":"2244:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2246:77:12"},"nodeType":"YulFunctionCall","src":"2246:79:12"},"nodeType":"YulExpressionStatement","src":"2246:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2219:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"2228:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2215:3:12"},"nodeType":"YulFunctionCall","src":"2215:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"2240:2:12","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2211:3:12"},"nodeType":"YulFunctionCall","src":"2211:32:12"},"nodeType":"YulIf","src":"2208:119:12"},{"nodeType":"YulBlock","src":"2337:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"2352:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"2366:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2356:6:12","type":""}]},{"nodeType":"YulAssignment","src":"2381:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2416:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"2427:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2412:3:12"},"nodeType":"YulFunctionCall","src":"2412:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2436:7:12"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2391:20:12"},"nodeType":"YulFunctionCall","src":"2391:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2381:6:12"}]}]},{"nodeType":"YulBlock","src":"2464:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"2479:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"2493:2:12","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2483:6:12","type":""}]},{"nodeType":"YulAssignment","src":"2509:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2544:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"2555:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2540:3:12"},"nodeType":"YulFunctionCall","src":"2540:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2564:7:12"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2519:20:12"},"nodeType":"YulFunctionCall","src":"2519:53:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2509:6:12"}]}]},{"nodeType":"YulBlock","src":"2592:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"2607:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"2621:2:12","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2611:6:12","type":""}]},{"nodeType":"YulAssignment","src":"2637:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2672:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"2683:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2668:3:12"},"nodeType":"YulFunctionCall","src":"2668:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2692:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2647:20:12"},"nodeType":"YulFunctionCall","src":"2647:53:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2637:6:12"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2152:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2163:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2175:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2183:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2191:6:12","type":""}],"src":"2098:619:12"},{"body":{"nodeType":"YulBlock","src":"2788:53:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2805:3:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2828:5:12"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2810:17:12"},"nodeType":"YulFunctionCall","src":"2810:24:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2798:6:12"},"nodeType":"YulFunctionCall","src":"2798:37:12"},"nodeType":"YulExpressionStatement","src":"2798:37:12"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2776:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2783:3:12","type":""}],"src":"2723:118:12"},{"body":{"nodeType":"YulBlock","src":"2906:50:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2923:3:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2943:5:12"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2928:14:12"},"nodeType":"YulFunctionCall","src":"2928:21:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2916:6:12"},"nodeType":"YulFunctionCall","src":"2916:34:12"},"nodeType":"YulExpressionStatement","src":"2916:34:12"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2894:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2901:3:12","type":""}],"src":"2847:109:12"},{"body":{"nodeType":"YulBlock","src":"3108:220:12","statements":[{"nodeType":"YulAssignment","src":"3118:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3184:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"3189:2:12","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3125:58:12"},"nodeType":"YulFunctionCall","src":"3125:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3118:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3290:3:12"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"3201:88:12"},"nodeType":"YulFunctionCall","src":"3201:93:12"},"nodeType":"YulExpressionStatement","src":"3201:93:12"},{"nodeType":"YulAssignment","src":"3303:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3314:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"3319:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3310:3:12"},"nodeType":"YulFunctionCall","src":"3310:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3303:3:12"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3096:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3104:3:12","type":""}],"src":"2962:366:12"},{"body":{"nodeType":"YulBlock","src":"3480:220:12","statements":[{"nodeType":"YulAssignment","src":"3490:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3556:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"3561:2:12","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3497:58:12"},"nodeType":"YulFunctionCall","src":"3497:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3490:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3662:3:12"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"3573:88:12"},"nodeType":"YulFunctionCall","src":"3573:93:12"},"nodeType":"YulExpressionStatement","src":"3573:93:12"},{"nodeType":"YulAssignment","src":"3675:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3686:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"3691:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3682:3:12"},"nodeType":"YulFunctionCall","src":"3682:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3675:3:12"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3468:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3476:3:12","type":""}],"src":"3334:366:12"},{"body":{"nodeType":"YulBlock","src":"3771:53:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3788:3:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3811:5:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3793:17:12"},"nodeType":"YulFunctionCall","src":"3793:24:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3781:6:12"},"nodeType":"YulFunctionCall","src":"3781:37:12"},"nodeType":"YulExpressionStatement","src":"3781:37:12"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3759:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3766:3:12","type":""}],"src":"3706:118:12"},{"body":{"nodeType":"YulBlock","src":"3928:124:12","statements":[{"nodeType":"YulAssignment","src":"3938:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3950:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3961:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3946:3:12"},"nodeType":"YulFunctionCall","src":"3946:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3938:4:12"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4018:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4031:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4042:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4027:3:12"},"nodeType":"YulFunctionCall","src":"4027:17:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"3974:43:12"},"nodeType":"YulFunctionCall","src":"3974:71:12"},"nodeType":"YulExpressionStatement","src":"3974:71:12"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3900:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3912:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3923:4:12","type":""}],"src":"3830:222:12"},{"body":{"nodeType":"YulBlock","src":"4184:206:12","statements":[{"nodeType":"YulAssignment","src":"4194:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4206:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4217:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4202:3:12"},"nodeType":"YulFunctionCall","src":"4202:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4194:4:12"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4274:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4287:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4298:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4283:3:12"},"nodeType":"YulFunctionCall","src":"4283:17:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4230:43:12"},"nodeType":"YulFunctionCall","src":"4230:71:12"},"nodeType":"YulExpressionStatement","src":"4230:71:12"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4355:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4368:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4379:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4364:3:12"},"nodeType":"YulFunctionCall","src":"4364:18:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4311:43:12"},"nodeType":"YulFunctionCall","src":"4311:72:12"},"nodeType":"YulExpressionStatement","src":"4311:72:12"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4148:9:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4160:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4168:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4179:4:12","type":""}],"src":"4058:332:12"},{"body":{"nodeType":"YulBlock","src":"4488:118:12","statements":[{"nodeType":"YulAssignment","src":"4498:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4510:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4521:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4506:3:12"},"nodeType":"YulFunctionCall","src":"4506:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4498:4:12"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4572:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4585:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4596:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4581:3:12"},"nodeType":"YulFunctionCall","src":"4581:17:12"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"4534:37:12"},"nodeType":"YulFunctionCall","src":"4534:65:12"},"nodeType":"YulExpressionStatement","src":"4534:65:12"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4460:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4472:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4483:4:12","type":""}],"src":"4396:210:12"},{"body":{"nodeType":"YulBlock","src":"4783:248:12","statements":[{"nodeType":"YulAssignment","src":"4793:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4805:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4816:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4801:3:12"},"nodeType":"YulFunctionCall","src":"4801:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4793:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4840:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4851:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4836:3:12"},"nodeType":"YulFunctionCall","src":"4836:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4859:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"4865:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4855:3:12"},"nodeType":"YulFunctionCall","src":"4855:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4829:6:12"},"nodeType":"YulFunctionCall","src":"4829:47:12"},"nodeType":"YulExpressionStatement","src":"4829:47:12"},{"nodeType":"YulAssignment","src":"4885:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5019:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4893:124:12"},"nodeType":"YulFunctionCall","src":"4893:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4885:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4763:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4778:4:12","type":""}],"src":"4612:419:12"},{"body":{"nodeType":"YulBlock","src":"5208:248:12","statements":[{"nodeType":"YulAssignment","src":"5218:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5230:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5241:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5226:3:12"},"nodeType":"YulFunctionCall","src":"5226:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5218:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5265:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5276:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5261:3:12"},"nodeType":"YulFunctionCall","src":"5261:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5284:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"5290:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5280:3:12"},"nodeType":"YulFunctionCall","src":"5280:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5254:6:12"},"nodeType":"YulFunctionCall","src":"5254:47:12"},"nodeType":"YulExpressionStatement","src":"5254:47:12"},{"nodeType":"YulAssignment","src":"5310:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5444:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5318:124:12"},"nodeType":"YulFunctionCall","src":"5318:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5310:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5188:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5203:4:12","type":""}],"src":"5037:419:12"},{"body":{"nodeType":"YulBlock","src":"5560:124:12","statements":[{"nodeType":"YulAssignment","src":"5570:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5582:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5593:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5578:3:12"},"nodeType":"YulFunctionCall","src":"5578:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5570:4:12"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5650:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5663:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5674:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5659:3:12"},"nodeType":"YulFunctionCall","src":"5659:17:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5606:43:12"},"nodeType":"YulFunctionCall","src":"5606:71:12"},"nodeType":"YulExpressionStatement","src":"5606:71:12"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5532:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5544:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5555:4:12","type":""}],"src":"5462:222:12"},{"body":{"nodeType":"YulBlock","src":"5730:35:12","statements":[{"nodeType":"YulAssignment","src":"5740:19:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5756:2:12","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5750:5:12"},"nodeType":"YulFunctionCall","src":"5750:9:12"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5740:6:12"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5723:6:12","type":""}],"src":"5690:75:12"},{"body":{"nodeType":"YulBlock","src":"5867:73:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5884:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"5889:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5877:6:12"},"nodeType":"YulFunctionCall","src":"5877:19:12"},"nodeType":"YulExpressionStatement","src":"5877:19:12"},{"nodeType":"YulAssignment","src":"5905:29:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5924:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"5929:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5920:3:12"},"nodeType":"YulFunctionCall","src":"5920:14:12"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5905:11:12"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5839:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"5844:6:12","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5855:11:12","type":""}],"src":"5771:169:12"},{"body":{"nodeType":"YulBlock","src":"5988:143:12","statements":[{"nodeType":"YulAssignment","src":"5998:25:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6021:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6003:17:12"},"nodeType":"YulFunctionCall","src":"6003:20:12"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"5998:1:12"}]},{"nodeType":"YulAssignment","src":"6032:25:12","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6055:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6037:17:12"},"nodeType":"YulFunctionCall","src":"6037:20:12"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6032:1:12"}]},{"body":{"nodeType":"YulBlock","src":"6079:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"6081:16:12"},"nodeType":"YulFunctionCall","src":"6081:18:12"},"nodeType":"YulExpressionStatement","src":"6081:18:12"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6076:1:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6069:6:12"},"nodeType":"YulFunctionCall","src":"6069:9:12"},"nodeType":"YulIf","src":"6066:35:12"},{"nodeType":"YulAssignment","src":"6111:14:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6120:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"6123:1:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6116:3:12"},"nodeType":"YulFunctionCall","src":"6116:9:12"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6111:1:12"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5977:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"5980:1:12","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"5986:1:12","type":""}],"src":"5946:185:12"},{"body":{"nodeType":"YulBlock","src":"6185:300:12","statements":[{"nodeType":"YulAssignment","src":"6195:25:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6218:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6200:17:12"},"nodeType":"YulFunctionCall","src":"6200:20:12"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6195:1:12"}]},{"nodeType":"YulAssignment","src":"6229:25:12","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6252:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6234:17:12"},"nodeType":"YulFunctionCall","src":"6234:20:12"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6229:1:12"}]},{"body":{"nodeType":"YulBlock","src":"6427:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6429:16:12"},"nodeType":"YulFunctionCall","src":"6429:18:12"},"nodeType":"YulExpressionStatement","src":"6429:18:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6339:1:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6332:6:12"},"nodeType":"YulFunctionCall","src":"6332:9:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6325:6:12"},"nodeType":"YulFunctionCall","src":"6325:17:12"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6347:1:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6354:66:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"6422:1:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6350:3:12"},"nodeType":"YulFunctionCall","src":"6350:74:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6344:2:12"},"nodeType":"YulFunctionCall","src":"6344:81:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6321:3:12"},"nodeType":"YulFunctionCall","src":"6321:105:12"},"nodeType":"YulIf","src":"6318:131:12"},{"nodeType":"YulAssignment","src":"6459:20:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6474:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"6477:1:12"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6470:3:12"},"nodeType":"YulFunctionCall","src":"6470:9:12"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"6459:7:12"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6168:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"6171:1:12","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"6177:7:12","type":""}],"src":"6137:348:12"},{"body":{"nodeType":"YulBlock","src":"6536:51:12","statements":[{"nodeType":"YulAssignment","src":"6546:35:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6575:5:12"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"6557:17:12"},"nodeType":"YulFunctionCall","src":"6557:24:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6546:7:12"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6518:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6528:7:12","type":""}],"src":"6491:96:12"},{"body":{"nodeType":"YulBlock","src":"6635:48:12","statements":[{"nodeType":"YulAssignment","src":"6645:32:12","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6670:5:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6663:6:12"},"nodeType":"YulFunctionCall","src":"6663:13:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6656:6:12"},"nodeType":"YulFunctionCall","src":"6656:21:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6645:7:12"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6617:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6627:7:12","type":""}],"src":"6593:90:12"},{"body":{"nodeType":"YulBlock","src":"6734:81:12","statements":[{"nodeType":"YulAssignment","src":"6744:65:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6759:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"6766:42:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6755:3:12"},"nodeType":"YulFunctionCall","src":"6755:54:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6744:7:12"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6716:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6726:7:12","type":""}],"src":"6689:126:12"},{"body":{"nodeType":"YulBlock","src":"6866:32:12","statements":[{"nodeType":"YulAssignment","src":"6876:16:12","value":{"name":"value","nodeType":"YulIdentifier","src":"6887:5:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6876:7:12"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6848:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6858:7:12","type":""}],"src":"6821:77:12"},{"body":{"nodeType":"YulBlock","src":"6932:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6949:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6952:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6942:6:12"},"nodeType":"YulFunctionCall","src":"6942:88:12"},"nodeType":"YulExpressionStatement","src":"6942:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7046:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7049:4:12","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7039:6:12"},"nodeType":"YulFunctionCall","src":"7039:15:12"},"nodeType":"YulExpressionStatement","src":"7039:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7070:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7073:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7063:6:12"},"nodeType":"YulFunctionCall","src":"7063:15:12"},"nodeType":"YulExpressionStatement","src":"7063:15:12"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6904:180:12"},{"body":{"nodeType":"YulBlock","src":"7118:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7135:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7138:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7128:6:12"},"nodeType":"YulFunctionCall","src":"7128:88:12"},"nodeType":"YulExpressionStatement","src":"7128:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7232:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7235:4:12","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7225:6:12"},"nodeType":"YulFunctionCall","src":"7225:15:12"},"nodeType":"YulExpressionStatement","src":"7225:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7256:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7259:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7249:6:12"},"nodeType":"YulFunctionCall","src":"7249:15:12"},"nodeType":"YulExpressionStatement","src":"7249:15:12"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"7090:180:12"},{"body":{"nodeType":"YulBlock","src":"7365:28:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7382:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7385:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7375:6:12"},"nodeType":"YulFunctionCall","src":"7375:12:12"},"nodeType":"YulExpressionStatement","src":"7375:12:12"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"7276:117:12"},{"body":{"nodeType":"YulBlock","src":"7488:28:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7505:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7508:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7498:6:12"},"nodeType":"YulFunctionCall","src":"7498:12:12"},"nodeType":"YulExpressionStatement","src":"7498:12:12"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"7399:117:12"},{"body":{"nodeType":"YulBlock","src":"7628:119:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7650:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"7658:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7646:3:12"},"nodeType":"YulFunctionCall","src":"7646:14:12"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"7662:34:12","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7639:6:12"},"nodeType":"YulFunctionCall","src":"7639:58:12"},"nodeType":"YulExpressionStatement","src":"7639:58:12"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7718:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"7726:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7714:3:12"},"nodeType":"YulFunctionCall","src":"7714:15:12"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"7731:8:12","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7707:6:12"},"nodeType":"YulFunctionCall","src":"7707:33:12"},"nodeType":"YulExpressionStatement","src":"7707:33:12"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7620:6:12","type":""}],"src":"7522:225:12"},{"body":{"nodeType":"YulBlock","src":"7859:76:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7881:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"7889:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7877:3:12"},"nodeType":"YulFunctionCall","src":"7877:14:12"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"7893:34:12","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7870:6:12"},"nodeType":"YulFunctionCall","src":"7870:58:12"},"nodeType":"YulExpressionStatement","src":"7870:58:12"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7851:6:12","type":""}],"src":"7753:182:12"},{"body":{"nodeType":"YulBlock","src":"7984:79:12","statements":[{"body":{"nodeType":"YulBlock","src":"8041:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8050:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8053:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8043:6:12"},"nodeType":"YulFunctionCall","src":"8043:12:12"},"nodeType":"YulExpressionStatement","src":"8043:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8007:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8032:5:12"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8014:17:12"},"nodeType":"YulFunctionCall","src":"8014:24:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8004:2:12"},"nodeType":"YulFunctionCall","src":"8004:35:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7997:6:12"},"nodeType":"YulFunctionCall","src":"7997:43:12"},"nodeType":"YulIf","src":"7994:63:12"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7977:5:12","type":""}],"src":"7941:122:12"},{"body":{"nodeType":"YulBlock","src":"8112:79:12","statements":[{"body":{"nodeType":"YulBlock","src":"8169:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8178:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8181:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8171:6:12"},"nodeType":"YulFunctionCall","src":"8171:12:12"},"nodeType":"YulExpressionStatement","src":"8171:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8135:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8160:5:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8142:17:12"},"nodeType":"YulFunctionCall","src":"8142:24:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8132:2:12"},"nodeType":"YulFunctionCall","src":"8132:35:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8125:6:12"},"nodeType":"YulFunctionCall","src":"8125:43:12"},"nodeType":"YulIf","src":"8122:63:12"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8105:5:12","type":""}],"src":"8069:122:12"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":12,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100885760003560e01c80637bf1a6271161005b5780637bf1a627146101275780638da5cb5b1461014557806392f63d2e14610163578063f2fde38b1461018157610088565b806310daf2881461008d57806321d6ce10146100bd578063513ffedd146100ed578063715018a61461011d575b600080fd5b6100a760048036038101906100a291906109b5565b61019d565b6040516100b49190610aff565b60405180910390f35b6100d760048036038101906100d29190610948565b61027e565b6040516100e49190610b5a565b60405180910390f35b610107600480360381019061010291906109f5565b610434565b6040516101149190610b5a565b60405180910390f35b610125610659565b005b61012f61066d565b60405161013c9190610abb565b60405180910390f35b61014d610693565b60405161015a9190610abb565b60405180910390f35b61016b6106bc565b6040516101789190610abb565b60405180910390f35b61019b6004803603810190610196919061091b565b6106e2565b005b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cd5d767c600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff1660e01b815260040161021f929190610ad6565b60206040518083038186803b15801561023757600080fd5b505afa15801561024b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026f9190610988565b90508381101591505092915050565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016102fe9190610abb565b60206040518083038186803b15801561031657600080fd5b505afa15801561032a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034e9190610988565b90506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09866040518263ffffffff1660e01b81526004016103ad9190610abb565b60206040518083038186803b1580156103c557600080fd5b505afa1580156103d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fd9190610988565b90506000610414858461076690919063ffffffff16565b9050610429828261077c90919063ffffffff16565b935050505092915050565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09846040518263ffffffff1660e01b81526004016104929190610abb565b60206040518083038186803b1580156104aa57600080fd5b505afa1580156104be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e29190610988565b90506000610533600154610525846105176001546105098b8d61076690919063ffffffff16565b61077c90919063ffffffff16565b61076690919063ffffffff16565b61077c90919063ffffffff16565b9050600061054c6127108361077c90919063ffffffff16565b90506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016105cd9190610abb565b60206040518083038186803b1580156105e557600080fd5b505afa1580156105f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061d9190610988565b905060006106488261063a6001548661076690919063ffffffff16565b61077c90919063ffffffff16565b905080955050505050509392505050565b610661610792565b61066b6000610810565b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106ea610792565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561075a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075190610b1a565b60405180910390fd5b61076381610810565b50565b600081836107749190610bb7565b905092915050565b6000818361078a9190610b86565b905092915050565b61079a6108d4565b73ffffffffffffffffffffffffffffffffffffffff166107b8610693565b73ffffffffffffffffffffffffffffffffffffffff161461080e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080590610b3a565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000813590506108eb81610d34565b92915050565b60008135905061090081610d4b565b92915050565b60008151905061091581610d4b565b92915050565b60006020828403121561093157610930610cb7565b5b600061093f848285016108dc565b91505092915050565b6000806040838503121561095f5761095e610cb7565b5b600061096d858286016108dc565b925050602061097e858286016108f1565b9150509250929050565b60006020828403121561099e5761099d610cb7565b5b60006109ac84828501610906565b91505092915050565b600080604083850312156109cc576109cb610cb7565b5b60006109da858286016108f1565b92505060206109eb858286016108dc565b9150509250929050565b600080600060608486031215610a0e57610a0d610cb7565b5b6000610a1c868287016108f1565b9350506020610a2d868287016108f1565b9250506040610a3e868287016108dc565b9150509250925092565b610a5181610c11565b82525050565b610a6081610c23565b82525050565b6000610a73602683610b75565b9150610a7e82610cbc565b604082019050919050565b6000610a96602083610b75565b9150610aa182610d0b565b602082019050919050565b610ab581610c4f565b82525050565b6000602082019050610ad06000830184610a48565b92915050565b6000604082019050610aeb6000830185610a48565b610af86020830184610a48565b9392505050565b6000602082019050610b146000830184610a57565b92915050565b60006020820190508181036000830152610b3381610a66565b9050919050565b60006020820190508181036000830152610b5381610a89565b9050919050565b6000602082019050610b6f6000830184610aac565b92915050565b600082825260208201905092915050565b6000610b9182610c4f565b9150610b9c83610c4f565b925082610bac57610bab610c88565b5b828204905092915050565b6000610bc282610c4f565b9150610bcd83610c4f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c0657610c05610c59565b5b828202905092915050565b6000610c1c82610c2f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610d3d81610c11565b8114610d4857600080fd5b50565b610d5481610c4f565b8114610d5f57600080fd5b5056fea2646970667358221220372cd6049074400e424a3980f6763bf0d0b2689ed30435a7c152d5a17954610064736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7BF1A627 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x7BF1A627 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x92F63D2E EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x181 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x10DAF288 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x21D6CE10 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x513FFEDD EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x11D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x9B5 JUMP JUMPDEST PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0xAFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x948 JUMP JUMPDEST PUSH2 0x27E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x434 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x125 PUSH2 0x659 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12F PUSH2 0x66D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0xABB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH2 0x693 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0xABB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH2 0x6BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0xABB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x91B JUMP JUMPDEST PUSH2 0x6E2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCD5D767C PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21F SWAP3 SWAP2 SWAP1 PUSH2 0xAD6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x988 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0xABB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x32A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x988 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0xABB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3FD SWAP2 SWAP1 PUSH2 0x988 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x414 DUP6 DUP5 PUSH2 0x766 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x429 DUP3 DUP3 PUSH2 0x77C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x492 SWAP2 SWAP1 PUSH2 0xABB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E2 SWAP2 SWAP1 PUSH2 0x988 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x533 PUSH1 0x1 SLOAD PUSH2 0x525 DUP5 PUSH2 0x517 PUSH1 0x1 SLOAD PUSH2 0x509 DUP12 DUP14 PUSH2 0x766 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x77C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x766 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x77C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x54C PUSH2 0x2710 DUP4 PUSH2 0x77C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CD SWAP2 SWAP1 PUSH2 0xABB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x61D SWAP2 SWAP1 PUSH2 0x988 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x648 DUP3 PUSH2 0x63A PUSH1 0x1 SLOAD DUP7 PUSH2 0x766 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x77C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x661 PUSH2 0x792 JUMP JUMPDEST PUSH2 0x66B PUSH1 0x0 PUSH2 0x810 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x6EA PUSH2 0x792 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x75A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x751 SWAP1 PUSH2 0xB1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x763 DUP2 PUSH2 0x810 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x774 SWAP2 SWAP1 PUSH2 0xBB7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x78A SWAP2 SWAP1 PUSH2 0xB86 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x79A PUSH2 0x8D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7B8 PUSH2 0x693 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x80E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x805 SWAP1 PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8EB DUP2 PUSH2 0xD34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x900 DUP2 PUSH2 0xD4B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x915 DUP2 PUSH2 0xD4B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x931 JUMPI PUSH2 0x930 PUSH2 0xCB7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x93F DUP5 DUP3 DUP6 ADD PUSH2 0x8DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x95F JUMPI PUSH2 0x95E PUSH2 0xCB7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x96D DUP6 DUP3 DUP7 ADD PUSH2 0x8DC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x97E DUP6 DUP3 DUP7 ADD PUSH2 0x8F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x99E JUMPI PUSH2 0x99D PUSH2 0xCB7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9AC DUP5 DUP3 DUP6 ADD PUSH2 0x906 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9CC JUMPI PUSH2 0x9CB PUSH2 0xCB7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9DA DUP6 DUP3 DUP7 ADD PUSH2 0x8F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9EB DUP6 DUP3 DUP7 ADD PUSH2 0x8DC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA0E JUMPI PUSH2 0xA0D PUSH2 0xCB7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA1C DUP7 DUP3 DUP8 ADD PUSH2 0x8F1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xA2D DUP7 DUP3 DUP8 ADD PUSH2 0x8F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xA3E DUP7 DUP3 DUP8 ADD PUSH2 0x8DC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xA51 DUP2 PUSH2 0xC11 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xA60 DUP2 PUSH2 0xC23 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA73 PUSH1 0x26 DUP4 PUSH2 0xB75 JUMP JUMPDEST SWAP2 POP PUSH2 0xA7E DUP3 PUSH2 0xCBC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA96 PUSH1 0x20 DUP4 PUSH2 0xB75 JUMP JUMPDEST SWAP2 POP PUSH2 0xAA1 DUP3 PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB5 DUP2 PUSH2 0xC4F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAD0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xAEB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xA48 JUMP JUMPDEST PUSH2 0xAF8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA48 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB14 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB33 DUP2 PUSH2 0xA66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB53 DUP2 PUSH2 0xA89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB6F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB91 DUP3 PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP PUSH2 0xB9C DUP4 PUSH2 0xC4F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xBAC JUMPI PUSH2 0xBAB PUSH2 0xC88 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC2 DUP3 PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP PUSH2 0xBCD DUP4 PUSH2 0xC4F JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xC06 JUMPI PUSH2 0xC05 PUSH2 0xC59 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1C DUP3 PUSH2 0xC2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xD3D DUP2 PUSH2 0xC11 JUMP JUMPDEST DUP2 EQ PUSH2 0xD48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xD54 DUP2 PUSH2 0xC4F JUMP JUMPDEST DUP2 EQ PUSH2 0xD5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0x2C 0xD6 DIV SWAP1 PUSH21 0x400E424A3980F6763BF0D0B2689ED30435A7C152D5 LOG1 PUSH26 0x54610064736F6C63430008070033000000000000000000000000 ","sourceMap":"408:2338:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2525:218;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2168:349;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1300:828;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:2;;;:::i;:::-;;1102:36:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1145:73:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2525:218:7;2634:4;2651:15;2669:6;;;;;;;;;;;:15;;;2685:4;;;;;;;;;;;2691:5;2669:28;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2651:46;;2728:7;2717;:18;;2710:25;;;2525:218;;;;:::o;2168:349::-;2273:7;2293:18;2314:9;;;;;;;;;;;:18;;;2333:8;;;;;;;;;;;2314:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2293:49;;2353:20;2376:9;;;;;;;;;;;:18;;;2395:9;2376:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2353:52;;2432:13;2448:20;2463:4;2448:10;:14;;:20;;;;:::i;:::-;2432:36;;2486:23;2496:12;2486:5;:9;;:23;;;;:::i;:::-;2479:30;;;;;2168:349;;;;:::o;1300:828::-;1431:7;1678:20;1701:9;;;;;;;;;;;:18;;;1720:9;1701:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1678:52;;1757:13;1773:84;1848:8;;1774:54;1815:12;1775:34;1800:8;;1776:18;1788:5;1776:7;:11;;:18;;;;:::i;:::-;1775:24;;:34;;;;:::i;:::-;1774:40;;:54;;;;:::i;:::-;1773:74;;:84;;;;:::i;:::-;1757:100;;1868:12;1883:18;1893:7;1883:5;:9;;:18;;;;:::i;:::-;1868:33;;1947:18;1968:9;;;;;;;;;;;:18;;;1987:8;;;;;;;;;;;1968:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1947:49;;2009:19;2031:36;2056:10;2032:18;2041:8;;2032:4;:8;;:18;;;;:::i;:::-;2031:24;;:36;;;;:::i;:::-;2009:58;;2087:11;2080:18;;;;;;;1300:828;;;;;:::o;1831:101:2:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1102:36:7:-;;;;;;;;;;;;;:::o;1201:85:2:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;1145:73:7:-;;;;;;;;;;;;;:::o;2081:198:2:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;3465:96:4:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;1359:130:2:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;7:139:12:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:143::-;354:5;385:6;379:13;370:22;;401:33;428:5;401:33;:::i;:::-;297:143;;;;:::o;446:329::-;505:6;554:2;542:9;533:7;529:23;525:32;522:119;;;560:79;;:::i;:::-;522:119;680:1;705:53;750:7;741:6;730:9;726:22;705:53;:::i;:::-;695:63;;651:117;446:329;;;;:::o;781:474::-;849:6;857;906:2;894:9;885:7;881:23;877:32;874:119;;;912:79;;:::i;:::-;874:119;1032:1;1057:53;1102:7;1093:6;1082:9;1078:22;1057:53;:::i;:::-;1047:63;;1003:117;1159:2;1185:53;1230:7;1221:6;1210:9;1206:22;1185:53;:::i;:::-;1175:63;;1130:118;781:474;;;;;:::o;1261:351::-;1331:6;1380:2;1368:9;1359:7;1355:23;1351:32;1348:119;;;1386:79;;:::i;:::-;1348:119;1506:1;1531:64;1587:7;1578:6;1567:9;1563:22;1531:64;:::i;:::-;1521:74;;1477:128;1261:351;;;;:::o;1618:474::-;1686:6;1694;1743:2;1731:9;1722:7;1718:23;1714:32;1711:119;;;1749:79;;:::i;:::-;1711:119;1869:1;1894:53;1939:7;1930:6;1919:9;1915:22;1894:53;:::i;:::-;1884:63;;1840:117;1996:2;2022:53;2067:7;2058:6;2047:9;2043:22;2022:53;:::i;:::-;2012:63;;1967:118;1618:474;;;;;:::o;2098:619::-;2175:6;2183;2191;2240:2;2228:9;2219:7;2215:23;2211:32;2208:119;;;2246:79;;:::i;:::-;2208:119;2366:1;2391:53;2436:7;2427:6;2416:9;2412:22;2391:53;:::i;:::-;2381:63;;2337:117;2493:2;2519:53;2564:7;2555:6;2544:9;2540:22;2519:53;:::i;:::-;2509:63;;2464:118;2621:2;2647:53;2692:7;2683:6;2672:9;2668:22;2647:53;:::i;:::-;2637:63;;2592:118;2098:619;;;;;:::o;2723:118::-;2810:24;2828:5;2810:24;:::i;:::-;2805:3;2798:37;2723:118;;:::o;2847:109::-;2928:21;2943:5;2928:21;:::i;:::-;2923:3;2916:34;2847:109;;:::o;2962:366::-;3104:3;3125:67;3189:2;3184:3;3125:67;:::i;:::-;3118:74;;3201:93;3290:3;3201:93;:::i;:::-;3319:2;3314:3;3310:12;3303:19;;2962:366;;;:::o;3334:::-;3476:3;3497:67;3561:2;3556:3;3497:67;:::i;:::-;3490:74;;3573:93;3662:3;3573:93;:::i;:::-;3691:2;3686:3;3682:12;3675:19;;3334:366;;;:::o;3706:118::-;3793:24;3811:5;3793:24;:::i;:::-;3788:3;3781:37;3706:118;;:::o;3830:222::-;3923:4;3961:2;3950:9;3946:18;3938:26;;3974:71;4042:1;4031:9;4027:17;4018:6;3974:71;:::i;:::-;3830:222;;;;:::o;4058:332::-;4179:4;4217:2;4206:9;4202:18;4194:26;;4230:71;4298:1;4287:9;4283:17;4274:6;4230:71;:::i;:::-;4311:72;4379:2;4368:9;4364:18;4355:6;4311:72;:::i;:::-;4058:332;;;;;:::o;4396:210::-;4483:4;4521:2;4510:9;4506:18;4498:26;;4534:65;4596:1;4585:9;4581:17;4572:6;4534:65;:::i;:::-;4396:210;;;;:::o;4612:419::-;4778:4;4816:2;4805:9;4801:18;4793:26;;4865:9;4859:4;4855:20;4851:1;4840:9;4836:17;4829:47;4893:131;5019:4;4893:131;:::i;:::-;4885:139;;4612:419;;;:::o;5037:::-;5203:4;5241:2;5230:9;5226:18;5218:26;;5290:9;5284:4;5280:20;5276:1;5265:9;5261:17;5254:47;5318:131;5444:4;5318:131;:::i;:::-;5310:139;;5037:419;;;:::o;5462:222::-;5555:4;5593:2;5582:9;5578:18;5570:26;;5606:71;5674:1;5663:9;5659:17;5650:6;5606:71;:::i;:::-;5462:222;;;;:::o;5771:169::-;5855:11;5889:6;5884:3;5877:19;5929:4;5924:3;5920:14;5905:29;;5771:169;;;;:::o;5946:185::-;5986:1;6003:20;6021:1;6003:20;:::i;:::-;5998:25;;6037:20;6055:1;6037:20;:::i;:::-;6032:25;;6076:1;6066:35;;6081:18;;:::i;:::-;6066:35;6123:1;6120;6116:9;6111:14;;5946:185;;;;:::o;6137:348::-;6177:7;6200:20;6218:1;6200:20;:::i;:::-;6195:25;;6234:20;6252:1;6234:20;:::i;:::-;6229:25;;6422:1;6354:66;6350:74;6347:1;6344:81;6339:1;6332:9;6325:17;6321:105;6318:131;;;6429:18;;:::i;:::-;6318:131;6477:1;6474;6470:9;6459:20;;6137:348;;;;:::o;6491:96::-;6528:7;6557:24;6575:5;6557:24;:::i;:::-;6546:35;;6491:96;;;:::o;6593:90::-;6627:7;6670:5;6663:13;6656:21;6645:32;;6593:90;;;:::o;6689:126::-;6726:7;6766:42;6759:5;6755:54;6744:65;;6689:126;;;:::o;6821:77::-;6858:7;6887:5;6876:16;;6821:77;;;:::o;6904:180::-;6952:77;6949:1;6942:88;7049:4;7046:1;7039:15;7073:4;7070:1;7063:15;7090:180;7138:77;7135:1;7128:88;7235:4;7232:1;7225:15;7259:4;7256:1;7249:15;7399:117;7508:1;7505;7498:12;7522:225;7662:34;7658:1;7650:6;7646:14;7639:58;7731:8;7726:2;7718:6;7714:15;7707:33;7522:225;:::o;7753:182::-;7893:34;7889:1;7881:6;7877:14;7870:58;7753:182;:::o;7941:122::-;8014:24;8032:5;8014:24;:::i;:::-;8007:5;8004:35;7994:63;;8053:1;8050;8043:12;7994:63;7941:122;:::o;8069:::-;8142:24;8160:5;8142:24;:::i;:::-;8135:5;8132:35;8122:63;;8181:1;8178;8171:12;8122:63;8069:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"696000","executionCost":"infinite","totalCost":"infinite"},"external":{"aETH()":"2558","amountToDeduct(address,uint256)":"infinite","calculateFees(uint256,uint256,address)":"infinite","checkSufficientaETH(uint256,address)":"infinite","ethToken()":"2514","owner()":"2544","renounceOwnership()":"30465","transferOwnership(address)":"30813"}},"methodIdentifiers":{"aETH()":"92f63d2e","amountToDeduct(address,uint256)":"21d6ce10","calculateFees(uint256,uint256,address)":"513ffedd","checkSufficientaETH(uint256,address)":"10daf288","ethToken()":"7bf1a627","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"aETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_refToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fees\",\"type\":\"uint256\"}],\"name\":\"amountToDeduct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_refToken\",\"type\":\"address\"}],\"name\":\"calculateFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"checkSufficientaETH\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TradingFees.sol\":\"TradingFees\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/Exchange.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./PriceChecker.sol\\\";\\r\\nimport \\\"./TradingFees.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Exchange is Ownable {\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n    PriceChecker priceChecker;\\r\\n    TradingFees tradingFees;\\r\\n    Wallet wallet;\\r\\n\\r\\n    uint256 decimals = 10 ** 18;\\r\\n    address public ethToken = address(0);\\r\\n    address public aETH = address(0x22404B0e2a7067068AcdaDd8f9D586F834cCe2c5);\\r\\n\\r\\n    //Token Address List available in DEX\\r\\n    _tokenInfo[] public tokenList;\\r\\n\\r\\n    //s_orderBook mappping: tokenAddress -> Side -> Order Array\\r\\n    mapping(address => mapping(uint256 => _Order[])) public s_orderBook;\\r\\n\\r\\n    mapping(address => mapping(uint256 => _filledOrder[]))\\r\\n        public s_filledOrders;\\r\\n\\r\\n    uint256 public s_orderId = 0;\\r\\n    bool private s_isManual = true;\\r\\n\\r\\n    struct _tokenInfo {\\r\\n        address add;\\r\\n        uint256 decimals;\\r\\n    }\\r\\n\\r\\n    struct _fillOrderValues {\\r\\n        uint256 rate;\\r\\n        uint256 amount;\\r\\n    }\\r\\n\\r\\n    //Structs representing an order that has unique id, user and amounts to give and get between two tokens to exchange\\r\\n    struct _Order {\\r\\n        uint256 id;\\r\\n        Side side;\\r\\n        address user;\\r\\n        address tokenA;\\r\\n        uint256 amountA;\\r\\n        address tokenB;\\r\\n        uint256 amountB;\\r\\n        uint256 rate; // TokenB/TokenA = price in terms of TokenB\\r\\n        uint256 originalAmountA;\\r\\n        uint256 originalAmountB;\\r\\n        bool waiveFees;\\r\\n    }\\r\\n\\r\\n    //For any order that is filled even if it is partially filled or fully filled\\r\\n    struct _filledOrder {\\r\\n        uint256 id;\\r\\n        Side side;\\r\\n        address user;\\r\\n        address tokenA;\\r\\n        address tokenB;\\r\\n        uint256 amountFilled;\\r\\n        uint256 fillRate;\\r\\n        uint256 originalRate;\\r\\n        uint256 originalAmountA;\\r\\n        uint256 originalAmountB;\\r\\n        bool feesWaived;\\r\\n        uint256 feesPaid; //in terms of ETH\\r\\n    }\\r\\n\\r\\n    enum Side {\\r\\n        BUY,\\r\\n        SELL\\r\\n    }\\r\\n\\r\\n    //add events\\r\\n    /// @notice Event when an order is placed on an exchange\\r\\n    event Order(\\r\\n        uint256 id,\\r\\n        Side side,\\r\\n        address user,\\r\\n        address tokenA,\\r\\n        uint256 amountA,\\r\\n        address tokenB,\\r\\n        uint256 amountB,\\r\\n        uint256 rate,\\r\\n        uint256 originalAmountA,\\r\\n        uint256 originalAmountB,\\r\\n        bool waiveFees\\r\\n    );\\r\\n\\r\\n    /// @notice Event when an order is cancelled\\r\\n    event Cancel(\\r\\n        uint256 id,\\r\\n        Side side,\\r\\n        address user,\\r\\n        address tokenA,\\r\\n        uint256 amountA,\\r\\n        address tokenB,\\r\\n        uint256 amountB,\\r\\n        uint256 rate,\\r\\n        uint256 originalAmountA,\\r\\n        uint256 originalAmountB,\\r\\n        bool waiveFees\\r\\n    );\\r\\n\\r\\n    event fillBuyOrder(\\r\\n        _Order remainingOrder,\\r\\n        uint256 amountBought,\\r\\n        uint256 fillBuyRate,\\r\\n        bool feesWaived,\\r\\n        uint256 feesPaid\\r\\n    );\\r\\n\\r\\n    event fillSellOrder(\\r\\n        _Order remainingOrder,\\r\\n        uint256 amountSold,\\r\\n        uint256 fillSellRate,\\r\\n        bool feesWaived,\\r\\n        uint256 feesPaid\\r\\n    );\\r\\n\\r\\n    function createLimitBuyOrder(\\r\\n        // TokenA/TokenB\\r\\n        address _tokenA,\\r\\n        uint256 _amountA,\\r\\n        address _tokenB,\\r\\n        uint256 _amountB,\\r\\n        uint256 _rate,\\r\\n        bool _waiveFees\\r\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\r\\n        //Amount user has deposited in the DEX must be >= value he wants to buy\\r\\n        require(\\r\\n            wallet.balanceOf(_tokenB, msg.sender).sub(\\r\\n                wallet.getlockedFunds(msg.sender, _tokenB)\\r\\n            ) >= _amountB,\\r\\n            \\\"Insufficient Funds\\\"\\r\\n        );\\r\\n\\r\\n        wallet.updateLockedFunds(msg.sender, _tokenB, _amountB, true);\\r\\n\\r\\n        s_orderBook[_tokenA][uint256(Side.BUY)].push(\\r\\n            _Order(\\r\\n                s_orderId,\\r\\n                Side.BUY,\\r\\n                msg.sender,\\r\\n                _tokenA,\\r\\n                _amountA,\\r\\n                _tokenB,\\r\\n                _amountB,\\r\\n                _rate,\\r\\n                _amountA,\\r\\n                _amountB,\\r\\n                _waiveFees\\r\\n            )\\r\\n        );\\r\\n\\r\\n        emit Order(\\r\\n            s_orderId,\\r\\n            Side.BUY,\\r\\n            msg.sender,\\r\\n            _tokenA,\\r\\n            _amountA,\\r\\n            _tokenB,\\r\\n            _amountB,\\r\\n            _rate,\\r\\n            _amountA,\\r\\n            _amountB,\\r\\n            _waiveFees\\r\\n        );\\r\\n\\r\\n        s_orderId = s_orderId.add(1);\\r\\n    }\\r\\n\\r\\n    function createLimitSellOrder(\\r\\n        address _tokenA,\\r\\n        uint256 _amountA,\\r\\n        address _tokenB,\\r\\n        uint256 _amountB,\\r\\n        uint256 _rate,\\r\\n        bool _waiveFees\\r\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\r\\n        //Amount of tokens user deposit in DEX must be >= the amount of tokens they want to sell\\r\\n        require(\\r\\n            wallet.balanceOf(_tokenA, msg.sender).sub(\\r\\n                wallet.getlockedFunds(msg.sender, _tokenA)\\r\\n            ) >= _amountA,\\r\\n            \\\"Insufficient Funds\\\"\\r\\n        );\\r\\n\\r\\n        //Lock the funds (tokens) in the wallet\\r\\n        wallet.updateLockedFunds(msg.sender, _tokenA, _amountA, true);\\r\\n\\r\\n        s_orderBook[_tokenA][uint256(Side.SELL)].push(\\r\\n            _Order(\\r\\n                s_orderId,\\r\\n                Side.SELL,\\r\\n                msg.sender,\\r\\n                _tokenA,\\r\\n                _amountA,\\r\\n                _tokenB,\\r\\n                _amountB,\\r\\n                _rate,\\r\\n                _amountA,\\r\\n                _amountB,\\r\\n                _waiveFees\\r\\n            )\\r\\n        );\\r\\n\\r\\n        emit Order(\\r\\n            s_orderId,\\r\\n            Side.SELL,\\r\\n            msg.sender,\\r\\n            _tokenA,\\r\\n            _amountA,\\r\\n            _tokenB,\\r\\n            _amountB,\\r\\n            _rate,\\r\\n            _amountA,\\r\\n            _amountB,\\r\\n            _waiveFees\\r\\n        );\\r\\n\\r\\n        s_orderId = s_orderId.add(1);\\r\\n    }\\r\\n\\r\\n    function cancelOrder(\\r\\n        Side side,\\r\\n        uint256 _id,\\r\\n        address _token\\r\\n    ) public validOrder(_id, side, _token) validToken(_token) {\\r\\n        _Order[] storage _order = s_orderBook[_token][uint256(side)];\\r\\n        uint256 size = _order.length;\\r\\n        _Order memory order;\\r\\n\\r\\n        uint256 index;\\r\\n        for (uint256 i = 0; i < size; i++) {\\r\\n            if (_order[i].id == _id) {\\r\\n                index = i;\\r\\n                order = _order[i];\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        //Manual cancellation of orders\\r\\n        if (s_isManual) {\\r\\n            require(msg.sender == order.user, \\\"Not Owner\\\");\\r\\n\\r\\n            //Unlock funds\\r\\n            if (side == Side.BUY) {\\r\\n                wallet.updateLockedFunds(\\r\\n                    msg.sender,\\r\\n                    order.tokenB,\\r\\n                    order.amountB,\\r\\n                    false\\r\\n                );\\r\\n            } else if (side == Side.SELL) {\\r\\n                wallet.updateLockedFunds(\\r\\n                    msg.sender,\\r\\n                    order.tokenA,\\r\\n                    order.amountA,\\r\\n                    false\\r\\n                );\\r\\n            }\\r\\n        }\\r\\n\\r\\n        for (uint256 j = index; j < size - 1; j++) {\\r\\n            _order[j] = _order[j.add(1)];\\r\\n        }\\r\\n        delete _order[size.sub(1)];\\r\\n        _order.pop();\\r\\n\\r\\n        s_orderBook[_token][uint256(side)] = _order;\\r\\n\\r\\n        emit Cancel(\\r\\n            _id,\\r\\n            order.side,\\r\\n            order.user,\\r\\n            order.tokenA,\\r\\n            order.amountA,\\r\\n            order.tokenB,\\r\\n            order.amountB,\\r\\n            order.rate,\\r\\n            order.originalAmountA,\\r\\n            order.originalAmountB,\\r\\n            order.waiveFees\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function fillOrder(\\r\\n        Side side,\\r\\n        uint256 _id,\\r\\n        address _token,\\r\\n        _fillOrderValues memory a\\r\\n    ) internal validOrder(_id, side, _token) validToken(_token) {\\r\\n        uint256 _side = uint256(side);\\r\\n        (_Order memory order, uint256 index) = getOrderFromArray(\\r\\n            _token,\\r\\n            _side,\\r\\n            _id\\r\\n        );\\r\\n\\r\\n        require(order.amountA >= a.amount, \\\"Invalid Order Amount to fill\\\");\\r\\n\\r\\n        order.amountA = order.amountA.sub(a.amount);\\r\\n        order.amountB = order.amountB.sub(\\r\\n            order.rate.mul(a.amount).div(decimals)\\r\\n        );\\r\\n        s_orderBook[_token][_side][index].amountA = order.amountA;\\r\\n        s_orderBook[_token][_side][index].amountB = order.amountB;\\r\\n\\r\\n        uint256 fees = tradingFees.calculateFees(\\r\\n            a.amount,\\r\\n            a.rate,\\r\\n            order.tokenB\\r\\n        ); //fees in ETH\\r\\n        bool feesWaived = order.waiveFees &&\\r\\n            tradingFees.checkSufficientaETH(fees, order.user);\\r\\n\\r\\n        if (side == Side.BUY) {\\r\\n            fillBuyOrders(order, a.amount, a.rate, feesWaived, fees);\\r\\n            emit fillBuyOrder(order, a.amount, a.rate, feesWaived, fees);\\r\\n        } else if (side == Side.SELL) {\\r\\n            fillSellOrders(order, a.amount, a.rate, feesWaived, fees);\\r\\n            emit fillSellOrder(order, a.amount, a.rate, feesWaived, fees);\\r\\n        }\\r\\n\\r\\n        if (order.amountA == 0) {\\r\\n            s_isManual = false;\\r\\n            cancelOrder(side, order.id, order.tokenA); //remove filled orders\\r\\n            s_isManual = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function fillBuyOrders(\\r\\n        _Order memory order,\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        bool feesWaived,\\r\\n        uint256 fees\\r\\n    ) internal {\\r\\n        if (feesWaived) {\\r\\n            //Deduct aETH\\r\\n            wallet.updateBalance(aETH, order.user, fees, false);\\r\\n            //Credit Bought tokens\\r\\n            wallet.updateBalance(order.tokenA, order.user, _amount, true);\\r\\n        } else {\\r\\n            uint256 amountToDeduct = tradingFees.amountToDeduct(\\r\\n                order.tokenA,\\r\\n                fees\\r\\n            );\\r\\n            //Credit Bought tokens after minusing fees\\r\\n            wallet.updateBalance(\\r\\n                order.tokenA,\\r\\n                order.user,\\r\\n                _amount.sub(amountToDeduct),\\r\\n                true\\r\\n            );\\r\\n        }\\r\\n\\r\\n        //Original Locked Funds unlocked\\r\\n        wallet.updateLockedFunds(\\r\\n            order.user,\\r\\n            order.tokenB,\\r\\n            (order.rate.mul(_amount)).div(decimals),\\r\\n            false\\r\\n        );\\r\\n\\r\\n        //buyer update\\r\\n        //Buyer balance deducted from what he paid\\r\\n        wallet.updateBalance(\\r\\n            order.tokenB,\\r\\n            order.user,\\r\\n            (_rate.mul(_amount)).div(decimals),\\r\\n            false\\r\\n        );\\r\\n\\r\\n        s_filledOrders[order.user][0].push(\\r\\n            _filledOrder(\\r\\n                order.id,\\r\\n                order.side,\\r\\n                order.user,\\r\\n                order.tokenA,\\r\\n                order.tokenB,\\r\\n                _amount,\\r\\n                _rate,\\r\\n                order.rate,\\r\\n                order.originalAmountA,\\r\\n                order.originalAmountB,\\r\\n                feesWaived,\\r\\n                fees\\r\\n            )\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function fillSellOrders(\\r\\n        _Order memory order,\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        bool feesWaived,\\r\\n        uint256 fees\\r\\n    ) internal {\\r\\n        if (feesWaived) {\\r\\n            //Deduct aETH\\r\\n            wallet.updateBalance(aETH, order.user, fees, false);\\r\\n            //Credit Earned tokens\\r\\n            wallet.updateBalance(\\r\\n                order.tokenB,\\r\\n                order.user,\\r\\n                (_rate.mul(_amount)).div(decimals),\\r\\n                true\\r\\n            );\\r\\n        } else {\\r\\n            uint256 amountToDeduct = tradingFees.amountToDeduct(\\r\\n                order.tokenB,\\r\\n                fees\\r\\n            );\\r\\n            //Credit Earned tokens after minusing fees\\r\\n            wallet.updateBalance(\\r\\n                order.tokenB,\\r\\n                order.user,\\r\\n                (_rate.mul(_amount)).div(decimals).sub(amountToDeduct),\\r\\n                true\\r\\n            );\\r\\n        }\\r\\n\\r\\n        wallet.updateLockedFunds(order.user, order.tokenA, _amount, false);\\r\\n        //seller update\\r\\n        wallet.updateBalance(order.tokenA, order.user, _amount, false);\\r\\n    }\\r\\n\\r\\n    function matchOrders(\\r\\n        address _token,\\r\\n        uint256 _id,\\r\\n        Side side\\r\\n    ) internal validOrder(_id, side, _token) validToken(_token) {\\r\\n        uint256 saleTokenAmt;\\r\\n\\r\\n        if (side == Side.BUY) {\\r\\n            //Retrieve sell order to match\\r\\n            _Order[] memory _sellOrder = s_orderBook[_token][1];\\r\\n            for (uint256 i = 0; i < _sellOrder.length; i++) {\\r\\n                //Retrieve buy order to be filled\\r\\n                (_Order memory buyOrderToFill, ) = getOrderFromArray(\\r\\n                    _token,\\r\\n                    uint8(side),\\r\\n                    _id\\r\\n                );\\r\\n                //sell order hit buyer's limit price & tokenB matches\\r\\n                if (\\r\\n                    _sellOrder[i].rate <= buyOrderToFill.rate &&\\r\\n                    buyOrderToFill.tokenB == _sellOrder[i].tokenB\\r\\n                ) {\\r\\n                    _Order memory sellOrder = _sellOrder[i];\\r\\n                    //if buyer's amount to buy > seller's amount to sell\\r\\n                    if (buyOrderToFill.amountA > sellOrder.amountA) {\\r\\n                        saleTokenAmt = sellOrder.amountA;\\r\\n                    }\\r\\n                    //if seller's amount to sell >= buyer's amount to buy\\r\\n                    else if (buyOrderToFill.amountA <= sellOrder.amountA) {\\r\\n                        saleTokenAmt = buyOrderToFill.amountA;\\r\\n                    }\\r\\n\\r\\n                    //Verify current balance\\r\\n                    require(\\r\\n                        wallet.balanceOf(\\r\\n                            buyOrderToFill.tokenB,\\r\\n                            buyOrderToFill.user\\r\\n                        ) >= (saleTokenAmt.mul(sellOrder.rate)).div(decimals),\\r\\n                        \\\"Insufficient Buyer Token Balance\\\"\\r\\n                    );\\r\\n                    require(\\r\\n                        wallet.balanceOf(_token, sellOrder.user) >=\\r\\n                            saleTokenAmt,\\r\\n                        \\\"Insufficient Seller Token Balance\\\"\\r\\n                    );\\r\\n\\r\\n                    //update orders\\r\\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\\r\\n                        sellOrder.rate,\\r\\n                        saleTokenAmt\\r\\n                    );\\r\\n                    fillOrder(Side.BUY, _id, _token, fillOrderValues);\\r\\n                    fillOrder(Side.SELL, sellOrder.id, _token, fillOrderValues);\\r\\n                }\\r\\n\\r\\n                bool orderExist = orderExists(_id, side, _token);\\r\\n                if (!orderExist) break;\\r\\n            }\\r\\n        } else if (side == Side.SELL) {\\r\\n            //Retrieve buy order to match\\r\\n            _Order[] memory _buyOrder = s_orderBook[_token][0];\\r\\n            for (uint256 i = 0; i < _buyOrder.length; i++) {\\r\\n                //Retrieve sell order to be filled\\r\\n                (_Order memory sellOrderToFill, ) = getOrderFromArray(\\r\\n                    _token,\\r\\n                    1,\\r\\n                    _id\\r\\n                );\\r\\n                //sell order hit buyer's limit price\\r\\n                if (\\r\\n                    _buyOrder[i].rate >= sellOrderToFill.rate &&\\r\\n                    _buyOrder[i].tokenB == sellOrderToFill.tokenB\\r\\n                ) {\\r\\n                    _Order memory order = _buyOrder[i];\\r\\n\\r\\n                    //if seller's amount to sell > buyer's amount to buy\\r\\n                    if (sellOrderToFill.amountA > order.amountA) {\\r\\n                        saleTokenAmt = order.amountA;\\r\\n                    }\\r\\n                    //if buyer's amount to buy > seller's amount to sell\\r\\n                    else if (sellOrderToFill.amountA <= order.amountA) {\\r\\n                        saleTokenAmt = sellOrderToFill.amountA;\\r\\n                    }\\r\\n                    //Verify current balance\\r\\n                    require(\\r\\n                        wallet.balanceOf(_token, sellOrderToFill.user) >=\\r\\n                            saleTokenAmt,\\r\\n                        \\\"Insufficient Seller Token Balance\\\"\\r\\n                    );\\r\\n                    require(\\r\\n                        wallet.balanceOf(order.tokenB, order.user) >=\\r\\n                            (saleTokenAmt.mul(order.rate)).div(decimals),\\r\\n                        \\\"Insufficient Buyer Token Balance\\\"\\r\\n                    );\\r\\n\\r\\n                    //update orders\\r\\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\\r\\n                        order.rate,\\r\\n                        saleTokenAmt\\r\\n                    );\\r\\n                    fillOrder(Side.SELL, _id, _token, fillOrderValues);\\r\\n                    fillOrder(Side.BUY, order.id, _token, fillOrderValues);\\r\\n                }\\r\\n                bool orderExist = orderExists(_id, side, _token);\\r\\n                if (!orderExist) break;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getOrderLength(\\r\\n        Side side,\\r\\n        address _token\\r\\n    ) public view returns (uint256) {\\r\\n        return s_orderBook[_token][uint256(side)].length;\\r\\n    }\\r\\n\\r\\n    // function getOrder(\\r\\n    //     address _token,\\r\\n    //     uint256 index,\\r\\n    //     Side side\\r\\n    // )\\r\\n    //     public\\r\\n    //     view\\r\\n    //     returns (\\r\\n    //         uint256, //id\\r\\n    //         uint256, //Side\\r\\n    //         address, //user\\r\\n    //         address, //tokenA\\r\\n    //         uint256, //amountA\\r\\n    //         address, //tokenB\\r\\n    //         uint256, //amountB\\r\\n    //         uint256, //rate -> TokenB/TokenA\\r\\n    //         uint256, //originalAmountA\\r\\n    //         uint256, //originalAmountB\\r\\n    //         bool //feesWaived enabled\\r\\n    //     )\\r\\n    // {\\r\\n    //     _Order memory order = s_orderBook[_token][uint256(side)][index];\\r\\n    //     return (\\r\\n    //         order.id,\\r\\n    //         uint256(order.side),\\r\\n    //         order.user,\\r\\n    //         order.tokenA,\\r\\n    //         order.amountA,\\r\\n    //         order.tokenB,\\r\\n    //         order.amountB,\\r\\n    //         order.rate,\\r\\n    //         order.originalAmountA,\\r\\n    //         order.originalAmountB,\\r\\n    //         order.waiveFees\\r\\n    //     );\\r\\n    // }\\r\\n\\r\\n    function getFilledOrderLength(\\r\\n        address _user,\\r\\n        Side side\\r\\n    ) public view returns (uint256) {\\r\\n        return s_filledOrders[_user][uint256(side)].length;\\r\\n    }\\r\\n\\r\\n    // function getFilledOrder(\\r\\n    //     address _user,\\r\\n    //     Side side,\\r\\n    //     uint256 index\\r\\n    // )\\r\\n    //     public\\r\\n    //     view\\r\\n    //     returns (\\r\\n    //         uint256, //id\\r\\n    //         uint256, //side\\r\\n    //         address, //user\\r\\n    //         address, //tokenA\\r\\n    //         address, //tokenB\\r\\n    //         uint256, //amountFilled\\r\\n    //         uint256, //fillRate\\r\\n    //         uint256, //originalRate\\r\\n    //         uint256, //originalAmountA\\r\\n    //         uint256, //originalAmountB\\r\\n    //         bool, //feesWaived\\r\\n    //         uint256 //feesPaid\\r\\n    //     )\\r\\n    // {\\r\\n    //     _filledOrder memory filledOrder = s_filledOrders[_user][uint256(side)][\\r\\n    //         index\\r\\n    //     ];\\r\\n    //     return (\\r\\n    //         filledOrder.id,\\r\\n    //         uint256(filledOrder.side),\\r\\n    //         filledOrder.user,\\r\\n    //         filledOrder.tokenA,\\r\\n    //         filledOrder.tokenB,\\r\\n    //         filledOrder.amountFilled,\\r\\n    //         filledOrder.fillRate,\\r\\n    //         filledOrder.originalRate,\\r\\n    //         filledOrder.originalAmountA,\\r\\n    //         filledOrder.originalAmountB,\\r\\n    //         filledOrder.feesWaived,\\r\\n    //         filledOrder.feesPaid\\r\\n    //     );\\r\\n    // }\\r\\n\\r\\n    function getOrderFromArray(\\r\\n        address _token,\\r\\n        uint256 side,\\r\\n        uint256 _id\\r\\n    ) public view returns (_Order memory, uint256) {\\r\\n        uint256 i = 0;\\r\\n        _Order[] memory _order = s_orderBook[_token][side];\\r\\n        _Order memory order;\\r\\n        for (i; i < _order.length; i++) {\\r\\n            if (_order[i].id == _id) {\\r\\n                order = _order[i];\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        return (order, i);\\r\\n    }\\r\\n\\r\\n    function orderExists(\\r\\n        uint256 _id,\\r\\n        Side side,\\r\\n        address _token\\r\\n    ) public view returns (bool) {\\r\\n        _Order[] memory orders = s_orderBook[_token][uint256(side)];\\r\\n\\r\\n        for (uint256 i = 0; i < orders.length; i++) {\\r\\n            if (orders[i].id == _id) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function addToken(address _token, uint256 _decimals) public onlyOwner {\\r\\n        require(!isVerifiedToken(_token), \\\"Token already verified\\\");\\r\\n        tokenList.push(_tokenInfo(_token, _decimals));\\r\\n    }\\r\\n\\r\\n    function isVerifiedToken(address _token) public view returns (bool) {\\r\\n        //uint256 size = tokenList.length;\\r\\n\\r\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\r\\n            if (tokenList[i].add == _token) return true;\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function getTokenInfo(address _token) public view returns (uint256) {\\r\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\r\\n            if (tokenList[i].add == _token) {\\r\\n                return tokenList[i].decimals;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    modifier validOrder(\\r\\n        uint256 _id,\\r\\n        Side side,\\r\\n        address _token\\r\\n    ) {\\r\\n        require(orderExists(_id, side, _token), \\\"Invalid Order ID\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier validToken(address _token) {\\r\\n        require(isVerifiedToken(_token), \\\"Token unavailable in DEX\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x76eb2771baa68f352d66f561ca21444dcf2b09426e9ef5fe53fb48b2b55db119\",\"license\":\"MIT\"},\"contracts/PriceChecker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract PriceChecker is Ownable {\\r\\n    // We could make this public, but then we'd have to deploy it\\r\\n    _priceFeed[] public priceFeeds;\\r\\n\\r\\n    struct _priceFeed {\\r\\n        string name;\\r\\n        address token;\\r\\n        AggregatorV3Interface priceFeed;\\r\\n    }\\r\\n\\r\\n    //only using PriceFeeds pegged to USD\\r\\n    function addPriceFeed(\\r\\n        string memory _name,\\r\\n        address _token,\\r\\n        address _address\\r\\n    ) external onlyOwner {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n        bool isAdded = false;\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (\\r\\n                keccak256(abi.encodePacked(_name)) ==\\r\\n                keccak256(abi.encodePacked(pricefeed[i].name))\\r\\n            ) {\\r\\n                isAdded = true;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        require(!isAdded, \\\"Price Feed already added\\\");\\r\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(_address);\\r\\n        priceFeeds.push(_priceFeed(_name, _token, priceFeed));\\r\\n    }\\r\\n\\r\\n    function getPriceFeed(\\r\\n        address _token\\r\\n    ) internal view returns (AggregatorV3Interface priceFeed) {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (_token == pricefeed[i].token) {\\r\\n                return pricefeed[i].priceFeed;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getPrice(address _address) external view returns (uint256) {\\r\\n        // Goerli ETH / USD Address\\r\\n        // https://docs.chain.link/docs/ethereum-addresses/\\r\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\r\\n        //     0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\r\\n        // );\\r\\n        AggregatorV3Interface priceFeed = getPriceFeed(_address);\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        // ETH/USD rate in 18 digit\\r\\n        return uint256(answer);\\r\\n        // or (Both will do the same thing)\\r\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xff808af17a6506dedcd342e9c444725ef89b81188c0bc52ff40e148fb84f157d\",\"license\":\"MIT\"},\"contracts/TradingFees.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./PriceChecker.sol\\\";\\r\\nimport \\\"./Wallet.sol\\\";\\r\\nimport \\\"./Exchange.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract TradingFees is Ownable {\\r\\n    //This wallet holds the trading fees collected\\r\\n    //When trading, have an option toggle to waive trading fees or not using deposited aETH\\r\\n    //Users have to first deposit aETH tokens into the Exchange contract to waive, aETH tokens are not for trading\\r\\n    //When a trade order goes through, trading fees of the trade fulfilled  = trade amount x trade price x 0.01,\\r\\n    //contract checks how much aETH is deposited and what is the value of aETH, if sufficient to waive fees fully, deduct balance in deposit\\r\\n    //and waive trading fees\\r\\n\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n\\r\\n    uint256 decimals = 10 ** 18;\\r\\n    address public ethToken = address(0);\\r\\n    address public aETH = address(0x22404B0e2a7067068AcdaDd8f9D586F834cCe2c5);\\r\\n    PriceChecker priceFeed;\\r\\n    Wallet wallet;\\r\\n    Exchange exchange;\\r\\n\\r\\n    function calculateFees(\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        address _refToken\\r\\n    ) external view returns (uint256) {\\r\\n        //Calculated based on TokenB price, require actual price in 18dp\\r\\n        //trading fees is 0.1% of trade = 0.001\\r\\n        //moving up 18dp is 0.001 x 10**18 = 10**14\\r\\n        //have to fetch tokenPrice from PriceFeed\\r\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 18decimals\\r\\n        uint256 value = (((_amount.mul(_rate)).div(decimals)).mul(priceOfToken))\\r\\n            .div(decimals);\\r\\n        uint256 fees = value.div(10 ** 4);\\r\\n\\r\\n        //Convert to aETH value\\r\\n        uint256 aETH_Price = priceFeed.getPrice(ethToken);\\r\\n\\r\\n        uint256 amountOfETH = (fees.mul(decimals)).div(aETH_Price);\\r\\n\\r\\n        return amountOfETH; //still in 18decimals\\r\\n    }\\r\\n\\r\\n    //Note fees in amountOfETH\\r\\n    function amountToDeduct(\\r\\n        address _refToken,\\r\\n        uint256 fees\\r\\n    ) external view returns (uint256) {\\r\\n        uint256 aETH_Price = priceFeed.getPrice(ethToken);\\r\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 18decimals\\r\\n        uint256 value = aETH_Price.mul(fees);\\r\\n        return value.div(priceOfToken);\\r\\n    }\\r\\n\\r\\n    function checkSufficientaETH(\\r\\n        uint256 _amount,\\r\\n        address _user\\r\\n    ) external view returns (bool) {\\r\\n        uint256 balance = wallet.s_tokens(aETH, _user);\\r\\n\\r\\n        return balance >= _amount;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xb3efc359fa2ba5b57caccad506e01ed279230e74eeb0bc5e1c8eaa2d2cd67340\",\"license\":\"MIT\"},\"contracts/Wallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./interface/IERC20.sol\\\";\\r\\nimport \\\"./Exchange.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Wallet is Ownable {\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n\\r\\n    address public immutable Owner;\\r\\n\\r\\n    //For prevention of reentrancy\\r\\n    bool private locked;\\r\\n\\r\\n    address public ethToken = address(0);\\r\\n    address public aETH = address(0x22404B0e2a7067068AcdaDd8f9D586F834cCe2c5);\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) public s_tokens; //tokenAdress -> msg.sender -> tokenAmt\\r\\n    mapping(address => mapping(address => uint256)) public lockedFunds;\\r\\n\\r\\n    Exchange exchange;\\r\\n    IERC20 token;\\r\\n\\r\\n    event Deposit(address token, address user, uint256 amount, uint256 balance);\\r\\n\\r\\n    /// @notice Event when amount withdrawn exchange\\r\\n    event Withdraw(\\r\\n        address token,\\r\\n        address user,\\r\\n        uint256 amount,\\r\\n        uint256 balance\\r\\n    );\\r\\n\\r\\n    constructor() {\\r\\n        Owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    function depositETH() external payable {\\r\\n        updateBalance(ethToken, msg.sender, msg.value, true);\\r\\n\\r\\n        emit Deposit(\\r\\n            ethToken,\\r\\n            msg.sender,\\r\\n            msg.value,\\r\\n            balanceOf(ethToken, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdrawETH(uint256 _amount) external {\\r\\n        require(\\r\\n            balanceOf(ethToken, msg.sender).sub(\\r\\n                getlockedFunds(msg.sender, ethToken)\\r\\n            ) >= _amount,\\r\\n            \\\"Insufficient balance ETH to withdraw\\\"\\r\\n        );\\r\\n        require(!locked, \\\"Reentrant call detected!\\\");\\r\\n        locked = true;\\r\\n        updateBalance(ethToken, msg.sender, _amount, false);\\r\\n        locked = false;\\r\\n        (bool success, ) = msg.sender.call{value: _amount}(\\\"\\\");\\r\\n        require(success, \\\"failed to send amount\\\");\\r\\n\\r\\n        emit Withdraw(\\r\\n            ethToken,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(ethToken, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    //from and transferFrom is from ERC20 contract\\r\\n    //_token should be an ERC20 token\\r\\n    function depositToken(\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        uint256 _decimals\\r\\n    ) external {\\r\\n        require(_token != ethToken);\\r\\n        require(\\r\\n            exchange.isVerifiedToken(_token),\\r\\n            \\\"Token not verified on Exchange\\\"\\r\\n        );\\r\\n        //need to add a check to prove that it is an ERC20 token\\r\\n        token = IERC20(_token);\\r\\n\\r\\n        //Requires approval first\\r\\n        require(\\r\\n            token.transferFrom(msg.sender, address(this), _amount),\\r\\n            \\\"No Approval yet\\\"\\r\\n        );\\r\\n        uint256 decimals = 18;\\r\\n        if (_decimals == 18) {\\r\\n            updateBalance(_token, msg.sender, _amount, true);\\r\\n        } else\\r\\n            updateBalance(\\r\\n                _token,\\r\\n                msg.sender,\\r\\n                _amount.mul(10 ** decimals.sub(_decimals)),\\r\\n                true\\r\\n            );\\r\\n\\r\\n        emit Deposit(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(_token, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdrawToken(\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        uint256 _decimals\\r\\n    ) external {\\r\\n        require(_token != ethToken);\\r\\n        require(\\r\\n            exchange.isVerifiedToken(_token),\\r\\n            \\\"Token not verified on Exchange\\\"\\r\\n        );\\r\\n\\r\\n        require(\\r\\n            balanceOf(_token, msg.sender).sub(\\r\\n                getlockedFunds(msg.sender, _token)\\r\\n            ) >= _amount,\\r\\n            \\\"Insufficient Tokens to withdraw\\\"\\r\\n        );\\r\\n        require(!locked, \\\"Reentrant call detected!\\\");\\r\\n        locked = true;\\r\\n\\r\\n        token = IERC20(_token);\\r\\n        uint256 decimals = 18;\\r\\n        if (_decimals == 18) {\\r\\n            updateBalance(_token, msg.sender, _amount, false);\\r\\n            require(token.transfer(msg.sender, _amount));\\r\\n        } else {\\r\\n            updateBalance(\\r\\n                _token,\\r\\n                msg.sender,\\r\\n                _amount.mul(10 ** decimals.sub(_decimals)),\\r\\n                false\\r\\n            );\\r\\n            require(\\r\\n                token.transfer(\\r\\n                    msg.sender,\\r\\n                    _amount.div(10 ** decimals.sub(_decimals))\\r\\n                )\\r\\n            );\\r\\n        }\\r\\n\\r\\n        locked = false;\\r\\n        emit Withdraw(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(_token, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getlockedFunds(\\r\\n        address _user,\\r\\n        address _token\\r\\n    ) public view returns (uint256) {\\r\\n        return lockedFunds[_user][_token];\\r\\n    }\\r\\n\\r\\n    function updateLockedFunds(\\r\\n        address _user,\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) public isAuthorised {\\r\\n        if (isAdd) {\\r\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].add(\\r\\n                _amount\\r\\n            );\\r\\n        } else if (!isAdd) {\\r\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].sub(\\r\\n                _amount\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //balance of specific tokens in the dex owned by specific user\\r\\n    function balanceOf(\\r\\n        address _token,\\r\\n        address _user\\r\\n    ) public view returns (uint256) {\\r\\n        return s_tokens[_token][_user];\\r\\n    }\\r\\n\\r\\n    function updateBalance(\\r\\n        address _token,\\r\\n        address _user,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) public isAuthorised {\\r\\n        if (isAdd) {\\r\\n            s_tokens[_token][_user] = s_tokens[_token][_user].add(_amount);\\r\\n        } else if (!isAdd) {\\r\\n            s_tokens[_token][_user] = s_tokens[_token][_user].sub(_amount);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function updateExchangeAddress(\\r\\n        address _exchangeAddress\\r\\n    ) external onlyOwner {\\r\\n        exchange = Exchange(_exchangeAddress);\\r\\n    }\\r\\n\\r\\n    modifier isAuthorised() {\\r\\n        require(\\r\\n            msg.sender == address(this) || msg.sender == address(exchange),\\r\\n            \\\"Unauthorised Function Call\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x537d0dfa8a4e93a6f7ec1c0e3aed058dd72346e6bc263044b06791a6dba90d50\",\"license\":\"MIT\"},\"contracts/interface/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IERC20 {\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256 remaining);\\r\\n\\r\\n    function approve(\\r\\n        address spender,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function balanceOf(address owner) external view returns (uint256 balance);\\r\\n\\r\\n    function decimals() external view returns (uint8 decimalPlaces);\\r\\n\\r\\n    function decreaseApproval(\\r\\n        address spender,\\r\\n        uint256 subtractedValue\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function increaseApproval(\\r\\n        address spender,\\r\\n        uint256 addedValue\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function name() external view returns (string memory tokenName);\\r\\n\\r\\n    function symbol() external view returns (string memory tokenSymbol);\\r\\n\\r\\n    function totalSupply() external view returns (uint256 totalTokensIssued);\\r\\n\\r\\n    function transfer(\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n}\\r\\n\",\"keccak256\":\"0xef48d46afc4efefcd6d7f1799f25aee5d8fcd588e2aaa80a84af726128194326\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":405,"contract":"contracts/TradingFees.sol:TradingFees","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":2693,"contract":"contracts/TradingFees.sol:TradingFees","label":"decimals","offset":0,"slot":"1","type":"t_uint256"},{"astId":2699,"contract":"contracts/TradingFees.sol:TradingFees","label":"ethToken","offset":0,"slot":"2","type":"t_address"},{"astId":2705,"contract":"contracts/TradingFees.sol:TradingFees","label":"aETH","offset":0,"slot":"3","type":"t_address"},{"astId":2708,"contract":"contracts/TradingFees.sol:TradingFees","label":"priceFeed","offset":0,"slot":"4","type":"t_contract(PriceChecker)2675"},{"astId":2711,"contract":"contracts/TradingFees.sol:TradingFees","label":"wallet","offset":0,"slot":"5","type":"t_contract(Wallet)3410"},{"astId":2714,"contract":"contracts/TradingFees.sol:TradingFees","label":"exchange","offset":0,"slot":"6","type":"t_contract(Exchange)2506"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(Exchange)2506":{"encoding":"inplace","label":"contract Exchange","numberOfBytes":"20"},"t_contract(PriceChecker)2675":{"encoding":"inplace","label":"contract PriceChecker","numberOfBytes":"20"},"t_contract(Wallet)3410":{"encoding":"inplace","label":"contract Wallet","numberOfBytes":"20"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Wallet.sol":{"Wallet":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"balance","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"balance","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"Owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"aETH","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_user","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"depositETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_decimals","type":"uint256"}],"name":"depositToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"ethToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"address","name":"_token","type":"address"}],"name":"getlockedFunds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"lockedFunds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"s_tokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_user","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bool","name":"isAdd","type":"bool"}],"name":"updateBalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_exchangeAddress","type":"address"}],"name":"updateExchangeAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bool","name":"isAdd","type":"bool"}],"name":"updateLockedFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdrawETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_decimals","type":"uint256"}],"name":"withdrawToken","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2916":{"entryPoint":null,"id":2916,"parameterSlots":0,"returnSlots":0},"@_421":{"entryPoint":null,"id":421,"parameterSlots":0,"returnSlots":0},"@_msgSender_522":{"entryPoint":256,"id":522,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_509":{"entryPoint":264,"id":509,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x22404B0E2A7067068ACDADD8F9D586F834CCE2C5 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0xA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC4 PUSH2 0xB9 PUSH2 0x100 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x108 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP PUSH2 0x1CC JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x247A PUSH3 0x1EB PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x1040 ADD MSTORE PUSH2 0x247A PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x96C0EC55 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xCD5D767C GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xCD5D767C EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xF14210A6 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xF6326FB3 EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0xF7888AEC EQ PUSH2 0x3A6 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x96C0EC55 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x99C6D2DE EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xB4A99A4E EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xC5AB4602 EQ PUSH2 0x2E4 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x7BF1A627 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x92F63D2E EQ PUSH2 0x23C JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x31415A65 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x46A8F820 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x4BDDE1CF EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x4FC121DB EQ PUSH2 0x192 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x19D8 JUMP JUMPDEST PUSH2 0x3E3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0x42F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0x72B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0x750 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x7D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FB PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x811 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x251 PUSH2 0x83A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x273 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x1AAC JUMP JUMPDEST PUSH2 0x860 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1AAC JUMP JUMPDEST PUSH2 0xD1D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x103E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0x1062 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x334 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0x135E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x1B2C JUMP JUMPDEST PUSH2 0x1383 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x395 SWAP2 SWAP1 PUSH2 0x19D8 JUMP JUMPDEST PUSH2 0x161C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A4 PUSH2 0x16A0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0x175B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EB PUSH2 0x17E2 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x4B6 JUMPI POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x4F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EC SWAP1 PUSH2 0x1E8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x60F JUMPI PUSH2 0x58A DUP3 PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1860 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x725 JUMP JUMPDEST DUP1 PUSH2 0x724 JUMPI PUSH2 0x6A3 DUP3 PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1876 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7DF PUSH2 0x17E2 JUMP JUMPDEST PUSH2 0x7E9 PUSH1 0x0 PUSH2 0x188C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1027B219 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x916 SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x92E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x942 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x966 SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH2 0x9A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99C SWAP1 PUSH2 0x1E2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x9CB PUSH2 0x9B3 CALLER DUP7 PUSH2 0x750 JUMP JUMPDEST PUSH2 0x9BD DUP7 CALLER PUSH2 0x175B JUMP JUMPDEST PUSH2 0x1876 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0xA0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA03 SWAP1 PUSH2 0x1E6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA53 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x12 SWAP1 POP PUSH1 0x12 DUP3 EQ ISZERO PUSH2 0xB91 JUMPI PUSH2 0xAD4 DUP5 CALLER DUP6 PUSH1 0x0 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB31 SWAP3 SWAP2 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB5F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB83 SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH2 0xB8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCB7 JUMP JUMPDEST PUSH2 0xBCE DUP5 CALLER PUSH2 0xBC7 PUSH2 0xBAC DUP7 DUP7 PUSH2 0x1876 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0xBB8 SWAP2 SWAP1 PUSH2 0x1FDB JUMP JUMPDEST DUP8 PUSH2 0x1950 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH2 0xC3E PUSH2 0xC23 DUP7 DUP7 PUSH2 0x1876 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0xC2F SWAP2 SWAP1 PUSH2 0x1FDB JUMP JUMPDEST DUP8 PUSH2 0x1966 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC5B SWAP3 SWAP2 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC89 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCAD SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH2 0xCB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xF341246ADAAC6F497BC2A656F546AB9E182111D630394F0C57C710A59A2CB567 DUP5 CALLER DUP6 PUSH2 0xCFF DUP9 CALLER PUSH2 0x175B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD0F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1027B219 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD3 SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDFF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE23 SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH2 0xE62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE59 SWAP1 PUSH2 0x1E2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF02 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D05 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF30 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF54 SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH2 0xF93 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8A SWAP1 PUSH2 0x1EAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP PUSH1 0x12 DUP3 EQ ISZERO PUSH2 0xFB4 JUMPI PUSH2 0xFAF DUP5 CALLER DUP6 PUSH1 0x1 PUSH2 0x1062 JUMP JUMPDEST PUSH2 0xFF2 JUMP JUMPDEST PUSH2 0xFF1 DUP5 CALLER PUSH2 0xFEA PUSH2 0xFCF DUP7 DUP7 PUSH2 0x1876 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0xFDB SWAP2 SWAP1 PUSH2 0x1FDB JUMP JUMPDEST DUP8 PUSH2 0x1950 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1062 JUMP JUMPDEST JUMPDEST PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP5 CALLER DUP6 PUSH2 0x1020 DUP9 CALLER PUSH2 0x175B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1030 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x10E9 JUMPI POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x1128 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111F SWAP1 PUSH2 0x1E8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x1242 JUMPI PUSH2 0x11BD DUP3 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1860 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1358 JUMP JUMPDEST DUP1 PUSH2 0x1357 JUMPI PUSH2 0x12D6 DUP3 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1876 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH2 0x13ED PUSH2 0x13B3 CALLER PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x750 JUMP JUMPDEST PUSH2 0x13DF PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x175B JUMP JUMPDEST PUSH2 0x1876 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x142E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1425 SWAP1 PUSH2 0x1E0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x147E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1475 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x14C8 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH1 0x0 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1508 SWAP1 PUSH2 0x1CD5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1545 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x154A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x158E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1585 SWAP1 PUSH2 0x1DEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xF341246ADAAC6F497BC2A656F546AB9E182111D630394F0C57C710A59A2CB567 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP5 PUSH2 0x1600 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x175B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1610 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x1624 PUSH2 0x17E2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1694 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x168B SWAP1 PUSH2 0x1DCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x169D DUP2 PUSH2 0x188C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x16CF PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER CALLVALUE PUSH1 0x1 PUSH2 0x1062 JUMP JUMPDEST PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER CALLVALUE PUSH2 0x1741 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x175B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1751 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17EA PUSH2 0x197C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1808 PUSH2 0x811 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x185E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1855 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x186E SWAP2 SWAP1 PUSH2 0x1F01 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1884 SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x195E SWAP2 SWAP1 PUSH2 0x20F9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1974 SWAP2 SWAP1 PUSH2 0x1F57 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1993 DUP2 PUSH2 0x23FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19A8 DUP2 PUSH2 0x2416 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x19BD DUP2 PUSH2 0x2416 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19D2 DUP2 PUSH2 0x242D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19EE JUMPI PUSH2 0x19ED PUSH2 0x222D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19FC DUP5 DUP3 DUP6 ADD PUSH2 0x1984 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A1C JUMPI PUSH2 0x1A1B PUSH2 0x222D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A2A DUP6 DUP3 DUP7 ADD PUSH2 0x1984 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A3B DUP6 DUP3 DUP7 ADD PUSH2 0x1984 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1A5F JUMPI PUSH2 0x1A5E PUSH2 0x222D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A6D DUP8 DUP3 DUP9 ADD PUSH2 0x1984 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1A7E DUP8 DUP3 DUP9 ADD PUSH2 0x1984 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1A8F DUP8 DUP3 DUP9 ADD PUSH2 0x19C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1AA0 DUP8 DUP3 DUP9 ADD PUSH2 0x1999 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AC5 JUMPI PUSH2 0x1AC4 PUSH2 0x222D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AD3 DUP7 DUP3 DUP8 ADD PUSH2 0x1984 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1AE4 DUP7 DUP3 DUP8 ADD PUSH2 0x19C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1AF5 DUP7 DUP3 DUP8 ADD PUSH2 0x19C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B15 JUMPI PUSH2 0x1B14 PUSH2 0x222D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B23 DUP5 DUP3 DUP6 ADD PUSH2 0x19AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B42 JUMPI PUSH2 0x1B41 PUSH2 0x222D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B50 DUP5 DUP3 DUP6 ADD PUSH2 0x19C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B62 DUP2 PUSH2 0x2187 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B75 PUSH1 0x18 DUP4 PUSH2 0x1EF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B80 DUP3 PUSH2 0x223F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B98 PUSH1 0x26 DUP4 PUSH2 0x1EF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BA3 DUP3 PUSH2 0x2268 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BBB PUSH1 0x15 DUP4 PUSH2 0x1EF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC6 DUP3 PUSH2 0x22B7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BDE PUSH1 0x24 DUP4 PUSH2 0x1EF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE9 DUP3 PUSH2 0x22E0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C01 PUSH1 0x1E DUP4 PUSH2 0x1EF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C0C DUP3 PUSH2 0x232F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C24 PUSH1 0x20 DUP4 PUSH2 0x1EF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C2F DUP3 PUSH2 0x2358 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C47 PUSH1 0x1F DUP4 PUSH2 0x1EF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C52 DUP3 PUSH2 0x2381 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C6A PUSH1 0x1A DUP4 PUSH2 0x1EF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C75 DUP3 PUSH2 0x23AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C8D PUSH1 0x0 DUP4 PUSH2 0x1EE5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C98 DUP3 PUSH2 0x23D3 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB0 PUSH1 0xF DUP4 PUSH2 0x1EF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CBB DUP3 PUSH2 0x23D6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CCF DUP2 PUSH2 0x21C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE0 DUP3 PUSH2 0x1C80 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CFF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D1A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1B59 JUMP JUMPDEST PUSH2 0x1D27 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B59 JUMP JUMPDEST PUSH2 0x1D34 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CC6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1D51 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1B59 JUMP JUMPDEST PUSH2 0x1D5E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1B59 JUMP JUMPDEST PUSH2 0x1D6B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1CC6 JUMP JUMPDEST PUSH2 0x1D78 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1CC6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D96 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1B59 JUMP JUMPDEST PUSH2 0x1DA3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CC6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DC3 DUP2 PUSH2 0x1B68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DE3 DUP2 PUSH2 0x1B8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E03 DUP2 PUSH2 0x1BAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E23 DUP2 PUSH2 0x1BD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E43 DUP2 PUSH2 0x1BF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E63 DUP2 PUSH2 0x1C17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E83 DUP2 PUSH2 0x1C3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EA3 DUP2 PUSH2 0x1C5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EC3 DUP2 PUSH2 0x1CA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EDF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F0C DUP3 PUSH2 0x21C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F17 DUP4 PUSH2 0x21C5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1F4C JUMPI PUSH2 0x1F4B PUSH2 0x21CF JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F62 DUP3 PUSH2 0x21C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F6D DUP4 PUSH2 0x21C5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F7D JUMPI PUSH2 0x1F7C PUSH2 0x21FE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1FD2 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1FAE JUMPI PUSH2 0x1FAD PUSH2 0x21CF JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1FBD JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1FCB DUP6 PUSH2 0x2232 JUMP JUMPDEST SWAP5 POP PUSH2 0x1F92 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE6 DUP3 PUSH2 0x21C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF1 DUP4 PUSH2 0x21C5 JUMP JUMPDEST SWAP3 POP PUSH2 0x201E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x2026 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2036 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x20F2 JUMP JUMPDEST DUP2 PUSH2 0x2044 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x20F2 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x205A JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2064 JUMPI PUSH2 0x2093 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x20F2 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2076 JUMPI PUSH2 0x2075 PUSH2 0x21CF JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x208D JUMPI PUSH2 0x208C PUSH2 0x21CF JUMP JUMPDEST JUMPDEST POP PUSH2 0x20F2 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x20C8 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x20C3 JUMPI PUSH2 0x20C2 PUSH2 0x21CF JUMP JUMPDEST JUMPDEST PUSH2 0x20F2 JUMP JUMPDEST PUSH2 0x20D5 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1F88 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x20EC JUMPI PUSH2 0x20EB PUSH2 0x21CF JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2104 DUP3 PUSH2 0x21C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x210F DUP4 PUSH2 0x21C5 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2148 JUMPI PUSH2 0x2147 PUSH2 0x21CF JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x215E DUP3 PUSH2 0x21C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2169 DUP4 PUSH2 0x21C5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x217C JUMPI PUSH2 0x217B PUSH2 0x21CF JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2192 DUP3 PUSH2 0x21A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E742063616C6C206465746563746564210000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6661696C656420746F2073656E6420616D6F756E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E63652045544820746F2077697468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472617700000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E206E6F74207665726966696564206F6E2045786368616E67650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420546F6B656E7320746F20776974686472617700 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x556E617574686F72697365642046756E6374696F6E2043616C6C000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x4E6F20417070726F76616C207965740000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2408 DUP2 PUSH2 0x2187 JUMP JUMPDEST DUP2 EQ PUSH2 0x2413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x241F DUP2 PUSH2 0x2199 JUMP JUMPDEST DUP2 EQ PUSH2 0x242A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2436 DUP2 PUSH2 0x21C5 JUMP JUMPDEST DUP2 EQ PUSH2 0x2441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xC1 GAS SHL CALLDATALOAD 0x1E INVALID 0xD5 PUSH16 0x822224CA7706699F8FD94C2713A531EB SWAP9 MSIZE 0xD 0xDB PUSH21 0x152064736F6C634300080700330000000000000000 ","sourceMap":"388:5960:8:-:0;;;631:1;597:36;;;;;;;;;;;;;;;;;;;;670:42;640:73;;;;;;;;;;;;;;;;;;;;1218:51;;;;;;;;;;936:32:2;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1251:10:8;1243:18;;;;;;;;;;;;388:5960;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2433:187:2:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;388:5960:8:-;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@Owner_2854":{"entryPoint":4158,"id":2854,"parameterSlots":0,"returnSlots":0},"@_checkOwner_452":{"entryPoint":6114,"id":452,"parameterSlots":0,"returnSlots":0},"@_msgSender_522":{"entryPoint":6524,"id":522,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_509":{"entryPoint":6284,"id":509,"parameterSlots":1,"returnSlots":0},"@aETH_2868":{"entryPoint":2106,"id":2868,"parameterSlots":0,"returnSlots":0},"@add_708":{"entryPoint":6240,"id":708,"parameterSlots":2,"returnSlots":1},"@balanceOf_3321":{"entryPoint":5979,"id":3321,"parameterSlots":2,"returnSlots":1},"@depositETH_2942":{"entryPoint":5792,"id":2942,"parameterSlots":0,"returnSlots":0},"@depositToken_3104":{"entryPoint":3357,"id":3104,"parameterSlots":3,"returnSlots":0},"@div_753":{"entryPoint":6502,"id":753,"parameterSlots":2,"returnSlots":1},"@ethToken_2862":{"entryPoint":2027,"id":2862,"parameterSlots":0,"returnSlots":0},"@getlockedFunds_3254":{"entryPoint":1872,"id":3254,"parameterSlots":2,"returnSlots":1},"@lockedFunds_2880":{"entryPoint":1835,"id":2880,"parameterSlots":0,"returnSlots":0},"@mul_738":{"entryPoint":6480,"id":738,"parameterSlots":2,"returnSlots":1},"@owner_438":{"entryPoint":2065,"id":438,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_466":{"entryPoint":2007,"id":466,"parameterSlots":0,"returnSlots":0},"@s_tokens_2874":{"entryPoint":4958,"id":2874,"parameterSlots":0,"returnSlots":0},"@sub_723":{"entryPoint":6262,"id":723,"parameterSlots":2,"returnSlots":1},"@transferOwnership_489":{"entryPoint":5660,"id":489,"parameterSlots":1,"returnSlots":0},"@updateBalance_3372":{"entryPoint":4194,"id":3372,"parameterSlots":4,"returnSlots":0},"@updateExchangeAddress_3386":{"entryPoint":995,"id":3386,"parameterSlots":1,"returnSlots":0},"@updateLockedFunds_3305":{"entryPoint":1071,"id":3305,"parameterSlots":4,"returnSlots":0},"@withdrawETH_3015":{"entryPoint":4995,"id":3015,"parameterSlots":1,"returnSlots":0},"@withdrawToken_3238":{"entryPoint":2144,"id":3238,"parameterSlots":3,"returnSlots":0},"abi_decode_t_address":{"entryPoint":6532,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":6553,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":6574,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6595,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6616,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6661,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256t_bool":{"entryPoint":6725,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":6828,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":6911,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6956,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":7001,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210_to_t_string_memory_ptr_fromStack":{"entryPoint":7016,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":7051,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4_to_t_string_memory_ptr_fromStack":{"entryPoint":7086,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4_to_t_string_memory_ptr_fromStack":{"entryPoint":7121,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a_to_t_string_memory_ptr_fromStack":{"entryPoint":7156,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":7191,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9_to_t_string_memory_ptr_fromStack":{"entryPoint":7226,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1_to_t_string_memory_ptr_fromStack":{"entryPoint":7261,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7296,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba_to_t_string_memory_ptr_fromStack":{"entryPoint":7331,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7366,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7381,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7402,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":7429,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":7484,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":7553,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7594,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7626,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7658,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7690,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7722,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7754,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7786,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7818,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7850,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7882,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7909,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7920,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7937,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":8023,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":8072,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":8155,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":8230,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":8441,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":8531,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":8583,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":8601,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":8613,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":8645,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":8655,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":8702,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":8749,"id":null,"parameterSlots":0,"returnSlots":0},"shift_right_1_unsigned":{"entryPoint":8754,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210":{"entryPoint":8767,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":8808,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4":{"entryPoint":8887,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4":{"entryPoint":8928,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a":{"entryPoint":9007,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":9048,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9":{"entryPoint":9089,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1":{"entryPoint":9130,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":9171,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba":{"entryPoint":9174,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":9215,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":9238,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":9261,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:20532:12","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:12","statements":[{"nodeType":"YulAssignment","src":"69:29:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:12"},"nodeType":"YulFunctionCall","src":"78:20:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:12"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:12"},"nodeType":"YulFunctionCall","src":"107:33:12"},"nodeType":"YulExpressionStatement","src":"107:33:12"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:12","type":""}],"src":"7:139:12"},{"body":{"nodeType":"YulBlock","src":"201:84:12","statements":[{"nodeType":"YulAssignment","src":"211:29:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"233:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"220:12:12"},"nodeType":"YulFunctionCall","src":"220:20:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"211:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"273:5:12"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"249:23:12"},"nodeType":"YulFunctionCall","src":"249:30:12"},"nodeType":"YulExpressionStatement","src":"249:30:12"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"179:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"187:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"195:5:12","type":""}],"src":"152:133:12"},{"body":{"nodeType":"YulBlock","src":"351:77:12","statements":[{"nodeType":"YulAssignment","src":"361:22:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"376:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"370:5:12"},"nodeType":"YulFunctionCall","src":"370:13:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"361:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"416:5:12"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"392:23:12"},"nodeType":"YulFunctionCall","src":"392:30:12"},"nodeType":"YulExpressionStatement","src":"392:30:12"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"329:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"337:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"345:5:12","type":""}],"src":"291:137:12"},{"body":{"nodeType":"YulBlock","src":"486:87:12","statements":[{"nodeType":"YulAssignment","src":"496:29:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"518:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"505:12:12"},"nodeType":"YulFunctionCall","src":"505:20:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"496:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"561:5:12"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"534:26:12"},"nodeType":"YulFunctionCall","src":"534:33:12"},"nodeType":"YulExpressionStatement","src":"534:33:12"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"464:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"472:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"480:5:12","type":""}],"src":"434:139:12"},{"body":{"nodeType":"YulBlock","src":"645:263:12","statements":[{"body":{"nodeType":"YulBlock","src":"691:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"693:77:12"},"nodeType":"YulFunctionCall","src":"693:79:12"},"nodeType":"YulExpressionStatement","src":"693:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"666:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"675:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"662:3:12"},"nodeType":"YulFunctionCall","src":"662:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"687:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"658:3:12"},"nodeType":"YulFunctionCall","src":"658:32:12"},"nodeType":"YulIf","src":"655:119:12"},{"nodeType":"YulBlock","src":"784:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"799:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"813:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"803:6:12","type":""}]},{"nodeType":"YulAssignment","src":"828:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"863:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"874:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"859:3:12"},"nodeType":"YulFunctionCall","src":"859:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"883:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"838:20:12"},"nodeType":"YulFunctionCall","src":"838:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"828:6:12"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"615:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"626:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"638:6:12","type":""}],"src":"579:329:12"},{"body":{"nodeType":"YulBlock","src":"997:391:12","statements":[{"body":{"nodeType":"YulBlock","src":"1043:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1045:77:12"},"nodeType":"YulFunctionCall","src":"1045:79:12"},"nodeType":"YulExpressionStatement","src":"1045:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1018:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"1027:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1014:3:12"},"nodeType":"YulFunctionCall","src":"1014:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"1039:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1010:3:12"},"nodeType":"YulFunctionCall","src":"1010:32:12"},"nodeType":"YulIf","src":"1007:119:12"},{"nodeType":"YulBlock","src":"1136:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"1151:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"1165:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1155:6:12","type":""}]},{"nodeType":"YulAssignment","src":"1180:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1215:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"1226:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1211:3:12"},"nodeType":"YulFunctionCall","src":"1211:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1235:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1190:20:12"},"nodeType":"YulFunctionCall","src":"1190:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1180:6:12"}]}]},{"nodeType":"YulBlock","src":"1263:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"1278:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"1292:2:12","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1282:6:12","type":""}]},{"nodeType":"YulAssignment","src":"1308:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1343:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"1354:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1339:3:12"},"nodeType":"YulFunctionCall","src":"1339:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1363:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1318:20:12"},"nodeType":"YulFunctionCall","src":"1318:53:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1308:6:12"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"959:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"970:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"982:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"990:6:12","type":""}],"src":"914:474:12"},{"body":{"nodeType":"YulBlock","src":"1508:645:12","statements":[{"body":{"nodeType":"YulBlock","src":"1555:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1557:77:12"},"nodeType":"YulFunctionCall","src":"1557:79:12"},"nodeType":"YulExpressionStatement","src":"1557:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1529:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"1538:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1525:3:12"},"nodeType":"YulFunctionCall","src":"1525:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"1550:3:12","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1521:3:12"},"nodeType":"YulFunctionCall","src":"1521:33:12"},"nodeType":"YulIf","src":"1518:120:12"},{"nodeType":"YulBlock","src":"1648:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"1663:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"1677:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1667:6:12","type":""}]},{"nodeType":"YulAssignment","src":"1692:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1727:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"1738:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1723:3:12"},"nodeType":"YulFunctionCall","src":"1723:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1747:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1702:20:12"},"nodeType":"YulFunctionCall","src":"1702:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1692:6:12"}]}]},{"nodeType":"YulBlock","src":"1775:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"1790:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"1804:2:12","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1794:6:12","type":""}]},{"nodeType":"YulAssignment","src":"1820:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1855:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"1866:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1851:3:12"},"nodeType":"YulFunctionCall","src":"1851:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1875:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1830:20:12"},"nodeType":"YulFunctionCall","src":"1830:53:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1820:6:12"}]}]},{"nodeType":"YulBlock","src":"1903:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"1918:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"1932:2:12","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1922:6:12","type":""}]},{"nodeType":"YulAssignment","src":"1948:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1983:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"1994:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:12"},"nodeType":"YulFunctionCall","src":"1979:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2003:7:12"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1958:20:12"},"nodeType":"YulFunctionCall","src":"1958:53:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1948:6:12"}]}]},{"nodeType":"YulBlock","src":"2031:115:12","statements":[{"nodeType":"YulVariableDeclaration","src":"2046:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"2060:2:12","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2050:6:12","type":""}]},{"nodeType":"YulAssignment","src":"2076:60:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2108:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"2119:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2104:3:12"},"nodeType":"YulFunctionCall","src":"2104:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2128:7:12"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"2086:17:12"},"nodeType":"YulFunctionCall","src":"2086:50:12"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2076:6:12"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1454:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1465:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1477:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1485:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1493:6:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1501:6:12","type":""}],"src":"1394:759:12"},{"body":{"nodeType":"YulBlock","src":"2259:519:12","statements":[{"body":{"nodeType":"YulBlock","src":"2305:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2307:77:12"},"nodeType":"YulFunctionCall","src":"2307:79:12"},"nodeType":"YulExpressionStatement","src":"2307:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2280:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"2289:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2276:3:12"},"nodeType":"YulFunctionCall","src":"2276:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"2301:2:12","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2272:3:12"},"nodeType":"YulFunctionCall","src":"2272:32:12"},"nodeType":"YulIf","src":"2269:119:12"},{"nodeType":"YulBlock","src":"2398:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"2413:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"2427:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2417:6:12","type":""}]},{"nodeType":"YulAssignment","src":"2442:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2477:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"2488:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2473:3:12"},"nodeType":"YulFunctionCall","src":"2473:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2497:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2452:20:12"},"nodeType":"YulFunctionCall","src":"2452:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2442:6:12"}]}]},{"nodeType":"YulBlock","src":"2525:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"2540:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"2554:2:12","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2544:6:12","type":""}]},{"nodeType":"YulAssignment","src":"2570:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2605:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"2616:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2601:3:12"},"nodeType":"YulFunctionCall","src":"2601:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2625:7:12"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2580:20:12"},"nodeType":"YulFunctionCall","src":"2580:53:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2570:6:12"}]}]},{"nodeType":"YulBlock","src":"2653:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"2668:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"2682:2:12","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2672:6:12","type":""}]},{"nodeType":"YulAssignment","src":"2698:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2733:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"2744:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2729:3:12"},"nodeType":"YulFunctionCall","src":"2729:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2753:7:12"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2708:20:12"},"nodeType":"YulFunctionCall","src":"2708:53:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2698:6:12"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2213:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2224:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2236:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2244:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2252:6:12","type":""}],"src":"2159:619:12"},{"body":{"nodeType":"YulBlock","src":"2858:271:12","statements":[{"body":{"nodeType":"YulBlock","src":"2904:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2906:77:12"},"nodeType":"YulFunctionCall","src":"2906:79:12"},"nodeType":"YulExpressionStatement","src":"2906:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2879:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2875:3:12"},"nodeType":"YulFunctionCall","src":"2875:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"2900:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2871:3:12"},"nodeType":"YulFunctionCall","src":"2871:32:12"},"nodeType":"YulIf","src":"2868:119:12"},{"nodeType":"YulBlock","src":"2997:125:12","statements":[{"nodeType":"YulVariableDeclaration","src":"3012:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"3026:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3016:6:12","type":""}]},{"nodeType":"YulAssignment","src":"3041:71:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3084:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"3095:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3080:3:12"},"nodeType":"YulFunctionCall","src":"3080:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3104:7:12"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"3051:28:12"},"nodeType":"YulFunctionCall","src":"3051:61:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3041:6:12"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2828:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2839:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2851:6:12","type":""}],"src":"2784:345:12"},{"body":{"nodeType":"YulBlock","src":"3201:263:12","statements":[{"body":{"nodeType":"YulBlock","src":"3247:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3249:77:12"},"nodeType":"YulFunctionCall","src":"3249:79:12"},"nodeType":"YulExpressionStatement","src":"3249:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3222:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"3231:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3218:3:12"},"nodeType":"YulFunctionCall","src":"3218:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"3243:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3214:3:12"},"nodeType":"YulFunctionCall","src":"3214:32:12"},"nodeType":"YulIf","src":"3211:119:12"},{"nodeType":"YulBlock","src":"3340:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"3355:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"3369:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3359:6:12","type":""}]},{"nodeType":"YulAssignment","src":"3384:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"3430:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:12"},"nodeType":"YulFunctionCall","src":"3415:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3439:7:12"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3394:20:12"},"nodeType":"YulFunctionCall","src":"3394:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3384:6:12"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3171:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3182:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3194:6:12","type":""}],"src":"3135:329:12"},{"body":{"nodeType":"YulBlock","src":"3535:53:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3552:3:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3575:5:12"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3557:17:12"},"nodeType":"YulFunctionCall","src":"3557:24:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3545:6:12"},"nodeType":"YulFunctionCall","src":"3545:37:12"},"nodeType":"YulExpressionStatement","src":"3545:37:12"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3523:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3530:3:12","type":""}],"src":"3470:118:12"},{"body":{"nodeType":"YulBlock","src":"3740:220:12","statements":[{"nodeType":"YulAssignment","src":"3750:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3816:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"3821:2:12","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3757:58:12"},"nodeType":"YulFunctionCall","src":"3757:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3750:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3922:3:12"}],"functionName":{"name":"store_literal_in_memory_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","nodeType":"YulIdentifier","src":"3833:88:12"},"nodeType":"YulFunctionCall","src":"3833:93:12"},"nodeType":"YulExpressionStatement","src":"3833:93:12"},{"nodeType":"YulAssignment","src":"3935:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3946:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"3951:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3942:3:12"},"nodeType":"YulFunctionCall","src":"3942:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3935:3:12"}]}]},"name":"abi_encode_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3728:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3736:3:12","type":""}],"src":"3594:366:12"},{"body":{"nodeType":"YulBlock","src":"4112:220:12","statements":[{"nodeType":"YulAssignment","src":"4122:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4188:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"4193:2:12","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4129:58:12"},"nodeType":"YulFunctionCall","src":"4129:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4122:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4294:3:12"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"4205:88:12"},"nodeType":"YulFunctionCall","src":"4205:93:12"},"nodeType":"YulExpressionStatement","src":"4205:93:12"},{"nodeType":"YulAssignment","src":"4307:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4318:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"4323:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4314:3:12"},"nodeType":"YulFunctionCall","src":"4314:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4307:3:12"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4100:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4108:3:12","type":""}],"src":"3966:366:12"},{"body":{"nodeType":"YulBlock","src":"4484:220:12","statements":[{"nodeType":"YulAssignment","src":"4494:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4560:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"4565:2:12","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4501:58:12"},"nodeType":"YulFunctionCall","src":"4501:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4494:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4666:3:12"}],"functionName":{"name":"store_literal_in_memory_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4","nodeType":"YulIdentifier","src":"4577:88:12"},"nodeType":"YulFunctionCall","src":"4577:93:12"},"nodeType":"YulExpressionStatement","src":"4577:93:12"},{"nodeType":"YulAssignment","src":"4679:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4690:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"4695:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4686:3:12"},"nodeType":"YulFunctionCall","src":"4686:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4679:3:12"}]}]},"name":"abi_encode_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4472:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4480:3:12","type":""}],"src":"4338:366:12"},{"body":{"nodeType":"YulBlock","src":"4856:220:12","statements":[{"nodeType":"YulAssignment","src":"4866:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4932:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"4937:2:12","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4873:58:12"},"nodeType":"YulFunctionCall","src":"4873:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4866:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5038:3:12"}],"functionName":{"name":"store_literal_in_memory_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4","nodeType":"YulIdentifier","src":"4949:88:12"},"nodeType":"YulFunctionCall","src":"4949:93:12"},"nodeType":"YulExpressionStatement","src":"4949:93:12"},{"nodeType":"YulAssignment","src":"5051:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5062:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"5067:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5058:3:12"},"nodeType":"YulFunctionCall","src":"5058:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5051:3:12"}]}]},"name":"abi_encode_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4844:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4852:3:12","type":""}],"src":"4710:366:12"},{"body":{"nodeType":"YulBlock","src":"5228:220:12","statements":[{"nodeType":"YulAssignment","src":"5238:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5304:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"5309:2:12","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5245:58:12"},"nodeType":"YulFunctionCall","src":"5245:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5238:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5410:3:12"}],"functionName":{"name":"store_literal_in_memory_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a","nodeType":"YulIdentifier","src":"5321:88:12"},"nodeType":"YulFunctionCall","src":"5321:93:12"},"nodeType":"YulExpressionStatement","src":"5321:93:12"},{"nodeType":"YulAssignment","src":"5423:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5434:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"5439:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5430:3:12"},"nodeType":"YulFunctionCall","src":"5430:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5423:3:12"}]}]},"name":"abi_encode_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5216:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5224:3:12","type":""}],"src":"5082:366:12"},{"body":{"nodeType":"YulBlock","src":"5600:220:12","statements":[{"nodeType":"YulAssignment","src":"5610:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5676:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"5681:2:12","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5617:58:12"},"nodeType":"YulFunctionCall","src":"5617:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5610:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5782:3:12"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"5693:88:12"},"nodeType":"YulFunctionCall","src":"5693:93:12"},"nodeType":"YulExpressionStatement","src":"5693:93:12"},{"nodeType":"YulAssignment","src":"5795:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5806:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"5811:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5802:3:12"},"nodeType":"YulFunctionCall","src":"5802:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5795:3:12"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5588:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5596:3:12","type":""}],"src":"5454:366:12"},{"body":{"nodeType":"YulBlock","src":"5972:220:12","statements":[{"nodeType":"YulAssignment","src":"5982:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6048:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"6053:2:12","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5989:58:12"},"nodeType":"YulFunctionCall","src":"5989:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5982:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6154:3:12"}],"functionName":{"name":"store_literal_in_memory_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9","nodeType":"YulIdentifier","src":"6065:88:12"},"nodeType":"YulFunctionCall","src":"6065:93:12"},"nodeType":"YulExpressionStatement","src":"6065:93:12"},{"nodeType":"YulAssignment","src":"6167:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6178:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"6183:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6174:3:12"},"nodeType":"YulFunctionCall","src":"6174:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6167:3:12"}]}]},"name":"abi_encode_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5960:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5968:3:12","type":""}],"src":"5826:366:12"},{"body":{"nodeType":"YulBlock","src":"6344:220:12","statements":[{"nodeType":"YulAssignment","src":"6354:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6420:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"6425:2:12","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6361:58:12"},"nodeType":"YulFunctionCall","src":"6361:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6354:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6526:3:12"}],"functionName":{"name":"store_literal_in_memory_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1","nodeType":"YulIdentifier","src":"6437:88:12"},"nodeType":"YulFunctionCall","src":"6437:93:12"},"nodeType":"YulExpressionStatement","src":"6437:93:12"},{"nodeType":"YulAssignment","src":"6539:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6550:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"6555:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6546:3:12"},"nodeType":"YulFunctionCall","src":"6546:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6539:3:12"}]}]},"name":"abi_encode_t_stringliteral_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6332:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6340:3:12","type":""}],"src":"6198:366:12"},{"body":{"nodeType":"YulBlock","src":"6733:235:12","statements":[{"nodeType":"YulAssignment","src":"6743:90:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6826:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"6831:1:12","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"6750:75:12"},"nodeType":"YulFunctionCall","src":"6750:83:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6743:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6931:3:12"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"6842:88:12"},"nodeType":"YulFunctionCall","src":"6842:93:12"},"nodeType":"YulExpressionStatement","src":"6842:93:12"},{"nodeType":"YulAssignment","src":"6944:18:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6955:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"6960:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6951:3:12"},"nodeType":"YulFunctionCall","src":"6951:11:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6944:3:12"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6721:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6729:3:12","type":""}],"src":"6570:398:12"},{"body":{"nodeType":"YulBlock","src":"7120:220:12","statements":[{"nodeType":"YulAssignment","src":"7130:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7196:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"7201:2:12","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7137:58:12"},"nodeType":"YulFunctionCall","src":"7137:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7130:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7302:3:12"}],"functionName":{"name":"store_literal_in_memory_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba","nodeType":"YulIdentifier","src":"7213:88:12"},"nodeType":"YulFunctionCall","src":"7213:93:12"},"nodeType":"YulExpressionStatement","src":"7213:93:12"},{"nodeType":"YulAssignment","src":"7315:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7326:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"7331:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7322:3:12"},"nodeType":"YulFunctionCall","src":"7322:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7315:3:12"}]}]},"name":"abi_encode_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7108:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7116:3:12","type":""}],"src":"6974:366:12"},{"body":{"nodeType":"YulBlock","src":"7411:53:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7428:3:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7451:5:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7433:17:12"},"nodeType":"YulFunctionCall","src":"7433:24:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7421:6:12"},"nodeType":"YulFunctionCall","src":"7421:37:12"},"nodeType":"YulExpressionStatement","src":"7421:37:12"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7399:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7406:3:12","type":""}],"src":"7346:118:12"},{"body":{"nodeType":"YulBlock","src":"7658:191:12","statements":[{"nodeType":"YulAssignment","src":"7669:154:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7819:3:12"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"7676:141:12"},"nodeType":"YulFunctionCall","src":"7676:147:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7669:3:12"}]},{"nodeType":"YulAssignment","src":"7833:10:12","value":{"name":"pos","nodeType":"YulIdentifier","src":"7840:3:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7833:3:12"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7645:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7654:3:12","type":""}],"src":"7470:379:12"},{"body":{"nodeType":"YulBlock","src":"7953:124:12","statements":[{"nodeType":"YulAssignment","src":"7963:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7975:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7986:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7971:3:12"},"nodeType":"YulFunctionCall","src":"7971:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7963:4:12"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8043:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8056:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8067:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8052:3:12"},"nodeType":"YulFunctionCall","src":"8052:17:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7999:43:12"},"nodeType":"YulFunctionCall","src":"7999:71:12"},"nodeType":"YulExpressionStatement","src":"7999:71:12"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7925:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7937:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7948:4:12","type":""}],"src":"7855:222:12"},{"body":{"nodeType":"YulBlock","src":"8237:288:12","statements":[{"nodeType":"YulAssignment","src":"8247:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8259:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8270:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8255:3:12"},"nodeType":"YulFunctionCall","src":"8255:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8247:4:12"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8327:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8340:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8351:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8336:3:12"},"nodeType":"YulFunctionCall","src":"8336:17:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8283:43:12"},"nodeType":"YulFunctionCall","src":"8283:71:12"},"nodeType":"YulExpressionStatement","src":"8283:71:12"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8408:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8421:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8432:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8417:3:12"},"nodeType":"YulFunctionCall","src":"8417:18:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8364:43:12"},"nodeType":"YulFunctionCall","src":"8364:72:12"},"nodeType":"YulExpressionStatement","src":"8364:72:12"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8490:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8503:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8514:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8499:3:12"},"nodeType":"YulFunctionCall","src":"8499:18:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8446:43:12"},"nodeType":"YulFunctionCall","src":"8446:72:12"},"nodeType":"YulExpressionStatement","src":"8446:72:12"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8193:9:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8205:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8213:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8221:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8232:4:12","type":""}],"src":"8083:442:12"},{"body":{"nodeType":"YulBlock","src":"8713:371:12","statements":[{"nodeType":"YulAssignment","src":"8723:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8735:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8746:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8731:3:12"},"nodeType":"YulFunctionCall","src":"8731:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8723:4:12"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8804:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8817:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8828:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8813:3:12"},"nodeType":"YulFunctionCall","src":"8813:17:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8760:43:12"},"nodeType":"YulFunctionCall","src":"8760:71:12"},"nodeType":"YulExpressionStatement","src":"8760:71:12"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8885:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8898:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8909:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8894:3:12"},"nodeType":"YulFunctionCall","src":"8894:18:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8841:43:12"},"nodeType":"YulFunctionCall","src":"8841:72:12"},"nodeType":"YulExpressionStatement","src":"8841:72:12"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8967:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8980:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8991:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8976:3:12"},"nodeType":"YulFunctionCall","src":"8976:18:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8923:43:12"},"nodeType":"YulFunctionCall","src":"8923:72:12"},"nodeType":"YulExpressionStatement","src":"8923:72:12"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"9049:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9062:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9073:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9058:3:12"},"nodeType":"YulFunctionCall","src":"9058:18:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9005:43:12"},"nodeType":"YulFunctionCall","src":"9005:72:12"},"nodeType":"YulExpressionStatement","src":"9005:72:12"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8661:9:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8673:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8681:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8689:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8697:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8708:4:12","type":""}],"src":"8531:553:12"},{"body":{"nodeType":"YulBlock","src":"9216:206:12","statements":[{"nodeType":"YulAssignment","src":"9226:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9238:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9249:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9234:3:12"},"nodeType":"YulFunctionCall","src":"9234:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9226:4:12"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9306:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9319:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9315:3:12"},"nodeType":"YulFunctionCall","src":"9315:17:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9262:43:12"},"nodeType":"YulFunctionCall","src":"9262:71:12"},"nodeType":"YulExpressionStatement","src":"9262:71:12"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9387:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9400:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9411:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9396:3:12"},"nodeType":"YulFunctionCall","src":"9396:18:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9343:43:12"},"nodeType":"YulFunctionCall","src":"9343:72:12"},"nodeType":"YulExpressionStatement","src":"9343:72:12"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9180:9:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9192:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9200:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9211:4:12","type":""}],"src":"9090:332:12"},{"body":{"nodeType":"YulBlock","src":"9599:248:12","statements":[{"nodeType":"YulAssignment","src":"9609:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9621:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9632:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9617:3:12"},"nodeType":"YulFunctionCall","src":"9617:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9609:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9656:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9667:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9652:3:12"},"nodeType":"YulFunctionCall","src":"9652:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9675:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"9681:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9671:3:12"},"nodeType":"YulFunctionCall","src":"9671:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9645:6:12"},"nodeType":"YulFunctionCall","src":"9645:47:12"},"nodeType":"YulExpressionStatement","src":"9645:47:12"},{"nodeType":"YulAssignment","src":"9701:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9835:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9709:124:12"},"nodeType":"YulFunctionCall","src":"9709:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9701:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9579:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9594:4:12","type":""}],"src":"9428:419:12"},{"body":{"nodeType":"YulBlock","src":"10024:248:12","statements":[{"nodeType":"YulAssignment","src":"10034:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10046:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10057:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10042:3:12"},"nodeType":"YulFunctionCall","src":"10042:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10034:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10081:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10092:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10077:3:12"},"nodeType":"YulFunctionCall","src":"10077:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10100:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"10106:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10096:3:12"},"nodeType":"YulFunctionCall","src":"10096:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10070:6:12"},"nodeType":"YulFunctionCall","src":"10070:47:12"},"nodeType":"YulExpressionStatement","src":"10070:47:12"},{"nodeType":"YulAssignment","src":"10126:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10260:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10134:124:12"},"nodeType":"YulFunctionCall","src":"10134:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10126:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10004:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10019:4:12","type":""}],"src":"9853:419:12"},{"body":{"nodeType":"YulBlock","src":"10449:248:12","statements":[{"nodeType":"YulAssignment","src":"10459:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10471:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10482:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10467:3:12"},"nodeType":"YulFunctionCall","src":"10467:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10459:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10506:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10517:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10502:3:12"},"nodeType":"YulFunctionCall","src":"10502:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10525:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"10531:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10521:3:12"},"nodeType":"YulFunctionCall","src":"10521:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10495:6:12"},"nodeType":"YulFunctionCall","src":"10495:47:12"},"nodeType":"YulExpressionStatement","src":"10495:47:12"},{"nodeType":"YulAssignment","src":"10551:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10685:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10559:124:12"},"nodeType":"YulFunctionCall","src":"10559:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10551:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10429:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10444:4:12","type":""}],"src":"10278:419:12"},{"body":{"nodeType":"YulBlock","src":"10874:248:12","statements":[{"nodeType":"YulAssignment","src":"10884:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10896:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10907:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10892:3:12"},"nodeType":"YulFunctionCall","src":"10892:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10884:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10931:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10942:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10927:3:12"},"nodeType":"YulFunctionCall","src":"10927:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10950:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"10956:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10946:3:12"},"nodeType":"YulFunctionCall","src":"10946:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10920:6:12"},"nodeType":"YulFunctionCall","src":"10920:47:12"},"nodeType":"YulExpressionStatement","src":"10920:47:12"},{"nodeType":"YulAssignment","src":"10976:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11110:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10984:124:12"},"nodeType":"YulFunctionCall","src":"10984:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10976:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10854:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10869:4:12","type":""}],"src":"10703:419:12"},{"body":{"nodeType":"YulBlock","src":"11299:248:12","statements":[{"nodeType":"YulAssignment","src":"11309:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11321:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"11332:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11317:3:12"},"nodeType":"YulFunctionCall","src":"11317:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11309:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11356:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"11367:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11352:3:12"},"nodeType":"YulFunctionCall","src":"11352:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11375:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"11381:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11371:3:12"},"nodeType":"YulFunctionCall","src":"11371:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11345:6:12"},"nodeType":"YulFunctionCall","src":"11345:47:12"},"nodeType":"YulExpressionStatement","src":"11345:47:12"},{"nodeType":"YulAssignment","src":"11401:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11535:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11409:124:12"},"nodeType":"YulFunctionCall","src":"11409:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11401:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11279:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11294:4:12","type":""}],"src":"11128:419:12"},{"body":{"nodeType":"YulBlock","src":"11724:248:12","statements":[{"nodeType":"YulAssignment","src":"11734:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11746:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"11757:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11742:3:12"},"nodeType":"YulFunctionCall","src":"11742:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11734:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11781:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"11792:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11777:3:12"},"nodeType":"YulFunctionCall","src":"11777:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11800:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"11806:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11796:3:12"},"nodeType":"YulFunctionCall","src":"11796:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11770:6:12"},"nodeType":"YulFunctionCall","src":"11770:47:12"},"nodeType":"YulExpressionStatement","src":"11770:47:12"},{"nodeType":"YulAssignment","src":"11826:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11960:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11834:124:12"},"nodeType":"YulFunctionCall","src":"11834:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11826:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11704:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11719:4:12","type":""}],"src":"11553:419:12"},{"body":{"nodeType":"YulBlock","src":"12149:248:12","statements":[{"nodeType":"YulAssignment","src":"12159:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12171:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12182:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12167:3:12"},"nodeType":"YulFunctionCall","src":"12167:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12159:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12206:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12217:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12202:3:12"},"nodeType":"YulFunctionCall","src":"12202:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12225:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"12231:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12221:3:12"},"nodeType":"YulFunctionCall","src":"12221:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12195:6:12"},"nodeType":"YulFunctionCall","src":"12195:47:12"},"nodeType":"YulExpressionStatement","src":"12195:47:12"},{"nodeType":"YulAssignment","src":"12251:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12385:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12259:124:12"},"nodeType":"YulFunctionCall","src":"12259:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12251:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12129:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12144:4:12","type":""}],"src":"11978:419:12"},{"body":{"nodeType":"YulBlock","src":"12574:248:12","statements":[{"nodeType":"YulAssignment","src":"12584:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12596:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12607:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12592:3:12"},"nodeType":"YulFunctionCall","src":"12592:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12584:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12631:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12642:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12627:3:12"},"nodeType":"YulFunctionCall","src":"12627:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12650:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"12656:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12646:3:12"},"nodeType":"YulFunctionCall","src":"12646:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12620:6:12"},"nodeType":"YulFunctionCall","src":"12620:47:12"},"nodeType":"YulExpressionStatement","src":"12620:47:12"},{"nodeType":"YulAssignment","src":"12676:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12810:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12684:124:12"},"nodeType":"YulFunctionCall","src":"12684:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12676:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12554:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12569:4:12","type":""}],"src":"12403:419:12"},{"body":{"nodeType":"YulBlock","src":"12999:248:12","statements":[{"nodeType":"YulAssignment","src":"13009:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13021:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"13032:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13017:3:12"},"nodeType":"YulFunctionCall","src":"13017:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13009:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13056:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"13067:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13052:3:12"},"nodeType":"YulFunctionCall","src":"13052:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13075:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"13081:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13071:3:12"},"nodeType":"YulFunctionCall","src":"13071:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13045:6:12"},"nodeType":"YulFunctionCall","src":"13045:47:12"},"nodeType":"YulExpressionStatement","src":"13045:47:12"},{"nodeType":"YulAssignment","src":"13101:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13235:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13109:124:12"},"nodeType":"YulFunctionCall","src":"13109:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13101:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12979:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12994:4:12","type":""}],"src":"12828:419:12"},{"body":{"nodeType":"YulBlock","src":"13351:124:12","statements":[{"nodeType":"YulAssignment","src":"13361:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13373:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"13384:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13369:3:12"},"nodeType":"YulFunctionCall","src":"13369:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13361:4:12"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13441:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13454:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"13465:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13450:3:12"},"nodeType":"YulFunctionCall","src":"13450:17:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13397:43:12"},"nodeType":"YulFunctionCall","src":"13397:71:12"},"nodeType":"YulExpressionStatement","src":"13397:71:12"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13323:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13335:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13346:4:12","type":""}],"src":"13253:222:12"},{"body":{"nodeType":"YulBlock","src":"13521:35:12","statements":[{"nodeType":"YulAssignment","src":"13531:19:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13547:2:12","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13541:5:12"},"nodeType":"YulFunctionCall","src":"13541:9:12"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13531:6:12"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"13514:6:12","type":""}],"src":"13481:75:12"},{"body":{"nodeType":"YulBlock","src":"13675:34:12","statements":[{"nodeType":"YulAssignment","src":"13685:18:12","value":{"name":"pos","nodeType":"YulIdentifier","src":"13700:3:12"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13685:11:12"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13647:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"13652:6:12","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13663:11:12","type":""}],"src":"13562:147:12"},{"body":{"nodeType":"YulBlock","src":"13811:73:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13828:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"13833:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13821:6:12"},"nodeType":"YulFunctionCall","src":"13821:19:12"},"nodeType":"YulExpressionStatement","src":"13821:19:12"},{"nodeType":"YulAssignment","src":"13849:29:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13868:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"13873:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13864:3:12"},"nodeType":"YulFunctionCall","src":"13864:14:12"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13849:11:12"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13783:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"13788:6:12","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13799:11:12","type":""}],"src":"13715:169:12"},{"body":{"nodeType":"YulBlock","src":"13934:261:12","statements":[{"nodeType":"YulAssignment","src":"13944:25:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13967:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13949:17:12"},"nodeType":"YulFunctionCall","src":"13949:20:12"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"13944:1:12"}]},{"nodeType":"YulAssignment","src":"13978:25:12","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14001:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13983:17:12"},"nodeType":"YulFunctionCall","src":"13983:20:12"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"13978:1:12"}]},{"body":{"nodeType":"YulBlock","src":"14141:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14143:16:12"},"nodeType":"YulFunctionCall","src":"14143:18:12"},"nodeType":"YulExpressionStatement","src":"14143:18:12"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14062:1:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14069:66:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"14137:1:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14065:3:12"},"nodeType":"YulFunctionCall","src":"14065:74:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14059:2:12"},"nodeType":"YulFunctionCall","src":"14059:81:12"},"nodeType":"YulIf","src":"14056:107:12"},{"nodeType":"YulAssignment","src":"14173:16:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14184:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"14187:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14180:3:12"},"nodeType":"YulFunctionCall","src":"14180:9:12"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"14173:3:12"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13921:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"13924:1:12","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"13930:3:12","type":""}],"src":"13890:305:12"},{"body":{"nodeType":"YulBlock","src":"14243:143:12","statements":[{"nodeType":"YulAssignment","src":"14253:25:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14276:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14258:17:12"},"nodeType":"YulFunctionCall","src":"14258:20:12"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"14253:1:12"}]},{"nodeType":"YulAssignment","src":"14287:25:12","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14310:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14292:17:12"},"nodeType":"YulFunctionCall","src":"14292:20:12"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"14287:1:12"}]},{"body":{"nodeType":"YulBlock","src":"14334:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"14336:16:12"},"nodeType":"YulFunctionCall","src":"14336:18:12"},"nodeType":"YulExpressionStatement","src":"14336:18:12"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14331:1:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14324:6:12"},"nodeType":"YulFunctionCall","src":"14324:9:12"},"nodeType":"YulIf","src":"14321:35:12"},{"nodeType":"YulAssignment","src":"14366:14:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14375:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"14378:1:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"14371:3:12"},"nodeType":"YulFunctionCall","src":"14371:9:12"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"14366:1:12"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14232:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"14235:1:12","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"14241:1:12","type":""}],"src":"14201:185:12"},{"body":{"nodeType":"YulBlock","src":"14465:775:12","statements":[{"nodeType":"YulAssignment","src":"14475:15:12","value":{"name":"_power","nodeType":"YulIdentifier","src":"14484:6:12"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"14475:5:12"}]},{"nodeType":"YulAssignment","src":"14499:14:12","value":{"name":"_base","nodeType":"YulIdentifier","src":"14508:5:12"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"14499:4:12"}]},{"body":{"nodeType":"YulBlock","src":"14557:677:12","statements":[{"body":{"nodeType":"YulBlock","src":"14645:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14647:16:12"},"nodeType":"YulFunctionCall","src":"14647:18:12"},"nodeType":"YulExpressionStatement","src":"14647:18:12"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"14623:4:12"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"14633:3:12"},{"name":"base","nodeType":"YulIdentifier","src":"14638:4:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"14629:3:12"},"nodeType":"YulFunctionCall","src":"14629:14:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14620:2:12"},"nodeType":"YulFunctionCall","src":"14620:24:12"},"nodeType":"YulIf","src":"14617:50:12"},{"body":{"nodeType":"YulBlock","src":"14712:419:12","statements":[{"nodeType":"YulAssignment","src":"15092:25:12","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"15105:5:12"},{"name":"base","nodeType":"YulIdentifier","src":"15112:4:12"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15101:3:12"},"nodeType":"YulFunctionCall","src":"15101:16:12"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"15092:5:12"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"14687:8:12"},{"kind":"number","nodeType":"YulLiteral","src":"14697:1:12","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14683:3:12"},"nodeType":"YulFunctionCall","src":"14683:16:12"},"nodeType":"YulIf","src":"14680:451:12"},{"nodeType":"YulAssignment","src":"15144:23:12","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"15156:4:12"},{"name":"base","nodeType":"YulIdentifier","src":"15162:4:12"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15152:3:12"},"nodeType":"YulFunctionCall","src":"15152:15:12"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"15144:4:12"}]},{"nodeType":"YulAssignment","src":"15180:44:12","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"15215:8:12"}],"functionName":{"name":"shift_right_1_unsigned","nodeType":"YulIdentifier","src":"15192:22:12"},"nodeType":"YulFunctionCall","src":"15192:32:12"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"15180:8:12"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"14533:8:12"},{"kind":"number","nodeType":"YulLiteral","src":"14543:1:12","type":"","value":"1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14530:2:12"},"nodeType":"YulFunctionCall","src":"14530:15:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14546:2:12","statements":[]},"pre":{"nodeType":"YulBlock","src":"14526:3:12","statements":[]},"src":"14522:712:12"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nodeType":"YulTypedName","src":"14420:6:12","type":""},{"name":"_base","nodeType":"YulTypedName","src":"14428:5:12","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"14435:8:12","type":""},{"name":"max","nodeType":"YulTypedName","src":"14445:3:12","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"14453:5:12","type":""},{"name":"base","nodeType":"YulTypedName","src":"14460:4:12","type":""}],"src":"14392:848:12"},{"body":{"nodeType":"YulBlock","src":"15312:219:12","statements":[{"nodeType":"YulAssignment","src":"15322:31:12","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"15348:4:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15330:17:12"},"nodeType":"YulFunctionCall","src":"15330:23:12"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"15322:4:12"}]},{"nodeType":"YulAssignment","src":"15362:39:12","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"15392:8:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15374:17:12"},"nodeType":"YulFunctionCall","src":"15374:27:12"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"15362:8:12"}]},{"nodeType":"YulAssignment","src":"15411:113:12","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"15441:4:12"},{"name":"exponent","nodeType":"YulIdentifier","src":"15447:8:12"},{"kind":"number","nodeType":"YulLiteral","src":"15457:66:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"15420:20:12"},"nodeType":"YulFunctionCall","src":"15420:104:12"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"15411:5:12"}]}]},"name":"checked_exp_t_uint256_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"15287:4:12","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"15293:8:12","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"15306:5:12","type":""}],"src":"15246:285:12"},{"body":{"nodeType":"YulBlock","src":"15597:1013:12","statements":[{"body":{"nodeType":"YulBlock","src":"15792:20:12","statements":[{"nodeType":"YulAssignment","src":"15794:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"15803:1:12","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"15794:5:12"}]},{"nodeType":"YulLeave","src":"15805:5:12"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"15782:8:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15775:6:12"},"nodeType":"YulFunctionCall","src":"15775:16:12"},"nodeType":"YulIf","src":"15772:40:12"},{"body":{"nodeType":"YulBlock","src":"15837:20:12","statements":[{"nodeType":"YulAssignment","src":"15839:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"15848:1:12","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"15839:5:12"}]},{"nodeType":"YulLeave","src":"15850:5:12"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"15831:4:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15824:6:12"},"nodeType":"YulFunctionCall","src":"15824:12:12"},"nodeType":"YulIf","src":"15821:36:12"},{"cases":[{"body":{"nodeType":"YulBlock","src":"15967:20:12","statements":[{"nodeType":"YulAssignment","src":"15969:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"15978:1:12","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"15969:5:12"}]},{"nodeType":"YulLeave","src":"15980:5:12"}]},"nodeType":"YulCase","src":"15960:27:12","value":{"kind":"number","nodeType":"YulLiteral","src":"15965:1:12","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"16011:176:12","statements":[{"body":{"nodeType":"YulBlock","src":"16046:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16048:16:12"},"nodeType":"YulFunctionCall","src":"16048:18:12"},"nodeType":"YulExpressionStatement","src":"16048:18:12"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"16031:8:12"},{"kind":"number","nodeType":"YulLiteral","src":"16041:3:12","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16028:2:12"},"nodeType":"YulFunctionCall","src":"16028:17:12"},"nodeType":"YulIf","src":"16025:43:12"},{"nodeType":"YulAssignment","src":"16081:25:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16094:1:12","type":"","value":"2"},{"name":"exponent","nodeType":"YulIdentifier","src":"16097:8:12"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"16090:3:12"},"nodeType":"YulFunctionCall","src":"16090:16:12"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"16081:5:12"}]},{"body":{"nodeType":"YulBlock","src":"16137:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16139:16:12"},"nodeType":"YulFunctionCall","src":"16139:18:12"},"nodeType":"YulExpressionStatement","src":"16139:18:12"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"16125:5:12"},{"name":"max","nodeType":"YulIdentifier","src":"16132:3:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16122:2:12"},"nodeType":"YulFunctionCall","src":"16122:14:12"},"nodeType":"YulIf","src":"16119:40:12"},{"nodeType":"YulLeave","src":"16172:5:12"}]},"nodeType":"YulCase","src":"15996:191:12","value":{"kind":"number","nodeType":"YulLiteral","src":"16001:1:12","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"15917:4:12"},"nodeType":"YulSwitch","src":"15910:277:12"},{"body":{"nodeType":"YulBlock","src":"16319:123:12","statements":[{"nodeType":"YulAssignment","src":"16333:28:12","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"16346:4:12"},{"name":"exponent","nodeType":"YulIdentifier","src":"16352:8:12"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"16342:3:12"},"nodeType":"YulFunctionCall","src":"16342:19:12"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"16333:5:12"}]},{"body":{"nodeType":"YulBlock","src":"16392:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16394:16:12"},"nodeType":"YulFunctionCall","src":"16394:18:12"},"nodeType":"YulExpressionStatement","src":"16394:18:12"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"16380:5:12"},{"name":"max","nodeType":"YulIdentifier","src":"16387:3:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16377:2:12"},"nodeType":"YulFunctionCall","src":"16377:14:12"},"nodeType":"YulIf","src":"16374:40:12"},{"nodeType":"YulLeave","src":"16427:5:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"16222:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"16228:2:12","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16219:2:12"},"nodeType":"YulFunctionCall","src":"16219:12:12"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"16236:8:12"},{"kind":"number","nodeType":"YulLiteral","src":"16246:2:12","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16233:2:12"},"nodeType":"YulFunctionCall","src":"16233:16:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16215:3:12"},"nodeType":"YulFunctionCall","src":"16215:35:12"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"16271:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"16277:3:12","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16268:2:12"},"nodeType":"YulFunctionCall","src":"16268:13:12"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"16286:8:12"},{"kind":"number","nodeType":"YulLiteral","src":"16296:2:12","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16283:2:12"},"nodeType":"YulFunctionCall","src":"16283:16:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16264:3:12"},"nodeType":"YulFunctionCall","src":"16264:36:12"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"16199:2:12"},"nodeType":"YulFunctionCall","src":"16199:111:12"},"nodeType":"YulIf","src":"16196:246:12"},{"nodeType":"YulAssignment","src":"16452:57:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16486:1:12","type":"","value":"1"},{"name":"base","nodeType":"YulIdentifier","src":"16489:4:12"},{"name":"exponent","nodeType":"YulIdentifier","src":"16495:8:12"},{"name":"max","nodeType":"YulIdentifier","src":"16505:3:12"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"16467:18:12"},"nodeType":"YulFunctionCall","src":"16467:42:12"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"16452:5:12"},{"name":"base","nodeType":"YulIdentifier","src":"16459:4:12"}]},{"body":{"nodeType":"YulBlock","src":"16548:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16550:16:12"},"nodeType":"YulFunctionCall","src":"16550:18:12"},"nodeType":"YulExpressionStatement","src":"16550:18:12"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"16525:5:12"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"16536:3:12"},{"name":"base","nodeType":"YulIdentifier","src":"16541:4:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16532:3:12"},"nodeType":"YulFunctionCall","src":"16532:14:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16522:2:12"},"nodeType":"YulFunctionCall","src":"16522:25:12"},"nodeType":"YulIf","src":"16519:51:12"},{"nodeType":"YulAssignment","src":"16579:25:12","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"16592:5:12"},{"name":"base","nodeType":"YulIdentifier","src":"16599:4:12"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16588:3:12"},"nodeType":"YulFunctionCall","src":"16588:16:12"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"16579:5:12"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"15567:4:12","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"15573:8:12","type":""},{"name":"max","nodeType":"YulTypedName","src":"15583:3:12","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"15591:5:12","type":""}],"src":"15537:1073:12"},{"body":{"nodeType":"YulBlock","src":"16664:300:12","statements":[{"nodeType":"YulAssignment","src":"16674:25:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16697:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16679:17:12"},"nodeType":"YulFunctionCall","src":"16679:20:12"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"16674:1:12"}]},{"nodeType":"YulAssignment","src":"16708:25:12","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16731:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16713:17:12"},"nodeType":"YulFunctionCall","src":"16713:20:12"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16708:1:12"}]},{"body":{"nodeType":"YulBlock","src":"16906:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16908:16:12"},"nodeType":"YulFunctionCall","src":"16908:18:12"},"nodeType":"YulExpressionStatement","src":"16908:18:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16818:1:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16811:6:12"},"nodeType":"YulFunctionCall","src":"16811:9:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16804:6:12"},"nodeType":"YulFunctionCall","src":"16804:17:12"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16826:1:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16833:66:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"16901:1:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16829:3:12"},"nodeType":"YulFunctionCall","src":"16829:74:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16823:2:12"},"nodeType":"YulFunctionCall","src":"16823:81:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16800:3:12"},"nodeType":"YulFunctionCall","src":"16800:105:12"},"nodeType":"YulIf","src":"16797:131:12"},{"nodeType":"YulAssignment","src":"16938:20:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16953:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"16956:1:12"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16949:3:12"},"nodeType":"YulFunctionCall","src":"16949:9:12"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"16938:7:12"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16647:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"16650:1:12","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"16656:7:12","type":""}],"src":"16616:348:12"},{"body":{"nodeType":"YulBlock","src":"17015:146:12","statements":[{"nodeType":"YulAssignment","src":"17025:25:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17048:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17030:17:12"},"nodeType":"YulFunctionCall","src":"17030:20:12"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17025:1:12"}]},{"nodeType":"YulAssignment","src":"17059:25:12","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17082:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17064:17:12"},"nodeType":"YulFunctionCall","src":"17064:20:12"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17059:1:12"}]},{"body":{"nodeType":"YulBlock","src":"17106:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17108:16:12"},"nodeType":"YulFunctionCall","src":"17108:18:12"},"nodeType":"YulExpressionStatement","src":"17108:18:12"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17100:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"17103:1:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17097:2:12"},"nodeType":"YulFunctionCall","src":"17097:8:12"},"nodeType":"YulIf","src":"17094:34:12"},{"nodeType":"YulAssignment","src":"17138:17:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17150:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"17153:1:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17146:3:12"},"nodeType":"YulFunctionCall","src":"17146:9:12"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"17138:4:12"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17001:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"17004:1:12","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"17010:4:12","type":""}],"src":"16970:191:12"},{"body":{"nodeType":"YulBlock","src":"17212:51:12","statements":[{"nodeType":"YulAssignment","src":"17222:35:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17251:5:12"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"17233:17:12"},"nodeType":"YulFunctionCall","src":"17233:24:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17222:7:12"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17194:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17204:7:12","type":""}],"src":"17167:96:12"},{"body":{"nodeType":"YulBlock","src":"17311:48:12","statements":[{"nodeType":"YulAssignment","src":"17321:32:12","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17346:5:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17339:6:12"},"nodeType":"YulFunctionCall","src":"17339:13:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17332:6:12"},"nodeType":"YulFunctionCall","src":"17332:21:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17321:7:12"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17293:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17303:7:12","type":""}],"src":"17269:90:12"},{"body":{"nodeType":"YulBlock","src":"17410:81:12","statements":[{"nodeType":"YulAssignment","src":"17420:65:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17435:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"17442:42:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17431:3:12"},"nodeType":"YulFunctionCall","src":"17431:54:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17420:7:12"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17392:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17402:7:12","type":""}],"src":"17365:126:12"},{"body":{"nodeType":"YulBlock","src":"17542:32:12","statements":[{"nodeType":"YulAssignment","src":"17552:16:12","value":{"name":"value","nodeType":"YulIdentifier","src":"17563:5:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17552:7:12"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17524:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17534:7:12","type":""}],"src":"17497:77:12"},{"body":{"nodeType":"YulBlock","src":"17608:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17625:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17628:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17618:6:12"},"nodeType":"YulFunctionCall","src":"17618:88:12"},"nodeType":"YulExpressionStatement","src":"17618:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17722:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17725:4:12","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17715:6:12"},"nodeType":"YulFunctionCall","src":"17715:15:12"},"nodeType":"YulExpressionStatement","src":"17715:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17746:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17749:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17739:6:12"},"nodeType":"YulFunctionCall","src":"17739:15:12"},"nodeType":"YulExpressionStatement","src":"17739:15:12"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"17580:180:12"},{"body":{"nodeType":"YulBlock","src":"17794:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17811:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17814:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17804:6:12"},"nodeType":"YulFunctionCall","src":"17804:88:12"},"nodeType":"YulExpressionStatement","src":"17804:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17908:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17911:4:12","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17901:6:12"},"nodeType":"YulFunctionCall","src":"17901:15:12"},"nodeType":"YulExpressionStatement","src":"17901:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17932:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17935:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17925:6:12"},"nodeType":"YulFunctionCall","src":"17925:15:12"},"nodeType":"YulExpressionStatement","src":"17925:15:12"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"17766:180:12"},{"body":{"nodeType":"YulBlock","src":"18041:28:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18058:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18061:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18051:6:12"},"nodeType":"YulFunctionCall","src":"18051:12:12"},"nodeType":"YulExpressionStatement","src":"18051:12:12"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"17952:117:12"},{"body":{"nodeType":"YulBlock","src":"18164:28:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18181:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18184:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18174:6:12"},"nodeType":"YulFunctionCall","src":"18174:12:12"},"nodeType":"YulExpressionStatement","src":"18174:12:12"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"18075:117:12"},{"body":{"nodeType":"YulBlock","src":"18249:51:12","statements":[{"nodeType":"YulAssignment","src":"18259:34:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18284:1:12","type":"","value":"1"},{"name":"value","nodeType":"YulIdentifier","src":"18287:5:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18280:3:12"},"nodeType":"YulFunctionCall","src":"18280:13:12"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"18259:8:12"}]}]},"name":"shift_right_1_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18230:5:12","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"18240:8:12","type":""}],"src":"18198:102:12"},{"body":{"nodeType":"YulBlock","src":"18412:68:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18434:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"18442:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18430:3:12"},"nodeType":"YulFunctionCall","src":"18430:14:12"},{"hexValue":"5265656e7472616e742063616c6c20646574656374656421","kind":"string","nodeType":"YulLiteral","src":"18446:26:12","type":"","value":"Reentrant call detected!"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18423:6:12"},"nodeType":"YulFunctionCall","src":"18423:50:12"},"nodeType":"YulExpressionStatement","src":"18423:50:12"}]},"name":"store_literal_in_memory_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18404:6:12","type":""}],"src":"18306:174:12"},{"body":{"nodeType":"YulBlock","src":"18592:119:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18614:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"18622:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18610:3:12"},"nodeType":"YulFunctionCall","src":"18610:14:12"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"18626:34:12","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18603:6:12"},"nodeType":"YulFunctionCall","src":"18603:58:12"},"nodeType":"YulExpressionStatement","src":"18603:58:12"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18682:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"18690:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18678:3:12"},"nodeType":"YulFunctionCall","src":"18678:15:12"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"18695:8:12","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18671:6:12"},"nodeType":"YulFunctionCall","src":"18671:33:12"},"nodeType":"YulExpressionStatement","src":"18671:33:12"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18584:6:12","type":""}],"src":"18486:225:12"},{"body":{"nodeType":"YulBlock","src":"18823:65:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18845:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"18853:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18841:3:12"},"nodeType":"YulFunctionCall","src":"18841:14:12"},{"hexValue":"6661696c656420746f2073656e6420616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"18857:23:12","type":"","value":"failed to send amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18834:6:12"},"nodeType":"YulFunctionCall","src":"18834:47:12"},"nodeType":"YulExpressionStatement","src":"18834:47:12"}]},"name":"store_literal_in_memory_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18815:6:12","type":""}],"src":"18717:171:12"},{"body":{"nodeType":"YulBlock","src":"19000:117:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19022:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"19030:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19018:3:12"},"nodeType":"YulFunctionCall","src":"19018:14:12"},{"hexValue":"496e73756666696369656e742062616c616e63652045544820746f2077697468","kind":"string","nodeType":"YulLiteral","src":"19034:34:12","type":"","value":"Insufficient balance ETH to with"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19011:6:12"},"nodeType":"YulFunctionCall","src":"19011:58:12"},"nodeType":"YulExpressionStatement","src":"19011:58:12"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19090:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"19098:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19086:3:12"},"nodeType":"YulFunctionCall","src":"19086:15:12"},{"hexValue":"64726177","kind":"string","nodeType":"YulLiteral","src":"19103:6:12","type":"","value":"draw"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19079:6:12"},"nodeType":"YulFunctionCall","src":"19079:31:12"},"nodeType":"YulExpressionStatement","src":"19079:31:12"}]},"name":"store_literal_in_memory_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18992:6:12","type":""}],"src":"18894:223:12"},{"body":{"nodeType":"YulBlock","src":"19229:74:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19251:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"19259:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19247:3:12"},"nodeType":"YulFunctionCall","src":"19247:14:12"},{"hexValue":"546f6b656e206e6f74207665726966696564206f6e2045786368616e6765","kind":"string","nodeType":"YulLiteral","src":"19263:32:12","type":"","value":"Token not verified on Exchange"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19240:6:12"},"nodeType":"YulFunctionCall","src":"19240:56:12"},"nodeType":"YulExpressionStatement","src":"19240:56:12"}]},"name":"store_literal_in_memory_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19221:6:12","type":""}],"src":"19123:180:12"},{"body":{"nodeType":"YulBlock","src":"19415:76:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19437:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"19445:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19433:3:12"},"nodeType":"YulFunctionCall","src":"19433:14:12"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"19449:34:12","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19426:6:12"},"nodeType":"YulFunctionCall","src":"19426:58:12"},"nodeType":"YulExpressionStatement","src":"19426:58:12"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19407:6:12","type":""}],"src":"19309:182:12"},{"body":{"nodeType":"YulBlock","src":"19603:75:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19625:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"19633:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19621:3:12"},"nodeType":"YulFunctionCall","src":"19621:14:12"},{"hexValue":"496e73756666696369656e7420546f6b656e7320746f207769746864726177","kind":"string","nodeType":"YulLiteral","src":"19637:33:12","type":"","value":"Insufficient Tokens to withdraw"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19614:6:12"},"nodeType":"YulFunctionCall","src":"19614:57:12"},"nodeType":"YulExpressionStatement","src":"19614:57:12"}]},"name":"store_literal_in_memory_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19595:6:12","type":""}],"src":"19497:181:12"},{"body":{"nodeType":"YulBlock","src":"19790:70:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19812:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"19820:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19808:3:12"},"nodeType":"YulFunctionCall","src":"19808:14:12"},{"hexValue":"556e617574686f72697365642046756e6374696f6e2043616c6c","kind":"string","nodeType":"YulLiteral","src":"19824:28:12","type":"","value":"Unauthorised Function Call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19801:6:12"},"nodeType":"YulFunctionCall","src":"19801:52:12"},"nodeType":"YulExpressionStatement","src":"19801:52:12"}]},"name":"store_literal_in_memory_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19782:6:12","type":""}],"src":"19684:176:12"},{"body":{"nodeType":"YulBlock","src":"19972:8:12","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19964:6:12","type":""}],"src":"19866:114:12"},{"body":{"nodeType":"YulBlock","src":"20092:59:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20114:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"20122:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20110:3:12"},"nodeType":"YulFunctionCall","src":"20110:14:12"},{"hexValue":"4e6f20417070726f76616c20796574","kind":"string","nodeType":"YulLiteral","src":"20126:17:12","type":"","value":"No Approval yet"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20103:6:12"},"nodeType":"YulFunctionCall","src":"20103:41:12"},"nodeType":"YulExpressionStatement","src":"20103:41:12"}]},"name":"store_literal_in_memory_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20084:6:12","type":""}],"src":"19986:165:12"},{"body":{"nodeType":"YulBlock","src":"20200:79:12","statements":[{"body":{"nodeType":"YulBlock","src":"20257:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20266:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20269:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20259:6:12"},"nodeType":"YulFunctionCall","src":"20259:12:12"},"nodeType":"YulExpressionStatement","src":"20259:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20223:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20248:5:12"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"20230:17:12"},"nodeType":"YulFunctionCall","src":"20230:24:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20220:2:12"},"nodeType":"YulFunctionCall","src":"20220:35:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20213:6:12"},"nodeType":"YulFunctionCall","src":"20213:43:12"},"nodeType":"YulIf","src":"20210:63:12"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20193:5:12","type":""}],"src":"20157:122:12"},{"body":{"nodeType":"YulBlock","src":"20325:76:12","statements":[{"body":{"nodeType":"YulBlock","src":"20379:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20388:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20391:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20381:6:12"},"nodeType":"YulFunctionCall","src":"20381:12:12"},"nodeType":"YulExpressionStatement","src":"20381:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20348:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20370:5:12"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"20355:14:12"},"nodeType":"YulFunctionCall","src":"20355:21:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20345:2:12"},"nodeType":"YulFunctionCall","src":"20345:32:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20338:6:12"},"nodeType":"YulFunctionCall","src":"20338:40:12"},"nodeType":"YulIf","src":"20335:60:12"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20318:5:12","type":""}],"src":"20285:116:12"},{"body":{"nodeType":"YulBlock","src":"20450:79:12","statements":[{"body":{"nodeType":"YulBlock","src":"20507:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20516:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20519:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20509:6:12"},"nodeType":"YulFunctionCall","src":"20509:12:12"},"nodeType":"YulExpressionStatement","src":"20509:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20473:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20498:5:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20480:17:12"},"nodeType":"YulFunctionCall","src":"20480:24:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20470:2:12"},"nodeType":"YulFunctionCall","src":"20470:35:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20463:6:12"},"nodeType":"YulFunctionCall","src":"20463:43:12"},"nodeType":"YulIf","src":"20460:63:12"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20443:5:12","type":""}],"src":"20407:122:12"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bool(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function store_literal_in_memory_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reentrant call detected!\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"failed to send amount\")\n\n    }\n\n    function store_literal_in_memory_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance ETH to with\")\n\n        mstore(add(memPtr, 32), \"draw\")\n\n    }\n\n    function store_literal_in_memory_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token not verified on Exchange\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient Tokens to withdraw\")\n\n    }\n\n    function store_literal_in_memory_b42536c2f047f51bb77d9f03c84573f97cd0872dd7cc0de25854fa53fcd277d1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Unauthorised Function Call\")\n\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function store_literal_in_memory_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba(memPtr) {\n\n        mstore(add(memPtr, 0), \"No Approval yet\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":12,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2854":[{"length":32,"start":4160}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x96C0EC55 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xCD5D767C GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xCD5D767C EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xF14210A6 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xF6326FB3 EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0xF7888AEC EQ PUSH2 0x3A6 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x96C0EC55 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x99C6D2DE EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xB4A99A4E EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xC5AB4602 EQ PUSH2 0x2E4 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x7BF1A627 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x92F63D2E EQ PUSH2 0x23C JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x31415A65 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x46A8F820 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x4BDDE1CF EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x4FC121DB EQ PUSH2 0x192 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x19D8 JUMP JUMPDEST PUSH2 0x3E3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0x42F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0x72B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0x750 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x7D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FB PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x811 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x251 PUSH2 0x83A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x273 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x1AAC JUMP JUMPDEST PUSH2 0x860 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1AAC JUMP JUMPDEST PUSH2 0xD1D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x103E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0x1062 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x334 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0x135E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x1B2C JUMP JUMPDEST PUSH2 0x1383 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x395 SWAP2 SWAP1 PUSH2 0x19D8 JUMP JUMPDEST PUSH2 0x161C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A4 PUSH2 0x16A0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0x175B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EB PUSH2 0x17E2 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x4B6 JUMPI POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x4F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EC SWAP1 PUSH2 0x1E8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x60F JUMPI PUSH2 0x58A DUP3 PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1860 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x725 JUMP JUMPDEST DUP1 PUSH2 0x724 JUMPI PUSH2 0x6A3 DUP3 PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1876 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7DF PUSH2 0x17E2 JUMP JUMPDEST PUSH2 0x7E9 PUSH1 0x0 PUSH2 0x188C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1027B219 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x916 SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x92E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x942 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x966 SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH2 0x9A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99C SWAP1 PUSH2 0x1E2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x9CB PUSH2 0x9B3 CALLER DUP7 PUSH2 0x750 JUMP JUMPDEST PUSH2 0x9BD DUP7 CALLER PUSH2 0x175B JUMP JUMPDEST PUSH2 0x1876 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0xA0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA03 SWAP1 PUSH2 0x1E6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA53 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x12 SWAP1 POP PUSH1 0x12 DUP3 EQ ISZERO PUSH2 0xB91 JUMPI PUSH2 0xAD4 DUP5 CALLER DUP6 PUSH1 0x0 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB31 SWAP3 SWAP2 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB5F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB83 SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH2 0xB8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCB7 JUMP JUMPDEST PUSH2 0xBCE DUP5 CALLER PUSH2 0xBC7 PUSH2 0xBAC DUP7 DUP7 PUSH2 0x1876 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0xBB8 SWAP2 SWAP1 PUSH2 0x1FDB JUMP JUMPDEST DUP8 PUSH2 0x1950 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH2 0xC3E PUSH2 0xC23 DUP7 DUP7 PUSH2 0x1876 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0xC2F SWAP2 SWAP1 PUSH2 0x1FDB JUMP JUMPDEST DUP8 PUSH2 0x1966 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC5B SWAP3 SWAP2 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC89 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCAD SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH2 0xCB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xF341246ADAAC6F497BC2A656F546AB9E182111D630394F0C57C710A59A2CB567 DUP5 CALLER DUP6 PUSH2 0xCFF DUP9 CALLER PUSH2 0x175B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD0F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1027B219 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD3 SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDFF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE23 SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH2 0xE62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE59 SWAP1 PUSH2 0x1E2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF02 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D05 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF30 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF54 SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH2 0xF93 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8A SWAP1 PUSH2 0x1EAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP PUSH1 0x12 DUP3 EQ ISZERO PUSH2 0xFB4 JUMPI PUSH2 0xFAF DUP5 CALLER DUP6 PUSH1 0x1 PUSH2 0x1062 JUMP JUMPDEST PUSH2 0xFF2 JUMP JUMPDEST PUSH2 0xFF1 DUP5 CALLER PUSH2 0xFEA PUSH2 0xFCF DUP7 DUP7 PUSH2 0x1876 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0xFDB SWAP2 SWAP1 PUSH2 0x1FDB JUMP JUMPDEST DUP8 PUSH2 0x1950 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1062 JUMP JUMPDEST JUMPDEST PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP5 CALLER DUP6 PUSH2 0x1020 DUP9 CALLER PUSH2 0x175B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1030 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x10E9 JUMPI POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x1128 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111F SWAP1 PUSH2 0x1E8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x1242 JUMPI PUSH2 0x11BD DUP3 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1860 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1358 JUMP JUMPDEST DUP1 PUSH2 0x1357 JUMPI PUSH2 0x12D6 DUP3 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1876 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH2 0x13ED PUSH2 0x13B3 CALLER PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x750 JUMP JUMPDEST PUSH2 0x13DF PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x175B JUMP JUMPDEST PUSH2 0x1876 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x142E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1425 SWAP1 PUSH2 0x1E0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x147E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1475 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x14C8 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH1 0x0 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1508 SWAP1 PUSH2 0x1CD5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1545 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x154A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x158E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1585 SWAP1 PUSH2 0x1DEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xF341246ADAAC6F497BC2A656F546AB9E182111D630394F0C57C710A59A2CB567 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP5 PUSH2 0x1600 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x175B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1610 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x1624 PUSH2 0x17E2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1694 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x168B SWAP1 PUSH2 0x1DCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x169D DUP2 PUSH2 0x188C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x16CF PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER CALLVALUE PUSH1 0x1 PUSH2 0x1062 JUMP JUMPDEST PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER CALLVALUE PUSH2 0x1741 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x175B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1751 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17EA PUSH2 0x197C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1808 PUSH2 0x811 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x185E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1855 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x186E SWAP2 SWAP1 PUSH2 0x1F01 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1884 SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x195E SWAP2 SWAP1 PUSH2 0x20F9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1974 SWAP2 SWAP1 PUSH2 0x1F57 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1993 DUP2 PUSH2 0x23FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19A8 DUP2 PUSH2 0x2416 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x19BD DUP2 PUSH2 0x2416 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19D2 DUP2 PUSH2 0x242D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19EE JUMPI PUSH2 0x19ED PUSH2 0x222D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19FC DUP5 DUP3 DUP6 ADD PUSH2 0x1984 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A1C JUMPI PUSH2 0x1A1B PUSH2 0x222D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A2A DUP6 DUP3 DUP7 ADD PUSH2 0x1984 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A3B DUP6 DUP3 DUP7 ADD PUSH2 0x1984 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1A5F JUMPI PUSH2 0x1A5E PUSH2 0x222D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A6D DUP8 DUP3 DUP9 ADD PUSH2 0x1984 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1A7E DUP8 DUP3 DUP9 ADD PUSH2 0x1984 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1A8F DUP8 DUP3 DUP9 ADD PUSH2 0x19C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1AA0 DUP8 DUP3 DUP9 ADD PUSH2 0x1999 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AC5 JUMPI PUSH2 0x1AC4 PUSH2 0x222D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AD3 DUP7 DUP3 DUP8 ADD PUSH2 0x1984 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1AE4 DUP7 DUP3 DUP8 ADD PUSH2 0x19C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1AF5 DUP7 DUP3 DUP8 ADD PUSH2 0x19C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B15 JUMPI PUSH2 0x1B14 PUSH2 0x222D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B23 DUP5 DUP3 DUP6 ADD PUSH2 0x19AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B42 JUMPI PUSH2 0x1B41 PUSH2 0x222D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B50 DUP5 DUP3 DUP6 ADD PUSH2 0x19C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B62 DUP2 PUSH2 0x2187 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B75 PUSH1 0x18 DUP4 PUSH2 0x1EF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B80 DUP3 PUSH2 0x223F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B98 PUSH1 0x26 DUP4 PUSH2 0x1EF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BA3 DUP3 PUSH2 0x2268 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BBB PUSH1 0x15 DUP4 PUSH2 0x1EF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC6 DUP3 PUSH2 0x22B7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BDE PUSH1 0x24 DUP4 PUSH2 0x1EF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE9 DUP3 PUSH2 0x22E0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C01 PUSH1 0x1E DUP4 PUSH2 0x1EF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C0C DUP3 PUSH2 0x232F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C24 PUSH1 0x20 DUP4 PUSH2 0x1EF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C2F DUP3 PUSH2 0x2358 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C47 PUSH1 0x1F DUP4 PUSH2 0x1EF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C52 DUP3 PUSH2 0x2381 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C6A PUSH1 0x1A DUP4 PUSH2 0x1EF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C75 DUP3 PUSH2 0x23AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C8D PUSH1 0x0 DUP4 PUSH2 0x1EE5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C98 DUP3 PUSH2 0x23D3 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB0 PUSH1 0xF DUP4 PUSH2 0x1EF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CBB DUP3 PUSH2 0x23D6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CCF DUP2 PUSH2 0x21C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE0 DUP3 PUSH2 0x1C80 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CFF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D1A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1B59 JUMP JUMPDEST PUSH2 0x1D27 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B59 JUMP JUMPDEST PUSH2 0x1D34 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CC6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1D51 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1B59 JUMP JUMPDEST PUSH2 0x1D5E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1B59 JUMP JUMPDEST PUSH2 0x1D6B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1CC6 JUMP JUMPDEST PUSH2 0x1D78 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1CC6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D96 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1B59 JUMP JUMPDEST PUSH2 0x1DA3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CC6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DC3 DUP2 PUSH2 0x1B68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DE3 DUP2 PUSH2 0x1B8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E03 DUP2 PUSH2 0x1BAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E23 DUP2 PUSH2 0x1BD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E43 DUP2 PUSH2 0x1BF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E63 DUP2 PUSH2 0x1C17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E83 DUP2 PUSH2 0x1C3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EA3 DUP2 PUSH2 0x1C5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EC3 DUP2 PUSH2 0x1CA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EDF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F0C DUP3 PUSH2 0x21C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F17 DUP4 PUSH2 0x21C5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1F4C JUMPI PUSH2 0x1F4B PUSH2 0x21CF JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F62 DUP3 PUSH2 0x21C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F6D DUP4 PUSH2 0x21C5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F7D JUMPI PUSH2 0x1F7C PUSH2 0x21FE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1FD2 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1FAE JUMPI PUSH2 0x1FAD PUSH2 0x21CF JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1FBD JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1FCB DUP6 PUSH2 0x2232 JUMP JUMPDEST SWAP5 POP PUSH2 0x1F92 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE6 DUP3 PUSH2 0x21C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF1 DUP4 PUSH2 0x21C5 JUMP JUMPDEST SWAP3 POP PUSH2 0x201E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x2026 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2036 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x20F2 JUMP JUMPDEST DUP2 PUSH2 0x2044 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x20F2 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x205A JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2064 JUMPI PUSH2 0x2093 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x20F2 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2076 JUMPI PUSH2 0x2075 PUSH2 0x21CF JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x208D JUMPI PUSH2 0x208C PUSH2 0x21CF JUMP JUMPDEST JUMPDEST POP PUSH2 0x20F2 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x20C8 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x20C3 JUMPI PUSH2 0x20C2 PUSH2 0x21CF JUMP JUMPDEST JUMPDEST PUSH2 0x20F2 JUMP JUMPDEST PUSH2 0x20D5 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1F88 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x20EC JUMPI PUSH2 0x20EB PUSH2 0x21CF JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2104 DUP3 PUSH2 0x21C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x210F DUP4 PUSH2 0x21C5 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2148 JUMPI PUSH2 0x2147 PUSH2 0x21CF JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x215E DUP3 PUSH2 0x21C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2169 DUP4 PUSH2 0x21C5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x217C JUMPI PUSH2 0x217B PUSH2 0x21CF JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2192 DUP3 PUSH2 0x21A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E742063616C6C206465746563746564210000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6661696C656420746F2073656E6420616D6F756E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E63652045544820746F2077697468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472617700000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E206E6F74207665726966696564206F6E2045786368616E67650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420546F6B656E7320746F20776974686472617700 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x556E617574686F72697365642046756E6374696F6E2043616C6C000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x4E6F20417070726F76616C207965740000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2408 DUP2 PUSH2 0x2187 JUMP JUMPDEST DUP2 EQ PUSH2 0x2413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x241F DUP2 PUSH2 0x2199 JUMP JUMPDEST DUP2 EQ PUSH2 0x242A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2436 DUP2 PUSH2 0x21C5 JUMP JUMPDEST DUP2 EQ PUSH2 0x2441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xC1 GAS SHL CALLDATALOAD 0x1E INVALID 0xD5 PUSH16 0x822224CA7706699F8FD94C2713A531EB SWAP9 MSIZE 0xD 0xDB PUSH21 0x152064736F6C634300080700330000000000000000 ","sourceMap":"388:5960:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5996:148;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4928:451;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;832:66;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4758:162;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:2;;;;;;;;;;;;;:::i;:::-;;597:36:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;640:73:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3384:1366;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2352:1024;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;494:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5617:371;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;722:63;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1549:704;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1277:264:8;;;:::i;:::-;;5455:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5996:148;1094:13:2;:11;:13::i;:::-;6119:16:8::1;6099:8;;:37;;;;;;;;;;;;;;;;;;5996:148:::0;:::o;4928:451::-;6231:4;6209:27;;:10;:27;;;:62;;;;6262:8;;;;;;;;;;;6240:31;;:10;:31;;;6209:62;6187:138;;;;;;;;;;;;:::i;:::-;;;;;;;;;5093:5:::1;5089:283;;;5144:71;5193:7;5144:11;:18;5156:5;5144:18;;;;;;;;;;;;;;;:26;5163:6;5144:26;;;;;;;;;;;;;;;;:30;;:71;;;;:::i;:::-;5115:11;:18;5127:5;5115:18;;;;;;;;;;;;;;;:26;5134:6;5115:26;;;;;;;;;;;;;;;:100;;;;5089:283;;;5238:5;5233:139;;5289:71;5338:7;5289:11;:18;5301:5;5289:18;;;;;;;;;;;;;;;:26;5308:6;5289:26;;;;;;;;;;;;;;;;:30;;:71;;;;:::i;:::-;5260:11;:18;5272:5;5260:18;;;;;;;;;;;;;;;:26;5279:6;5260:26;;;;;;;;;;;;;;;:100;;;;5233:139;5089:283;4928:451:::0;;;;:::o;832:66::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4758:162::-;4859:7;4886:11;:18;4898:5;4886:18;;;;;;;;;;;;;;;:26;4905:6;4886:26;;;;;;;;;;;;;;;;4879:33;;4758:162;;;;:::o;1831:101:2:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;597:36:8:-;;;;;;;;;;;;;:::o;1201:85:2:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;640:73:8:-;;;;;;;;;;;;;:::o;3384:1366::-;3531:8;;;;;;;;;;;3521:18;;:6;:18;;;;3513:27;;;;;;3573:8;;;;;;;;;;;:24;;;3598:6;3573:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3551:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;3803:7;3698:101;3750:34;3765:10;3777:6;3750:14;:34::i;:::-;3698:29;3708:6;3716:10;3698:9;:29::i;:::-;:33;;:101;;;;:::i;:::-;:112;;3676:193;;;;;;;;;;;;:::i;:::-;;;;;;;;;3889:6;;;;;;;;;;;3888:7;3880:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;3944:4;3935:6;;:13;;;;;;;;;;;;;;;;;;3976:6;3961:5;;:22;;;;;;;;;;;;;;;;;;3994:16;4013:2;3994:21;;4043:2;4030:9;:15;4026:543;;;4062:49;4076:6;4084:10;4096:7;4105:5;4062:13;:49::i;:::-;4134:5;;;;;;;;;;;:14;;;4149:10;4161:7;4134:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4126:44;;;;;;4026:543;;;4203:167;4235:6;4260:10;4289:42;4307:23;4320:9;4307:8;:12;;:23;;;;:::i;:::-;4301:2;:29;;;;:::i;:::-;4289:7;:11;;:42;;;;:::i;:::-;4350:5;4203:13;:167::i;:::-;4411:5;;;;;;;;;;;:14;;;4448:10;4481:42;4499:23;4512:9;4499:8;:12;;:23;;;;:::i;:::-;4493:2;:29;;;;:::i;:::-;4481:7;:11;;:42;;;;:::i;:::-;4411:131;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4385:172;;;;;;4026:543;4590:5;4581:6;;:14;;;;;;;;;;;;;;;;;;4611:131;4634:6;4655:10;4680:7;4702:29;4712:6;4720:10;4702:9;:29::i;:::-;4611:131;;;;;;;;;:::i;:::-;;;;;;;;3502:1248;3384:1366;;;:::o;2352:1024::-;2498:8;;;;;;;;;;;2488:18;;:6;:18;;;;2480:27;;;;;;2540:8;;;;;;;;;;;:24;;;2565:6;2540:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2518:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;2722:6;2707:5;;:22;;;;;;;;;;;;;;;;;;2799:5;;;;;;;;;;;:18;;;2818:10;2838:4;2845:7;2799:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2777:119;;;;;;;;;;;;:::i;:::-;;;;;;;;;2907:16;2926:2;2907:21;;2956:2;2943:9;:15;2939:281;;;2975:48;2989:6;2997:10;3009:7;3018:4;2975:13;:48::i;:::-;2939:281;;;3054:166;3086:6;3111:10;3140:42;3158:23;3171:9;3158:8;:12;;:23;;;;:::i;:::-;3152:2;:29;;;;:::i;:::-;3140:7;:11;;:42;;;;:::i;:::-;3201:4;3054:13;:166::i;:::-;2939:281;3238:130;3260:6;3281:10;3306:7;3328:29;3338:6;3346:10;3328:9;:29::i;:::-;3238:130;;;;;;;;;:::i;:::-;;;;;;;;2469:907;2352:1024;;;:::o;494:30::-;;;:::o;5617:371::-;6231:4;6209:27;;:10;:27;;;:62;;;;6262:8;;;;;;;;;;;6240:31;;:10;:31;;;6209:62;6187:138;;;;;;;;;;;;:::i;:::-;;;;;;;;;5778:5:::1;5774:207;;;5826:36;5854:7;5826:8;:16;5835:6;5826:16;;;;;;;;;;;;;;;:23;5843:5;5826:23;;;;;;;;;;;;;;;;:27;;:36;;;;:::i;:::-;5800:8;:16;5809:6;5800:16;;;;;;;;;;;;;;;:23;5817:5;5800:23;;;;;;;;;;;;;;;:62;;;;5774:207;;;5885:5;5880:101;;5933:36;5961:7;5933:8;:16;5942:6;5933:16;;;;;;;;;;;;;;;:23;5950:5;5933:23;;;;;;;;;;;;;;;;:27;;:36;;;;:::i;:::-;5907:8;:16;5916:6;5907:16;;;;;;;;;;;;;;;:23;5924:5;5907:23;;;;;;;;;;;;;;;:62;;;;5880:101;5774:207;5617:371:::0;;;;:::o;722:63::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1549:704::-;1738:7;1629:105;1683:36;1698:10;1710:8;;;;;;;;;;;1683:14;:36::i;:::-;1629:31;1639:8;;;;;;;;;;;1649:10;1629:9;:31::i;:::-;:35;;:105;;;;:::i;:::-;:116;;1607:202;;;;;;;;;;;;:::i;:::-;;;;;;;;;1829:6;;;;;;;;;;;1828:7;1820:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;1884:4;1875:6;;:13;;;;;;;;;;;;;;;;;;1899:51;1913:8;;;;;;;;;;;1923:10;1935:7;1944:5;1899:13;:51::i;:::-;1970:5;1961:6;;:14;;;;;;;;;;;;;;;;;;1987:12;2005:10;:15;;2028:7;2005:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1986:54;;;2059:7;2051:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:135;2133:8;;;;;;;;;;;2156:10;2181:7;2203:31;2213:8;;;;;;;;;;;2223:10;2203:9;:31::i;:::-;2110:135;;;;;;;;;:::i;:::-;;;;;;;;1596:657;1549:704;:::o;2081:198:2:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1277:264:8:-;1327:52;1341:8;;;;;;;;;;;1351:10;1363:9;1374:4;1327:13;:52::i;:::-;1397:136;1419:8;;;;;;;;;;;1442:10;1467:9;1491:31;1501:8;;;;;;;;;;;1511:10;1491:9;:31::i;:::-;1397:136;;;;;;;;;:::i;:::-;;;;;;;;1277:264::o;5455:154::-;5551:7;5578:8;:16;5587:6;5578:16;;;;;;;;;;;;;;;:23;5595:5;5578:23;;;;;;;;;;;;;;;;5571:30;;5455:154;;;;:::o;1359:130:2:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2755:96:4:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3122:::-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;2433:187:2:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;3465:96:4:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;640::3:-;693:7;719:10;712:17;;640:96;:::o;7:139:12:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:133::-;195:5;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;152:133;;;;:::o;291:137::-;345:5;376:6;370:13;361:22;;392:30;416:5;392:30;:::i;:::-;291:137;;;;:::o;434:139::-;480:5;518:6;505:20;496:29;;534:33;561:5;534:33;:::i;:::-;434:139;;;;:::o;579:329::-;638:6;687:2;675:9;666:7;662:23;658:32;655:119;;;693:79;;:::i;:::-;655:119;813:1;838:53;883:7;874:6;863:9;859:22;838:53;:::i;:::-;828:63;;784:117;579:329;;;;:::o;914:474::-;982:6;990;1039:2;1027:9;1018:7;1014:23;1010:32;1007:119;;;1045:79;;:::i;:::-;1007:119;1165:1;1190:53;1235:7;1226:6;1215:9;1211:22;1190:53;:::i;:::-;1180:63;;1136:117;1292:2;1318:53;1363:7;1354:6;1343:9;1339:22;1318:53;:::i;:::-;1308:63;;1263:118;914:474;;;;;:::o;1394:759::-;1477:6;1485;1493;1501;1550:3;1538:9;1529:7;1525:23;1521:33;1518:120;;;1557:79;;:::i;:::-;1518:120;1677:1;1702:53;1747:7;1738:6;1727:9;1723:22;1702:53;:::i;:::-;1692:63;;1648:117;1804:2;1830:53;1875:7;1866:6;1855:9;1851:22;1830:53;:::i;:::-;1820:63;;1775:118;1932:2;1958:53;2003:7;1994:6;1983:9;1979:22;1958:53;:::i;:::-;1948:63;;1903:118;2060:2;2086:50;2128:7;2119:6;2108:9;2104:22;2086:50;:::i;:::-;2076:60;;2031:115;1394:759;;;;;;;:::o;2159:619::-;2236:6;2244;2252;2301:2;2289:9;2280:7;2276:23;2272:32;2269:119;;;2307:79;;:::i;:::-;2269:119;2427:1;2452:53;2497:7;2488:6;2477:9;2473:22;2452:53;:::i;:::-;2442:63;;2398:117;2554:2;2580:53;2625:7;2616:6;2605:9;2601:22;2580:53;:::i;:::-;2570:63;;2525:118;2682:2;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2653:118;2159:619;;;;;:::o;2784:345::-;2851:6;2900:2;2888:9;2879:7;2875:23;2871:32;2868:119;;;2906:79;;:::i;:::-;2868:119;3026:1;3051:61;3104:7;3095:6;3084:9;3080:22;3051:61;:::i;:::-;3041:71;;2997:125;2784:345;;;;:::o;3135:329::-;3194:6;3243:2;3231:9;3222:7;3218:23;3214:32;3211:119;;;3249:79;;:::i;:::-;3211:119;3369:1;3394:53;3439:7;3430:6;3419:9;3415:22;3394:53;:::i;:::-;3384:63;;3340:117;3135:329;;;;:::o;3470:118::-;3557:24;3575:5;3557:24;:::i;:::-;3552:3;3545:37;3470:118;;:::o;3594:366::-;3736:3;3757:67;3821:2;3816:3;3757:67;:::i;:::-;3750:74;;3833:93;3922:3;3833:93;:::i;:::-;3951:2;3946:3;3942:12;3935:19;;3594:366;;;:::o;3966:::-;4108:3;4129:67;4193:2;4188:3;4129:67;:::i;:::-;4122:74;;4205:93;4294:3;4205:93;:::i;:::-;4323:2;4318:3;4314:12;4307:19;;3966:366;;;:::o;4338:::-;4480:3;4501:67;4565:2;4560:3;4501:67;:::i;:::-;4494:74;;4577:93;4666:3;4577:93;:::i;:::-;4695:2;4690:3;4686:12;4679:19;;4338:366;;;:::o;4710:::-;4852:3;4873:67;4937:2;4932:3;4873:67;:::i;:::-;4866:74;;4949:93;5038:3;4949:93;:::i;:::-;5067:2;5062:3;5058:12;5051:19;;4710:366;;;:::o;5082:::-;5224:3;5245:67;5309:2;5304:3;5245:67;:::i;:::-;5238:74;;5321:93;5410:3;5321:93;:::i;:::-;5439:2;5434:3;5430:12;5423:19;;5082:366;;;:::o;5454:::-;5596:3;5617:67;5681:2;5676:3;5617:67;:::i;:::-;5610:74;;5693:93;5782:3;5693:93;:::i;:::-;5811:2;5806:3;5802:12;5795:19;;5454:366;;;:::o;5826:::-;5968:3;5989:67;6053:2;6048:3;5989:67;:::i;:::-;5982:74;;6065:93;6154:3;6065:93;:::i;:::-;6183:2;6178:3;6174:12;6167:19;;5826:366;;;:::o;6198:::-;6340:3;6361:67;6425:2;6420:3;6361:67;:::i;:::-;6354:74;;6437:93;6526:3;6437:93;:::i;:::-;6555:2;6550:3;6546:12;6539:19;;6198:366;;;:::o;6570:398::-;6729:3;6750:83;6831:1;6826:3;6750:83;:::i;:::-;6743:90;;6842:93;6931:3;6842:93;:::i;:::-;6960:1;6955:3;6951:11;6944:18;;6570:398;;;:::o;6974:366::-;7116:3;7137:67;7201:2;7196:3;7137:67;:::i;:::-;7130:74;;7213:93;7302:3;7213:93;:::i;:::-;7331:2;7326:3;7322:12;7315:19;;6974:366;;;:::o;7346:118::-;7433:24;7451:5;7433:24;:::i;:::-;7428:3;7421:37;7346:118;;:::o;7470:379::-;7654:3;7676:147;7819:3;7676:147;:::i;:::-;7669:154;;7840:3;7833:10;;7470:379;;;:::o;7855:222::-;7948:4;7986:2;7975:9;7971:18;7963:26;;7999:71;8067:1;8056:9;8052:17;8043:6;7999:71;:::i;:::-;7855:222;;;;:::o;8083:442::-;8232:4;8270:2;8259:9;8255:18;8247:26;;8283:71;8351:1;8340:9;8336:17;8327:6;8283:71;:::i;:::-;8364:72;8432:2;8421:9;8417:18;8408:6;8364:72;:::i;:::-;8446;8514:2;8503:9;8499:18;8490:6;8446:72;:::i;:::-;8083:442;;;;;;:::o;8531:553::-;8708:4;8746:3;8735:9;8731:19;8723:27;;8760:71;8828:1;8817:9;8813:17;8804:6;8760:71;:::i;:::-;8841:72;8909:2;8898:9;8894:18;8885:6;8841:72;:::i;:::-;8923;8991:2;8980:9;8976:18;8967:6;8923:72;:::i;:::-;9005;9073:2;9062:9;9058:18;9049:6;9005:72;:::i;:::-;8531:553;;;;;;;:::o;9090:332::-;9211:4;9249:2;9238:9;9234:18;9226:26;;9262:71;9330:1;9319:9;9315:17;9306:6;9262:71;:::i;:::-;9343:72;9411:2;9400:9;9396:18;9387:6;9343:72;:::i;:::-;9090:332;;;;;:::o;9428:419::-;9594:4;9632:2;9621:9;9617:18;9609:26;;9681:9;9675:4;9671:20;9667:1;9656:9;9652:17;9645:47;9709:131;9835:4;9709:131;:::i;:::-;9701:139;;9428:419;;;:::o;9853:::-;10019:4;10057:2;10046:9;10042:18;10034:26;;10106:9;10100:4;10096:20;10092:1;10081:9;10077:17;10070:47;10134:131;10260:4;10134:131;:::i;:::-;10126:139;;9853:419;;;:::o;10278:::-;10444:4;10482:2;10471:9;10467:18;10459:26;;10531:9;10525:4;10521:20;10517:1;10506:9;10502:17;10495:47;10559:131;10685:4;10559:131;:::i;:::-;10551:139;;10278:419;;;:::o;10703:::-;10869:4;10907:2;10896:9;10892:18;10884:26;;10956:9;10950:4;10946:20;10942:1;10931:9;10927:17;10920:47;10984:131;11110:4;10984:131;:::i;:::-;10976:139;;10703:419;;;:::o;11128:::-;11294:4;11332:2;11321:9;11317:18;11309:26;;11381:9;11375:4;11371:20;11367:1;11356:9;11352:17;11345:47;11409:131;11535:4;11409:131;:::i;:::-;11401:139;;11128:419;;;:::o;11553:::-;11719:4;11757:2;11746:9;11742:18;11734:26;;11806:9;11800:4;11796:20;11792:1;11781:9;11777:17;11770:47;11834:131;11960:4;11834:131;:::i;:::-;11826:139;;11553:419;;;:::o;11978:::-;12144:4;12182:2;12171:9;12167:18;12159:26;;12231:9;12225:4;12221:20;12217:1;12206:9;12202:17;12195:47;12259:131;12385:4;12259:131;:::i;:::-;12251:139;;11978:419;;;:::o;12403:::-;12569:4;12607:2;12596:9;12592:18;12584:26;;12656:9;12650:4;12646:20;12642:1;12631:9;12627:17;12620:47;12684:131;12810:4;12684:131;:::i;:::-;12676:139;;12403:419;;;:::o;12828:::-;12994:4;13032:2;13021:9;13017:18;13009:26;;13081:9;13075:4;13071:20;13067:1;13056:9;13052:17;13045:47;13109:131;13235:4;13109:131;:::i;:::-;13101:139;;12828:419;;;:::o;13253:222::-;13346:4;13384:2;13373:9;13369:18;13361:26;;13397:71;13465:1;13454:9;13450:17;13441:6;13397:71;:::i;:::-;13253:222;;;;:::o;13562:147::-;13663:11;13700:3;13685:18;;13562:147;;;;:::o;13715:169::-;13799:11;13833:6;13828:3;13821:19;13873:4;13868:3;13864:14;13849:29;;13715:169;;;;:::o;13890:305::-;13930:3;13949:20;13967:1;13949:20;:::i;:::-;13944:25;;13983:20;14001:1;13983:20;:::i;:::-;13978:25;;14137:1;14069:66;14065:74;14062:1;14059:81;14056:107;;;14143:18;;:::i;:::-;14056:107;14187:1;14184;14180:9;14173:16;;13890:305;;;;:::o;14201:185::-;14241:1;14258:20;14276:1;14258:20;:::i;:::-;14253:25;;14292:20;14310:1;14292:20;:::i;:::-;14287:25;;14331:1;14321:35;;14336:18;;:::i;:::-;14321:35;14378:1;14375;14371:9;14366:14;;14201:185;;;;:::o;14392:848::-;14453:5;14460:4;14484:6;14475:15;;14508:5;14499:14;;14522:712;14543:1;14533:8;14530:15;14522:712;;;14638:4;14633:3;14629:14;14623:4;14620:24;14617:50;;;14647:18;;:::i;:::-;14617:50;14697:1;14687:8;14683:16;14680:451;;;15112:4;15105:5;15101:16;15092:25;;14680:451;15162:4;15156;15152:15;15144:23;;15192:32;15215:8;15192:32;:::i;:::-;15180:44;;14522:712;;;14392:848;;;;;;;:::o;15246:285::-;15306:5;15330:23;15348:4;15330:23;:::i;:::-;15322:31;;15374:27;15392:8;15374:27;:::i;:::-;15362:39;;15420:104;15457:66;15447:8;15441:4;15420:104;:::i;:::-;15411:113;;15246:285;;;;:::o;15537:1073::-;15591:5;15782:8;15772:40;;15803:1;15794:10;;15805:5;;15772:40;15831:4;15821:36;;15848:1;15839:10;;15850:5;;15821:36;15917:4;15965:1;15960:27;;;;16001:1;15996:191;;;;15910:277;;15960:27;15978:1;15969:10;;15980:5;;;15996:191;16041:3;16031:8;16028:17;16025:43;;;16048:18;;:::i;:::-;16025:43;16097:8;16094:1;16090:16;16081:25;;16132:3;16125:5;16122:14;16119:40;;;16139:18;;:::i;:::-;16119:40;16172:5;;;15910:277;;16296:2;16286:8;16283:16;16277:3;16271:4;16268:13;16264:36;16246:2;16236:8;16233:16;16228:2;16222:4;16219:12;16215:35;16199:111;16196:246;;;16352:8;16346:4;16342:19;16333:28;;16387:3;16380:5;16377:14;16374:40;;;16394:18;;:::i;:::-;16374:40;16427:5;;16196:246;16467:42;16505:3;16495:8;16489:4;16486:1;16467:42;:::i;:::-;16452:57;;;;16541:4;16536:3;16532:14;16525:5;16522:25;16519:51;;;16550:18;;:::i;:::-;16519:51;16599:4;16592:5;16588:16;16579:25;;15537:1073;;;;;;:::o;16616:348::-;16656:7;16679:20;16697:1;16679:20;:::i;:::-;16674:25;;16713:20;16731:1;16713:20;:::i;:::-;16708:25;;16901:1;16833:66;16829:74;16826:1;16823:81;16818:1;16811:9;16804:17;16800:105;16797:131;;;16908:18;;:::i;:::-;16797:131;16956:1;16953;16949:9;16938:20;;16616:348;;;;:::o;16970:191::-;17010:4;17030:20;17048:1;17030:20;:::i;:::-;17025:25;;17064:20;17082:1;17064:20;:::i;:::-;17059:25;;17103:1;17100;17097:8;17094:34;;;17108:18;;:::i;:::-;17094:34;17153:1;17150;17146:9;17138:17;;16970:191;;;;:::o;17167:96::-;17204:7;17233:24;17251:5;17233:24;:::i;:::-;17222:35;;17167:96;;;:::o;17269:90::-;17303:7;17346:5;17339:13;17332:21;17321:32;;17269:90;;;:::o;17365:126::-;17402:7;17442:42;17435:5;17431:54;17420:65;;17365:126;;;:::o;17497:77::-;17534:7;17563:5;17552:16;;17497:77;;;:::o;17580:180::-;17628:77;17625:1;17618:88;17725:4;17722:1;17715:15;17749:4;17746:1;17739:15;17766:180;17814:77;17811:1;17804:88;17911:4;17908:1;17901:15;17935:4;17932:1;17925:15;18075:117;18184:1;18181;18174:12;18198:102;18240:8;18287:5;18284:1;18280:13;18259:34;;18198:102;;;:::o;18306:174::-;18446:26;18442:1;18434:6;18430:14;18423:50;18306:174;:::o;18486:225::-;18626:34;18622:1;18614:6;18610:14;18603:58;18695:8;18690:2;18682:6;18678:15;18671:33;18486:225;:::o;18717:171::-;18857:23;18853:1;18845:6;18841:14;18834:47;18717:171;:::o;18894:223::-;19034:34;19030:1;19022:6;19018:14;19011:58;19103:6;19098:2;19090:6;19086:15;19079:31;18894:223;:::o;19123:180::-;19263:32;19259:1;19251:6;19247:14;19240:56;19123:180;:::o;19309:182::-;19449:34;19445:1;19437:6;19433:14;19426:58;19309:182;:::o;19497:181::-;19637:33;19633:1;19625:6;19621:14;19614:57;19497:181;:::o;19684:176::-;19824:28;19820:1;19812:6;19808:14;19801:52;19684:176;:::o;19866:114::-;;:::o;19986:165::-;20126:17;20122:1;20114:6;20110:14;20103:41;19986:165;:::o;20157:122::-;20230:24;20248:5;20230:24;:::i;:::-;20223:5;20220:35;20210:63;;20269:1;20266;20259:12;20210:63;20157:122;:::o;20285:116::-;20355:21;20370:5;20355:21;:::i;:::-;20348:5;20345:32;20335:60;;20391:1;20388;20381:12;20335:60;20285:116;:::o;20407:122::-;20480:24;20498:5;20480:24;:::i;:::-;20473:5;20470:35;20460:63;;20519:1;20516;20509:12;20460:63;20407:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1867600","executionCost":"infinite","totalCost":"infinite"},"external":{"Owner()":"infinite","aETH()":"2603","balanceOf(address,address)":"infinite","depositETH()":"infinite","depositToken(address,uint256,uint256)":"infinite","ethToken()":"2559","getlockedFunds(address,address)":"infinite","lockedFunds(address,address)":"infinite","owner()":"2589","renounceOwnership()":"30421","s_tokens(address,address)":"infinite","transferOwnership(address)":"30813","updateBalance(address,address,uint256,bool)":"infinite","updateExchangeAddress(address)":"27010","updateLockedFunds(address,address,uint256,bool)":"infinite","withdrawETH(uint256)":"infinite","withdrawToken(address,uint256,uint256)":"infinite"}},"methodIdentifiers":{"Owner()":"b4a99a4e","aETH()":"92f63d2e","balanceOf(address,address)":"f7888aec","depositETH()":"f6326fb3","depositToken(address,uint256,uint256)":"99c6d2de","ethToken()":"7bf1a627","getlockedFunds(address,address)":"4fc121db","lockedFunds(address,address)":"4bdde1cf","owner()":"8da5cb5b","renounceOwnership()":"715018a6","s_tokens(address,address)":"cd5d767c","transferOwnership(address)":"f2fde38b","updateBalance(address,address,uint256,bool)":"c5ab4602","updateExchangeAddress(address)":"31415a65","updateLockedFunds(address,address,uint256,bool)":"46a8f820","withdrawETH(uint256)":"f14210a6","withdrawToken(address,uint256,uint256)":"96c0ec55"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getlockedFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_tokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAdd\",\"type\":\"bool\"}],\"name\":\"updateBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_exchangeAddress\",\"type\":\"address\"}],\"name\":\"updateExchangeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAdd\",\"type\":\"bool\"}],\"name\":\"updateLockedFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Withdraw(address,address,uint256,uint256)\":{\"notice\":\"Event when amount withdrawn exchange\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Wallet.sol\":\"Wallet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/Exchange.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./PriceChecker.sol\\\";\\r\\nimport \\\"./TradingFees.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Exchange is Ownable {\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n    PriceChecker priceChecker;\\r\\n    TradingFees tradingFees;\\r\\n    Wallet wallet;\\r\\n\\r\\n    uint256 decimals = 10 ** 18;\\r\\n    address public ethToken = address(0);\\r\\n    address public aETH = address(0x22404B0e2a7067068AcdaDd8f9D586F834cCe2c5);\\r\\n\\r\\n    //Token Address List available in DEX\\r\\n    _tokenInfo[] public tokenList;\\r\\n\\r\\n    //s_orderBook mappping: tokenAddress -> Side -> Order Array\\r\\n    mapping(address => mapping(uint256 => _Order[])) public s_orderBook;\\r\\n\\r\\n    mapping(address => mapping(uint256 => _filledOrder[]))\\r\\n        public s_filledOrders;\\r\\n\\r\\n    uint256 public s_orderId = 0;\\r\\n    bool private s_isManual = true;\\r\\n\\r\\n    struct _tokenInfo {\\r\\n        address add;\\r\\n        uint256 decimals;\\r\\n    }\\r\\n\\r\\n    struct _fillOrderValues {\\r\\n        uint256 rate;\\r\\n        uint256 amount;\\r\\n    }\\r\\n\\r\\n    //Structs representing an order that has unique id, user and amounts to give and get between two tokens to exchange\\r\\n    struct _Order {\\r\\n        uint256 id;\\r\\n        Side side;\\r\\n        address user;\\r\\n        address tokenA;\\r\\n        uint256 amountA;\\r\\n        address tokenB;\\r\\n        uint256 amountB;\\r\\n        uint256 rate; // TokenB/TokenA = price in terms of TokenB\\r\\n        uint256 originalAmountA;\\r\\n        uint256 originalAmountB;\\r\\n        bool waiveFees;\\r\\n    }\\r\\n\\r\\n    //For any order that is filled even if it is partially filled or fully filled\\r\\n    struct _filledOrder {\\r\\n        uint256 id;\\r\\n        Side side;\\r\\n        address user;\\r\\n        address tokenA;\\r\\n        address tokenB;\\r\\n        uint256 amountFilled;\\r\\n        uint256 fillRate;\\r\\n        uint256 originalRate;\\r\\n        uint256 originalAmountA;\\r\\n        uint256 originalAmountB;\\r\\n        bool feesWaived;\\r\\n        uint256 feesPaid; //in terms of ETH\\r\\n    }\\r\\n\\r\\n    enum Side {\\r\\n        BUY,\\r\\n        SELL\\r\\n    }\\r\\n\\r\\n    //add events\\r\\n    /// @notice Event when an order is placed on an exchange\\r\\n    event Order(\\r\\n        uint256 id,\\r\\n        Side side,\\r\\n        address user,\\r\\n        address tokenA,\\r\\n        uint256 amountA,\\r\\n        address tokenB,\\r\\n        uint256 amountB,\\r\\n        uint256 rate,\\r\\n        uint256 originalAmountA,\\r\\n        uint256 originalAmountB,\\r\\n        bool waiveFees\\r\\n    );\\r\\n\\r\\n    /// @notice Event when an order is cancelled\\r\\n    event Cancel(\\r\\n        uint256 id,\\r\\n        Side side,\\r\\n        address user,\\r\\n        address tokenA,\\r\\n        uint256 amountA,\\r\\n        address tokenB,\\r\\n        uint256 amountB,\\r\\n        uint256 rate,\\r\\n        uint256 originalAmountA,\\r\\n        uint256 originalAmountB,\\r\\n        bool waiveFees\\r\\n    );\\r\\n\\r\\n    event fillBuyOrder(\\r\\n        _Order remainingOrder,\\r\\n        uint256 amountBought,\\r\\n        uint256 fillBuyRate,\\r\\n        bool feesWaived,\\r\\n        uint256 feesPaid\\r\\n    );\\r\\n\\r\\n    event fillSellOrder(\\r\\n        _Order remainingOrder,\\r\\n        uint256 amountSold,\\r\\n        uint256 fillSellRate,\\r\\n        bool feesWaived,\\r\\n        uint256 feesPaid\\r\\n    );\\r\\n\\r\\n    function createLimitBuyOrder(\\r\\n        // TokenA/TokenB\\r\\n        address _tokenA,\\r\\n        uint256 _amountA,\\r\\n        address _tokenB,\\r\\n        uint256 _amountB,\\r\\n        uint256 _rate,\\r\\n        bool _waiveFees\\r\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\r\\n        //Amount user has deposited in the DEX must be >= value he wants to buy\\r\\n        require(\\r\\n            wallet.balanceOf(_tokenB, msg.sender).sub(\\r\\n                wallet.getlockedFunds(msg.sender, _tokenB)\\r\\n            ) >= _amountB,\\r\\n            \\\"Insufficient Funds\\\"\\r\\n        );\\r\\n\\r\\n        wallet.updateLockedFunds(msg.sender, _tokenB, _amountB, true);\\r\\n\\r\\n        s_orderBook[_tokenA][uint256(Side.BUY)].push(\\r\\n            _Order(\\r\\n                s_orderId,\\r\\n                Side.BUY,\\r\\n                msg.sender,\\r\\n                _tokenA,\\r\\n                _amountA,\\r\\n                _tokenB,\\r\\n                _amountB,\\r\\n                _rate,\\r\\n                _amountA,\\r\\n                _amountB,\\r\\n                _waiveFees\\r\\n            )\\r\\n        );\\r\\n\\r\\n        emit Order(\\r\\n            s_orderId,\\r\\n            Side.BUY,\\r\\n            msg.sender,\\r\\n            _tokenA,\\r\\n            _amountA,\\r\\n            _tokenB,\\r\\n            _amountB,\\r\\n            _rate,\\r\\n            _amountA,\\r\\n            _amountB,\\r\\n            _waiveFees\\r\\n        );\\r\\n\\r\\n        s_orderId = s_orderId.add(1);\\r\\n    }\\r\\n\\r\\n    function createLimitSellOrder(\\r\\n        address _tokenA,\\r\\n        uint256 _amountA,\\r\\n        address _tokenB,\\r\\n        uint256 _amountB,\\r\\n        uint256 _rate,\\r\\n        bool _waiveFees\\r\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\r\\n        //Amount of tokens user deposit in DEX must be >= the amount of tokens they want to sell\\r\\n        require(\\r\\n            wallet.balanceOf(_tokenA, msg.sender).sub(\\r\\n                wallet.getlockedFunds(msg.sender, _tokenA)\\r\\n            ) >= _amountA,\\r\\n            \\\"Insufficient Funds\\\"\\r\\n        );\\r\\n\\r\\n        //Lock the funds (tokens) in the wallet\\r\\n        wallet.updateLockedFunds(msg.sender, _tokenA, _amountA, true);\\r\\n\\r\\n        s_orderBook[_tokenA][uint256(Side.SELL)].push(\\r\\n            _Order(\\r\\n                s_orderId,\\r\\n                Side.SELL,\\r\\n                msg.sender,\\r\\n                _tokenA,\\r\\n                _amountA,\\r\\n                _tokenB,\\r\\n                _amountB,\\r\\n                _rate,\\r\\n                _amountA,\\r\\n                _amountB,\\r\\n                _waiveFees\\r\\n            )\\r\\n        );\\r\\n\\r\\n        emit Order(\\r\\n            s_orderId,\\r\\n            Side.SELL,\\r\\n            msg.sender,\\r\\n            _tokenA,\\r\\n            _amountA,\\r\\n            _tokenB,\\r\\n            _amountB,\\r\\n            _rate,\\r\\n            _amountA,\\r\\n            _amountB,\\r\\n            _waiveFees\\r\\n        );\\r\\n\\r\\n        s_orderId = s_orderId.add(1);\\r\\n    }\\r\\n\\r\\n    function cancelOrder(\\r\\n        Side side,\\r\\n        uint256 _id,\\r\\n        address _token\\r\\n    ) public validOrder(_id, side, _token) validToken(_token) {\\r\\n        _Order[] storage _order = s_orderBook[_token][uint256(side)];\\r\\n        uint256 size = _order.length;\\r\\n        _Order memory order;\\r\\n\\r\\n        uint256 index;\\r\\n        for (uint256 i = 0; i < size; i++) {\\r\\n            if (_order[i].id == _id) {\\r\\n                index = i;\\r\\n                order = _order[i];\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        //Manual cancellation of orders\\r\\n        if (s_isManual) {\\r\\n            require(msg.sender == order.user, \\\"Not Owner\\\");\\r\\n\\r\\n            //Unlock funds\\r\\n            if (side == Side.BUY) {\\r\\n                wallet.updateLockedFunds(\\r\\n                    msg.sender,\\r\\n                    order.tokenB,\\r\\n                    order.amountB,\\r\\n                    false\\r\\n                );\\r\\n            } else if (side == Side.SELL) {\\r\\n                wallet.updateLockedFunds(\\r\\n                    msg.sender,\\r\\n                    order.tokenA,\\r\\n                    order.amountA,\\r\\n                    false\\r\\n                );\\r\\n            }\\r\\n        }\\r\\n\\r\\n        for (uint256 j = index; j < size - 1; j++) {\\r\\n            _order[j] = _order[j.add(1)];\\r\\n        }\\r\\n        delete _order[size.sub(1)];\\r\\n        _order.pop();\\r\\n\\r\\n        s_orderBook[_token][uint256(side)] = _order;\\r\\n\\r\\n        emit Cancel(\\r\\n            _id,\\r\\n            order.side,\\r\\n            order.user,\\r\\n            order.tokenA,\\r\\n            order.amountA,\\r\\n            order.tokenB,\\r\\n            order.amountB,\\r\\n            order.rate,\\r\\n            order.originalAmountA,\\r\\n            order.originalAmountB,\\r\\n            order.waiveFees\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function fillOrder(\\r\\n        Side side,\\r\\n        uint256 _id,\\r\\n        address _token,\\r\\n        _fillOrderValues memory a\\r\\n    ) internal validOrder(_id, side, _token) validToken(_token) {\\r\\n        uint256 _side = uint256(side);\\r\\n        (_Order memory order, uint256 index) = getOrderFromArray(\\r\\n            _token,\\r\\n            _side,\\r\\n            _id\\r\\n        );\\r\\n\\r\\n        require(order.amountA >= a.amount, \\\"Invalid Order Amount to fill\\\");\\r\\n\\r\\n        order.amountA = order.amountA.sub(a.amount);\\r\\n        order.amountB = order.amountB.sub(\\r\\n            order.rate.mul(a.amount).div(decimals)\\r\\n        );\\r\\n        s_orderBook[_token][_side][index].amountA = order.amountA;\\r\\n        s_orderBook[_token][_side][index].amountB = order.amountB;\\r\\n\\r\\n        uint256 fees = tradingFees.calculateFees(\\r\\n            a.amount,\\r\\n            a.rate,\\r\\n            order.tokenB\\r\\n        ); //fees in ETH\\r\\n        bool feesWaived = order.waiveFees &&\\r\\n            tradingFees.checkSufficientaETH(fees, order.user);\\r\\n\\r\\n        if (side == Side.BUY) {\\r\\n            fillBuyOrders(order, a.amount, a.rate, feesWaived, fees);\\r\\n            emit fillBuyOrder(order, a.amount, a.rate, feesWaived, fees);\\r\\n        } else if (side == Side.SELL) {\\r\\n            fillSellOrders(order, a.amount, a.rate, feesWaived, fees);\\r\\n            emit fillSellOrder(order, a.amount, a.rate, feesWaived, fees);\\r\\n        }\\r\\n\\r\\n        if (order.amountA == 0) {\\r\\n            s_isManual = false;\\r\\n            cancelOrder(side, order.id, order.tokenA); //remove filled orders\\r\\n            s_isManual = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function fillBuyOrders(\\r\\n        _Order memory order,\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        bool feesWaived,\\r\\n        uint256 fees\\r\\n    ) internal {\\r\\n        if (feesWaived) {\\r\\n            //Deduct aETH\\r\\n            wallet.updateBalance(aETH, order.user, fees, false);\\r\\n            //Credit Bought tokens\\r\\n            wallet.updateBalance(order.tokenA, order.user, _amount, true);\\r\\n        } else {\\r\\n            uint256 amountToDeduct = tradingFees.amountToDeduct(\\r\\n                order.tokenA,\\r\\n                fees\\r\\n            );\\r\\n            //Credit Bought tokens after minusing fees\\r\\n            wallet.updateBalance(\\r\\n                order.tokenA,\\r\\n                order.user,\\r\\n                _amount.sub(amountToDeduct),\\r\\n                true\\r\\n            );\\r\\n        }\\r\\n\\r\\n        //Original Locked Funds unlocked\\r\\n        wallet.updateLockedFunds(\\r\\n            order.user,\\r\\n            order.tokenB,\\r\\n            (order.rate.mul(_amount)).div(decimals),\\r\\n            false\\r\\n        );\\r\\n\\r\\n        //buyer update\\r\\n        //Buyer balance deducted from what he paid\\r\\n        wallet.updateBalance(\\r\\n            order.tokenB,\\r\\n            order.user,\\r\\n            (_rate.mul(_amount)).div(decimals),\\r\\n            false\\r\\n        );\\r\\n\\r\\n        s_filledOrders[order.user][0].push(\\r\\n            _filledOrder(\\r\\n                order.id,\\r\\n                order.side,\\r\\n                order.user,\\r\\n                order.tokenA,\\r\\n                order.tokenB,\\r\\n                _amount,\\r\\n                _rate,\\r\\n                order.rate,\\r\\n                order.originalAmountA,\\r\\n                order.originalAmountB,\\r\\n                feesWaived,\\r\\n                fees\\r\\n            )\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function fillSellOrders(\\r\\n        _Order memory order,\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        bool feesWaived,\\r\\n        uint256 fees\\r\\n    ) internal {\\r\\n        if (feesWaived) {\\r\\n            //Deduct aETH\\r\\n            wallet.updateBalance(aETH, order.user, fees, false);\\r\\n            //Credit Earned tokens\\r\\n            wallet.updateBalance(\\r\\n                order.tokenB,\\r\\n                order.user,\\r\\n                (_rate.mul(_amount)).div(decimals),\\r\\n                true\\r\\n            );\\r\\n        } else {\\r\\n            uint256 amountToDeduct = tradingFees.amountToDeduct(\\r\\n                order.tokenB,\\r\\n                fees\\r\\n            );\\r\\n            //Credit Earned tokens after minusing fees\\r\\n            wallet.updateBalance(\\r\\n                order.tokenB,\\r\\n                order.user,\\r\\n                (_rate.mul(_amount)).div(decimals).sub(amountToDeduct),\\r\\n                true\\r\\n            );\\r\\n        }\\r\\n\\r\\n        wallet.updateLockedFunds(order.user, order.tokenA, _amount, false);\\r\\n        //seller update\\r\\n        wallet.updateBalance(order.tokenA, order.user, _amount, false);\\r\\n    }\\r\\n\\r\\n    function matchOrders(\\r\\n        address _token,\\r\\n        uint256 _id,\\r\\n        Side side\\r\\n    ) internal validOrder(_id, side, _token) validToken(_token) {\\r\\n        uint256 saleTokenAmt;\\r\\n\\r\\n        if (side == Side.BUY) {\\r\\n            //Retrieve sell order to match\\r\\n            _Order[] memory _sellOrder = s_orderBook[_token][1];\\r\\n            for (uint256 i = 0; i < _sellOrder.length; i++) {\\r\\n                //Retrieve buy order to be filled\\r\\n                (_Order memory buyOrderToFill, ) = getOrderFromArray(\\r\\n                    _token,\\r\\n                    uint8(side),\\r\\n                    _id\\r\\n                );\\r\\n                //sell order hit buyer's limit price & tokenB matches\\r\\n                if (\\r\\n                    _sellOrder[i].rate <= buyOrderToFill.rate &&\\r\\n                    buyOrderToFill.tokenB == _sellOrder[i].tokenB\\r\\n                ) {\\r\\n                    _Order memory sellOrder = _sellOrder[i];\\r\\n                    //if buyer's amount to buy > seller's amount to sell\\r\\n                    if (buyOrderToFill.amountA > sellOrder.amountA) {\\r\\n                        saleTokenAmt = sellOrder.amountA;\\r\\n                    }\\r\\n                    //if seller's amount to sell >= buyer's amount to buy\\r\\n                    else if (buyOrderToFill.amountA <= sellOrder.amountA) {\\r\\n                        saleTokenAmt = buyOrderToFill.amountA;\\r\\n                    }\\r\\n\\r\\n                    //Verify current balance\\r\\n                    require(\\r\\n                        wallet.balanceOf(\\r\\n                            buyOrderToFill.tokenB,\\r\\n                            buyOrderToFill.user\\r\\n                        ) >= (saleTokenAmt.mul(sellOrder.rate)).div(decimals),\\r\\n                        \\\"Insufficient Buyer Token Balance\\\"\\r\\n                    );\\r\\n                    require(\\r\\n                        wallet.balanceOf(_token, sellOrder.user) >=\\r\\n                            saleTokenAmt,\\r\\n                        \\\"Insufficient Seller Token Balance\\\"\\r\\n                    );\\r\\n\\r\\n                    //update orders\\r\\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\\r\\n                        sellOrder.rate,\\r\\n                        saleTokenAmt\\r\\n                    );\\r\\n                    fillOrder(Side.BUY, _id, _token, fillOrderValues);\\r\\n                    fillOrder(Side.SELL, sellOrder.id, _token, fillOrderValues);\\r\\n                }\\r\\n\\r\\n                bool orderExist = orderExists(_id, side, _token);\\r\\n                if (!orderExist) break;\\r\\n            }\\r\\n        } else if (side == Side.SELL) {\\r\\n            //Retrieve buy order to match\\r\\n            _Order[] memory _buyOrder = s_orderBook[_token][0];\\r\\n            for (uint256 i = 0; i < _buyOrder.length; i++) {\\r\\n                //Retrieve sell order to be filled\\r\\n                (_Order memory sellOrderToFill, ) = getOrderFromArray(\\r\\n                    _token,\\r\\n                    1,\\r\\n                    _id\\r\\n                );\\r\\n                //sell order hit buyer's limit price\\r\\n                if (\\r\\n                    _buyOrder[i].rate >= sellOrderToFill.rate &&\\r\\n                    _buyOrder[i].tokenB == sellOrderToFill.tokenB\\r\\n                ) {\\r\\n                    _Order memory order = _buyOrder[i];\\r\\n\\r\\n                    //if seller's amount to sell > buyer's amount to buy\\r\\n                    if (sellOrderToFill.amountA > order.amountA) {\\r\\n                        saleTokenAmt = order.amountA;\\r\\n                    }\\r\\n                    //if buyer's amount to buy > seller's amount to sell\\r\\n                    else if (sellOrderToFill.amountA <= order.amountA) {\\r\\n                        saleTokenAmt = sellOrderToFill.amountA;\\r\\n                    }\\r\\n                    //Verify current balance\\r\\n                    require(\\r\\n                        wallet.balanceOf(_token, sellOrderToFill.user) >=\\r\\n                            saleTokenAmt,\\r\\n                        \\\"Insufficient Seller Token Balance\\\"\\r\\n                    );\\r\\n                    require(\\r\\n                        wallet.balanceOf(order.tokenB, order.user) >=\\r\\n                            (saleTokenAmt.mul(order.rate)).div(decimals),\\r\\n                        \\\"Insufficient Buyer Token Balance\\\"\\r\\n                    );\\r\\n\\r\\n                    //update orders\\r\\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\\r\\n                        order.rate,\\r\\n                        saleTokenAmt\\r\\n                    );\\r\\n                    fillOrder(Side.SELL, _id, _token, fillOrderValues);\\r\\n                    fillOrder(Side.BUY, order.id, _token, fillOrderValues);\\r\\n                }\\r\\n                bool orderExist = orderExists(_id, side, _token);\\r\\n                if (!orderExist) break;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getOrderLength(\\r\\n        Side side,\\r\\n        address _token\\r\\n    ) public view returns (uint256) {\\r\\n        return s_orderBook[_token][uint256(side)].length;\\r\\n    }\\r\\n\\r\\n    // function getOrder(\\r\\n    //     address _token,\\r\\n    //     uint256 index,\\r\\n    //     Side side\\r\\n    // )\\r\\n    //     public\\r\\n    //     view\\r\\n    //     returns (\\r\\n    //         uint256, //id\\r\\n    //         uint256, //Side\\r\\n    //         address, //user\\r\\n    //         address, //tokenA\\r\\n    //         uint256, //amountA\\r\\n    //         address, //tokenB\\r\\n    //         uint256, //amountB\\r\\n    //         uint256, //rate -> TokenB/TokenA\\r\\n    //         uint256, //originalAmountA\\r\\n    //         uint256, //originalAmountB\\r\\n    //         bool //feesWaived enabled\\r\\n    //     )\\r\\n    // {\\r\\n    //     _Order memory order = s_orderBook[_token][uint256(side)][index];\\r\\n    //     return (\\r\\n    //         order.id,\\r\\n    //         uint256(order.side),\\r\\n    //         order.user,\\r\\n    //         order.tokenA,\\r\\n    //         order.amountA,\\r\\n    //         order.tokenB,\\r\\n    //         order.amountB,\\r\\n    //         order.rate,\\r\\n    //         order.originalAmountA,\\r\\n    //         order.originalAmountB,\\r\\n    //         order.waiveFees\\r\\n    //     );\\r\\n    // }\\r\\n\\r\\n    function getFilledOrderLength(\\r\\n        address _user,\\r\\n        Side side\\r\\n    ) public view returns (uint256) {\\r\\n        return s_filledOrders[_user][uint256(side)].length;\\r\\n    }\\r\\n\\r\\n    // function getFilledOrder(\\r\\n    //     address _user,\\r\\n    //     Side side,\\r\\n    //     uint256 index\\r\\n    // )\\r\\n    //     public\\r\\n    //     view\\r\\n    //     returns (\\r\\n    //         uint256, //id\\r\\n    //         uint256, //side\\r\\n    //         address, //user\\r\\n    //         address, //tokenA\\r\\n    //         address, //tokenB\\r\\n    //         uint256, //amountFilled\\r\\n    //         uint256, //fillRate\\r\\n    //         uint256, //originalRate\\r\\n    //         uint256, //originalAmountA\\r\\n    //         uint256, //originalAmountB\\r\\n    //         bool, //feesWaived\\r\\n    //         uint256 //feesPaid\\r\\n    //     )\\r\\n    // {\\r\\n    //     _filledOrder memory filledOrder = s_filledOrders[_user][uint256(side)][\\r\\n    //         index\\r\\n    //     ];\\r\\n    //     return (\\r\\n    //         filledOrder.id,\\r\\n    //         uint256(filledOrder.side),\\r\\n    //         filledOrder.user,\\r\\n    //         filledOrder.tokenA,\\r\\n    //         filledOrder.tokenB,\\r\\n    //         filledOrder.amountFilled,\\r\\n    //         filledOrder.fillRate,\\r\\n    //         filledOrder.originalRate,\\r\\n    //         filledOrder.originalAmountA,\\r\\n    //         filledOrder.originalAmountB,\\r\\n    //         filledOrder.feesWaived,\\r\\n    //         filledOrder.feesPaid\\r\\n    //     );\\r\\n    // }\\r\\n\\r\\n    function getOrderFromArray(\\r\\n        address _token,\\r\\n        uint256 side,\\r\\n        uint256 _id\\r\\n    ) public view returns (_Order memory, uint256) {\\r\\n        uint256 i = 0;\\r\\n        _Order[] memory _order = s_orderBook[_token][side];\\r\\n        _Order memory order;\\r\\n        for (i; i < _order.length; i++) {\\r\\n            if (_order[i].id == _id) {\\r\\n                order = _order[i];\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        return (order, i);\\r\\n    }\\r\\n\\r\\n    function orderExists(\\r\\n        uint256 _id,\\r\\n        Side side,\\r\\n        address _token\\r\\n    ) public view returns (bool) {\\r\\n        _Order[] memory orders = s_orderBook[_token][uint256(side)];\\r\\n\\r\\n        for (uint256 i = 0; i < orders.length; i++) {\\r\\n            if (orders[i].id == _id) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function addToken(address _token, uint256 _decimals) public onlyOwner {\\r\\n        require(!isVerifiedToken(_token), \\\"Token already verified\\\");\\r\\n        tokenList.push(_tokenInfo(_token, _decimals));\\r\\n    }\\r\\n\\r\\n    function isVerifiedToken(address _token) public view returns (bool) {\\r\\n        //uint256 size = tokenList.length;\\r\\n\\r\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\r\\n            if (tokenList[i].add == _token) return true;\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function getTokenInfo(address _token) public view returns (uint256) {\\r\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\r\\n            if (tokenList[i].add == _token) {\\r\\n                return tokenList[i].decimals;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    modifier validOrder(\\r\\n        uint256 _id,\\r\\n        Side side,\\r\\n        address _token\\r\\n    ) {\\r\\n        require(orderExists(_id, side, _token), \\\"Invalid Order ID\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier validToken(address _token) {\\r\\n        require(isVerifiedToken(_token), \\\"Token unavailable in DEX\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x76eb2771baa68f352d66f561ca21444dcf2b09426e9ef5fe53fb48b2b55db119\",\"license\":\"MIT\"},\"contracts/PriceChecker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract PriceChecker is Ownable {\\r\\n    // We could make this public, but then we'd have to deploy it\\r\\n    _priceFeed[] public priceFeeds;\\r\\n\\r\\n    struct _priceFeed {\\r\\n        string name;\\r\\n        address token;\\r\\n        AggregatorV3Interface priceFeed;\\r\\n    }\\r\\n\\r\\n    //only using PriceFeeds pegged to USD\\r\\n    function addPriceFeed(\\r\\n        string memory _name,\\r\\n        address _token,\\r\\n        address _address\\r\\n    ) external onlyOwner {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n        bool isAdded = false;\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (\\r\\n                keccak256(abi.encodePacked(_name)) ==\\r\\n                keccak256(abi.encodePacked(pricefeed[i].name))\\r\\n            ) {\\r\\n                isAdded = true;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        require(!isAdded, \\\"Price Feed already added\\\");\\r\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(_address);\\r\\n        priceFeeds.push(_priceFeed(_name, _token, priceFeed));\\r\\n    }\\r\\n\\r\\n    function getPriceFeed(\\r\\n        address _token\\r\\n    ) internal view returns (AggregatorV3Interface priceFeed) {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (_token == pricefeed[i].token) {\\r\\n                return pricefeed[i].priceFeed;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getPrice(address _address) external view returns (uint256) {\\r\\n        // Goerli ETH / USD Address\\r\\n        // https://docs.chain.link/docs/ethereum-addresses/\\r\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\r\\n        //     0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\r\\n        // );\\r\\n        AggregatorV3Interface priceFeed = getPriceFeed(_address);\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        // ETH/USD rate in 18 digit\\r\\n        return uint256(answer);\\r\\n        // or (Both will do the same thing)\\r\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xff808af17a6506dedcd342e9c444725ef89b81188c0bc52ff40e148fb84f157d\",\"license\":\"MIT\"},\"contracts/TradingFees.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./PriceChecker.sol\\\";\\r\\nimport \\\"./Wallet.sol\\\";\\r\\nimport \\\"./Exchange.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract TradingFees is Ownable {\\r\\n    //This wallet holds the trading fees collected\\r\\n    //When trading, have an option toggle to waive trading fees or not using deposited aETH\\r\\n    //Users have to first deposit aETH tokens into the Exchange contract to waive, aETH tokens are not for trading\\r\\n    //When a trade order goes through, trading fees of the trade fulfilled  = trade amount x trade price x 0.01,\\r\\n    //contract checks how much aETH is deposited and what is the value of aETH, if sufficient to waive fees fully, deduct balance in deposit\\r\\n    //and waive trading fees\\r\\n\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n\\r\\n    uint256 decimals = 10 ** 18;\\r\\n    address public ethToken = address(0);\\r\\n    address public aETH = address(0x22404B0e2a7067068AcdaDd8f9D586F834cCe2c5);\\r\\n    PriceChecker priceFeed;\\r\\n    Wallet wallet;\\r\\n    Exchange exchange;\\r\\n\\r\\n    function calculateFees(\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        address _refToken\\r\\n    ) external view returns (uint256) {\\r\\n        //Calculated based on TokenB price, require actual price in 18dp\\r\\n        //trading fees is 0.1% of trade = 0.001\\r\\n        //moving up 18dp is 0.001 x 10**18 = 10**14\\r\\n        //have to fetch tokenPrice from PriceFeed\\r\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 18decimals\\r\\n        uint256 value = (((_amount.mul(_rate)).div(decimals)).mul(priceOfToken))\\r\\n            .div(decimals);\\r\\n        uint256 fees = value.div(10 ** 4);\\r\\n\\r\\n        //Convert to aETH value\\r\\n        uint256 aETH_Price = priceFeed.getPrice(ethToken);\\r\\n\\r\\n        uint256 amountOfETH = (fees.mul(decimals)).div(aETH_Price);\\r\\n\\r\\n        return amountOfETH; //still in 18decimals\\r\\n    }\\r\\n\\r\\n    //Note fees in amountOfETH\\r\\n    function amountToDeduct(\\r\\n        address _refToken,\\r\\n        uint256 fees\\r\\n    ) external view returns (uint256) {\\r\\n        uint256 aETH_Price = priceFeed.getPrice(ethToken);\\r\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 18decimals\\r\\n        uint256 value = aETH_Price.mul(fees);\\r\\n        return value.div(priceOfToken);\\r\\n    }\\r\\n\\r\\n    function checkSufficientaETH(\\r\\n        uint256 _amount,\\r\\n        address _user\\r\\n    ) external view returns (bool) {\\r\\n        uint256 balance = wallet.s_tokens(aETH, _user);\\r\\n\\r\\n        return balance >= _amount;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xb3efc359fa2ba5b57caccad506e01ed279230e74eeb0bc5e1c8eaa2d2cd67340\",\"license\":\"MIT\"},\"contracts/Wallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./interface/IERC20.sol\\\";\\r\\nimport \\\"./Exchange.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Wallet is Ownable {\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n\\r\\n    address public immutable Owner;\\r\\n\\r\\n    //For prevention of reentrancy\\r\\n    bool private locked;\\r\\n\\r\\n    address public ethToken = address(0);\\r\\n    address public aETH = address(0x22404B0e2a7067068AcdaDd8f9D586F834cCe2c5);\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) public s_tokens; //tokenAdress -> msg.sender -> tokenAmt\\r\\n    mapping(address => mapping(address => uint256)) public lockedFunds;\\r\\n\\r\\n    Exchange exchange;\\r\\n    IERC20 token;\\r\\n\\r\\n    event Deposit(address token, address user, uint256 amount, uint256 balance);\\r\\n\\r\\n    /// @notice Event when amount withdrawn exchange\\r\\n    event Withdraw(\\r\\n        address token,\\r\\n        address user,\\r\\n        uint256 amount,\\r\\n        uint256 balance\\r\\n    );\\r\\n\\r\\n    constructor() {\\r\\n        Owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    function depositETH() external payable {\\r\\n        updateBalance(ethToken, msg.sender, msg.value, true);\\r\\n\\r\\n        emit Deposit(\\r\\n            ethToken,\\r\\n            msg.sender,\\r\\n            msg.value,\\r\\n            balanceOf(ethToken, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdrawETH(uint256 _amount) external {\\r\\n        require(\\r\\n            balanceOf(ethToken, msg.sender).sub(\\r\\n                getlockedFunds(msg.sender, ethToken)\\r\\n            ) >= _amount,\\r\\n            \\\"Insufficient balance ETH to withdraw\\\"\\r\\n        );\\r\\n        require(!locked, \\\"Reentrant call detected!\\\");\\r\\n        locked = true;\\r\\n        updateBalance(ethToken, msg.sender, _amount, false);\\r\\n        locked = false;\\r\\n        (bool success, ) = msg.sender.call{value: _amount}(\\\"\\\");\\r\\n        require(success, \\\"failed to send amount\\\");\\r\\n\\r\\n        emit Withdraw(\\r\\n            ethToken,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(ethToken, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    //from and transferFrom is from ERC20 contract\\r\\n    //_token should be an ERC20 token\\r\\n    function depositToken(\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        uint256 _decimals\\r\\n    ) external {\\r\\n        require(_token != ethToken);\\r\\n        require(\\r\\n            exchange.isVerifiedToken(_token),\\r\\n            \\\"Token not verified on Exchange\\\"\\r\\n        );\\r\\n        //need to add a check to prove that it is an ERC20 token\\r\\n        token = IERC20(_token);\\r\\n\\r\\n        //Requires approval first\\r\\n        require(\\r\\n            token.transferFrom(msg.sender, address(this), _amount),\\r\\n            \\\"No Approval yet\\\"\\r\\n        );\\r\\n        uint256 decimals = 18;\\r\\n        if (_decimals == 18) {\\r\\n            updateBalance(_token, msg.sender, _amount, true);\\r\\n        } else\\r\\n            updateBalance(\\r\\n                _token,\\r\\n                msg.sender,\\r\\n                _amount.mul(10 ** decimals.sub(_decimals)),\\r\\n                true\\r\\n            );\\r\\n\\r\\n        emit Deposit(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(_token, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdrawToken(\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        uint256 _decimals\\r\\n    ) external {\\r\\n        require(_token != ethToken);\\r\\n        require(\\r\\n            exchange.isVerifiedToken(_token),\\r\\n            \\\"Token not verified on Exchange\\\"\\r\\n        );\\r\\n\\r\\n        require(\\r\\n            balanceOf(_token, msg.sender).sub(\\r\\n                getlockedFunds(msg.sender, _token)\\r\\n            ) >= _amount,\\r\\n            \\\"Insufficient Tokens to withdraw\\\"\\r\\n        );\\r\\n        require(!locked, \\\"Reentrant call detected!\\\");\\r\\n        locked = true;\\r\\n\\r\\n        token = IERC20(_token);\\r\\n        uint256 decimals = 18;\\r\\n        if (_decimals == 18) {\\r\\n            updateBalance(_token, msg.sender, _amount, false);\\r\\n            require(token.transfer(msg.sender, _amount));\\r\\n        } else {\\r\\n            updateBalance(\\r\\n                _token,\\r\\n                msg.sender,\\r\\n                _amount.mul(10 ** decimals.sub(_decimals)),\\r\\n                false\\r\\n            );\\r\\n            require(\\r\\n                token.transfer(\\r\\n                    msg.sender,\\r\\n                    _amount.div(10 ** decimals.sub(_decimals))\\r\\n                )\\r\\n            );\\r\\n        }\\r\\n\\r\\n        locked = false;\\r\\n        emit Withdraw(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(_token, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getlockedFunds(\\r\\n        address _user,\\r\\n        address _token\\r\\n    ) public view returns (uint256) {\\r\\n        return lockedFunds[_user][_token];\\r\\n    }\\r\\n\\r\\n    function updateLockedFunds(\\r\\n        address _user,\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) public isAuthorised {\\r\\n        if (isAdd) {\\r\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].add(\\r\\n                _amount\\r\\n            );\\r\\n        } else if (!isAdd) {\\r\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].sub(\\r\\n                _amount\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //balance of specific tokens in the dex owned by specific user\\r\\n    function balanceOf(\\r\\n        address _token,\\r\\n        address _user\\r\\n    ) public view returns (uint256) {\\r\\n        return s_tokens[_token][_user];\\r\\n    }\\r\\n\\r\\n    function updateBalance(\\r\\n        address _token,\\r\\n        address _user,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) public isAuthorised {\\r\\n        if (isAdd) {\\r\\n            s_tokens[_token][_user] = s_tokens[_token][_user].add(_amount);\\r\\n        } else if (!isAdd) {\\r\\n            s_tokens[_token][_user] = s_tokens[_token][_user].sub(_amount);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function updateExchangeAddress(\\r\\n        address _exchangeAddress\\r\\n    ) external onlyOwner {\\r\\n        exchange = Exchange(_exchangeAddress);\\r\\n    }\\r\\n\\r\\n    modifier isAuthorised() {\\r\\n        require(\\r\\n            msg.sender == address(this) || msg.sender == address(exchange),\\r\\n            \\\"Unauthorised Function Call\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x537d0dfa8a4e93a6f7ec1c0e3aed058dd72346e6bc263044b06791a6dba90d50\",\"license\":\"MIT\"},\"contracts/interface/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IERC20 {\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256 remaining);\\r\\n\\r\\n    function approve(\\r\\n        address spender,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function balanceOf(address owner) external view returns (uint256 balance);\\r\\n\\r\\n    function decimals() external view returns (uint8 decimalPlaces);\\r\\n\\r\\n    function decreaseApproval(\\r\\n        address spender,\\r\\n        uint256 subtractedValue\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function increaseApproval(\\r\\n        address spender,\\r\\n        uint256 addedValue\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function name() external view returns (string memory tokenName);\\r\\n\\r\\n    function symbol() external view returns (string memory tokenSymbol);\\r\\n\\r\\n    function totalSupply() external view returns (uint256 totalTokensIssued);\\r\\n\\r\\n    function transfer(\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n}\\r\\n\",\"keccak256\":\"0xef48d46afc4efefcd6d7f1799f25aee5d8fcd588e2aaa80a84af726128194326\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":405,"contract":"contracts/Wallet.sol:Wallet","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":2856,"contract":"contracts/Wallet.sol:Wallet","label":"locked","offset":20,"slot":"0","type":"t_bool"},{"astId":2862,"contract":"contracts/Wallet.sol:Wallet","label":"ethToken","offset":0,"slot":"1","type":"t_address"},{"astId":2868,"contract":"contracts/Wallet.sol:Wallet","label":"aETH","offset":0,"slot":"2","type":"t_address"},{"astId":2874,"contract":"contracts/Wallet.sol:Wallet","label":"s_tokens","offset":0,"slot":"3","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":2880,"contract":"contracts/Wallet.sol:Wallet","label":"lockedFunds","offset":0,"slot":"4","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":2883,"contract":"contracts/Wallet.sol:Wallet","label":"exchange","offset":0,"slot":"5","type":"t_contract(Exchange)2506"},{"astId":2886,"contract":"contracts/Wallet.sol:Wallet","label":"token","offset":0,"slot":"6","type":"t_contract(IERC20)3496"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(Exchange)2506":{"encoding":"inplace","label":"contract Exchange","numberOfBytes":"20"},"t_contract(IERC20)3496":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"events":{"Withdraw(address,address,uint256,uint256)":{"notice":"Event when amount withdrawn exchange"}},"kind":"user","methods":{},"version":1}}},"contracts/interface/IERC20.sol":{"IERC20":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"remaining","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"decimalPlaces","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseApproval","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseApproval","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"tokenName","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"tokenSymbol","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"totalTokensIssued","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseApproval(address,uint256)":"66188463","increaseApproval(address,uint256)":"d73dd623","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimalPlaces\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokensIssued\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IERC20 {\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256 remaining);\\r\\n\\r\\n    function approve(\\r\\n        address spender,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function balanceOf(address owner) external view returns (uint256 balance);\\r\\n\\r\\n    function decimals() external view returns (uint8 decimalPlaces);\\r\\n\\r\\n    function decreaseApproval(\\r\\n        address spender,\\r\\n        uint256 subtractedValue\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function increaseApproval(\\r\\n        address spender,\\r\\n        uint256 addedValue\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function name() external view returns (string memory tokenName);\\r\\n\\r\\n    function symbol() external view returns (string memory tokenSymbol);\\r\\n\\r\\n    function totalSupply() external view returns (uint256 totalTokensIssued);\\r\\n\\r\\n    function transfer(\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n}\\r\\n\",\"keccak256\":\"0xef48d46afc4efefcd6d7f1799f25aee5d8fcd588e2aaa80a84af726128194326\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interface/IPool.sol":{"IPool":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"backer","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fee","type":"uint256"}],"name":"BackUnbacked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"onBehalfOf","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"enum DataTypes.InterestRateMode","name":"interestRateMode","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"borrowRate","type":"uint256"},{"indexed":true,"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"Borrow","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"address","name":"initiator","type":"address"},{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"enum DataTypes.InterestRateMode","name":"interestRateMode","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"premium","type":"uint256"},{"indexed":true,"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"FlashLoan","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDebt","type":"uint256"}],"name":"IsolationModeTotalDebtUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"collateralAsset","type":"address"},{"indexed":true,"internalType":"address","name":"debtAsset","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"debtToCover","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liquidatedCollateralAmount","type":"uint256"},{"indexed":false,"internalType":"address","name":"liquidator","type":"address"},{"indexed":false,"internalType":"bool","name":"receiveAToken","type":"bool"}],"name":"LiquidationCall","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"onBehalfOf","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"MintUnbacked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountMinted","type":"uint256"}],"name":"MintedToTreasury","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"RebalanceStableBorrowRate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"repayer","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"useATokens","type":"bool"}],"name":"Repay","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"uint256","name":"liquidityRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"stableBorrowRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"variableBorrowRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liquidityIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"variableBorrowIndex","type":"uint256"}],"name":"ReserveDataUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"ReserveUsedAsCollateralDisabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"ReserveUsedAsCollateralEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"onBehalfOf","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"Supply","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"enum DataTypes.InterestRateMode","name":"interestRateMode","type":"uint8"}],"name":"SwapBorrowRateMode","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint8","name":"categoryId","type":"uint8"}],"name":"UserEModeSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"ADDRESSES_PROVIDER","outputs":[{"internalType":"contract IPoolAddressesProvider","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BRIDGE_PROTOCOL_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FLASHLOAN_PREMIUM_TOTAL","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FLASHLOAN_PREMIUM_TO_PROTOCOL","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_NUMBER_RESERVES","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_STABLE_RATE_BORROW_SIZE_PERCENT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"fee","type":"uint256"}],"name":"backUnbacked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"interestRateMode","type":"uint256"},{"internalType":"uint16","name":"referralCode","type":"uint16"},{"internalType":"address","name":"onBehalfOf","type":"address"}],"name":"borrow","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"id","type":"uint8"},{"components":[{"internalType":"uint16","name":"ltv","type":"uint16"},{"internalType":"uint16","name":"liquidationThreshold","type":"uint16"},{"internalType":"uint16","name":"liquidationBonus","type":"uint16"},{"internalType":"address","name":"priceSource","type":"address"},{"internalType":"string","name":"label","type":"string"}],"internalType":"struct DataTypes.EModeCategory","name":"config","type":"tuple"}],"name":"configureEModeCategory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"dropReserve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"balanceFromBefore","type":"uint256"},{"internalType":"uint256","name":"balanceToBefore","type":"uint256"}],"name":"finalizeTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiverAddress","type":"address"},{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"interestRateModes","type":"uint256[]"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"flashLoan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiverAddress","type":"address"},{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"flashLoanSimple","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getConfiguration","outputs":[{"components":[{"internalType":"uint256","name":"data","type":"uint256"}],"internalType":"struct DataTypes.ReserveConfigurationMap","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"id","type":"uint8"}],"name":"getEModeCategoryData","outputs":[{"components":[{"internalType":"uint16","name":"ltv","type":"uint16"},{"internalType":"uint16","name":"liquidationThreshold","type":"uint16"},{"internalType":"uint16","name":"liquidationBonus","type":"uint16"},{"internalType":"address","name":"priceSource","type":"address"},{"internalType":"string","name":"label","type":"string"}],"internalType":"struct DataTypes.EModeCategory","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"id","type":"uint16"}],"name":"getReserveAddressById","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getReserveData","outputs":[{"components":[{"components":[{"internalType":"uint256","name":"data","type":"uint256"}],"internalType":"struct DataTypes.ReserveConfigurationMap","name":"configuration","type":"tuple"},{"internalType":"uint128","name":"liquidityIndex","type":"uint128"},{"internalType":"uint128","name":"currentLiquidityRate","type":"uint128"},{"internalType":"uint128","name":"variableBorrowIndex","type":"uint128"},{"internalType":"uint128","name":"currentVariableBorrowRate","type":"uint128"},{"internalType":"uint128","name":"currentStableBorrowRate","type":"uint128"},{"internalType":"uint40","name":"lastUpdateTimestamp","type":"uint40"},{"internalType":"uint16","name":"id","type":"uint16"},{"internalType":"address","name":"aTokenAddress","type":"address"},{"internalType":"address","name":"stableDebtTokenAddress","type":"address"},{"internalType":"address","name":"variableDebtTokenAddress","type":"address"},{"internalType":"address","name":"interestRateStrategyAddress","type":"address"},{"internalType":"uint128","name":"accruedToTreasury","type":"uint128"},{"internalType":"uint128","name":"unbacked","type":"uint128"},{"internalType":"uint128","name":"isolationModeTotalDebt","type":"uint128"}],"internalType":"struct DataTypes.ReserveData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getReserveNormalizedIncome","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getReserveNormalizedVariableDebt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReservesList","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserAccountData","outputs":[{"internalType":"uint256","name":"totalCollateralBase","type":"uint256"},{"internalType":"uint256","name":"totalDebtBase","type":"uint256"},{"internalType":"uint256","name":"availableBorrowsBase","type":"uint256"},{"internalType":"uint256","name":"currentLiquidationThreshold","type":"uint256"},{"internalType":"uint256","name":"ltv","type":"uint256"},{"internalType":"uint256","name":"healthFactor","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserConfiguration","outputs":[{"components":[{"internalType":"uint256","name":"data","type":"uint256"}],"internalType":"struct DataTypes.UserConfigurationMap","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserEMode","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"aTokenAddress","type":"address"},{"internalType":"address","name":"stableDebtAddress","type":"address"},{"internalType":"address","name":"variableDebtAddress","type":"address"},{"internalType":"address","name":"interestRateStrategyAddress","type":"address"}],"name":"initReserve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"collateralAsset","type":"address"},{"internalType":"address","name":"debtAsset","type":"address"},{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"debtToCover","type":"uint256"},{"internalType":"bool","name":"receiveAToken","type":"bool"}],"name":"liquidationCall","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"}],"name":"mintToTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"mintUnbacked","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"user","type":"address"}],"name":"rebalanceStableBorrowRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"interestRateMode","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"}],"name":"repay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"interestRateMode","type":"uint256"}],"name":"repayWithATokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"interestRateMode","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"permitV","type":"uint8"},{"internalType":"bytes32","name":"permitR","type":"bytes32"},{"internalType":"bytes32","name":"permitS","type":"bytes32"}],"name":"repayWithPermit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"rescueTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"resetIsolationModeTotalDebt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"components":[{"internalType":"uint256","name":"data","type":"uint256"}],"internalType":"struct DataTypes.ReserveConfigurationMap","name":"configuration","type":"tuple"}],"name":"setConfiguration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"rateStrategyAddress","type":"address"}],"name":"setReserveInterestRateStrategyAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"categoryId","type":"uint8"}],"name":"setUserEMode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"bool","name":"useAsCollateral","type":"bool"}],"name":"setUserUseReserveAsCollateral","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"supply","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint16","name":"referralCode","type":"uint16"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"permitV","type":"uint8"},{"internalType":"bytes32","name":"permitR","type":"bytes32"},{"internalType":"bytes32","name":"permitS","type":"bytes32"}],"name":"supplyWithPermit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"interestRateMode","type":"uint256"}],"name":"swapBorrowRateMode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"bridgeProtocolFee","type":"uint256"}],"name":"updateBridgeProtocolFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint128","name":"flashLoanPremiumTotal","type":"uint128"},{"internalType":"uint128","name":"flashLoanPremiumToProtocol","type":"uint128"}],"name":"updateFlashloanPremiums","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Aave","events":{"BackUnbacked(address,address,uint256,uint256)":{"details":"Emitted on backUnbacked()","params":{"amount":"The amount added as backing","backer":"The address paying for the backing","fee":"The amount paid in fees","reserve":"The address of the underlying asset of the reserve"}},"Borrow(address,address,address,uint256,uint8,uint256,uint16)":{"details":"Emitted on borrow() and flashLoan() when debt needs to be opened","params":{"amount":"The amount borrowed out","borrowRate":"The numeric rate at which the user has borrowed, expressed in ray","interestRateMode":"The rate mode: 1 for Stable, 2 for Variable","onBehalfOf":"The address that will be getting the debt","referralCode":"The referral code used","reserve":"The address of the underlying asset being borrowed","user":"The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()"}},"FlashLoan(address,address,address,uint256,uint8,uint256,uint16)":{"details":"Emitted on flashLoan()","params":{"amount":"The amount flash borrowed","asset":"The address of the asset being flash borrowed","initiator":"The address initiating the flash loan","interestRateMode":"The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt","premium":"The fee flash borrowed","referralCode":"The referral code used","target":"The address of the flash loan receiver contract"}},"IsolationModeTotalDebtUpdated(address,uint256)":{"details":"Emitted on borrow(), repay() and liquidationCall() when using isolated assets","params":{"asset":"The address of the underlying asset of the reserve","totalDebt":"The total isolation mode debt for the reserve"}},"LiquidationCall(address,address,address,uint256,uint256,address,bool)":{"details":"Emitted when a borrower is liquidated.","params":{"collateralAsset":"The address of the underlying asset used as collateral, to receive as result of the liquidation","debtAsset":"The address of the underlying borrowed asset to be repaid with the liquidation","debtToCover":"The debt amount of borrowed `asset` the liquidator wants to cover","liquidatedCollateralAmount":"The amount of collateral received by the liquidator","liquidator":"The address of the liquidator","receiveAToken":"True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly","user":"The address of the borrower getting liquidated"}},"MintUnbacked(address,address,address,uint256,uint16)":{"details":"Emitted on mintUnbacked()","params":{"amount":"The amount of supplied assets","onBehalfOf":"The beneficiary of the supplied assets, receiving the aTokens","referralCode":"The referral code used","reserve":"The address of the underlying asset of the reserve","user":"The address initiating the supply"}},"MintedToTreasury(address,uint256)":{"details":"Emitted when the protocol treasury receives minted aTokens from the accrued interest.","params":{"amountMinted":"The amount minted to the treasury","reserve":"The address of the reserve"}},"RebalanceStableBorrowRate(address,address)":{"details":"Emitted on rebalanceStableBorrowRate()","params":{"reserve":"The address of the underlying asset of the reserve","user":"The address of the user for which the rebalance has been executed"}},"Repay(address,address,address,uint256,bool)":{"details":"Emitted on repay()","params":{"amount":"The amount repaid","repayer":"The address of the user initiating the repay(), providing the funds","reserve":"The address of the underlying asset of the reserve","useATokens":"True if the repayment is done using aTokens, `false` if done with underlying asset directly","user":"The beneficiary of the repayment, getting his debt reduced"}},"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)":{"details":"Emitted when the state of a reserve is updated.","params":{"liquidityIndex":"The next liquidity index","liquidityRate":"The next liquidity rate","reserve":"The address of the underlying asset of the reserve","stableBorrowRate":"The next stable borrow rate","variableBorrowIndex":"The next variable borrow index","variableBorrowRate":"The next variable borrow rate"}},"ReserveUsedAsCollateralDisabled(address,address)":{"details":"Emitted on setUserUseReserveAsCollateral()","params":{"reserve":"The address of the underlying asset of the reserve","user":"The address of the user enabling the usage as collateral"}},"ReserveUsedAsCollateralEnabled(address,address)":{"details":"Emitted on setUserUseReserveAsCollateral()","params":{"reserve":"The address of the underlying asset of the reserve","user":"The address of the user enabling the usage as collateral"}},"Supply(address,address,address,uint256,uint16)":{"details":"Emitted on supply()","params":{"amount":"The amount supplied","onBehalfOf":"The beneficiary of the supply, receiving the aTokens","referralCode":"The referral code used","reserve":"The address of the underlying asset of the reserve","user":"The address initiating the supply"}},"SwapBorrowRateMode(address,address,uint8)":{"details":"Emitted on swapBorrowRateMode()","params":{"interestRateMode":"The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable","reserve":"The address of the underlying asset of the reserve","user":"The address of the user swapping his rate mode"}},"UserEModeSet(address,uint8)":{"details":"Emitted when the user selects a certain asset category for eMode","params":{"categoryId":"The category id","user":"The address of the user"}},"Withdraw(address,address,address,uint256)":{"details":"Emitted on withdraw()","params":{"amount":"The amount to be withdrawn","reserve":"The address of the underlying asset being withdrawn","to":"The address that will receive the underlying","user":"The address initiating the withdrawal, owner of aTokens"}}},"kind":"dev","methods":{"ADDRESSES_PROVIDER()":{"returns":{"_0":"The address of the PoolAddressesProvider"}},"BRIDGE_PROTOCOL_FEE()":{"returns":{"_0":"The bridge fee sent to the protocol treasury"}},"FLASHLOAN_PREMIUM_TOTAL()":{"returns":{"_0":"The total fee on flashloans"}},"FLASHLOAN_PREMIUM_TO_PROTOCOL()":{"returns":{"_0":"The flashloan fee sent to the protocol treasury"}},"MAX_NUMBER_RESERVES()":{"returns":{"_0":"The maximum number of reserves supported"}},"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()":{"returns":{"_0":"The percentage of available liquidity to borrow, expressed in bps"}},"backUnbacked(address,uint256,uint256)":{"params":{"amount":"The amount to back","asset":"The address of the underlying asset to back","fee":"The amount paid in fees"},"returns":{"_0":"The backed amount"}},"borrow(address,uint256,uint256,uint16,address)":{"params":{"amount":"The amount to be borrowed","asset":"The address of the underlying asset to borrow","interestRateMode":"The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable","onBehalfOf":"The address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance","referralCode":"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"}},"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))":{"details":"In eMode, the protocol allows very high borrowing power to borrow assets of the same category. The category 0 is reserved as it's the default for volatile assets","params":{"config":"The configuration of the category","id":"The id of the category"}},"deposit(address,uint256,address,uint16)":{"details":"Deprecated: Use the `supply` function instead","params":{"amount":"The amount to be supplied","asset":"The address of the underlying asset to supply","onBehalfOf":"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet","referralCode":"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"}},"dropReserve(address)":{"details":"Only callable by the PoolConfigurator contract","params":{"asset":"The address of the underlying asset of the reserve"}},"finalizeTransfer(address,address,address,uint256,uint256,uint256)":{"details":"Only callable by the overlying aToken of the `asset`","params":{"amount":"The amount being transferred/withdrawn","asset":"The address of the underlying asset of the aToken","balanceFromBefore":"The aToken balance of the `from` user before the transfer","balanceToBefore":"The aToken balance of the `to` user before the transfer","from":"The user from which the aTokens are transferred","to":"The user receiving the aTokens"}},"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)":{"details":"IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://docs.aave.com/developers/","params":{"amounts":"The amounts of the assets being flash-borrowed","assets":"The addresses of the assets being flash-borrowed","interestRateModes":"Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address","onBehalfOf":"The address  that will receive the debt in the case of using on `modes` 1 or 2","params":"Variadic packed params to pass to the receiver as extra information","receiverAddress":"The address of the contract receiving the funds, implementing IFlashLoanReceiver interface","referralCode":"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"}},"flashLoanSimple(address,address,uint256,bytes,uint16)":{"details":"IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://docs.aave.com/developers/","params":{"amount":"The amount of the asset being flash-borrowed","asset":"The address of the asset being flash-borrowed","params":"Variadic packed params to pass to the receiver as extra information","receiverAddress":"The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface","referralCode":"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"}},"getConfiguration(address)":{"params":{"asset":"The address of the underlying asset of the reserve"},"returns":{"_0":"The configuration of the reserve"}},"getEModeCategoryData(uint8)":{"params":{"id":"The id of the category"},"returns":{"_0":"The configuration data of the category"}},"getReserveAddressById(uint16)":{"params":{"id":"The id of the reserve as stored in the DataTypes.ReserveData struct"},"returns":{"_0":"The address of the reserve associated with id"}},"getReserveData(address)":{"params":{"asset":"The address of the underlying asset of the reserve"},"returns":{"_0":"The state and configuration data of the reserve"}},"getReserveNormalizedIncome(address)":{"params":{"asset":"The address of the underlying asset of the reserve"},"returns":{"_0":"The reserve's normalized income"}},"getReserveNormalizedVariableDebt(address)":{"details":"WARNING: This function is intended to be used primarily by the protocol itself to get a \"dynamic\" variable index based on time, current stored index and virtual rate at the current moment (approx. a borrower would get if opening a position). This means that is always used in combination with variable debt supply/balances. If using this function externally, consider that is possible to have an increasing normalized variable debt that is not equivalent to how the variable debt index would be updated in storage (e.g. only updates with non-zero variable debt supply)","params":{"asset":"The address of the underlying asset of the reserve"},"returns":{"_0":"The reserve normalized variable debt"}},"getReservesList()":{"details":"It does not include dropped reserves","returns":{"_0":"The addresses of the underlying assets of the initialized reserves"}},"getUserAccountData(address)":{"params":{"user":"The address of the user"},"returns":{"availableBorrowsBase":"The borrowing power left of the user in the base currency used by the price feed","currentLiquidationThreshold":"The liquidation threshold of the user","healthFactor":"The current health factor of the user","ltv":"The loan to value of The user","totalCollateralBase":"The total collateral of the user in the base currency used by the price feed","totalDebtBase":"The total debt of the user in the base currency used by the price feed"}},"getUserConfiguration(address)":{"params":{"user":"The user address"},"returns":{"_0":"The configuration of the user"}},"getUserEMode(address)":{"params":{"user":"The address of the user"},"returns":{"_0":"The eMode id"}},"initReserve(address,address,address,address,address)":{"details":"Only callable by the PoolConfigurator contract","params":{"aTokenAddress":"The address of the aToken that will be assigned to the reserve","asset":"The address of the underlying asset of the reserve","interestRateStrategyAddress":"The address of the interest rate strategy contract","stableDebtAddress":"The address of the StableDebtToken that will be assigned to the reserve","variableDebtAddress":"The address of the VariableDebtToken that will be assigned to the reserve"}},"liquidationCall(address,address,address,uint256,bool)":{"params":{"collateralAsset":"The address of the underlying asset used as collateral, to receive as result of the liquidation","debtAsset":"The address of the underlying borrowed asset to be repaid with the liquidation","debtToCover":"The debt amount of borrowed `asset` the liquidator wants to cover","receiveAToken":"True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly","user":"The address of the borrower getting liquidated"}},"mintToTreasury(address[])":{"params":{"assets":"The list of reserves for which the minting needs to be executed"}},"mintUnbacked(address,uint256,address,uint16)":{"params":{"amount":"The amount to mint","asset":"The address of the underlying asset to mint","onBehalfOf":"The address that will receive the aTokens","referralCode":"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"}},"rebalanceStableBorrowRate(address,address)":{"params":{"asset":"The address of the underlying asset borrowed","user":"The address of the user to be rebalanced"}},"repay(address,uint256,uint256,address)":{"params":{"amount":"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`","asset":"The address of the borrowed underlying asset previously borrowed","interestRateMode":"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable","onBehalfOf":"The address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed"},"returns":{"_0":"The final amount repaid"}},"repayWithATokens(address,uint256,uint256)":{"details":"Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken balance is not enough to cover the whole debt","params":{"amount":"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`","asset":"The address of the borrowed underlying asset previously borrowed","interestRateMode":"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable"},"returns":{"_0":"The final amount repaid"}},"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)":{"params":{"amount":"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`","asset":"The address of the borrowed underlying asset previously borrowed","deadline":"The deadline timestamp that the permit is valid","interestRateMode":"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable","onBehalfOf":"Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed","permitR":"The R parameter of ERC712 permit sig","permitS":"The S parameter of ERC712 permit sig","permitV":"The V parameter of ERC712 permit sig"},"returns":{"_0":"The final amount repaid"}},"rescueTokens(address,address,uint256)":{"params":{"amount":"The amount of token to transfer","to":"The address of the recipient","token":"The address of the token"}},"resetIsolationModeTotalDebt(address)":{"details":"It requires the given asset has zero debt ceiling","params":{"asset":"The address of the underlying asset to reset the isolationModeTotalDebt"}},"setConfiguration(address,(uint256))":{"details":"Only callable by the PoolConfigurator contract","params":{"asset":"The address of the underlying asset of the reserve","configuration":"The new configuration bitmap"}},"setReserveInterestRateStrategyAddress(address,address)":{"details":"Only callable by the PoolConfigurator contract","params":{"asset":"The address of the underlying asset of the reserve","rateStrategyAddress":"The address of the interest rate strategy contract"}},"setUserEMode(uint8)":{"params":{"categoryId":"The id of the category"}},"setUserUseReserveAsCollateral(address,bool)":{"params":{"asset":"The address of the underlying asset supplied","useAsCollateral":"True if the user wants to use the supply as collateral, false otherwise"}},"supply(address,uint256,address,uint16)":{"params":{"amount":"The amount to be supplied","asset":"The address of the underlying asset to supply","onBehalfOf":"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet","referralCode":"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"}},"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)":{"params":{"amount":"The amount to be supplied","asset":"The address of the underlying asset to supply","deadline":"The deadline timestamp that the permit is valid","onBehalfOf":"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet","permitR":"The R parameter of ERC712 permit sig","permitS":"The S parameter of ERC712 permit sig","permitV":"The V parameter of ERC712 permit sig","referralCode":"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"}},"swapBorrowRateMode(address,uint256)":{"params":{"asset":"The address of the underlying asset borrowed","interestRateMode":"The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable"}},"updateBridgeProtocolFee(uint256)":{"params":{"bridgeProtocolFee":"The part of the premium sent to the protocol treasury"}},"updateFlashloanPremiums(uint128,uint128)":{"details":"The total premium is calculated on the total borrowed amountThe premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`Only callable by the PoolConfigurator contract","params":{"flashLoanPremiumToProtocol":"The part of the premium sent to the protocol treasury, expressed in bps","flashLoanPremiumTotal":"The total premium, expressed in bps"}},"withdraw(address,uint256,address)":{"params":{"amount":"The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance","asset":"The address of the underlying asset to withdraw","to":"The address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet"},"returns":{"_0":"The final amount withdrawn"}}},"title":"IPool","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"ADDRESSES_PROVIDER()":"0542975c","BRIDGE_PROTOCOL_FEE()":"272d9072","FLASHLOAN_PREMIUM_TOTAL()":"074b2e43","FLASHLOAN_PREMIUM_TO_PROTOCOL()":"6a99c036","MAX_NUMBER_RESERVES()":"f8119d51","MAX_STABLE_RATE_BORROW_SIZE_PERCENT()":"e82fec2f","backUnbacked(address,uint256,uint256)":"d65dc7a1","borrow(address,uint256,uint256,uint16,address)":"a415bcad","configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))":"d579ea7d","deposit(address,uint256,address,uint16)":"e8eda9df","dropReserve(address)":"63c9b860","finalizeTransfer(address,address,address,uint256,uint256,uint256)":"d5ed3933","flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)":"ab9c4b5d","flashLoanSimple(address,address,uint256,bytes,uint16)":"42b0b77c","getConfiguration(address)":"c44b11f7","getEModeCategoryData(uint8)":"6c6f6ae1","getReserveAddressById(uint16)":"52751797","getReserveData(address)":"35ea6a75","getReserveNormalizedIncome(address)":"d15e0053","getReserveNormalizedVariableDebt(address)":"386497fd","getReservesList()":"d1946dbc","getUserAccountData(address)":"bf92857c","getUserConfiguration(address)":"4417a583","getUserEMode(address)":"eddf1b79","initReserve(address,address,address,address,address)":"7a708e92","liquidationCall(address,address,address,uint256,bool)":"00a718a9","mintToTreasury(address[])":"9cd19996","mintUnbacked(address,uint256,address,uint16)":"69a933a5","rebalanceStableBorrowRate(address,address)":"cd112382","repay(address,uint256,uint256,address)":"573ade81","repayWithATokens(address,uint256,uint256)":"2dad97d4","repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)":"ee3e210b","rescueTokens(address,address,uint256)":"cea9d26f","resetIsolationModeTotalDebt(address)":"e43e88a1","setConfiguration(address,(uint256))":"f51e435b","setReserveInterestRateStrategyAddress(address,address)":"1d2118f9","setUserEMode(uint8)":"28530a47","setUserUseReserveAsCollateral(address,bool)":"5a3b74b9","supply(address,uint256,address,uint16)":"617ba037","supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)":"02c205f0","swapBorrowRateMode(address,uint256)":"94ba89a2","updateBridgeProtocolFee(uint256)":"3036b439","updateFlashloanPremiums(uint128,uint128)":"bcb6e522","withdraw(address,uint256,address)":"69328dec"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"BackUnbacked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum DataTypes.InterestRateMode\",\"name\":\"interestRateMode\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum DataTypes.InterestRateMode\",\"name\":\"interestRateMode\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDebt\",\"type\":\"uint256\"}],\"name\":\"IsolationModeTotalDebtUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidatedCollateralAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"LiquidationCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"MintUnbacked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountMinted\",\"type\":\"uint256\"}],\"name\":\"MintedToTreasury\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"RebalanceStableBorrowRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"repayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"useATokens\",\"type\":\"bool\"}],\"name\":\"Repay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowIndex\",\"type\":\"uint256\"}],\"name\":\"ReserveDataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"Supply\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum DataTypes.InterestRateMode\",\"name\":\"interestRateMode\",\"type\":\"uint8\"}],\"name\":\"SwapBorrowRateMode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"categoryId\",\"type\":\"uint8\"}],\"name\":\"UserEModeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADDRESSES_PROVIDER\",\"outputs\":[{\"internalType\":\"contract IPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BRIDGE_PROTOCOL_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FLASHLOAN_PREMIUM_TOTAL\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FLASHLOAN_PREMIUM_TO_PROTOCOL\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_NUMBER_RESERVES\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_STABLE_RATE_BORROW_SIZE_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"backUnbacked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"ltv\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationThreshold\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationBonus\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"priceSource\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"internalType\":\"struct DataTypes.EModeCategory\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"configureEModeCategory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"dropReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceFromBefore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceToBefore\",\"type\":\"uint256\"}],\"name\":\"finalizeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"interestRateModes\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"flashLoanSimple\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"}],\"name\":\"getEModeCategoryData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"ltv\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationThreshold\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationBonus\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"priceSource\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"internalType\":\"struct DataTypes.EModeCategory\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"}],\"name\":\"getReserveAddressById\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"configuration\",\"type\":\"tuple\"},{\"internalType\":\"uint128\",\"name\":\"liquidityIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentLiquidityRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"variableBorrowIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentVariableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentStableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"},{\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"accruedToTreasury\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"unbacked\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"isolationModeTotalDebt\",\"type\":\"uint128\"}],\"internalType\":\"struct DataTypes.ReserveData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedVariableDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReservesList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserAccountData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalCollateralBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDebtBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableBorrowsBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentLiquidationThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ltv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"healthFactor\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.UserConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserEMode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"}],\"name\":\"initReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"liquidationCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"mintToTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"mintUnbacked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"rebalanceStableBorrowRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"repay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"}],\"name\":\"repayWithATokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"permitV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"permitR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitS\",\"type\":\"bytes32\"}],\"name\":\"repayWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"resetIsolationModeTotalDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"configuration\",\"type\":\"tuple\"}],\"name\":\"setConfiguration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rateStrategyAddress\",\"type\":\"address\"}],\"name\":\"setReserveInterestRateStrategyAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"categoryId\",\"type\":\"uint8\"}],\"name\":\"setUserEMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useAsCollateral\",\"type\":\"bool\"}],\"name\":\"setUserUseReserveAsCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"supply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"permitV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"permitR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitS\",\"type\":\"bytes32\"}],\"name\":\"supplyWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"}],\"name\":\"swapBorrowRateMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bridgeProtocolFee\",\"type\":\"uint256\"}],\"name\":\"updateBridgeProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"flashLoanPremiumTotal\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"flashLoanPremiumToProtocol\",\"type\":\"uint128\"}],\"name\":\"updateFlashloanPremiums\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"events\":{\"BackUnbacked(address,address,uint256,uint256)\":{\"details\":\"Emitted on backUnbacked()\",\"params\":{\"amount\":\"The amount added as backing\",\"backer\":\"The address paying for the backing\",\"fee\":\"The amount paid in fees\",\"reserve\":\"The address of the underlying asset of the reserve\"}},\"Borrow(address,address,address,uint256,uint8,uint256,uint16)\":{\"details\":\"Emitted on borrow() and flashLoan() when debt needs to be opened\",\"params\":{\"amount\":\"The amount borrowed out\",\"borrowRate\":\"The numeric rate at which the user has borrowed, expressed in ray\",\"interestRateMode\":\"The rate mode: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address that will be getting the debt\",\"referralCode\":\"The referral code used\",\"reserve\":\"The address of the underlying asset being borrowed\",\"user\":\"The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()\"}},\"FlashLoan(address,address,address,uint256,uint8,uint256,uint16)\":{\"details\":\"Emitted on flashLoan()\",\"params\":{\"amount\":\"The amount flash borrowed\",\"asset\":\"The address of the asset being flash borrowed\",\"initiator\":\"The address initiating the flash loan\",\"interestRateMode\":\"The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt\",\"premium\":\"The fee flash borrowed\",\"referralCode\":\"The referral code used\",\"target\":\"The address of the flash loan receiver contract\"}},\"IsolationModeTotalDebtUpdated(address,uint256)\":{\"details\":\"Emitted on borrow(), repay() and liquidationCall() when using isolated assets\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\",\"totalDebt\":\"The total isolation mode debt for the reserve\"}},\"LiquidationCall(address,address,address,uint256,uint256,address,bool)\":{\"details\":\"Emitted when a borrower is liquidated.\",\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"liquidatedCollateralAmount\":\"The amount of collateral received by the liquidator\",\"liquidator\":\"The address of the liquidator\",\"receiveAToken\":\"True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly\",\"user\":\"The address of the borrower getting liquidated\"}},\"MintUnbacked(address,address,address,uint256,uint16)\":{\"details\":\"Emitted on mintUnbacked()\",\"params\":{\"amount\":\"The amount of supplied assets\",\"onBehalfOf\":\"The beneficiary of the supplied assets, receiving the aTokens\",\"referralCode\":\"The referral code used\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address initiating the supply\"}},\"MintedToTreasury(address,uint256)\":{\"details\":\"Emitted when the protocol treasury receives minted aTokens from the accrued interest.\",\"params\":{\"amountMinted\":\"The amount minted to the treasury\",\"reserve\":\"The address of the reserve\"}},\"RebalanceStableBorrowRate(address,address)\":{\"details\":\"Emitted on rebalanceStableBorrowRate()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user for which the rebalance has been executed\"}},\"Repay(address,address,address,uint256,bool)\":{\"details\":\"Emitted on repay()\",\"params\":{\"amount\":\"The amount repaid\",\"repayer\":\"The address of the user initiating the repay(), providing the funds\",\"reserve\":\"The address of the underlying asset of the reserve\",\"useATokens\":\"True if the repayment is done using aTokens, `false` if done with underlying asset directly\",\"user\":\"The beneficiary of the repayment, getting his debt reduced\"}},\"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when the state of a reserve is updated.\",\"params\":{\"liquidityIndex\":\"The next liquidity index\",\"liquidityRate\":\"The next liquidity rate\",\"reserve\":\"The address of the underlying asset of the reserve\",\"stableBorrowRate\":\"The next stable borrow rate\",\"variableBorrowIndex\":\"The next variable borrow index\",\"variableBorrowRate\":\"The next variable borrow rate\"}},\"ReserveUsedAsCollateralDisabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral\"}},\"ReserveUsedAsCollateralEnabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral\"}},\"Supply(address,address,address,uint256,uint16)\":{\"details\":\"Emitted on supply()\",\"params\":{\"amount\":\"The amount supplied\",\"onBehalfOf\":\"The beneficiary of the supply, receiving the aTokens\",\"referralCode\":\"The referral code used\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address initiating the supply\"}},\"SwapBorrowRateMode(address,address,uint8)\":{\"details\":\"Emitted on swapBorrowRateMode()\",\"params\":{\"interestRateMode\":\"The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user swapping his rate mode\"}},\"UserEModeSet(address,uint8)\":{\"details\":\"Emitted when the user selects a certain asset category for eMode\",\"params\":{\"categoryId\":\"The category id\",\"user\":\"The address of the user\"}},\"Withdraw(address,address,address,uint256)\":{\"details\":\"Emitted on withdraw()\",\"params\":{\"amount\":\"The amount to be withdrawn\",\"reserve\":\"The address of the underlying asset being withdrawn\",\"to\":\"The address that will receive the underlying\",\"user\":\"The address initiating the withdrawal, owner of aTokens\"}}},\"kind\":\"dev\",\"methods\":{\"ADDRESSES_PROVIDER()\":{\"returns\":{\"_0\":\"The address of the PoolAddressesProvider\"}},\"BRIDGE_PROTOCOL_FEE()\":{\"returns\":{\"_0\":\"The bridge fee sent to the protocol treasury\"}},\"FLASHLOAN_PREMIUM_TOTAL()\":{\"returns\":{\"_0\":\"The total fee on flashloans\"}},\"FLASHLOAN_PREMIUM_TO_PROTOCOL()\":{\"returns\":{\"_0\":\"The flashloan fee sent to the protocol treasury\"}},\"MAX_NUMBER_RESERVES()\":{\"returns\":{\"_0\":\"The maximum number of reserves supported\"}},\"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()\":{\"returns\":{\"_0\":\"The percentage of available liquidity to borrow, expressed in bps\"}},\"backUnbacked(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount to back\",\"asset\":\"The address of the underlying asset to back\",\"fee\":\"The amount paid in fees\"},\"returns\":{\"_0\":\"The backed amount\"}},\"borrow(address,uint256,uint256,uint16,address)\":{\"params\":{\"amount\":\"The amount to be borrowed\",\"asset\":\"The address of the underlying asset to borrow\",\"interestRateMode\":\"The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance\",\"referralCode\":\"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))\":{\"details\":\"In eMode, the protocol allows very high borrowing power to borrow assets of the same category. The category 0 is reserved as it's the default for volatile assets\",\"params\":{\"config\":\"The configuration of the category\",\"id\":\"The id of the category\"}},\"deposit(address,uint256,address,uint16)\":{\"details\":\"Deprecated: Use the `supply` function instead\",\"params\":{\"amount\":\"The amount to be supplied\",\"asset\":\"The address of the underlying asset to supply\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"dropReserve(address)\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"}},\"finalizeTransfer(address,address,address,uint256,uint256,uint256)\":{\"details\":\"Only callable by the overlying aToken of the `asset`\",\"params\":{\"amount\":\"The amount being transferred/withdrawn\",\"asset\":\"The address of the underlying asset of the aToken\",\"balanceFromBefore\":\"The aToken balance of the `from` user before the transfer\",\"balanceToBefore\":\"The aToken balance of the `to` user before the transfer\",\"from\":\"The user from which the aTokens are transferred\",\"to\":\"The user receiving the aTokens\"}},\"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)\":{\"details\":\"IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://docs.aave.com/developers/\",\"params\":{\"amounts\":\"The amounts of the assets being flash-borrowed\",\"assets\":\"The addresses of the assets being flash-borrowed\",\"interestRateModes\":\"Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\",\"onBehalfOf\":\"The address  that will receive the debt in the case of using on `modes` 1 or 2\",\"params\":\"Variadic packed params to pass to the receiver as extra information\",\"receiverAddress\":\"The address of the contract receiving the funds, implementing IFlashLoanReceiver interface\",\"referralCode\":\"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"flashLoanSimple(address,address,uint256,bytes,uint16)\":{\"details\":\"IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://docs.aave.com/developers/\",\"params\":{\"amount\":\"The amount of the asset being flash-borrowed\",\"asset\":\"The address of the asset being flash-borrowed\",\"params\":\"Variadic packed params to pass to the receiver as extra information\",\"receiverAddress\":\"The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface\",\"referralCode\":\"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"getConfiguration(address)\":{\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The configuration of the reserve\"}},\"getEModeCategoryData(uint8)\":{\"params\":{\"id\":\"The id of the category\"},\"returns\":{\"_0\":\"The configuration data of the category\"}},\"getReserveAddressById(uint16)\":{\"params\":{\"id\":\"The id of the reserve as stored in the DataTypes.ReserveData struct\"},\"returns\":{\"_0\":\"The address of the reserve associated with id\"}},\"getReserveData(address)\":{\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The state and configuration data of the reserve\"}},\"getReserveNormalizedIncome(address)\":{\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve's normalized income\"}},\"getReserveNormalizedVariableDebt(address)\":{\"details\":\"WARNING: This function is intended to be used primarily by the protocol itself to get a \\\"dynamic\\\" variable index based on time, current stored index and virtual rate at the current moment (approx. a borrower would get if opening a position). This means that is always used in combination with variable debt supply/balances. If using this function externally, consider that is possible to have an increasing normalized variable debt that is not equivalent to how the variable debt index would be updated in storage (e.g. only updates with non-zero variable debt supply)\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve normalized variable debt\"}},\"getReservesList()\":{\"details\":\"It does not include dropped reserves\",\"returns\":{\"_0\":\"The addresses of the underlying assets of the initialized reserves\"}},\"getUserAccountData(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"availableBorrowsBase\":\"The borrowing power left of the user in the base currency used by the price feed\",\"currentLiquidationThreshold\":\"The liquidation threshold of the user\",\"healthFactor\":\"The current health factor of the user\",\"ltv\":\"The loan to value of The user\",\"totalCollateralBase\":\"The total collateral of the user in the base currency used by the price feed\",\"totalDebtBase\":\"The total debt of the user in the base currency used by the price feed\"}},\"getUserConfiguration(address)\":{\"params\":{\"user\":\"The user address\"},\"returns\":{\"_0\":\"The configuration of the user\"}},\"getUserEMode(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The eMode id\"}},\"initReserve(address,address,address,address,address)\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"aTokenAddress\":\"The address of the aToken that will be assigned to the reserve\",\"asset\":\"The address of the underlying asset of the reserve\",\"interestRateStrategyAddress\":\"The address of the interest rate strategy contract\",\"stableDebtAddress\":\"The address of the StableDebtToken that will be assigned to the reserve\",\"variableDebtAddress\":\"The address of the VariableDebtToken that will be assigned to the reserve\"}},\"liquidationCall(address,address,address,uint256,bool)\":{\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"receiveAToken\":\"True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly\",\"user\":\"The address of the borrower getting liquidated\"}},\"mintToTreasury(address[])\":{\"params\":{\"assets\":\"The list of reserves for which the minting needs to be executed\"}},\"mintUnbacked(address,uint256,address,uint16)\":{\"params\":{\"amount\":\"The amount to mint\",\"asset\":\"The address of the underlying asset to mint\",\"onBehalfOf\":\"The address that will receive the aTokens\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"rebalanceStableBorrowRate(address,address)\":{\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"user\":\"The address of the user to be rebalanced\"}},\"repay(address,uint256,uint256,address)\":{\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"interestRateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed\"},\"returns\":{\"_0\":\"The final amount repaid\"}},\"repayWithATokens(address,uint256,uint256)\":{\"details\":\"Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken balance is not enough to cover the whole debt\",\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"interestRateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\"},\"returns\":{\"_0\":\"The final amount repaid\"}},\"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"deadline\":\"The deadline timestamp that the permit is valid\",\"interestRateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed\",\"permitR\":\"The R parameter of ERC712 permit sig\",\"permitS\":\"The S parameter of ERC712 permit sig\",\"permitV\":\"The V parameter of ERC712 permit sig\"},\"returns\":{\"_0\":\"The final amount repaid\"}},\"rescueTokens(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of token to transfer\",\"to\":\"The address of the recipient\",\"token\":\"The address of the token\"}},\"resetIsolationModeTotalDebt(address)\":{\"details\":\"It requires the given asset has zero debt ceiling\",\"params\":{\"asset\":\"The address of the underlying asset to reset the isolationModeTotalDebt\"}},\"setConfiguration(address,(uint256))\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\",\"configuration\":\"The new configuration bitmap\"}},\"setReserveInterestRateStrategyAddress(address,address)\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\",\"rateStrategyAddress\":\"The address of the interest rate strategy contract\"}},\"setUserEMode(uint8)\":{\"params\":{\"categoryId\":\"The id of the category\"}},\"setUserUseReserveAsCollateral(address,bool)\":{\"params\":{\"asset\":\"The address of the underlying asset supplied\",\"useAsCollateral\":\"True if the user wants to use the supply as collateral, false otherwise\"}},\"supply(address,uint256,address,uint16)\":{\"params\":{\"amount\":\"The amount to be supplied\",\"asset\":\"The address of the underlying asset to supply\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"amount\":\"The amount to be supplied\",\"asset\":\"The address of the underlying asset to supply\",\"deadline\":\"The deadline timestamp that the permit is valid\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"permitR\":\"The R parameter of ERC712 permit sig\",\"permitS\":\"The S parameter of ERC712 permit sig\",\"permitV\":\"The V parameter of ERC712 permit sig\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"swapBorrowRateMode(address,uint256)\":{\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"interestRateMode\":\"The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\"}},\"updateBridgeProtocolFee(uint256)\":{\"params\":{\"bridgeProtocolFee\":\"The part of the premium sent to the protocol treasury\"}},\"updateFlashloanPremiums(uint128,uint128)\":{\"details\":\"The total premium is calculated on the total borrowed amountThe premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`Only callable by the PoolConfigurator contract\",\"params\":{\"flashLoanPremiumToProtocol\":\"The part of the premium sent to the protocol treasury, expressed in bps\",\"flashLoanPremiumTotal\":\"The total premium, expressed in bps\"}},\"withdraw(address,uint256,address)\":{\"params\":{\"amount\":\"The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance\",\"asset\":\"The address of the underlying asset to withdraw\",\"to\":\"The address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet\"},\"returns\":{\"_0\":\"The final amount withdrawn\"}}},\"title\":\"IPool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ADDRESSES_PROVIDER()\":{\"notice\":\"Returns the PoolAddressesProvider connected to this contract\"},\"BRIDGE_PROTOCOL_FEE()\":{\"notice\":\"Returns the part of the bridge fees sent to protocol\"},\"FLASHLOAN_PREMIUM_TOTAL()\":{\"notice\":\"Returns the total fee on flash loans\"},\"FLASHLOAN_PREMIUM_TO_PROTOCOL()\":{\"notice\":\"Returns the part of the flashloan fees sent to protocol\"},\"MAX_NUMBER_RESERVES()\":{\"notice\":\"Returns the maximum number of reserves supported to be listed in this Pool\"},\"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()\":{\"notice\":\"Returns the percentage of available liquidity that can be borrowed at once at stable rate\"},\"backUnbacked(address,uint256,uint256)\":{\"notice\":\"Back the current unbacked underlying with `amount` and pay `fee`.\"},\"borrow(address,uint256,uint256,uint16,address)\":{\"notice\":\"Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already supplied enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`\"},\"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))\":{\"notice\":\"Configures a new category for the eMode.\"},\"deposit(address,uint256,address,uint16)\":{\"notice\":\"Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC\"},\"dropReserve(address)\":{\"notice\":\"Drop a reserve\"},\"finalizeTransfer(address,address,address,uint256,uint256,uint256)\":{\"notice\":\"Validates and finalizes an aToken transfer\"},\"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)\":{\"notice\":\"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned.\"},\"flashLoanSimple(address,address,uint256,bytes,uint16)\":{\"notice\":\"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned.\"},\"getConfiguration(address)\":{\"notice\":\"Returns the configuration of the reserve\"},\"getEModeCategoryData(uint8)\":{\"notice\":\"Returns the data of an eMode category\"},\"getReserveAddressById(uint16)\":{\"notice\":\"Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct\"},\"getReserveData(address)\":{\"notice\":\"Returns the state and configuration of the reserve\"},\"getReserveNormalizedIncome(address)\":{\"notice\":\"Returns the normalized income of the reserve\"},\"getReserveNormalizedVariableDebt(address)\":{\"notice\":\"Returns the normalized variable debt per unit of asset\"},\"getReservesList()\":{\"notice\":\"Returns the list of the underlying assets of all the initialized reserves\"},\"getUserAccountData(address)\":{\"notice\":\"Returns the user account data across all the reserves\"},\"getUserConfiguration(address)\":{\"notice\":\"Returns the configuration of the user across all the reserves\"},\"getUserEMode(address)\":{\"notice\":\"Returns the eMode the user is using\"},\"initReserve(address,address,address,address,address)\":{\"notice\":\"Initializes a reserve, activating it, assigning an aToken and debt tokens and an interest rate strategy\"},\"liquidationCall(address,address,address,uint256,bool)\":{\"notice\":\"Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\"},\"mintToTreasury(address[])\":{\"notice\":\"Mints the assets accrued through the reserve factor to the treasury in the form of aTokens\"},\"mintUnbacked(address,uint256,address,uint16)\":{\"notice\":\"Mints an `amount` of aTokens to the `onBehalfOf`\"},\"rebalanceStableBorrowRate(address,address)\":{\"notice\":\"Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too        much has been borrowed at a stable rate and suppliers are not earning enough\"},\"repay(address,uint256,uint256,address)\":{\"notice\":\"Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\"},\"repayWithATokens(address,uint256,uint256)\":{\"notice\":\"Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the equivalent debt tokens - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens\"},\"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Repay with transfer approval of asset to be repaid done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\"},\"rescueTokens(address,address,uint256)\":{\"notice\":\"Rescue and transfer tokens locked in this contract\"},\"resetIsolationModeTotalDebt(address)\":{\"notice\":\"Resets the isolation mode total debt of the given asset to zero\"},\"setConfiguration(address,(uint256))\":{\"notice\":\"Sets the configuration bitmap of the reserve as a whole\"},\"setReserveInterestRateStrategyAddress(address,address)\":{\"notice\":\"Updates the address of the interest rate strategy contract\"},\"setUserEMode(uint8)\":{\"notice\":\"Allows a user to use the protocol in eMode\"},\"setUserUseReserveAsCollateral(address,bool)\":{\"notice\":\"Allows suppliers to enable/disable a specific supplied asset as collateral\"},\"supply(address,uint256,address,uint16)\":{\"notice\":\"Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC\"},\"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Supply with transfer approval of asset to be supplied done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\"},\"swapBorrowRateMode(address,uint256)\":{\"notice\":\"Allows a borrower to swap his debt between stable and variable mode, or vice versa\"},\"updateBridgeProtocolFee(uint256)\":{\"notice\":\"Updates the protocol fee on the bridging\"},\"updateFlashloanPremiums(uint128,uint128)\":{\"notice\":\"Updates flash loan premiums. Flash loan premium consists of two parts: - A part is sent to aToken holders as extra, one time accumulated interest - A part is collected by the protocol treasury\"},\"withdraw(address,uint256,address)\":{\"notice\":\"Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\"}},\"notice\":\"Defines the basic interface for an Aave Pool.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IPool.sol\":\"IPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.0;\\n\\nlibrary DataTypes {\\n  struct ReserveData {\\n    //stores the reserve configuration\\n    ReserveConfigurationMap configuration;\\n    //the liquidity index. Expressed in ray\\n    uint128 liquidityIndex;\\n    //the current supply rate. Expressed in ray\\n    uint128 currentLiquidityRate;\\n    //variable borrow index. Expressed in ray\\n    uint128 variableBorrowIndex;\\n    //the current variable borrow rate. Expressed in ray\\n    uint128 currentVariableBorrowRate;\\n    //the current stable borrow rate. Expressed in ray\\n    uint128 currentStableBorrowRate;\\n    //timestamp of last update\\n    uint40 lastUpdateTimestamp;\\n    //the id of the reserve. Represents the position in the list of the active reserves\\n    uint16 id;\\n    //aToken address\\n    address aTokenAddress;\\n    //stableDebtToken address\\n    address stableDebtTokenAddress;\\n    //variableDebtToken address\\n    address variableDebtTokenAddress;\\n    //address of the interest rate strategy\\n    address interestRateStrategyAddress;\\n    //the current treasury balance, scaled\\n    uint128 accruedToTreasury;\\n    //the outstanding unbacked aTokens minted through the bridging feature\\n    uint128 unbacked;\\n    //the outstanding debt borrowed against this asset in isolation mode\\n    uint128 isolationModeTotalDebt;\\n  }\\n\\n  struct ReserveConfigurationMap {\\n    //bit 0-15: LTV\\n    //bit 16-31: Liq. threshold\\n    //bit 32-47: Liq. bonus\\n    //bit 48-55: Decimals\\n    //bit 56: reserve is active\\n    //bit 57: reserve is frozen\\n    //bit 58: borrowing is enabled\\n    //bit 59: stable rate borrowing enabled\\n    //bit 60: asset is paused\\n    //bit 61: borrowing in isolation mode is enabled\\n    //bit 62-63: reserved\\n    //bit 64-79: reserve factor\\n    //bit 80-115 borrow cap in whole tokens, borrowCap == 0 => no cap\\n    //bit 116-151 supply cap in whole tokens, supplyCap == 0 => no cap\\n    //bit 152-167 liquidation protocol fee\\n    //bit 168-175 eMode category\\n    //bit 176-211 unbacked mint cap in whole tokens, unbackedMintCap == 0 => minting disabled\\n    //bit 212-251 debt ceiling for isolation mode with (ReserveConfiguration::DEBT_CEILING_DECIMALS) decimals\\n    //bit 252-255 unused\\n\\n    uint256 data;\\n  }\\n\\n  struct UserConfigurationMap {\\n    /**\\n     * @dev Bitmap of the users collaterals and borrows. It is divided in pairs of bits, one pair per asset.\\n     * The first bit indicates if an asset is used as collateral by the user, the second whether an\\n     * asset is borrowed by the user.\\n     */\\n    uint256 data;\\n  }\\n\\n  struct EModeCategory {\\n    // each eMode category has a custom ltv and liquidation threshold\\n    uint16 ltv;\\n    uint16 liquidationThreshold;\\n    uint16 liquidationBonus;\\n    // each eMode category may or may not have a custom oracle to override the individual assets price oracles\\n    address priceSource;\\n    string label;\\n  }\\n\\n  enum InterestRateMode {\\n    NONE,\\n    STABLE,\\n    VARIABLE\\n  }\\n\\n  struct ReserveCache {\\n    uint256 currScaledVariableDebt;\\n    uint256 nextScaledVariableDebt;\\n    uint256 currPrincipalStableDebt;\\n    uint256 currAvgStableBorrowRate;\\n    uint256 currTotalStableDebt;\\n    uint256 nextAvgStableBorrowRate;\\n    uint256 nextTotalStableDebt;\\n    uint256 currLiquidityIndex;\\n    uint256 nextLiquidityIndex;\\n    uint256 currVariableBorrowIndex;\\n    uint256 nextVariableBorrowIndex;\\n    uint256 currLiquidityRate;\\n    uint256 currVariableBorrowRate;\\n    uint256 reserveFactor;\\n    ReserveConfigurationMap reserveConfiguration;\\n    address aTokenAddress;\\n    address stableDebtTokenAddress;\\n    address variableDebtTokenAddress;\\n    uint40 reserveLastUpdateTimestamp;\\n    uint40 stableDebtLastUpdateTimestamp;\\n  }\\n\\n  struct ExecuteLiquidationCallParams {\\n    uint256 reservesCount;\\n    uint256 debtToCover;\\n    address collateralAsset;\\n    address debtAsset;\\n    address user;\\n    bool receiveAToken;\\n    address priceOracle;\\n    uint8 userEModeCategory;\\n    address priceOracleSentinel;\\n  }\\n\\n  struct ExecuteSupplyParams {\\n    address asset;\\n    uint256 amount;\\n    address onBehalfOf;\\n    uint16 referralCode;\\n  }\\n\\n  struct ExecuteBorrowParams {\\n    address asset;\\n    address user;\\n    address onBehalfOf;\\n    uint256 amount;\\n    InterestRateMode interestRateMode;\\n    uint16 referralCode;\\n    bool releaseUnderlying;\\n    uint256 maxStableRateBorrowSizePercent;\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 userEModeCategory;\\n    address priceOracleSentinel;\\n  }\\n\\n  struct ExecuteRepayParams {\\n    address asset;\\n    uint256 amount;\\n    InterestRateMode interestRateMode;\\n    address onBehalfOf;\\n    bool useATokens;\\n  }\\n\\n  struct ExecuteWithdrawParams {\\n    address asset;\\n    uint256 amount;\\n    address to;\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 userEModeCategory;\\n  }\\n\\n  struct ExecuteSetUserEModeParams {\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 categoryId;\\n  }\\n\\n  struct FinalizeTransferParams {\\n    address asset;\\n    address from;\\n    address to;\\n    uint256 amount;\\n    uint256 balanceFromBefore;\\n    uint256 balanceToBefore;\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 fromEModeCategory;\\n  }\\n\\n  struct FlashloanParams {\\n    address receiverAddress;\\n    address[] assets;\\n    uint256[] amounts;\\n    uint256[] interestRateModes;\\n    address onBehalfOf;\\n    bytes params;\\n    uint16 referralCode;\\n    uint256 flashLoanPremiumToProtocol;\\n    uint256 flashLoanPremiumTotal;\\n    uint256 maxStableRateBorrowSizePercent;\\n    uint256 reservesCount;\\n    address addressesProvider;\\n    uint8 userEModeCategory;\\n    bool isAuthorizedFlashBorrower;\\n  }\\n\\n  struct FlashloanSimpleParams {\\n    address receiverAddress;\\n    address asset;\\n    uint256 amount;\\n    bytes params;\\n    uint16 referralCode;\\n    uint256 flashLoanPremiumToProtocol;\\n    uint256 flashLoanPremiumTotal;\\n  }\\n\\n  struct FlashLoanRepaymentParams {\\n    uint256 amount;\\n    uint256 totalPremium;\\n    uint256 flashLoanPremiumToProtocol;\\n    address asset;\\n    address receiverAddress;\\n    uint16 referralCode;\\n  }\\n\\n  struct CalculateUserAccountDataParams {\\n    UserConfigurationMap userConfig;\\n    uint256 reservesCount;\\n    address user;\\n    address oracle;\\n    uint8 userEModeCategory;\\n  }\\n\\n  struct ValidateBorrowParams {\\n    ReserveCache reserveCache;\\n    UserConfigurationMap userConfig;\\n    address asset;\\n    address userAddress;\\n    uint256 amount;\\n    InterestRateMode interestRateMode;\\n    uint256 maxStableLoanPercent;\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 userEModeCategory;\\n    address priceOracleSentinel;\\n    bool isolationModeActive;\\n    address isolationModeCollateralAddress;\\n    uint256 isolationModeDebtCeiling;\\n  }\\n\\n  struct ValidateLiquidationCallParams {\\n    ReserveCache debtReserveCache;\\n    uint256 totalDebt;\\n    uint256 healthFactor;\\n    address priceOracleSentinel;\\n  }\\n\\n  struct CalculateInterestRatesParams {\\n    uint256 unbacked;\\n    uint256 liquidityAdded;\\n    uint256 liquidityTaken;\\n    uint256 totalStableDebt;\\n    uint256 totalVariableDebt;\\n    uint256 averageStableBorrowRate;\\n    uint256 reserveFactor;\\n    address reserve;\\n    address aToken;\\n  }\\n\\n  struct InitReserveParams {\\n    address asset;\\n    address aTokenAddress;\\n    address stableDebtAddress;\\n    address variableDebtAddress;\\n    address interestRateStrategyAddress;\\n    uint16 reservesCount;\\n    uint16 maxNumberReserves;\\n  }\\n}\\n\",\"keccak256\":\"0xe5c6db4edc44768b334b6f9271e1ae21c81d6ab0692c2740cce0c56c4ac433dd\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IPool.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport {IPoolAddressesProvider} from \\\"./IPoolAddressesProvider.sol\\\";\\r\\nimport {DataTypes} from \\\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title IPool\\r\\n * @author Aave\\r\\n * @notice Defines the basic interface for an Aave Pool.\\r\\n */\\r\\ninterface IPool {\\r\\n    /**\\r\\n     * @dev Emitted on mintUnbacked()\\r\\n     * @param reserve The address of the underlying asset of the reserve\\r\\n     * @param user The address initiating the supply\\r\\n     * @param onBehalfOf The beneficiary of the supplied assets, receiving the aTokens\\r\\n     * @param amount The amount of supplied assets\\r\\n     * @param referralCode The referral code used\\r\\n     */\\r\\n    event MintUnbacked(\\r\\n        address indexed reserve,\\r\\n        address user,\\r\\n        address indexed onBehalfOf,\\r\\n        uint256 amount,\\r\\n        uint16 indexed referralCode\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted on backUnbacked()\\r\\n     * @param reserve The address of the underlying asset of the reserve\\r\\n     * @param backer The address paying for the backing\\r\\n     * @param amount The amount added as backing\\r\\n     * @param fee The amount paid in fees\\r\\n     */\\r\\n    event BackUnbacked(\\r\\n        address indexed reserve,\\r\\n        address indexed backer,\\r\\n        uint256 amount,\\r\\n        uint256 fee\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted on supply()\\r\\n     * @param reserve The address of the underlying asset of the reserve\\r\\n     * @param user The address initiating the supply\\r\\n     * @param onBehalfOf The beneficiary of the supply, receiving the aTokens\\r\\n     * @param amount The amount supplied\\r\\n     * @param referralCode The referral code used\\r\\n     */\\r\\n    event Supply(\\r\\n        address indexed reserve,\\r\\n        address user,\\r\\n        address indexed onBehalfOf,\\r\\n        uint256 amount,\\r\\n        uint16 indexed referralCode\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted on withdraw()\\r\\n     * @param reserve The address of the underlying asset being withdrawn\\r\\n     * @param user The address initiating the withdrawal, owner of aTokens\\r\\n     * @param to The address that will receive the underlying\\r\\n     * @param amount The amount to be withdrawn\\r\\n     */\\r\\n    event Withdraw(\\r\\n        address indexed reserve,\\r\\n        address indexed user,\\r\\n        address indexed to,\\r\\n        uint256 amount\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted on borrow() and flashLoan() when debt needs to be opened\\r\\n     * @param reserve The address of the underlying asset being borrowed\\r\\n     * @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\\r\\n     * initiator of the transaction on flashLoan()\\r\\n     * @param onBehalfOf The address that will be getting the debt\\r\\n     * @param amount The amount borrowed out\\r\\n     * @param interestRateMode The rate mode: 1 for Stable, 2 for Variable\\r\\n     * @param borrowRate The numeric rate at which the user has borrowed, expressed in ray\\r\\n     * @param referralCode The referral code used\\r\\n     */\\r\\n    event Borrow(\\r\\n        address indexed reserve,\\r\\n        address user,\\r\\n        address indexed onBehalfOf,\\r\\n        uint256 amount,\\r\\n        DataTypes.InterestRateMode interestRateMode,\\r\\n        uint256 borrowRate,\\r\\n        uint16 indexed referralCode\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted on repay()\\r\\n     * @param reserve The address of the underlying asset of the reserve\\r\\n     * @param user The beneficiary of the repayment, getting his debt reduced\\r\\n     * @param repayer The address of the user initiating the repay(), providing the funds\\r\\n     * @param amount The amount repaid\\r\\n     * @param useATokens True if the repayment is done using aTokens, `false` if done with underlying asset directly\\r\\n     */\\r\\n    event Repay(\\r\\n        address indexed reserve,\\r\\n        address indexed user,\\r\\n        address indexed repayer,\\r\\n        uint256 amount,\\r\\n        bool useATokens\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted on swapBorrowRateMode()\\r\\n     * @param reserve The address of the underlying asset of the reserve\\r\\n     * @param user The address of the user swapping his rate mode\\r\\n     * @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\\r\\n     */\\r\\n    event SwapBorrowRateMode(\\r\\n        address indexed reserve,\\r\\n        address indexed user,\\r\\n        DataTypes.InterestRateMode interestRateMode\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted on borrow(), repay() and liquidationCall() when using isolated assets\\r\\n     * @param asset The address of the underlying asset of the reserve\\r\\n     * @param totalDebt The total isolation mode debt for the reserve\\r\\n     */\\r\\n    event IsolationModeTotalDebtUpdated(\\r\\n        address indexed asset,\\r\\n        uint256 totalDebt\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the user selects a certain asset category for eMode\\r\\n     * @param user The address of the user\\r\\n     * @param categoryId The category id\\r\\n     */\\r\\n    event UserEModeSet(address indexed user, uint8 categoryId);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted on setUserUseReserveAsCollateral()\\r\\n     * @param reserve The address of the underlying asset of the reserve\\r\\n     * @param user The address of the user enabling the usage as collateral\\r\\n     */\\r\\n    event ReserveUsedAsCollateralEnabled(\\r\\n        address indexed reserve,\\r\\n        address indexed user\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted on setUserUseReserveAsCollateral()\\r\\n     * @param reserve The address of the underlying asset of the reserve\\r\\n     * @param user The address of the user enabling the usage as collateral\\r\\n     */\\r\\n    event ReserveUsedAsCollateralDisabled(\\r\\n        address indexed reserve,\\r\\n        address indexed user\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted on rebalanceStableBorrowRate()\\r\\n     * @param reserve The address of the underlying asset of the reserve\\r\\n     * @param user The address of the user for which the rebalance has been executed\\r\\n     */\\r\\n    event RebalanceStableBorrowRate(\\r\\n        address indexed reserve,\\r\\n        address indexed user\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted on flashLoan()\\r\\n     * @param target The address of the flash loan receiver contract\\r\\n     * @param initiator The address initiating the flash loan\\r\\n     * @param asset The address of the asset being flash borrowed\\r\\n     * @param amount The amount flash borrowed\\r\\n     * @param interestRateMode The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt\\r\\n     * @param premium The fee flash borrowed\\r\\n     * @param referralCode The referral code used\\r\\n     */\\r\\n    event FlashLoan(\\r\\n        address indexed target,\\r\\n        address initiator,\\r\\n        address indexed asset,\\r\\n        uint256 amount,\\r\\n        DataTypes.InterestRateMode interestRateMode,\\r\\n        uint256 premium,\\r\\n        uint16 indexed referralCode\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when a borrower is liquidated.\\r\\n     * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\\r\\n     * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\\r\\n     * @param user The address of the borrower getting liquidated\\r\\n     * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\\r\\n     * @param liquidatedCollateralAmount The amount of collateral received by the liquidator\\r\\n     * @param liquidator The address of the liquidator\\r\\n     * @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\\r\\n     * to receive the underlying collateral asset directly\\r\\n     */\\r\\n    event LiquidationCall(\\r\\n        address indexed collateralAsset,\\r\\n        address indexed debtAsset,\\r\\n        address indexed user,\\r\\n        uint256 debtToCover,\\r\\n        uint256 liquidatedCollateralAmount,\\r\\n        address liquidator,\\r\\n        bool receiveAToken\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the state of a reserve is updated.\\r\\n     * @param reserve The address of the underlying asset of the reserve\\r\\n     * @param liquidityRate The next liquidity rate\\r\\n     * @param stableBorrowRate The next stable borrow rate\\r\\n     * @param variableBorrowRate The next variable borrow rate\\r\\n     * @param liquidityIndex The next liquidity index\\r\\n     * @param variableBorrowIndex The next variable borrow index\\r\\n     */\\r\\n    event ReserveDataUpdated(\\r\\n        address indexed reserve,\\r\\n        uint256 liquidityRate,\\r\\n        uint256 stableBorrowRate,\\r\\n        uint256 variableBorrowRate,\\r\\n        uint256 liquidityIndex,\\r\\n        uint256 variableBorrowIndex\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the protocol treasury receives minted aTokens from the accrued interest.\\r\\n     * @param reserve The address of the reserve\\r\\n     * @param amountMinted The amount minted to the treasury\\r\\n     */\\r\\n    event MintedToTreasury(address indexed reserve, uint256 amountMinted);\\r\\n\\r\\n    /**\\r\\n     * @notice Mints an `amount` of aTokens to the `onBehalfOf`\\r\\n     * @param asset The address of the underlying asset to mint\\r\\n     * @param amount The amount to mint\\r\\n     * @param onBehalfOf The address that will receive the aTokens\\r\\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\r\\n     *   0 if the action is executed directly by the user, without any middle-man\\r\\n     */\\r\\n    function mintUnbacked(\\r\\n        address asset,\\r\\n        uint256 amount,\\r\\n        address onBehalfOf,\\r\\n        uint16 referralCode\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Back the current unbacked underlying with `amount` and pay `fee`.\\r\\n     * @param asset The address of the underlying asset to back\\r\\n     * @param amount The amount to back\\r\\n     * @param fee The amount paid in fees\\r\\n     * @return The backed amount\\r\\n     */\\r\\n    function backUnbacked(\\r\\n        address asset,\\r\\n        uint256 amount,\\r\\n        uint256 fee\\r\\n    ) external returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\\r\\n     * - E.g. User supplies 100 USDC and gets in return 100 aUSDC\\r\\n     * @param asset The address of the underlying asset to supply\\r\\n     * @param amount The amount to be supplied\\r\\n     * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\\r\\n     *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\\r\\n     *   is a different wallet\\r\\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\r\\n     *   0 if the action is executed directly by the user, without any middle-man\\r\\n     */\\r\\n    function supply(\\r\\n        address asset,\\r\\n        uint256 amount,\\r\\n        address onBehalfOf,\\r\\n        uint16 referralCode\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Supply with transfer approval of asset to be supplied done via permit function\\r\\n     * see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\\r\\n     * @param asset The address of the underlying asset to supply\\r\\n     * @param amount The amount to be supplied\\r\\n     * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\\r\\n     *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\\r\\n     *   is a different wallet\\r\\n     * @param deadline The deadline timestamp that the permit is valid\\r\\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\r\\n     *   0 if the action is executed directly by the user, without any middle-man\\r\\n     * @param permitV The V parameter of ERC712 permit sig\\r\\n     * @param permitR The R parameter of ERC712 permit sig\\r\\n     * @param permitS The S parameter of ERC712 permit sig\\r\\n     */\\r\\n    function supplyWithPermit(\\r\\n        address asset,\\r\\n        uint256 amount,\\r\\n        address onBehalfOf,\\r\\n        uint16 referralCode,\\r\\n        uint256 deadline,\\r\\n        uint8 permitV,\\r\\n        bytes32 permitR,\\r\\n        bytes32 permitS\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\\r\\n     * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\\r\\n     * @param asset The address of the underlying asset to withdraw\\r\\n     * @param amount The underlying amount to be withdrawn\\r\\n     *   - Send the value type(uint256).max in order to withdraw the whole aToken balance\\r\\n     * @param to The address that will receive the underlying, same as msg.sender if the user\\r\\n     *   wants to receive it on his own wallet, or a different address if the beneficiary is a\\r\\n     *   different wallet\\r\\n     * @return The final amount withdrawn\\r\\n     */\\r\\n    function withdraw(\\r\\n        address asset,\\r\\n        uint256 amount,\\r\\n        address to\\r\\n    ) external returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @notice Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\\r\\n     * already supplied enough collateral, or he was given enough allowance by a credit delegator on the\\r\\n     * corresponding debt token (StableDebtToken or VariableDebtToken)\\r\\n     * - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\\r\\n     *   and 100 stable/variable debt tokens, depending on the `interestRateMode`\\r\\n     * @param asset The address of the underlying asset to borrow\\r\\n     * @param amount The amount to be borrowed\\r\\n     * @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\\r\\n     * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\\r\\n     *   0 if the action is executed directly by the user, without any middle-man\\r\\n     * @param onBehalfOf The address of the user who will receive the debt. Should be the address of the borrower itself\\r\\n     * calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\\r\\n     * if he has been given credit delegation allowance\\r\\n     */\\r\\n    function borrow(\\r\\n        address asset,\\r\\n        uint256 amount,\\r\\n        uint256 interestRateMode,\\r\\n        uint16 referralCode,\\r\\n        address onBehalfOf\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\\r\\n     * - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\\r\\n     * @param asset The address of the borrowed underlying asset previously borrowed\\r\\n     * @param amount The amount to repay\\r\\n     * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\\r\\n     * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\\r\\n     * @param onBehalfOf The address of the user who will get his debt reduced/removed. Should be the address of the\\r\\n     * user calling the function if he wants to reduce/remove his own debt, or the address of any other\\r\\n     * other borrower whose debt should be removed\\r\\n     * @return The final amount repaid\\r\\n     */\\r\\n    function repay(\\r\\n        address asset,\\r\\n        uint256 amount,\\r\\n        uint256 interestRateMode,\\r\\n        address onBehalfOf\\r\\n    ) external returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @notice Repay with transfer approval of asset to be repaid done via permit function\\r\\n     * see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\\r\\n     * @param asset The address of the borrowed underlying asset previously borrowed\\r\\n     * @param amount The amount to repay\\r\\n     * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\\r\\n     * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\\r\\n     * @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\\r\\n     * user calling the function if he wants to reduce/remove his own debt, or the address of any other\\r\\n     * other borrower whose debt should be removed\\r\\n     * @param deadline The deadline timestamp that the permit is valid\\r\\n     * @param permitV The V parameter of ERC712 permit sig\\r\\n     * @param permitR The R parameter of ERC712 permit sig\\r\\n     * @param permitS The S parameter of ERC712 permit sig\\r\\n     * @return The final amount repaid\\r\\n     */\\r\\n    function repayWithPermit(\\r\\n        address asset,\\r\\n        uint256 amount,\\r\\n        uint256 interestRateMode,\\r\\n        address onBehalfOf,\\r\\n        uint256 deadline,\\r\\n        uint8 permitV,\\r\\n        bytes32 permitR,\\r\\n        bytes32 permitS\\r\\n    ) external returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @notice Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the\\r\\n     * equivalent debt tokens\\r\\n     * - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens\\r\\n     * @dev  Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken\\r\\n     * balance is not enough to cover the whole debt\\r\\n     * @param asset The address of the borrowed underlying asset previously borrowed\\r\\n     * @param amount The amount to repay\\r\\n     * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\\r\\n     * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\\r\\n     * @return The final amount repaid\\r\\n     */\\r\\n    function repayWithATokens(\\r\\n        address asset,\\r\\n        uint256 amount,\\r\\n        uint256 interestRateMode\\r\\n    ) external returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @notice Allows a borrower to swap his debt between stable and variable mode, or vice versa\\r\\n     * @param asset The address of the underlying asset borrowed\\r\\n     * @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\\r\\n     */\\r\\n    function swapBorrowRateMode(\\r\\n        address asset,\\r\\n        uint256 interestRateMode\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\\r\\n     * - Users can be rebalanced if the following conditions are satisfied:\\r\\n     *     1. Usage ratio is above 95%\\r\\n     *     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too\\r\\n     *        much has been borrowed at a stable rate and suppliers are not earning enough\\r\\n     * @param asset The address of the underlying asset borrowed\\r\\n     * @param user The address of the user to be rebalanced\\r\\n     */\\r\\n    function rebalanceStableBorrowRate(address asset, address user) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Allows suppliers to enable/disable a specific supplied asset as collateral\\r\\n     * @param asset The address of the underlying asset supplied\\r\\n     * @param useAsCollateral True if the user wants to use the supply as collateral, false otherwise\\r\\n     */\\r\\n    function setUserUseReserveAsCollateral(\\r\\n        address asset,\\r\\n        bool useAsCollateral\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\\r\\n     * - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\\r\\n     *   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\\r\\n     * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\\r\\n     * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\\r\\n     * @param user The address of the borrower getting liquidated\\r\\n     * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\\r\\n     * @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\\r\\n     * to receive the underlying collateral asset directly\\r\\n     */\\r\\n    function liquidationCall(\\r\\n        address collateralAsset,\\r\\n        address debtAsset,\\r\\n        address user,\\r\\n        uint256 debtToCover,\\r\\n        bool receiveAToken\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\\r\\n     * as long as the amount taken plus a fee is returned.\\r\\n     * @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\\r\\n     * into consideration. For further details please visit https://docs.aave.com/developers/\\r\\n     * @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanReceiver interface\\r\\n     * @param assets The addresses of the assets being flash-borrowed\\r\\n     * @param amounts The amounts of the assets being flash-borrowed\\r\\n     * @param interestRateModes Types of the debt to open if the flash loan is not returned:\\r\\n     *   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\\r\\n     *   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\\r\\n     *   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\\r\\n     * @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\\r\\n     * @param params Variadic packed params to pass to the receiver as extra information\\r\\n     * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\\r\\n     *   0 if the action is executed directly by the user, without any middle-man\\r\\n     */\\r\\n    function flashLoan(\\r\\n        address receiverAddress,\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata amounts,\\r\\n        uint256[] calldata interestRateModes,\\r\\n        address onBehalfOf,\\r\\n        bytes calldata params,\\r\\n        uint16 referralCode\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\\r\\n     * as long as the amount taken plus a fee is returned.\\r\\n     * @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\\r\\n     * into consideration. For further details please visit https://docs.aave.com/developers/\\r\\n     * @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface\\r\\n     * @param asset The address of the asset being flash-borrowed\\r\\n     * @param amount The amount of the asset being flash-borrowed\\r\\n     * @param params Variadic packed params to pass to the receiver as extra information\\r\\n     * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\\r\\n     *   0 if the action is executed directly by the user, without any middle-man\\r\\n     */\\r\\n    function flashLoanSimple(\\r\\n        address receiverAddress,\\r\\n        address asset,\\r\\n        uint256 amount,\\r\\n        bytes calldata params,\\r\\n        uint16 referralCode\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the user account data across all the reserves\\r\\n     * @param user The address of the user\\r\\n     * @return totalCollateralBase The total collateral of the user in the base currency used by the price feed\\r\\n     * @return totalDebtBase The total debt of the user in the base currency used by the price feed\\r\\n     * @return availableBorrowsBase The borrowing power left of the user in the base currency used by the price feed\\r\\n     * @return currentLiquidationThreshold The liquidation threshold of the user\\r\\n     * @return ltv The loan to value of The user\\r\\n     * @return healthFactor The current health factor of the user\\r\\n     */\\r\\n    function getUserAccountData(\\r\\n        address user\\r\\n    )\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint256 totalCollateralBase,\\r\\n            uint256 totalDebtBase,\\r\\n            uint256 availableBorrowsBase,\\r\\n            uint256 currentLiquidationThreshold,\\r\\n            uint256 ltv,\\r\\n            uint256 healthFactor\\r\\n        );\\r\\n\\r\\n    /**\\r\\n     * @notice Initializes a reserve, activating it, assigning an aToken and debt tokens and an\\r\\n     * interest rate strategy\\r\\n     * @dev Only callable by the PoolConfigurator contract\\r\\n     * @param asset The address of the underlying asset of the reserve\\r\\n     * @param aTokenAddress The address of the aToken that will be assigned to the reserve\\r\\n     * @param stableDebtAddress The address of the StableDebtToken that will be assigned to the reserve\\r\\n     * @param variableDebtAddress The address of the VariableDebtToken that will be assigned to the reserve\\r\\n     * @param interestRateStrategyAddress The address of the interest rate strategy contract\\r\\n     */\\r\\n    function initReserve(\\r\\n        address asset,\\r\\n        address aTokenAddress,\\r\\n        address stableDebtAddress,\\r\\n        address variableDebtAddress,\\r\\n        address interestRateStrategyAddress\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Drop a reserve\\r\\n     * @dev Only callable by the PoolConfigurator contract\\r\\n     * @param asset The address of the underlying asset of the reserve\\r\\n     */\\r\\n    function dropReserve(address asset) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the address of the interest rate strategy contract\\r\\n     * @dev Only callable by the PoolConfigurator contract\\r\\n     * @param asset The address of the underlying asset of the reserve\\r\\n     * @param rateStrategyAddress The address of the interest rate strategy contract\\r\\n     */\\r\\n    function setReserveInterestRateStrategyAddress(\\r\\n        address asset,\\r\\n        address rateStrategyAddress\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Sets the configuration bitmap of the reserve as a whole\\r\\n     * @dev Only callable by the PoolConfigurator contract\\r\\n     * @param asset The address of the underlying asset of the reserve\\r\\n     * @param configuration The new configuration bitmap\\r\\n     */\\r\\n    function setConfiguration(\\r\\n        address asset,\\r\\n        DataTypes.ReserveConfigurationMap calldata configuration\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the configuration of the reserve\\r\\n     * @param asset The address of the underlying asset of the reserve\\r\\n     * @return The configuration of the reserve\\r\\n     */\\r\\n    function getConfiguration(\\r\\n        address asset\\r\\n    ) external view returns (DataTypes.ReserveConfigurationMap memory);\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the configuration of the user across all the reserves\\r\\n     * @param user The user address\\r\\n     * @return The configuration of the user\\r\\n     */\\r\\n    function getUserConfiguration(\\r\\n        address user\\r\\n    ) external view returns (DataTypes.UserConfigurationMap memory);\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the normalized income of the reserve\\r\\n     * @param asset The address of the underlying asset of the reserve\\r\\n     * @return The reserve's normalized income\\r\\n     */\\r\\n    function getReserveNormalizedIncome(\\r\\n        address asset\\r\\n    ) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the normalized variable debt per unit of asset\\r\\n     * @dev WARNING: This function is intended to be used primarily by the protocol itself to get a\\r\\n     * \\\"dynamic\\\" variable index based on time, current stored index and virtual rate at the current\\r\\n     * moment (approx. a borrower would get if opening a position). This means that is always used in\\r\\n     * combination with variable debt supply/balances.\\r\\n     * If using this function externally, consider that is possible to have an increasing normalized\\r\\n     * variable debt that is not equivalent to how the variable debt index would be updated in storage\\r\\n     * (e.g. only updates with non-zero variable debt supply)\\r\\n     * @param asset The address of the underlying asset of the reserve\\r\\n     * @return The reserve normalized variable debt\\r\\n     */\\r\\n    function getReserveNormalizedVariableDebt(\\r\\n        address asset\\r\\n    ) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the state and configuration of the reserve\\r\\n     * @param asset The address of the underlying asset of the reserve\\r\\n     * @return The state and configuration data of the reserve\\r\\n     */\\r\\n    function getReserveData(\\r\\n        address asset\\r\\n    ) external view returns (DataTypes.ReserveData memory);\\r\\n\\r\\n    /**\\r\\n     * @notice Validates and finalizes an aToken transfer\\r\\n     * @dev Only callable by the overlying aToken of the `asset`\\r\\n     * @param asset The address of the underlying asset of the aToken\\r\\n     * @param from The user from which the aTokens are transferred\\r\\n     * @param to The user receiving the aTokens\\r\\n     * @param amount The amount being transferred/withdrawn\\r\\n     * @param balanceFromBefore The aToken balance of the `from` user before the transfer\\r\\n     * @param balanceToBefore The aToken balance of the `to` user before the transfer\\r\\n     */\\r\\n    function finalizeTransfer(\\r\\n        address asset,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 balanceFromBefore,\\r\\n        uint256 balanceToBefore\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the list of the underlying assets of all the initialized reserves\\r\\n     * @dev It does not include dropped reserves\\r\\n     * @return The addresses of the underlying assets of the initialized reserves\\r\\n     */\\r\\n    function getReservesList() external view returns (address[] memory);\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct\\r\\n     * @param id The id of the reserve as stored in the DataTypes.ReserveData struct\\r\\n     * @return The address of the reserve associated with id\\r\\n     */\\r\\n    function getReserveAddressById(uint16 id) external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the PoolAddressesProvider connected to this contract\\r\\n     * @return The address of the PoolAddressesProvider\\r\\n     */\\r\\n    function ADDRESSES_PROVIDER()\\r\\n        external\\r\\n        view\\r\\n        returns (IPoolAddressesProvider);\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the protocol fee on the bridging\\r\\n     * @param bridgeProtocolFee The part of the premium sent to the protocol treasury\\r\\n     */\\r\\n    function updateBridgeProtocolFee(uint256 bridgeProtocolFee) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Updates flash loan premiums. Flash loan premium consists of two parts:\\r\\n     * - A part is sent to aToken holders as extra, one time accumulated interest\\r\\n     * - A part is collected by the protocol treasury\\r\\n     * @dev The total premium is calculated on the total borrowed amount\\r\\n     * @dev The premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`\\r\\n     * @dev Only callable by the PoolConfigurator contract\\r\\n     * @param flashLoanPremiumTotal The total premium, expressed in bps\\r\\n     * @param flashLoanPremiumToProtocol The part of the premium sent to the protocol treasury, expressed in bps\\r\\n     */\\r\\n    function updateFlashloanPremiums(\\r\\n        uint128 flashLoanPremiumTotal,\\r\\n        uint128 flashLoanPremiumToProtocol\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Configures a new category for the eMode.\\r\\n     * @dev In eMode, the protocol allows very high borrowing power to borrow assets of the same category.\\r\\n     * The category 0 is reserved as it's the default for volatile assets\\r\\n     * @param id The id of the category\\r\\n     * @param config The configuration of the category\\r\\n     */\\r\\n    function configureEModeCategory(\\r\\n        uint8 id,\\r\\n        DataTypes.EModeCategory memory config\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the data of an eMode category\\r\\n     * @param id The id of the category\\r\\n     * @return The configuration data of the category\\r\\n     */\\r\\n    function getEModeCategoryData(\\r\\n        uint8 id\\r\\n    ) external view returns (DataTypes.EModeCategory memory);\\r\\n\\r\\n    /**\\r\\n     * @notice Allows a user to use the protocol in eMode\\r\\n     * @param categoryId The id of the category\\r\\n     */\\r\\n    function setUserEMode(uint8 categoryId) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the eMode the user is using\\r\\n     * @param user The address of the user\\r\\n     * @return The eMode id\\r\\n     */\\r\\n    function getUserEMode(address user) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @notice Resets the isolation mode total debt of the given asset to zero\\r\\n     * @dev It requires the given asset has zero debt ceiling\\r\\n     * @param asset The address of the underlying asset to reset the isolationModeTotalDebt\\r\\n     */\\r\\n    function resetIsolationModeTotalDebt(address asset) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the percentage of available liquidity that can be borrowed at once at stable rate\\r\\n     * @return The percentage of available liquidity to borrow, expressed in bps\\r\\n     */\\r\\n    function MAX_STABLE_RATE_BORROW_SIZE_PERCENT()\\r\\n        external\\r\\n        view\\r\\n        returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the total fee on flash loans\\r\\n     * @return The total fee on flashloans\\r\\n     */\\r\\n    function FLASHLOAN_PREMIUM_TOTAL() external view returns (uint128);\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the part of the bridge fees sent to protocol\\r\\n     * @return The bridge fee sent to the protocol treasury\\r\\n     */\\r\\n    function BRIDGE_PROTOCOL_FEE() external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the part of the flashloan fees sent to protocol\\r\\n     * @return The flashloan fee sent to the protocol treasury\\r\\n     */\\r\\n    function FLASHLOAN_PREMIUM_TO_PROTOCOL() external view returns (uint128);\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the maximum number of reserves supported to be listed in this Pool\\r\\n     * @return The maximum number of reserves supported\\r\\n     */\\r\\n    function MAX_NUMBER_RESERVES() external view returns (uint16);\\r\\n\\r\\n    /**\\r\\n     * @notice Mints the assets accrued through the reserve factor to the treasury in the form of aTokens\\r\\n     * @param assets The list of reserves for which the minting needs to be executed\\r\\n     */\\r\\n    function mintToTreasury(address[] calldata assets) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Rescue and transfer tokens locked in this contract\\r\\n     * @param token The address of the token\\r\\n     * @param to The address of the recipient\\r\\n     * @param amount The amount of token to transfer\\r\\n     */\\r\\n    function rescueTokens(address token, address to, uint256 amount) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\\r\\n     * - E.g. User supplies 100 USDC and gets in return 100 aUSDC\\r\\n     * @dev Deprecated: Use the `supply` function instead\\r\\n     * @param asset The address of the underlying asset to supply\\r\\n     * @param amount The amount to be supplied\\r\\n     * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\\r\\n     *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\\r\\n     *   is a different wallet\\r\\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\r\\n     *   0 if the action is executed directly by the user, without any middle-man\\r\\n     */\\r\\n    function deposit(\\r\\n        address asset,\\r\\n        uint256 amount,\\r\\n        address onBehalfOf,\\r\\n        uint16 referralCode\\r\\n    ) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x5e51bb7e7bc50d82b2e5eec845ef6112b993c7566da80ab1b237f2d4db215bb2\",\"license\":\"AGPL-3.0\"},\"contracts/interface/IPoolAddressesProvider.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @title IPoolAddressesProvider\\r\\n * @author Aave\\r\\n * @notice Defines the basic interface for a Pool Addresses Provider.\\r\\n */\\r\\ninterface IPoolAddressesProvider {\\r\\n    /**\\r\\n     * @dev Emitted when the market identifier is updated.\\r\\n     * @param oldMarketId The old id of the market\\r\\n     * @param newMarketId The new id of the market\\r\\n     */\\r\\n    event MarketIdSet(string indexed oldMarketId, string indexed newMarketId);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the pool is updated.\\r\\n     * @param oldAddress The old address of the Pool\\r\\n     * @param newAddress The new address of the Pool\\r\\n     */\\r\\n    event PoolUpdated(address indexed oldAddress, address indexed newAddress);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the pool configurator is updated.\\r\\n     * @param oldAddress The old address of the PoolConfigurator\\r\\n     * @param newAddress The new address of the PoolConfigurator\\r\\n     */\\r\\n    event PoolConfiguratorUpdated(\\r\\n        address indexed oldAddress,\\r\\n        address indexed newAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the price oracle is updated.\\r\\n     * @param oldAddress The old address of the PriceOracle\\r\\n     * @param newAddress The new address of the PriceOracle\\r\\n     */\\r\\n    event PriceOracleUpdated(\\r\\n        address indexed oldAddress,\\r\\n        address indexed newAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the ACL manager is updated.\\r\\n     * @param oldAddress The old address of the ACLManager\\r\\n     * @param newAddress The new address of the ACLManager\\r\\n     */\\r\\n    event ACLManagerUpdated(\\r\\n        address indexed oldAddress,\\r\\n        address indexed newAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the ACL admin is updated.\\r\\n     * @param oldAddress The old address of the ACLAdmin\\r\\n     * @param newAddress The new address of the ACLAdmin\\r\\n     */\\r\\n    event ACLAdminUpdated(\\r\\n        address indexed oldAddress,\\r\\n        address indexed newAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the price oracle sentinel is updated.\\r\\n     * @param oldAddress The old address of the PriceOracleSentinel\\r\\n     * @param newAddress The new address of the PriceOracleSentinel\\r\\n     */\\r\\n    event PriceOracleSentinelUpdated(\\r\\n        address indexed oldAddress,\\r\\n        address indexed newAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the pool data provider is updated.\\r\\n     * @param oldAddress The old address of the PoolDataProvider\\r\\n     * @param newAddress The new address of the PoolDataProvider\\r\\n     */\\r\\n    event PoolDataProviderUpdated(\\r\\n        address indexed oldAddress,\\r\\n        address indexed newAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when a new proxy is created.\\r\\n     * @param id The identifier of the proxy\\r\\n     * @param proxyAddress The address of the created proxy contract\\r\\n     * @param implementationAddress The address of the implementation contract\\r\\n     */\\r\\n    event ProxyCreated(\\r\\n        bytes32 indexed id,\\r\\n        address indexed proxyAddress,\\r\\n        address indexed implementationAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when a new non-proxied contract address is registered.\\r\\n     * @param id The identifier of the contract\\r\\n     * @param oldAddress The address of the old contract\\r\\n     * @param newAddress The address of the new contract\\r\\n     */\\r\\n    event AddressSet(\\r\\n        bytes32 indexed id,\\r\\n        address indexed oldAddress,\\r\\n        address indexed newAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the implementation of the proxy registered with id is updated\\r\\n     * @param id The identifier of the contract\\r\\n     * @param proxyAddress The address of the proxy contract\\r\\n     * @param oldImplementationAddress The address of the old implementation contract\\r\\n     * @param newImplementationAddress The address of the new implementation contract\\r\\n     */\\r\\n    event AddressSetAsProxy(\\r\\n        bytes32 indexed id,\\r\\n        address indexed proxyAddress,\\r\\n        address oldImplementationAddress,\\r\\n        address indexed newImplementationAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the id of the Aave market to which this contract points to.\\r\\n     * @return The market id\\r\\n     */\\r\\n    function getMarketId() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @notice Associates an id with a specific PoolAddressesProvider.\\r\\n     * @dev This can be used to create an onchain registry of PoolAddressesProviders to\\r\\n     * identify and validate multiple Aave markets.\\r\\n     * @param newMarketId The market id\\r\\n     */\\r\\n    function setMarketId(string calldata newMarketId) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns an address by its identifier.\\r\\n     * @dev The returned address might be an EOA or a contract, potentially proxied\\r\\n     * @dev It returns ZERO if there is no registered address with the given id\\r\\n     * @param id The id\\r\\n     * @return The address of the registered for the specified id\\r\\n     */\\r\\n    function getAddress(bytes32 id) external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice General function to update the implementation of a proxy registered with\\r\\n     * certain `id`. If there is no proxy registered, it will instantiate one and\\r\\n     * set as implementation the `newImplementationAddress`.\\r\\n     * @dev IMPORTANT Use this function carefully, only for ids that don't have an explicit\\r\\n     * setter function, in order to avoid unexpected consequences\\r\\n     * @param id The id\\r\\n     * @param newImplementationAddress The address of the new implementation\\r\\n     */\\r\\n    function setAddressAsProxy(\\r\\n        bytes32 id,\\r\\n        address newImplementationAddress\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Sets an address for an id replacing the address saved in the addresses map.\\r\\n     * @dev IMPORTANT Use this function carefully, as it will do a hard replacement\\r\\n     * @param id The id\\r\\n     * @param newAddress The address to set\\r\\n     */\\r\\n    function setAddress(bytes32 id, address newAddress) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the address of the Pool proxy.\\r\\n     * @return The Pool proxy address\\r\\n     */\\r\\n    function getPool() external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the implementation of the Pool, or creates a proxy\\r\\n     * setting the new `pool` implementation when the function is called for the first time.\\r\\n     * @param newPoolImpl The new Pool implementation\\r\\n     */\\r\\n    function setPoolImpl(address newPoolImpl) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the address of the PoolConfigurator proxy.\\r\\n     * @return The PoolConfigurator proxy address\\r\\n     */\\r\\n    function getPoolConfigurator() external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the implementation of the PoolConfigurator, or creates a proxy\\r\\n     * setting the new `PoolConfigurator` implementation when the function is called for the first time.\\r\\n     * @param newPoolConfiguratorImpl The new PoolConfigurator implementation\\r\\n     */\\r\\n    function setPoolConfiguratorImpl(address newPoolConfiguratorImpl) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the address of the price oracle.\\r\\n     * @return The address of the PriceOracle\\r\\n     */\\r\\n    function getPriceOracle() external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the address of the price oracle.\\r\\n     * @param newPriceOracle The address of the new PriceOracle\\r\\n     */\\r\\n    function setPriceOracle(address newPriceOracle) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the address of the ACL manager.\\r\\n     * @return The address of the ACLManager\\r\\n     */\\r\\n    function getACLManager() external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the address of the ACL manager.\\r\\n     * @param newAclManager The address of the new ACLManager\\r\\n     */\\r\\n    function setACLManager(address newAclManager) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the address of the ACL admin.\\r\\n     * @return The address of the ACL admin\\r\\n     */\\r\\n    function getACLAdmin() external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the address of the ACL admin.\\r\\n     * @param newAclAdmin The address of the new ACL admin\\r\\n     */\\r\\n    function setACLAdmin(address newAclAdmin) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the address of the price oracle sentinel.\\r\\n     * @return The address of the PriceOracleSentinel\\r\\n     */\\r\\n    function getPriceOracleSentinel() external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the address of the price oracle sentinel.\\r\\n     * @param newPriceOracleSentinel The address of the new PriceOracleSentinel\\r\\n     */\\r\\n    function setPriceOracleSentinel(address newPriceOracleSentinel) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the address of the data provider.\\r\\n     * @return The address of the DataProvider\\r\\n     */\\r\\n    function getPoolDataProvider() external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the address of the data provider.\\r\\n     * @param newDataProvider The address of the new DataProvider\\r\\n     */\\r\\n    function setPoolDataProvider(address newDataProvider) external;\\r\\n}\\r\\n\",\"keccak256\":\"0xdae3104180b155be2cc562afce11d8cd7ba7b659d5490c4f1cbf7ece22a156c7\",\"license\":\"AGPL-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"ADDRESSES_PROVIDER()":{"notice":"Returns the PoolAddressesProvider connected to this contract"},"BRIDGE_PROTOCOL_FEE()":{"notice":"Returns the part of the bridge fees sent to protocol"},"FLASHLOAN_PREMIUM_TOTAL()":{"notice":"Returns the total fee on flash loans"},"FLASHLOAN_PREMIUM_TO_PROTOCOL()":{"notice":"Returns the part of the flashloan fees sent to protocol"},"MAX_NUMBER_RESERVES()":{"notice":"Returns the maximum number of reserves supported to be listed in this Pool"},"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()":{"notice":"Returns the percentage of available liquidity that can be borrowed at once at stable rate"},"backUnbacked(address,uint256,uint256)":{"notice":"Back the current unbacked underlying with `amount` and pay `fee`."},"borrow(address,uint256,uint256,uint16,address)":{"notice":"Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already supplied enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`"},"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))":{"notice":"Configures a new category for the eMode."},"deposit(address,uint256,address,uint16)":{"notice":"Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC"},"dropReserve(address)":{"notice":"Drop a reserve"},"finalizeTransfer(address,address,address,uint256,uint256,uint256)":{"notice":"Validates and finalizes an aToken transfer"},"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)":{"notice":"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned."},"flashLoanSimple(address,address,uint256,bytes,uint16)":{"notice":"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned."},"getConfiguration(address)":{"notice":"Returns the configuration of the reserve"},"getEModeCategoryData(uint8)":{"notice":"Returns the data of an eMode category"},"getReserveAddressById(uint16)":{"notice":"Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct"},"getReserveData(address)":{"notice":"Returns the state and configuration of the reserve"},"getReserveNormalizedIncome(address)":{"notice":"Returns the normalized income of the reserve"},"getReserveNormalizedVariableDebt(address)":{"notice":"Returns the normalized variable debt per unit of asset"},"getReservesList()":{"notice":"Returns the list of the underlying assets of all the initialized reserves"},"getUserAccountData(address)":{"notice":"Returns the user account data across all the reserves"},"getUserConfiguration(address)":{"notice":"Returns the configuration of the user across all the reserves"},"getUserEMode(address)":{"notice":"Returns the eMode the user is using"},"initReserve(address,address,address,address,address)":{"notice":"Initializes a reserve, activating it, assigning an aToken and debt tokens and an interest rate strategy"},"liquidationCall(address,address,address,uint256,bool)":{"notice":"Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk"},"mintToTreasury(address[])":{"notice":"Mints the assets accrued through the reserve factor to the treasury in the form of aTokens"},"mintUnbacked(address,uint256,address,uint16)":{"notice":"Mints an `amount` of aTokens to the `onBehalfOf`"},"rebalanceStableBorrowRate(address,address)":{"notice":"Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too        much has been borrowed at a stable rate and suppliers are not earning enough"},"repay(address,uint256,uint256,address)":{"notice":"Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address"},"repayWithATokens(address,uint256,uint256)":{"notice":"Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the equivalent debt tokens - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens"},"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)":{"notice":"Repay with transfer approval of asset to be repaid done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713"},"rescueTokens(address,address,uint256)":{"notice":"Rescue and transfer tokens locked in this contract"},"resetIsolationModeTotalDebt(address)":{"notice":"Resets the isolation mode total debt of the given asset to zero"},"setConfiguration(address,(uint256))":{"notice":"Sets the configuration bitmap of the reserve as a whole"},"setReserveInterestRateStrategyAddress(address,address)":{"notice":"Updates the address of the interest rate strategy contract"},"setUserEMode(uint8)":{"notice":"Allows a user to use the protocol in eMode"},"setUserUseReserveAsCollateral(address,bool)":{"notice":"Allows suppliers to enable/disable a specific supplied asset as collateral"},"supply(address,uint256,address,uint16)":{"notice":"Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC"},"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)":{"notice":"Supply with transfer approval of asset to be supplied done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713"},"swapBorrowRateMode(address,uint256)":{"notice":"Allows a borrower to swap his debt between stable and variable mode, or vice versa"},"updateBridgeProtocolFee(uint256)":{"notice":"Updates the protocol fee on the bridging"},"updateFlashloanPremiums(uint128,uint128)":{"notice":"Updates flash loan premiums. Flash loan premium consists of two parts: - A part is sent to aToken holders as extra, one time accumulated interest - A part is collected by the protocol treasury"},"withdraw(address,uint256,address)":{"notice":"Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC"}},"notice":"Defines the basic interface for an Aave Pool.","version":1}}},"contracts/interface/IPoolAddressesProvider.sol":{"IPoolAddressesProvider":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"ACLAdminUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"ACLManagerUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"AddressSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"proxyAddress","type":"address"},{"indexed":false,"internalType":"address","name":"oldImplementationAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newImplementationAddress","type":"address"}],"name":"AddressSetAsProxy","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"oldMarketId","type":"string"},{"indexed":true,"internalType":"string","name":"newMarketId","type":"string"}],"name":"MarketIdSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"PoolConfiguratorUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"PoolDataProviderUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"PoolUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"PriceOracleSentinelUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"PriceOracleUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"proxyAddress","type":"address"},{"indexed":true,"internalType":"address","name":"implementationAddress","type":"address"}],"name":"ProxyCreated","type":"event"},{"inputs":[],"name":"getACLAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getACLManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMarketId","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolConfigurator","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolDataProvider","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPriceOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPriceOracleSentinel","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newAclAdmin","type":"address"}],"name":"setACLAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newAclManager","type":"address"}],"name":"setACLManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"address","name":"newAddress","type":"address"}],"name":"setAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"address","name":"newImplementationAddress","type":"address"}],"name":"setAddressAsProxy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newMarketId","type":"string"}],"name":"setMarketId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newPoolConfiguratorImpl","type":"address"}],"name":"setPoolConfiguratorImpl","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newDataProvider","type":"address"}],"name":"setPoolDataProvider","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newPoolImpl","type":"address"}],"name":"setPoolImpl","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newPriceOracle","type":"address"}],"name":"setPriceOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newPriceOracleSentinel","type":"address"}],"name":"setPriceOracleSentinel","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Aave","events":{"ACLAdminUpdated(address,address)":{"details":"Emitted when the ACL admin is updated.","params":{"newAddress":"The new address of the ACLAdmin","oldAddress":"The old address of the ACLAdmin"}},"ACLManagerUpdated(address,address)":{"details":"Emitted when the ACL manager is updated.","params":{"newAddress":"The new address of the ACLManager","oldAddress":"The old address of the ACLManager"}},"AddressSet(bytes32,address,address)":{"details":"Emitted when a new non-proxied contract address is registered.","params":{"id":"The identifier of the contract","newAddress":"The address of the new contract","oldAddress":"The address of the old contract"}},"AddressSetAsProxy(bytes32,address,address,address)":{"details":"Emitted when the implementation of the proxy registered with id is updated","params":{"id":"The identifier of the contract","newImplementationAddress":"The address of the new implementation contract","oldImplementationAddress":"The address of the old implementation contract","proxyAddress":"The address of the proxy contract"}},"MarketIdSet(string,string)":{"details":"Emitted when the market identifier is updated.","params":{"newMarketId":"The new id of the market","oldMarketId":"The old id of the market"}},"PoolConfiguratorUpdated(address,address)":{"details":"Emitted when the pool configurator is updated.","params":{"newAddress":"The new address of the PoolConfigurator","oldAddress":"The old address of the PoolConfigurator"}},"PoolDataProviderUpdated(address,address)":{"details":"Emitted when the pool data provider is updated.","params":{"newAddress":"The new address of the PoolDataProvider","oldAddress":"The old address of the PoolDataProvider"}},"PoolUpdated(address,address)":{"details":"Emitted when the pool is updated.","params":{"newAddress":"The new address of the Pool","oldAddress":"The old address of the Pool"}},"PriceOracleSentinelUpdated(address,address)":{"details":"Emitted when the price oracle sentinel is updated.","params":{"newAddress":"The new address of the PriceOracleSentinel","oldAddress":"The old address of the PriceOracleSentinel"}},"PriceOracleUpdated(address,address)":{"details":"Emitted when the price oracle is updated.","params":{"newAddress":"The new address of the PriceOracle","oldAddress":"The old address of the PriceOracle"}},"ProxyCreated(bytes32,address,address)":{"details":"Emitted when a new proxy is created.","params":{"id":"The identifier of the proxy","implementationAddress":"The address of the implementation contract","proxyAddress":"The address of the created proxy contract"}}},"kind":"dev","methods":{"getACLAdmin()":{"returns":{"_0":"The address of the ACL admin"}},"getACLManager()":{"returns":{"_0":"The address of the ACLManager"}},"getAddress(bytes32)":{"details":"The returned address might be an EOA or a contract, potentially proxiedIt returns ZERO if there is no registered address with the given id","params":{"id":"The id"},"returns":{"_0":"The address of the registered for the specified id"}},"getMarketId()":{"returns":{"_0":"The market id"}},"getPool()":{"returns":{"_0":"The Pool proxy address"}},"getPoolConfigurator()":{"returns":{"_0":"The PoolConfigurator proxy address"}},"getPoolDataProvider()":{"returns":{"_0":"The address of the DataProvider"}},"getPriceOracle()":{"returns":{"_0":"The address of the PriceOracle"}},"getPriceOracleSentinel()":{"returns":{"_0":"The address of the PriceOracleSentinel"}},"setACLAdmin(address)":{"params":{"newAclAdmin":"The address of the new ACL admin"}},"setACLManager(address)":{"params":{"newAclManager":"The address of the new ACLManager"}},"setAddress(bytes32,address)":{"details":"IMPORTANT Use this function carefully, as it will do a hard replacement","params":{"id":"The id","newAddress":"The address to set"}},"setAddressAsProxy(bytes32,address)":{"details":"IMPORTANT Use this function carefully, only for ids that don't have an explicit setter function, in order to avoid unexpected consequences","params":{"id":"The id","newImplementationAddress":"The address of the new implementation"}},"setMarketId(string)":{"details":"This can be used to create an onchain registry of PoolAddressesProviders to identify and validate multiple Aave markets.","params":{"newMarketId":"The market id"}},"setPoolConfiguratorImpl(address)":{"params":{"newPoolConfiguratorImpl":"The new PoolConfigurator implementation"}},"setPoolDataProvider(address)":{"params":{"newDataProvider":"The address of the new DataProvider"}},"setPoolImpl(address)":{"params":{"newPoolImpl":"The new Pool implementation"}},"setPriceOracle(address)":{"params":{"newPriceOracle":"The address of the new PriceOracle"}},"setPriceOracleSentinel(address)":{"params":{"newPriceOracleSentinel":"The address of the new PriceOracleSentinel"}}},"title":"IPoolAddressesProvider","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getACLAdmin()":"0e67178c","getACLManager()":"707cd716","getAddress(bytes32)":"21f8a721","getMarketId()":"568ef470","getPool()":"026b1d5f","getPoolConfigurator()":"631adfca","getPoolDataProvider()":"e860accb","getPriceOracle()":"fca513a8","getPriceOracleSentinel()":"5eb88d3d","setACLAdmin(address)":"76d84ffc","setACLManager(address)":"ed301ca9","setAddress(bytes32,address)":"ca446dd9","setAddressAsProxy(bytes32,address)":"5dcc528c","setMarketId(string)":"f67b1847","setPoolConfiguratorImpl(address)":"e4ca28b7","setPoolDataProvider(address)":"e44e9ed1","setPoolImpl(address)":"a1564406","setPriceOracle(address)":"530e784f","setPriceOracleSentinel(address)":"74944cec"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ACLAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ACLManagerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"AddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldImplementationAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementationAddress\",\"type\":\"address\"}],\"name\":\"AddressSetAsProxy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"oldMarketId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"MarketIdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PoolConfiguratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PoolDataProviderUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PoolUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleSentinelUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementationAddress\",\"type\":\"address\"}],\"name\":\"ProxyCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getACLAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getACLManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolConfigurator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolDataProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracleSentinel\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAclAdmin\",\"type\":\"address\"}],\"name\":\"setACLAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAclManager\",\"type\":\"address\"}],\"name\":\"setACLManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newImplementationAddress\",\"type\":\"address\"}],\"name\":\"setAddressAsProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"setMarketId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPoolConfiguratorImpl\",\"type\":\"address\"}],\"name\":\"setPoolConfiguratorImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDataProvider\",\"type\":\"address\"}],\"name\":\"setPoolDataProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPoolImpl\",\"type\":\"address\"}],\"name\":\"setPoolImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPriceOracle\",\"type\":\"address\"}],\"name\":\"setPriceOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPriceOracleSentinel\",\"type\":\"address\"}],\"name\":\"setPriceOracleSentinel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"events\":{\"ACLAdminUpdated(address,address)\":{\"details\":\"Emitted when the ACL admin is updated.\",\"params\":{\"newAddress\":\"The new address of the ACLAdmin\",\"oldAddress\":\"The old address of the ACLAdmin\"}},\"ACLManagerUpdated(address,address)\":{\"details\":\"Emitted when the ACL manager is updated.\",\"params\":{\"newAddress\":\"The new address of the ACLManager\",\"oldAddress\":\"The old address of the ACLManager\"}},\"AddressSet(bytes32,address,address)\":{\"details\":\"Emitted when a new non-proxied contract address is registered.\",\"params\":{\"id\":\"The identifier of the contract\",\"newAddress\":\"The address of the new contract\",\"oldAddress\":\"The address of the old contract\"}},\"AddressSetAsProxy(bytes32,address,address,address)\":{\"details\":\"Emitted when the implementation of the proxy registered with id is updated\",\"params\":{\"id\":\"The identifier of the contract\",\"newImplementationAddress\":\"The address of the new implementation contract\",\"oldImplementationAddress\":\"The address of the old implementation contract\",\"proxyAddress\":\"The address of the proxy contract\"}},\"MarketIdSet(string,string)\":{\"details\":\"Emitted when the market identifier is updated.\",\"params\":{\"newMarketId\":\"The new id of the market\",\"oldMarketId\":\"The old id of the market\"}},\"PoolConfiguratorUpdated(address,address)\":{\"details\":\"Emitted when the pool configurator is updated.\",\"params\":{\"newAddress\":\"The new address of the PoolConfigurator\",\"oldAddress\":\"The old address of the PoolConfigurator\"}},\"PoolDataProviderUpdated(address,address)\":{\"details\":\"Emitted when the pool data provider is updated.\",\"params\":{\"newAddress\":\"The new address of the PoolDataProvider\",\"oldAddress\":\"The old address of the PoolDataProvider\"}},\"PoolUpdated(address,address)\":{\"details\":\"Emitted when the pool is updated.\",\"params\":{\"newAddress\":\"The new address of the Pool\",\"oldAddress\":\"The old address of the Pool\"}},\"PriceOracleSentinelUpdated(address,address)\":{\"details\":\"Emitted when the price oracle sentinel is updated.\",\"params\":{\"newAddress\":\"The new address of the PriceOracleSentinel\",\"oldAddress\":\"The old address of the PriceOracleSentinel\"}},\"PriceOracleUpdated(address,address)\":{\"details\":\"Emitted when the price oracle is updated.\",\"params\":{\"newAddress\":\"The new address of the PriceOracle\",\"oldAddress\":\"The old address of the PriceOracle\"}},\"ProxyCreated(bytes32,address,address)\":{\"details\":\"Emitted when a new proxy is created.\",\"params\":{\"id\":\"The identifier of the proxy\",\"implementationAddress\":\"The address of the implementation contract\",\"proxyAddress\":\"The address of the created proxy contract\"}}},\"kind\":\"dev\",\"methods\":{\"getACLAdmin()\":{\"returns\":{\"_0\":\"The address of the ACL admin\"}},\"getACLManager()\":{\"returns\":{\"_0\":\"The address of the ACLManager\"}},\"getAddress(bytes32)\":{\"details\":\"The returned address might be an EOA or a contract, potentially proxiedIt returns ZERO if there is no registered address with the given id\",\"params\":{\"id\":\"The id\"},\"returns\":{\"_0\":\"The address of the registered for the specified id\"}},\"getMarketId()\":{\"returns\":{\"_0\":\"The market id\"}},\"getPool()\":{\"returns\":{\"_0\":\"The Pool proxy address\"}},\"getPoolConfigurator()\":{\"returns\":{\"_0\":\"The PoolConfigurator proxy address\"}},\"getPoolDataProvider()\":{\"returns\":{\"_0\":\"The address of the DataProvider\"}},\"getPriceOracle()\":{\"returns\":{\"_0\":\"The address of the PriceOracle\"}},\"getPriceOracleSentinel()\":{\"returns\":{\"_0\":\"The address of the PriceOracleSentinel\"}},\"setACLAdmin(address)\":{\"params\":{\"newAclAdmin\":\"The address of the new ACL admin\"}},\"setACLManager(address)\":{\"params\":{\"newAclManager\":\"The address of the new ACLManager\"}},\"setAddress(bytes32,address)\":{\"details\":\"IMPORTANT Use this function carefully, as it will do a hard replacement\",\"params\":{\"id\":\"The id\",\"newAddress\":\"The address to set\"}},\"setAddressAsProxy(bytes32,address)\":{\"details\":\"IMPORTANT Use this function carefully, only for ids that don't have an explicit setter function, in order to avoid unexpected consequences\",\"params\":{\"id\":\"The id\",\"newImplementationAddress\":\"The address of the new implementation\"}},\"setMarketId(string)\":{\"details\":\"This can be used to create an onchain registry of PoolAddressesProviders to identify and validate multiple Aave markets.\",\"params\":{\"newMarketId\":\"The market id\"}},\"setPoolConfiguratorImpl(address)\":{\"params\":{\"newPoolConfiguratorImpl\":\"The new PoolConfigurator implementation\"}},\"setPoolDataProvider(address)\":{\"params\":{\"newDataProvider\":\"The address of the new DataProvider\"}},\"setPoolImpl(address)\":{\"params\":{\"newPoolImpl\":\"The new Pool implementation\"}},\"setPriceOracle(address)\":{\"params\":{\"newPriceOracle\":\"The address of the new PriceOracle\"}},\"setPriceOracleSentinel(address)\":{\"params\":{\"newPriceOracleSentinel\":\"The address of the new PriceOracleSentinel\"}}},\"title\":\"IPoolAddressesProvider\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getACLAdmin()\":{\"notice\":\"Returns the address of the ACL admin.\"},\"getACLManager()\":{\"notice\":\"Returns the address of the ACL manager.\"},\"getAddress(bytes32)\":{\"notice\":\"Returns an address by its identifier.\"},\"getMarketId()\":{\"notice\":\"Returns the id of the Aave market to which this contract points to.\"},\"getPool()\":{\"notice\":\"Returns the address of the Pool proxy.\"},\"getPoolConfigurator()\":{\"notice\":\"Returns the address of the PoolConfigurator proxy.\"},\"getPoolDataProvider()\":{\"notice\":\"Returns the address of the data provider.\"},\"getPriceOracle()\":{\"notice\":\"Returns the address of the price oracle.\"},\"getPriceOracleSentinel()\":{\"notice\":\"Returns the address of the price oracle sentinel.\"},\"setACLAdmin(address)\":{\"notice\":\"Updates the address of the ACL admin.\"},\"setACLManager(address)\":{\"notice\":\"Updates the address of the ACL manager.\"},\"setAddress(bytes32,address)\":{\"notice\":\"Sets an address for an id replacing the address saved in the addresses map.\"},\"setAddressAsProxy(bytes32,address)\":{\"notice\":\"General function to update the implementation of a proxy registered with certain `id`. If there is no proxy registered, it will instantiate one and set as implementation the `newImplementationAddress`.\"},\"setMarketId(string)\":{\"notice\":\"Associates an id with a specific PoolAddressesProvider.\"},\"setPoolConfiguratorImpl(address)\":{\"notice\":\"Updates the implementation of the PoolConfigurator, or creates a proxy setting the new `PoolConfigurator` implementation when the function is called for the first time.\"},\"setPoolDataProvider(address)\":{\"notice\":\"Updates the address of the data provider.\"},\"setPoolImpl(address)\":{\"notice\":\"Updates the implementation of the Pool, or creates a proxy setting the new `pool` implementation when the function is called for the first time.\"},\"setPriceOracle(address)\":{\"notice\":\"Updates the address of the price oracle.\"},\"setPriceOracleSentinel(address)\":{\"notice\":\"Updates the address of the price oracle sentinel.\"}},\"notice\":\"Defines the basic interface for a Pool Addresses Provider.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IPoolAddressesProvider.sol\":\"IPoolAddressesProvider\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IPoolAddressesProvider.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @title IPoolAddressesProvider\\r\\n * @author Aave\\r\\n * @notice Defines the basic interface for a Pool Addresses Provider.\\r\\n */\\r\\ninterface IPoolAddressesProvider {\\r\\n    /**\\r\\n     * @dev Emitted when the market identifier is updated.\\r\\n     * @param oldMarketId The old id of the market\\r\\n     * @param newMarketId The new id of the market\\r\\n     */\\r\\n    event MarketIdSet(string indexed oldMarketId, string indexed newMarketId);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the pool is updated.\\r\\n     * @param oldAddress The old address of the Pool\\r\\n     * @param newAddress The new address of the Pool\\r\\n     */\\r\\n    event PoolUpdated(address indexed oldAddress, address indexed newAddress);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the pool configurator is updated.\\r\\n     * @param oldAddress The old address of the PoolConfigurator\\r\\n     * @param newAddress The new address of the PoolConfigurator\\r\\n     */\\r\\n    event PoolConfiguratorUpdated(\\r\\n        address indexed oldAddress,\\r\\n        address indexed newAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the price oracle is updated.\\r\\n     * @param oldAddress The old address of the PriceOracle\\r\\n     * @param newAddress The new address of the PriceOracle\\r\\n     */\\r\\n    event PriceOracleUpdated(\\r\\n        address indexed oldAddress,\\r\\n        address indexed newAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the ACL manager is updated.\\r\\n     * @param oldAddress The old address of the ACLManager\\r\\n     * @param newAddress The new address of the ACLManager\\r\\n     */\\r\\n    event ACLManagerUpdated(\\r\\n        address indexed oldAddress,\\r\\n        address indexed newAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the ACL admin is updated.\\r\\n     * @param oldAddress The old address of the ACLAdmin\\r\\n     * @param newAddress The new address of the ACLAdmin\\r\\n     */\\r\\n    event ACLAdminUpdated(\\r\\n        address indexed oldAddress,\\r\\n        address indexed newAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the price oracle sentinel is updated.\\r\\n     * @param oldAddress The old address of the PriceOracleSentinel\\r\\n     * @param newAddress The new address of the PriceOracleSentinel\\r\\n     */\\r\\n    event PriceOracleSentinelUpdated(\\r\\n        address indexed oldAddress,\\r\\n        address indexed newAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the pool data provider is updated.\\r\\n     * @param oldAddress The old address of the PoolDataProvider\\r\\n     * @param newAddress The new address of the PoolDataProvider\\r\\n     */\\r\\n    event PoolDataProviderUpdated(\\r\\n        address indexed oldAddress,\\r\\n        address indexed newAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when a new proxy is created.\\r\\n     * @param id The identifier of the proxy\\r\\n     * @param proxyAddress The address of the created proxy contract\\r\\n     * @param implementationAddress The address of the implementation contract\\r\\n     */\\r\\n    event ProxyCreated(\\r\\n        bytes32 indexed id,\\r\\n        address indexed proxyAddress,\\r\\n        address indexed implementationAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when a new non-proxied contract address is registered.\\r\\n     * @param id The identifier of the contract\\r\\n     * @param oldAddress The address of the old contract\\r\\n     * @param newAddress The address of the new contract\\r\\n     */\\r\\n    event AddressSet(\\r\\n        bytes32 indexed id,\\r\\n        address indexed oldAddress,\\r\\n        address indexed newAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the implementation of the proxy registered with id is updated\\r\\n     * @param id The identifier of the contract\\r\\n     * @param proxyAddress The address of the proxy contract\\r\\n     * @param oldImplementationAddress The address of the old implementation contract\\r\\n     * @param newImplementationAddress The address of the new implementation contract\\r\\n     */\\r\\n    event AddressSetAsProxy(\\r\\n        bytes32 indexed id,\\r\\n        address indexed proxyAddress,\\r\\n        address oldImplementationAddress,\\r\\n        address indexed newImplementationAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the id of the Aave market to which this contract points to.\\r\\n     * @return The market id\\r\\n     */\\r\\n    function getMarketId() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @notice Associates an id with a specific PoolAddressesProvider.\\r\\n     * @dev This can be used to create an onchain registry of PoolAddressesProviders to\\r\\n     * identify and validate multiple Aave markets.\\r\\n     * @param newMarketId The market id\\r\\n     */\\r\\n    function setMarketId(string calldata newMarketId) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns an address by its identifier.\\r\\n     * @dev The returned address might be an EOA or a contract, potentially proxied\\r\\n     * @dev It returns ZERO if there is no registered address with the given id\\r\\n     * @param id The id\\r\\n     * @return The address of the registered for the specified id\\r\\n     */\\r\\n    function getAddress(bytes32 id) external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice General function to update the implementation of a proxy registered with\\r\\n     * certain `id`. If there is no proxy registered, it will instantiate one and\\r\\n     * set as implementation the `newImplementationAddress`.\\r\\n     * @dev IMPORTANT Use this function carefully, only for ids that don't have an explicit\\r\\n     * setter function, in order to avoid unexpected consequences\\r\\n     * @param id The id\\r\\n     * @param newImplementationAddress The address of the new implementation\\r\\n     */\\r\\n    function setAddressAsProxy(\\r\\n        bytes32 id,\\r\\n        address newImplementationAddress\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Sets an address for an id replacing the address saved in the addresses map.\\r\\n     * @dev IMPORTANT Use this function carefully, as it will do a hard replacement\\r\\n     * @param id The id\\r\\n     * @param newAddress The address to set\\r\\n     */\\r\\n    function setAddress(bytes32 id, address newAddress) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the address of the Pool proxy.\\r\\n     * @return The Pool proxy address\\r\\n     */\\r\\n    function getPool() external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the implementation of the Pool, or creates a proxy\\r\\n     * setting the new `pool` implementation when the function is called for the first time.\\r\\n     * @param newPoolImpl The new Pool implementation\\r\\n     */\\r\\n    function setPoolImpl(address newPoolImpl) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the address of the PoolConfigurator proxy.\\r\\n     * @return The PoolConfigurator proxy address\\r\\n     */\\r\\n    function getPoolConfigurator() external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the implementation of the PoolConfigurator, or creates a proxy\\r\\n     * setting the new `PoolConfigurator` implementation when the function is called for the first time.\\r\\n     * @param newPoolConfiguratorImpl The new PoolConfigurator implementation\\r\\n     */\\r\\n    function setPoolConfiguratorImpl(address newPoolConfiguratorImpl) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the address of the price oracle.\\r\\n     * @return The address of the PriceOracle\\r\\n     */\\r\\n    function getPriceOracle() external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the address of the price oracle.\\r\\n     * @param newPriceOracle The address of the new PriceOracle\\r\\n     */\\r\\n    function setPriceOracle(address newPriceOracle) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the address of the ACL manager.\\r\\n     * @return The address of the ACLManager\\r\\n     */\\r\\n    function getACLManager() external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the address of the ACL manager.\\r\\n     * @param newAclManager The address of the new ACLManager\\r\\n     */\\r\\n    function setACLManager(address newAclManager) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the address of the ACL admin.\\r\\n     * @return The address of the ACL admin\\r\\n     */\\r\\n    function getACLAdmin() external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the address of the ACL admin.\\r\\n     * @param newAclAdmin The address of the new ACL admin\\r\\n     */\\r\\n    function setACLAdmin(address newAclAdmin) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the address of the price oracle sentinel.\\r\\n     * @return The address of the PriceOracleSentinel\\r\\n     */\\r\\n    function getPriceOracleSentinel() external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the address of the price oracle sentinel.\\r\\n     * @param newPriceOracleSentinel The address of the new PriceOracleSentinel\\r\\n     */\\r\\n    function setPriceOracleSentinel(address newPriceOracleSentinel) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the address of the data provider.\\r\\n     * @return The address of the DataProvider\\r\\n     */\\r\\n    function getPoolDataProvider() external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the address of the data provider.\\r\\n     * @param newDataProvider The address of the new DataProvider\\r\\n     */\\r\\n    function setPoolDataProvider(address newDataProvider) external;\\r\\n}\\r\\n\",\"keccak256\":\"0xdae3104180b155be2cc562afce11d8cd7ba7b659d5490c4f1cbf7ece22a156c7\",\"license\":\"AGPL-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"getACLAdmin()":{"notice":"Returns the address of the ACL admin."},"getACLManager()":{"notice":"Returns the address of the ACL manager."},"getAddress(bytes32)":{"notice":"Returns an address by its identifier."},"getMarketId()":{"notice":"Returns the id of the Aave market to which this contract points to."},"getPool()":{"notice":"Returns the address of the Pool proxy."},"getPoolConfigurator()":{"notice":"Returns the address of the PoolConfigurator proxy."},"getPoolDataProvider()":{"notice":"Returns the address of the data provider."},"getPriceOracle()":{"notice":"Returns the address of the price oracle."},"getPriceOracleSentinel()":{"notice":"Returns the address of the price oracle sentinel."},"setACLAdmin(address)":{"notice":"Updates the address of the ACL admin."},"setACLManager(address)":{"notice":"Updates the address of the ACL manager."},"setAddress(bytes32,address)":{"notice":"Sets an address for an id replacing the address saved in the addresses map."},"setAddressAsProxy(bytes32,address)":{"notice":"General function to update the implementation of a proxy registered with certain `id`. If there is no proxy registered, it will instantiate one and set as implementation the `newImplementationAddress`."},"setMarketId(string)":{"notice":"Associates an id with a specific PoolAddressesProvider."},"setPoolConfiguratorImpl(address)":{"notice":"Updates the implementation of the PoolConfigurator, or creates a proxy setting the new `PoolConfigurator` implementation when the function is called for the first time."},"setPoolDataProvider(address)":{"notice":"Updates the address of the data provider."},"setPoolImpl(address)":{"notice":"Updates the implementation of the Pool, or creates a proxy setting the new `pool` implementation when the function is called for the first time."},"setPriceOracle(address)":{"notice":"Updates the address of the price oracle."},"setPriceOracleSentinel(address)":{"notice":"Updates the address of the price oracle sentinel."}},"notice":"Defines the basic interface for a Pool Addresses Provider.","version":1}}}}}}